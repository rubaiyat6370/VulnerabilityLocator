var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    a != Array.prototype && a != Object.prototype && (a[c] = b.value)
};
$jscomp.getGlobal = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return "undefined" != typeof window && window === a ? a : "undefined" != typeof global && null != global ? global : a
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.SYMBOL_PREFIX = "jscomp_symbol_";
$jscomp.initSymbol = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    $jscomp.initSymbol = function() {};
    $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol)
};
$jscomp.symbolCounter_ = 0;
$jscomp.Symbol = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return $jscomp.SYMBOL_PREFIX + (a || "") + $jscomp.symbolCounter_++
};
$jscomp.initSymbolIterator = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    $jscomp.initSymbol();
    var a = $jscomp.global.Symbol.iterator;
    a || (a = $jscomp.global.Symbol.iterator = $jscomp.global.Symbol("iterator"));
    "function" != typeof Array.prototype[a] && $jscomp.defineProperty(Array.prototype, a, {
        configurable: !0,
        writable: !0,
        value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return $jscomp.arrayIterator(this)
        }
    });
    $jscomp.initSymbolIterator = function() {}
};
$jscomp.arrayIterator = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    var c = 0;
    return $jscomp.iteratorPrototype(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return c < a.length ? {
            done: !1,
            value: a[c++]
        } : {
            done: !0
        }
    })
};
$jscomp.iteratorPrototype = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    $jscomp.initSymbolIterator();
    a = {
        next: a
    };
    a[$jscomp.global.Symbol.iterator] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return this
    };
    return a
};
$jscomp.makeIterator = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    $jscomp.initSymbolIterator();
    var c = a[Symbol.iterator];
    return c ? c.call(a) : $jscomp.arrayIterator(a)
};
$jscomp.polyfill = function(a, c, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    if (c) {
        b = $jscomp.global;
        a = a.split(".");
        for (d = 0; d < a.length - 1; d++) {
            var e = a[d];
            e in b || (b[e] = {});
            b = b[e]
        }
        a = a[a.length - 1];
        d = b[a];
        c = c(d);
        c != d && null != c && $jscomp.defineProperty(b, a, {
            configurable: !0,
            writable: !0,
            value: c
        })
    }
};
$jscomp.FORCE_POLYFILL_PROMISE = !1;
$jscomp.polyfill("Promise", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        this.batch_ = null
    }

    function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return a instanceof e ? a : new e(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            b(a)
        })
    }
    if (a && !$jscomp.FORCE_POLYFILL_PROMISE) return a;
    c.prototype.asyncExecute = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        null == this.batch_ && (this.batch_ = [], this.asyncExecuteBatch_());
        this.batch_.push(a);
        return this
    };
    c.prototype.asyncExecuteBatch_ = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var a = this;
        this.asyncExecuteFunction(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.executeBatch_()
        })
    };
    var d = $jscomp.global.setTimeout;
    c.prototype.asyncExecuteFunction = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        d(a,
            0)
    };
    c.prototype.executeBatch_ = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        for (; this.batch_ && this.batch_.length;) {
            var a = this.batch_;
            this.batch_ = [];
            for (var b = 0; b < a.length; ++b) {
                var c = a[b];
                delete a[b];
                try {
                    c()
                } catch (k) {
                    this.asyncThrow_(k)
                }
            }
        }
        this.batch_ = null
    };
    c.prototype.asyncThrow_ = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        this.asyncExecuteFunction(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            throw a;
        })
    };
    var e = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        this.state_ = 0;
        this.result_ = void 0;
        this.onSettledCallbacks_ = [];
        var b = this.createResolveAndReject_();
        try {
            a(b.resolve, b.reject)
        } catch (n) {
            b.reject(n)
        }
    };
    e.prototype.createResolveAndReject_ =
        function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    c || (c = !0, a.call(b, d))
                }
            }
            var b = this,
                c = !1;
            return {
                resolve: a(this.resolveTo_),
                reject: a(this.reject_)
            }
        };
    e.prototype.resolveTo_ = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        if (a === this) this.reject_(new TypeError("A Promise cannot resolve to itself"));
        else if (a instanceof e) this.settleSameAsPromise_(a);
        else {
            a: switch (typeof a) {
                case "object":
                    var b = null != a;
                    break a;
                case "function":
                    b = !0;
                    break a;
                default:
                    b = !1
            }
            b ? this.resolveToNonPromiseObj_(a) : this.fulfill_(a)
        }
    };
    e.prototype.resolveToNonPromiseObj_ = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var b =
            void 0;
        try {
            b = a.then
        } catch (n) {
            this.reject_(n);
            return
        }
        "function" == typeof b ? this.settleSameAsThenable_(b, a) : this.fulfill_(a)
    };
    e.prototype.reject_ = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        this.settle_(2, a)
    };
    e.prototype.fulfill_ = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        this.settle_(1, a)
    };
    e.prototype.settle_ = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        if (0 != this.state_) throw Error("Cannot settle(" + a + ", " + b | "): Promise already settled in state" + this.state_);
        this.state_ = a;
        this.result_ = b;
        this.executeOnSettledCallbacks_()
    };
    e.prototype.executeOnSettledCallbacks_ = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        if (null != this.onSettledCallbacks_) {
            for (var a =
                    this.onSettledCallbacks_, b = 0; b < a.length; ++b) a[b].call(), a[b] = null;
            this.onSettledCallbacks_ = null
        }
    };
    var g = new c;
    e.prototype.settleSameAsPromise_ = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var b = this.createResolveAndReject_();
        a.callWhenSettled_(b.resolve, b.reject)
    };
    e.prototype.settleSameAsThenable_ = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var c = this.createResolveAndReject_();
        try {
            a.call(b, c.resolve, c.reject)
        } catch (k) {
            c.reject(k)
        }
    };
    e.prototype.then = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function c(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "function" == typeof a ? function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                try {
                    d(a(b))
                } catch (t) {
                    f(t)
                }
            } : b
        }
        var d, f, g = new e(function(a,
            b) {
            d = a;
            f = b
        });
        this.callWhenSettled_(c(a, d), c(b, f));
        return g
    };
    e.prototype.catch = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return this.then(void 0, a)
    };
    e.prototype.callWhenSettled_ = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            switch (d.state_) {
                case 1:
                    a(d.result_);
                    break;
                case 2:
                    b(d.result_);
                    break;
                default:
                    throw Error("Unexpected state: " + d.state_);
            }
        }
        var d = this;
        null == this.onSettledCallbacks_ ? g.asyncExecute(c) : this.onSettledCallbacks_.push(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            g.asyncExecute(c)
        })
    };
    e.resolve = b;
    e.reject = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return new e(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            c(a)
        })
    };
    e.race = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return new e(function(c,
            d) {
            for (var f = $jscomp.makeIterator(a), e = f.next(); !e.done; e = f.next()) b(e.value).callWhenSettled_(c, d)
        })
    };
    e.all = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var c = $jscomp.makeIterator(a),
            d = c.next();
        return d.done ? b([]) : new e(function(a, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function e(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g[b] = c;
                    h--;
                    0 == h && a(g)
                }
            }
            var g = [],
                h = 0;
            do g.push(void 0), h++, b(d.value).callWhenSettled_(e(g.length - 1), f), d = c.next(); while (!d.done)
        })
    };
    return e
}, "es6", "es3");
$jscomp.polyfill("Object.setPrototypeOf", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : "object" != typeof "".__proto__ ? null : function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a.__proto__ = b;
        if (a.__proto__ !== b) throw new TypeError(a + " is not extensible");
        return a
    }
}, "es6", "es5");
$jscomp.findInternal = function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    a instanceof String && (a = String(a));
    for (var d = a.length, e = 0; e < d; e++) {
        var g = a[e];
        if (c.call(b, g, e, a)) return {
            i: e,
            v: g
        }
    }
    return {
        i: -1,
        v: void 0
    }
};
$jscomp.polyfill("Array.prototype.find", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return $jscomp.findInternal(this, a, b).v
    }
}, "es6", "es3");
$jscomp.iteratorFromArray = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    $jscomp.initSymbolIterator();
    a instanceof String && (a += "");
    var b = 0,
        d = {
            next: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (b < a.length) {
                    var e = b++;
                    return {
                        value: c(e, a[e]),
                        done: !1
                    }
                }
                d.next = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return {
                        done: !0,
                        value: void 0
                    }
                };
                return d.next()
            }
        };
    d[Symbol.iterator] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return d
    };
    return d
};
$jscomp.polyfill("Array.prototype.keys", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return $jscomp.iteratorFromArray(this, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a
        })
    }
}, "es6", "es3");
$jscomp.owns = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return Object.prototype.hasOwnProperty.call(a, c)
};
$jscomp.polyfill("Object.assign", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        for (var c = 1; c < arguments.length; c++) {
            var e = arguments[c];
            if (e)
                for (var g in e) $jscomp.owns(e, g) && (a[g] = e[g])
        }
        return a
    }
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.entries", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return $jscomp.iteratorFromArray(this, function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return [a, b]
        })
    }
}, "es6", "es3");
$jscomp.polyfill("Array.from", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        $jscomp.initSymbolIterator();
        b = null != b ? b : function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a
        };
        var c = [],
            g = a[Symbol.iterator];
        if ("function" == typeof g)
            for (a = g.call(a); !(g = a.next()).done;) c.push(b.call(d, g.value));
        else {
            g = a.length;
            for (var h = 0; h < g; h++) c.push(b.call(d, a[h]))
        }
        return c
    }
}, "es6", "es3");
$jscomp.polyfill("Object.getOwnPropertySymbols", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return []
    }
}, "es6", "es5");
$jscomp.polyfill("Object.is", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return a === b ? 0 !== a || 1 / a === 1 / b : a !== a && b !== b
    }
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.includes", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var c = this;
        c instanceof String && (c = String(c));
        var e = c.length;
        for (b = b || 0; b < e; b++)
            if (c[b] == a || Object.is(c[b], a)) return !0;
        return !1
    }
}, "es7", "es3");
$jscomp.checkStringArgs = function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    if (null == a) throw new TypeError("The 'this' value for String.prototype." + b + " must not be null or undefined");
    if (c instanceof RegExp) throw new TypeError("First argument to String.prototype." + b + " must not be a regular expression");
    return a + ""
};
$jscomp.polyfill("String.prototype.includes", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return -1 !== $jscomp.checkStringArgs(this, a, "includes").indexOf(a, b || 0)
    }
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.fill", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var c = this.length || 0;
        0 > b && (b = Math.max(0, c + b));
        if (null == d || d > c) d = c;
        d = Number(d);
        0 > d && (d = Math.max(0, c + d));
        for (b = Number(b || 0); b < d; b++) this[b] = a;
        return this
    }
}, "es6", "es3");
! function e$jscomp$0(c, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    function e(f, h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        if (!b[f]) {
            if (!c[f]) {
                var k = "function" == typeof require && require;
                if (!h && k) return k(f, !0);
                if (g) return g(f, !0);
                h = Error("Cannot find module '" + f + "'");
                throw h.code = "MODULE_NOT_FOUND", h;
            }
            h = b[f] = {
                exports: {}
            };
            c[f][0].call(h.exports, function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = c[f][1][b];
                return e(d ? d : b)
            }, h, h.exports, e$jscomp$0, c, b, d)
        }
        return b[f].exports
    }
    for (var g = "function" == typeof require && require, h = 0; h < d.length; h++) e(d[h]);
    return e
}({
    1: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = 2 >= arguments.length ||
                void 0 === arguments[2] ? {} : arguments[2],
                d = e(a) + "=" + e(b);
            null == b && (c.maxage = -1);
            c.maxage && (c.expires = new Date(+new Date + c.maxage));
            c.path && (d += "; path=" + c.path);
            c.domain && (d += "; domain=" + c.domain);
            c.expires && (d += "; expires=" + c.expires.toUTCString());
            c.secure && (d += "; secure");
            document.cookie = d
        }

        function e(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            try {
                return encodeURIComponent(a)
            } catch (f) {
                return null
            }
        }

        function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            try {
                return decodeURIComponent(a)
            } catch (f) {
                return null
            }
        }
        b.__esModule = !0;
        b["default"] = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (2 > arguments.length) {
                var f = {};
                var e = document.cookie.split(/ *; */);
                if (e[0]) {
                    var h = Array.isArray(e),
                        r = 0;
                    for (e = h ? e : e[Symbol.iterator]();;) {
                        if (h) {
                            if (r >= e.length) break;
                            var l = e[r++]
                        } else {
                            if (r = e.next(), r.done) break;
                            l = r.value
                        }
                        l = l.split("=");
                        f[g(l[0])] = g(l[1])
                    }
                }
                f = a ? f[a] : f
            } else f = void d(a, b, c);
            return f
        }
    }, {}],
    2: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: "success",
                value: a
            }
        }

        function e(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: "failure",
                error: a
            }
        }

        function g(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = c();
            return 0 < a ? d["catch"](function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (new Promise(function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return setTimeout(a, b)
                })).then(function(d) {
                    return g(a -
                        1, b, c)
                })
            }) : d
        }
        var h = this && this.__extends || function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = Object.setPrototypeOf || {
                __proto__: []
            }
            instanceof Array && function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.__proto__ = b
            } || function(a, b) {
                for (var c in b) b.hasOwnProperty(c) && (a[c] = b[c])
            };
            return function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function d() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this.constructor = b
                }
                a(b, c);
                b.prototype = null === c ? Object.create(c) : (d.prototype = c.prototype, new d)
            }
        }();
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var f = a("@grammarly-npm/cookie"),
            n = a("./util"),
            k = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (new Date).setFullYear((new Date).getFullYear() +
                    10)
            },
            m = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (new Date).setMinutes((new Date).getMinutes() + 10)
            },
            p = /^\.\w+\.\w+/;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, b, c, d, f, e, g) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                void 0 === b && (b = []);
                void 0 === f && (f = 3E5);
                void 0 === e && (e = 0);
                void 0 === g && (g = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return Date.now()
                });
                this.primaryStorage = a;
                this.secondaryStorages = b;
                this._logger = c;
                this._metric = d;
                this._cacheSuccessTimeoutMillis = f;
                this._cacheFailureTimeoutMillis = e;
                this._getTime = g;
                this._allStorages = [a].concat(b)
            }
            return a.prototype._expireCache = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                0 === a ? this._cacheExpireTimestamp =
                    0 : 0 < a && (this._cacheExpireTimestamp = this._getTime() + a)
            }, a.prototype.getContainerId = function() {
                var a = this;
                if (void 0 !== this._cache && (void 0 === this._cacheExpireTimestamp || this._getTime() < this._cacheExpireTimestamp)) return this._cache;
                var b = this._metric.getTimer("doGetContainerId.timer").start(),
                    c = this._doGetContainerId();
                return this._cache = c, this._cacheExpireTimestamp = void 0, c.then(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a._expireCache(a._cacheSuccessTimeoutMillis)
                    }, function(b) {
                        return a._expireCache(a._cacheFailureTimeoutMillis)
                    }),
                    c.then(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        b.stop();
                        a._metric.getCounter("doGetContainerId.success").increment()
                    }, function(c) {
                        b.stop();
                        a._metric.getCounter("doGetContainerId.failure").increment();
                        a._logger.warn("doGetContainerId.failed", c)
                    }), c
            }, a._generateContainerId = function() {
                return n.alphanumeric(12)
            }, a.prototype._doGetContainerId = function() {
                var b = this;
                return Promise.all(this._allStorages.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a.safeGetContainerId().then(d, e)
                })).then(function(c) {
                    var f = c[0];
                    if ("failure" === f.type) return Promise.reject("getting containerId from primary storage " +
                        ("'" + b.primaryStorage.name + "' has failed: " + f.error));
                    var g, h = c.find(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return "success" === a.type && void 0 !== a.value
                        }),
                        q = "success" === f.type && void 0 === f.value && void 0 !== h,
                        l = !1;
                    void 0 === h ? (g = a._generateContainerId(), l = !0) : g = h.value;
                    c = c.map(function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return "success" === a.type && a.value !== g ? b._allStorages[c].safeSetContainerId(g).then(d, e) : Promise.resolve(d(void 0))
                    });
                    c = Promise.all(c).then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (q || l)
                            if (a = a[0], "success" !== a.type) return Promise.reject("setting containerId to primary storage has failed: " +
                                a.error);
                        return Promise.resolve(g)
                    });
                    return c.then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        q ? b._metric.getCounter("recovered").increment() : l && b._metric.getCounter("generated").increment()
                    }), c
                })
            }, a
        }();
        b.ContainerIdManager = a;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                this.name = a
            }
            return a.prototype.safeSetContainerId = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = this;
                return this.ensureAvailable().then(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return b.setContainerId(a)
                })
            }, a.prototype.safeGetContainerId = function() {
                var a = this;
                return this.ensureAvailable().then(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a.getContainerId()
                }).then(function(a) {
                    return "" ===
                        a ? void 0 : a
                })
            }, a
        }();
        b.BaseStorage = a;
        c = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = a.call(this, "chromeCookie") || this;
                if (d._url = b, d._domain = c, !p.test(c)) throw Error('Incorrect cookie domain provided.\n        Use top-level domain, starting from "."');
                return d
            }
            return h(b, a), b.prototype._hasRuntimeError = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return window.chrome && window.chrome.runtime && window.chrome.runtime.lastError
            }, b.prototype.ensureAvailable = function() {
                var a = this;
                return g(2, 1E3, function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return new Promise(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var d = n.alphanumeric(10);
                        try {
                            window.chrome.cookies.set({
                                name: d,
                                value: d,
                                url: a._url,
                                domain: a._domain,
                                expirationDate: m() / 1E3
                            }, function(f) {
                                var e = a._hasRuntimeError();
                                !f && e && c("chrome.cookie.set failed with an error: " + e.message);
                                f && f.value === d ? b() : c(Error("ChromeCookieStorage is unavailable.\n              Availability test failed.\n              Tried to set " + d + ", the result is " + (f ? f.value : f) + "."))
                            })
                        } catch (x) {
                            c(x)
                        }
                    })
                })
            }, b.prototype.getContainerId = function() {
                var a = this;
                return new Promise(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    try {
                        window.chrome.cookies.get({
                            url: a._url,
                            name: "gnar_containerId"
                        }, function(d) {
                            var f = a._hasRuntimeError();
                            !d && f && c("chrome.cookie.get failed with an error: " + f.message);
                            b(d ? d.value : void 0)
                        })
                    } catch (v) {
                        c(v)
                    }
                })
            }, b.prototype.setContainerId = function(a) {
                var b = this;
                return new Promise(function(c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    try {
                        window.chrome.cookies.set({
                            name: "gnar_containerId",
                            value: a,
                            url: b._url,
                            domain: b._domain,
                            expirationDate: k() / 1E3
                        }, function(f) {
                            var e = b._hasRuntimeError();
                            !f && e && d("chrome.cookie.set failed with an error: " + e.message);
                            f && f.value === a || d(Error("setContainerId failed.\n            Tried to set " +
                                a + ", the result is " + (f ? f.value : f) + "."));
                            c()
                        })
                    } catch (x) {
                        d(x)
                    }
                })
            }, b
        }(a);
        b.ChromeCookieStorage = c;
        c = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = a.call(this, "webExtensionsCookie") || this;
                if (d._url = b, d._domain = c, !p.test(c)) throw Error('Incorrect cookie domain provided.\n        Use top-level domain, starting from "."');
                return d
            }
            return h(b, a), b.prototype.ensureAvailable = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this;
                    return g(2, 1E3, function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return new Promise(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var d = n.alphanumeric(10);
                            window.browser.cookies.set({
                                name: d,
                                value: d,
                                url: a._url,
                                domain: a._domain,
                                expirationDate: m() / 1E3
                            }).then(function() {
                                window.browser.cookies.get({
                                    url: a._url,
                                    name: d
                                }).then(function(a) {
                                    a && a.value === d ? b() : c(Error("WebExtensionsCookieStorage is unavailable.\n              Availability test failed.\n              Tried to set " + d + ", the result is " + (a ? a.value : a) + "."))
                                })["catch"](function(a) {
                                    c("browser.cookies.get failed with an error: " + a.message)
                                })
                            })["catch"](function(a) {
                                c("browser.cookies.set failed with an error: " + a.message)
                            })
                        })
                    })
                }, b.prototype.getContainerId =
                function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this;
                    return new Promise(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        window.browser.cookies.get({
                            url: a._url,
                            name: "gnar_containerId"
                        }).then(function(a) {
                            b(a ? a.value : void 0)
                        })["catch"](function(a) {
                            c("browser.cookies.get failed with an error: " + a.message)
                        })
                    })
                }, b.prototype.setContainerId = function(a) {
                    var b = this;
                    return new Promise(function(c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        window.browser.cookies.set({
                            name: "gnar_containerId",
                            value: a,
                            url: b._url,
                            domain: b._domain,
                            expirationDate: k() / 1E3
                        }).then(function(b) {
                            b && b.value === a || d(Error("setContainerId failed.\n          Tried to set " +
                                a + ", the result is " + (b ? b.value : b) + "."));
                            c()
                        })["catch"](function(a) {
                            d("browser.cookies.set failed with an error: " + a.message)
                        })
                    })
                }, b
        }(a);
        b.WebExtensionsCookieStorage = c;
        c = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.call(this, "localStorage") || this
            }
            return h(b, a), b.prototype.ensureAvailable = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = n.alphanumeric(10);
                return new Promise(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    localStorage.setItem("gnar_containerId_test", a);
                    localStorage.getItem("gnar_containerId_test") !== a ? c(Error("LocalStorage is unavailable.\n          Availability test failed.\n          Tried to set " +
                        a + ", the result is " + localStorage.getItem("gnar_containerId_test") + ".")) : b();
                    localStorage.removeItem("gnar_containerId_test")
                })
            }, b.prototype.getContainerId = function() {
                var a = localStorage.getItem("gnar_containerId");
                return new Promise(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return b(null === a ? void 0 : a)
                })
            }, b.prototype.setContainerId = function(a) {
                return new Promise(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    localStorage.setItem("gnar_containerId", a);
                    b()
                })
            }, b
        }(a);
        b.LocalStorage = c;
        c = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = a.call(this, "cookie") || this;
                if (c._domain = b, !p.test(b)) throw Error('Incorrect cookie domain provided.\n        Use top-level domain, starting from "."');
                return c
            }
            return h(b, a), b.prototype._getCookieOptions = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return {
                        path: "/",
                        domain: this._domain,
                        expires: new Date(k())
                    }
                }, b.prototype.ensureAvailable = function() {
                    var a = n.alphanumeric(10);
                    return new Promise(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        f["default"](a, a);
                        f["default"](a) !== a ? c(Error("CookieStorage is unavailable.\n          Availability test failed.\n          Tried to set " + a + ", the result is " + f["default"](a) + ".")) : b();
                        f["default"](a, null)
                    })
                }, b.prototype.getContainerId = function() {
                    return new Promise(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a(f["default"]("gnar_containerId"))
                    })
                },
                b.prototype.setContainerId = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = this;
                    return new Promise(function(c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        f["default"]("gnar_containerId", a, b._getCookieOptions());
                        c()
                    })
                }, b
        }(a);
        b.CookieStorage = c;
        c = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = a.call(this, "backend") || this;
                return d._fetch = b, d._url = c, d._keyName = "gnar_containerId", d._testKeyName = "gnar_containerId_test", d._baseUrl = c + "/cookies", d
            }
            return h(b, a), b.prototype.ensureAvailable = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = this,
                    b = n.alphanumeric(10),
                    c = (m() - Date.now()) / 1E3,
                    d = this._baseUrl + "?name=" + this._testKeyName;
                return this._doSend(d + "&value=" + b + "&maxAge=" + c, "post").then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (!a.ok) throw Error("BackendStorage is unavailable.\n          Availability test failed.\n          Tried to set " + b + ". Request failed.\n        ");
                }).then(function() {
                    return a._doSend(d, "get").then(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (c.ok) return c.json().then(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            if (c.value !== b) throw Error("BackendStorage is unavailable.\n                Availability test failed.\n                Tried to get " + a._testKeyName + " from server.\n                Got " +
                                c.value + " instead of " + b + ".");
                        });
                        throw Error("BackendStorage is unavailable.\n            Availability test failed.\n            Tried to get " + a._testKeyName + " from server. Request failed.");
                    })
                })
            }, b.prototype._doSend = function(a, b) {
                return this._fetch(a, {
                    credentials: "include",
                    method: b
                })
            }, b.prototype.getContainerId = function() {
                return this._doSend(this._baseUrl + "?name=" + this._keyName, "get").then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a.json()
                }).then(function(a) {
                    return a.value
                })
            }, b.prototype.setContainerId = function(a) {
                var b =
                    (k() - Date.now()) / 1E3;
                return this._doSend(this._baseUrl + "?name=" + this._keyName + "&value=" + a + "&maxAge=" + b, "post").then(function() {})
            }, b
        }(a);
        b.BackendStorage = c;
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                void 0 === b && (b = void 0);
                var c = a.call(this, "memory") || this;
                return c._value = b, c
            }
            return h(b, a), b.prototype.ensureAvailable = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return Promise.resolve()
            }, b.prototype.getContainerId = function() {
                return Promise.resolve(this._value)
            }, b.prototype.setContainerId = function(a) {
                return this._value = a, Promise.resolve()
            }, b
        }(a);
        b.MemoryStorage =
            a
    }, {
        "./util": 4,
        "@grammarly-npm/cookie": 1
    }],
    3: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var d = a("./util");
        a = a("./container_id_manager");
        b.ContainerIdManager = a.ContainerIdManager;
        b.BaseStorage = a.BaseStorage;
        b.MemoryStorage = a.MemoryStorage;
        b.LocalStorage = a.LocalStorage;
        b.CookieStorage = a.CookieStorage;
        b.ChromeCookieStorage = a.ChromeCookieStorage;
        b.WebExtensionsCookieStorage = a.WebExtensionsCookieStorage;
        b.BackendStorage = a.BackendStorage;
        var e = "eventName client clientVersion userId isTest containerId instanceId batchId".split(" ");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, b, c, e, g, p, r, l) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                void 0 === l && (l = !1);
                this._client = b;
                this._clientVersion = c;
                this._fetch = e;
                this._containerIdManager = g;
                this._logger = p;
                this._metric = r;
                this._storePingTimestamp = l;
                this._batchId = 0;
                this._instanceId = d.alphanumeric(8);
                this._isReady = !1;
                this._queue = [];
                this._eventsUrl = a + "/events";
                this._pingMaybe()
            }
            return a.prototype.track = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (void 0 === b && (b = {}), 0 === a.indexOf(this._client + "/")) throw Error("Event name " + a + " should not start with '" + this._client + "/'");
                    Object.keys(b).forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (-1 !==
                            e.indexOf(a)) throw Error("Event data should not contain '" + a + "' prop.");
                    });
                    this._isReady ? ("ping" !== a && this._pingMaybe(), this._send(a, b)) : this._enqueue(a, b)
                }, a.prototype.setUser = function(a, b) {
                    if (null === a || "" === a) throw Error("Invalid userId: " + a);
                    var c = this._userId && this._userId !== a && !(/^-/.test(a) && /^-/.test(this._userId));
                    this._isTest = b;
                    this._userId = a;
                    c && this._pingMaybe(!0);
                    this._isReady || (this._execQueue(), this._isReady = !0)
                }, a.prototype.getContainerId = function() {
                    return this._containerIdManager.getContainerId()
                },
                a.prototype._setNextPingTimestamp = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = d.getNextPingDate();
                    if (this._nextPingTimestamp = a, this._storePingTimestamp) try {
                        localStorage.setItem("gnar_nextPingTimestamp", a.toString())
                    } catch (f) {
                        this._metric.getCounter("nextPingDate.write.failure").increment(), this._logger.warn("nextPingDate.write.failed", f)
                    }
                }, a.prototype._getNextPingTimestamp = function() {
                    var a = this._nextPingTimestamp;
                    if (void 0 !== a || !this._storePingTimestamp) return a;
                    try {
                        var b = localStorage.getItem("gnar_nextPingTimestamp");
                        a = null ===
                            b ? void 0 : parseInt(b, 10)
                    } catch (n) {
                        a = void 0, this._metric.getCounter("nextPingDate.read.failure").increment(), this._logger.warn("nextPingDate.read.failed", n)
                    }
                    return a
                }, a.prototype._shouldPing = function(a) {
                    if (a) return !0;
                    a = this._getNextPingTimestamp();
                    return void 0 === a || a < Date.now()
                }, a.prototype._pingMaybe = function(a) {
                    if (void 0 === a && (a = !1), this._shouldPing(a)) this._setNextPingTimestamp(), this.track("ping", {
                        referrer: document.referrer,
                        url: document.location.href,
                        userAgent: navigator.userAgent,
                        navigatorAppName: navigator.appName,
                        navigatorAppCodeName: navigator.appCodeName,
                        navigatorAppVersion: navigator.appVersion,
                        navigatorVendor: navigator.vendor,
                        screenWidth: screen.width,
                        screenHeight: screen.height
                    })
                }, a.prototype.pingMaybe = function() {
                    this._pingMaybe()
                }, a.prototype._enqueue = function(a, b) {
                    this._queue.push([a, b])
                }, a.prototype._execQueue = function() {
                    var a = this;
                    this._queue.forEach(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a._send(b[0], b[1])
                    });
                    this._queue = []
                }, a.prototype._send = function(a, b) {
                    var c = this,
                        d = this._batchId++;
                    this.getContainerId().then(function(f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return c._doSend({
                            eventName: c._client +
                                "/" + a,
                            client: c._client,
                            clientVersion: c._clientVersion,
                            userId: c._userId,
                            isTest: c._isTest,
                            containerId: f,
                            instanceId: c._instanceId,
                            batchId: d
                        }, b)
                    })["catch"](function(a) {
                        c._metric.getCounter("send.failure").increment();
                        c._logger.warn("send.failed", a)
                    })
                }, a.prototype._doSend = function(a, b) {
                    return this._fetch(this._eventsUrl, {
                        mode: "cors",
                        credentials: "include",
                        method: "post",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            events: [Object.assign(a, b)]
                        })
                    })
                }, a
        }();
        b.GnarClientImpl = a;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                this.history = []
            }
            return a.prototype.track = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                void 0 === b && (b = {});
                this.history.push({
                    eventName: a,
                    props: b
                })
            }, a.prototype.pingMaybe = function() {}, a.prototype.setUser = function(a, b) {}, a.prototype.getContainerId = function() {
                return Promise.resolve("dummy_container_id")
            }, a
        }();
        b.MemoryGnarClient = a;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {}
            return a.prototype.track = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    void 0 === b && (b = {});
                    try {
                        var c = JSON.parse(localStorage.getItem("trackingGnar")) || [];
                        c.push({
                            eventName: a,
                            props: b
                        });
                        localStorage.setItem("trackingGnar", JSON.stringify(c))
                    } catch (k) {}
                },
                a.prototype.pingMaybe = function() {}, a.prototype.setUser = function(a, b) {}, a.prototype.getContainerId = function() {
                    return Promise.resolve("dummy_container_id")
                }, a
        }();
        b.LocalStorageGnarClient = a
    }, {
        "./container_id_manager": 2,
        "./util": 4
    }],
    4: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return (void 0 === b && (b = ""), 0 >= a) ? b : d(a - 1, b + e.charAt(Math.floor(Math.random() * (e.length - 1))))
        }
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        b.alphanumeric = d;
        b.getNextPingDate =
            function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = new Date;
                return 2 < a.getHours() && a.setDate(a.getDate() + 1), a.setHours(3), a.setMinutes(Math.floor(60 * Math.random())), a.getTime()
            }
    }, {}],
    5: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var d = a("./ring_buffer");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var f = this;
                this._eventsSink = c;
                this._crashLogger = e;
                this._crashLogged = !1;
                this.sink = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    f._buffer.push(a);
                    f._eventsSink(a);
                    f._trigger(a) && f._sendCrashLog(a)
                };
                this._buffer = new d.RingBuffer(a, !0);
                this._trigger = "function" == typeof b ?
                    b : function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.level >= b
                    }
            }
            return a.prototype._sendCrashLog = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (!this._crashLogged || this._buffer.size > this._buffer.capacity / 2) {
                    var b = void 0;
                    try {
                        b = JSON.stringify(this._buffer, void 0, "")
                    } catch (f) {
                        b = f
                    }
                    this._crashLogger.log(a.level, "CrashLog", {
                        events: b,
                        first: !this._crashLogged
                    });
                    this._crashLogged = !0;
                    this._buffer.clear()
                }
            }, a
        }();
        b.CrashLogWrapper = a
    }, {
        "./ring_buffer": 9
    }],
    6: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        c = a("./log4ts");
        b.Logging = c;
        var d = a("./log4ts_impl");
        b.LoggingImpl = d;
        c = a("./timeseries");
        b.TimeSeries = c;
        var e = a("./timeseries_impl");
        b.TimeSeriesImpl = e;
        a = a("./utils");
        b.EventProps = a.EventProps;
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function a() {}
                return Object.defineProperty(a, "root", {
                    get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return d.LoggingConfig.getRootLogger()
                    },
                    enumerable: !0,
                    configurable: !0
                }), a.getLogger = function(b, c) {
                    return a.root.getLogger(b, c)
                }, a
            }();
            a.Logging = b;
            b = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function a() {}
                return Object.defineProperty(a, "root", {
                    get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return e.MetricsConfig.getRootMetric()
                    },
                    enumerable: !0,
                    configurable: !0
                }), a
            }();
            a.TimeSeries = b
        }(b.Monitoring || (b.Monitoring = {}))
    }, {
        "./log4ts": 7,
        "./log4ts_impl": 8,
        "./timeseries": 10,
        "./timeseries_impl": 11,
        "./utils": 12
    }],
    7: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a[a.TRACE = 0] = "TRACE";
            a[a.DEBUG = 1] = "DEBUG";
            a[a.INFO = 2] = "INFO";
            a[a.WARN = 3] = "WARN";
            a[a.ERROR = 4] = "ERROR";
            a[a.FATAL = 5] = "FATAL";
            a[a.OFF = 6] = "OFF"
        }(b.LogLevel || (b.LogLevel = {}));
        (function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.fromString = function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                switch (b) {
                    case "TRACE":
                        return a.TRACE;
                    case "DEBUG":
                        return a.DEBUG;
                    case "INFO":
                        return a.INFO;
                    case "WARN":
                        return a.WARN;
                    case "ERROR":
                        return a.ERROR;
                    case "FATAL":
                        return a.FATAL;
                    case "OFF":
                        return a.OFF;
                    default:
                        throw new TypeError("Unrecognized log level string '" + b + "'");
                }
            }
        })(b.LogLevel || (b.LogLevel = {}))
    }, {}],
    8: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var d = a("tslib"),
            e = a("./utils"),
            g = a("./log4ts"),
            h = a("./utils"),
            f = a("./crash_logger"),
            n = a("./ring_buffer"),
            k = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function a(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this.parent = a;
                    this.context = void 0
                }
                return a.prototype.get = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this.parent && this.parent.get(),
                        b = this.context;
                    return a || b ? Object.assign({}, a, b) : void 0
                }, a.prototype.add = function(a) {
                    this.context = Object.assign({}, this.context, a)
                }, a.prototype.remove = function(a) {
                    var b = this;
                    this.context && a.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a in b.context && delete b.context[a]
                    })
                }, a.prototype.clear = function() {
                    this.context = void 0
                }, a
            }();
        b.TreeContext = k;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                this.name = a;
                this.level = b;
                this.context = c;
                e.validateName(a)
            }
            return a.prototype.isEnabled =
                function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a >= this.level
                }, a.prototype.handler = function(a, b) {
                    var c = this;
                    return {
                        trace: function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            throw c.trace(a, d, b), d;
                        },
                        debug: function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            throw c.debug(a, d, b), d;
                        },
                        info: function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            throw c.info(a, d, b), d;
                        },
                        warn: function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            throw c.warn(a, d, b), d;
                        },
                        error: function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            throw c.error(a, d, b), d;
                        },
                        fatal: function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            throw c.fatal(a, d, b), d;
                        }
                    }
                }, a.prototype.trace = function(a, b, c) {
                    this.log(g.LogLevel.TRACE, a, b, c)
                }, a.prototype.debug = function(a, b, c) {
                    this.log(g.LogLevel.DEBUG, a, b, c)
                }, a.prototype.info = function(a,
                    b, c) {
                    this.log(g.LogLevel.INFO, a, b, c)
                }, a.prototype.warn = function(a, b, c) {
                    this.log(g.LogLevel.WARN, a, b, c)
                }, a.prototype.error = function(a, b, c) {
                    this.log(g.LogLevel.ERROR, a, b, c)
                }, a.prototype.fatal = function(a, b, c) {
                    this.log(g.LogLevel.FATAL, a, b, c)
                }, a.prototype.log = function(a, b, c, d) {
                    this.isEnabled(a) && (c && d || h.ErrorLike.isErrorLike(c) ? this.logImpl(a, b, c, d) : this.logImpl(a, b, void 0, d || c))
                }, a
        }();
        b.AbstractLogger = a;
        var m = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(a, b, c, d, f, e, g) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                this.level = a;
                this.message = b;
                this.logger = c;
                this.timestamp =
                    d;
                this.exception = f;
                this.extra = e;
                this.context = g
            }
        }();
        b.LogEvent = m;
        var p = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b, c, d, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b = a.call(this, b, c, f || new k) || this;
                return b.appender = d, b
            }
            return d.__extends(b, a), b.prototype.getLogger = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new b(this.name + "." + a, c || this.level, this.appender, new k(this.context))
            }, b.prototype.logImpl = function(a, b, c, d) {
                a = new m(a, b, this.name, Date.now(), c, d, this.context.get());
                try {
                    this.appender(a)
                } catch (z) {
                    console.error("Failed processing log event", z);
                    try {
                        r.printToConsole(a)
                    } catch (y) {
                        console.error("No luck. Can't print the event",
                            y)
                    }
                }
            }, b
        }(a);
        b.SimpleLogger = p;
        var r = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(c, d, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.call(this, c, d, b.printToConsole, f) || this
            }
            return d.__extends(b, a), b.printToConsole = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = console.log;
                    b = a.level <= g.LogLevel.TRACE ? console.trace || console.log : a.level <= g.LogLevel.DEBUG ? console.debug || console.log : a.level <= g.LogLevel.INFO ? console.log : a.level <= g.LogLevel.WARN ? console.warn : console.error;
                    b.apply(console, ["[" + a.logger + "]: " + g.LogLevel[a.level] + " : " + a.message, a.exception, a.extra].filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return !!a
                    }))
                },
                b
        }(p);
        b.ConsoleLogger = r;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {}
            return a.createRootLogger = function(b, c, d, e, h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                void 0 === h && (h = !1);
                var l = function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        b.level >= c && (h && r.printToConsole(b), d.append(b)["catch"](a._onError))
                    },
                    t = new k,
                    q = l;
                e && (q = new p(b + ".crashLogs", g.LogLevel.TRACE, function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    e.append(b)["catch"](a._onError)
                }, new k(t)), q = (new f.CrashLogWrapper(500, g.LogLevel.ERROR, l, q)).sink);
                return new p(b, c, q, t)
            }, a
        }();
        a._onError = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return r.printToConsole(new m(g.LogLevel.WARN, "Error while logging message to the server.",
                "Fallback", 0, void 0, a))
        };
        b.DefaultLogAppender = a;
        var l = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = this;
                this.event = a;
                this.promise = (new Promise(function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b.resolve = a
                })).then(function() {})
            }
        }();
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                void 0 === b && (b = 300);
                void 0 === c && (c = 1E4);
                this._sink = a;
                this._retryInterval = c;
                this._skippedCounter = this._currentItem = null;
                this._buffer = new n.RingBuffer(b, !1)
            }
            return a.prototype.append = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (this._buffer.isFull) return this._incSkippedCounter(), Promise.reject(Error("Outgoing message buffer is full"));
                a = new l(a);
                return this._buffer.push(a), this._doAppend(), a.promise
            }, a.prototype._incSkippedCounter = function() {
                this._skippedCounter || (this._skippedCounter = new m(g.LogLevel.WARN, "Messages was skipped due to buffer overflow", "log4ts_impl.LogQueue", Date.now(), void 0, {
                    count: 0
                }));
                this._skippedCounter.extra.count++
            }, a.prototype._doAppend = function() {
                var a = this;
                if (!this._buffer.isEmpty && !this._currentItem) {
                    var b = this._buffer.first,
                        c = this._sink.append(b.event);
                    this._currentItem = b;
                    c.then(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        b.resolve();
                        var c = a._buffer.pop();
                        if (c !== b && c === a._currentItem) throw Error("Illegal state");
                        a._currentItem = null;
                        a._skippedCounter && (a.append(a._skippedCounter), a._skippedCounter = null);
                        a._doAppend()
                    })["catch"](function(c) {
                        a._retryAppend(b)
                    })
                }
            }, a.prototype._retryAppend = function(a) {
                var b = this;
                setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var c = a.event.extra || {};
                    c.appendRetries || (c = a.event.extra = Object.assign({
                        appendRetries: 1
                    }, c));
                    ++c.appendRetries;
                    b._currentItem = null;
                    b._doAppend()
                }, this._retryInterval)
            }, a
        }();
        b.LogQueue = a;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {}
            return a.prototype.append = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return Promise.resolve()
            }, a
        }();
        b.DummyFelogClient = a;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                this._appName = a;
                this._appVersion = b;
                this._env = c;
                this._fetch = d
            }
            return a.prototype.append = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return this._fetch(this._prepareData(a))
            }, a.prototype._toObject = function(a) {
                return void 0 === a || null === a || a instanceof Object && !Array.isArray(a) ? a : {
                    extra: a
                }
            }, a.prototype._parseException = function(a) {
                if (a) {
                    a = this._toObject(a);
                    var b = a.name;
                    b = void 0 === b ? "UnknownError" : b;
                    var c = a.message;
                    c = void 0 === c ? "Unknown error message" : c;
                    var f = a.stack;
                    a = d.__rest(a, ["name", "message", "stack"]);
                    return {
                        exceptionPart: {
                            exception: {
                                name: b,
                                message: c,
                                stack: f
                            }
                        },
                        exceptionDetailsPart: 0 < Object.keys(a).length ? {
                            exceptionDetails: a
                        } : {}
                    }
                }
                return {
                    exceptionPart: {},
                    exceptionDetailsPart: {}
                }
            }, a.prototype._prepareData = function(a) {
                var b = a.context ? {
                        context: a.context
                    } : {},
                    c = this._parseException(a.exception),
                    d = c.exceptionPart;
                c = JSON.stringify(Object.assign({}, c.exceptionDetailsPart, this._toObject(a.extra)));
                a = Object.assign({
                    message: a.message,
                    logger: a.logger,
                    level: g.LogLevel[a.level],
                    application: this._appName,
                    version: this._appVersion,
                    env: this._env
                }, b, d, "{}" !== c && {
                    details: c
                });
                return JSON.stringify(a, null, "")
            }, a
        }();
        b.FelogClientBase = a;
        c = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b, c, d, f, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.call(this, c, d, f, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return e(b, {
                        method: "POST",
                        cache: "no-cache",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: a
                    }).then(function() {})
                }) || this
            }
            return d.__extends(b, a), b
        }(a);
        b.PostFelogClient = c;
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b, c, d, f, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var g = b + "/log?json=";
                return a.call(this,
                    c, d, f,
                    function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return e(g + encodeURIComponent(a), {
                            mode: "no-cors",
                            method: "get",
                            cache: "no-cache"
                        }).then(function() {})
                    }) || this
            }
            return d.__extends(b, a), b
        }(a);
        b.GetFelogClient = a;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {}
            return a.getRootLogger = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a._rootLogger || (a._rootLogger = a._createDefaultRootLogger(), a._rootLogger.warn("Using DEFAULT root logger")), a._rootLogger
            }, a.configure = function(b) {
                a._rootLogger = b;
                a._rootLogger.debug("ROOT logger changed", b)
            }, a._createDefaultRootLogger = function() {
                return new r("DEFAULT",
                    g.LogLevel.DEBUG)
            }, a
        }();
        b.LoggingConfig = a
    }, {
        "./crash_logger": 5,
        "./log4ts": 7,
        "./ring_buffer": 9,
        "./utils": 12,
        tslib: "tslib"
    }],
    9: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (void 0 === b && (b = !1), this.capacity = a, this.allowOverflow = b, this._start = 0, this._end = 0, this._isFull = !1, this.toJSON = this.toArray, 0 >= a) throw Error("Invalid capacity " + a);
                this._buffer = Array(a)
            }
            return Object.defineProperty(a.prototype, "size", {
                get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return this._isFull ? this._buffer.length :
                        (this._end - this._start + this._buffer.length) % this._buffer.length
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(a.prototype, "isEmpty", {
                get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return 0 === this.size
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(a.prototype, "isFull", {
                get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return this._isFull
                },
                enumerable: !0,
                configurable: !0
            }), a.prototype.push = function(a) {
                if (this.isFull) {
                    if (!this.allowOverflow) throw Error("Buffer is full");
                    ++this._start;
                    this._start === this.capacity && (this._start = 0)
                }
                this._buffer[this._end++] =
                    a;
                this._end === this.capacity && (this._end = 0);
                this._start === this._end && (this._isFull = !0)
            }, a.prototype.pop = function() {
                if (!this.isEmpty) {
                    var a = this._buffer[this._start];
                    return this._buffer[this._start] = void 0, this._start++, this._start === this.capacity && (this._start = 0), this._isFull = !1, a
                }
            }, Object.defineProperty(a.prototype, "first", {
                get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return this.isEmpty ? void 0 : this._buffer[this._start]
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(a.prototype, "last", {
                get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return this.isEmpty ?
                        void 0 : this._buffer[0 === this._end ? this.capacity - 1 : this._end - 1]
                },
                enumerable: !0,
                configurable: !0
            }), a.prototype.clear = function() {
                this._buffer = Array(this.capacity);
                this._start = this._end = 0;
                this._isFull = !1
            }, a.prototype.toArray = function() {
                if (this.isEmpty) var a = [];
                else if (this._start < this._end) a = this._buffer.slice(this._start, this._end);
                else {
                    a = Array(this.size);
                    for (var b = 0, c = this._start; c < this.capacity; ++c, ++b) a[b] = this._buffer[c];
                    for (c = 0; c < this._end; ++c, ++b) a[b] = this._buffer[c]
                }
                return a
            }, a
        }();
        b.RingBuffer =
            a
    }, {}],
    10: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        })
    }, {}],
    11: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var d = a("tslib"),
            e = a("./utils");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                this.name = a;
                this.timersSink = b;
                this.countersSink = c;
                e.validateName(a)
            }
            return a.prototype.getMetric = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return this._createChild(a)
            }, a.prototype.getTimer = function(a) {
                return this._createChild(a)
            }, a.prototype.getCounter = function(a) {
                return this._createChild(a)
            }, Object.defineProperty(a.prototype,
                "parent", {
                    get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var b = this.name.lastIndexOf(".");
                        b = this.name.substring(0, -1 === b ? 0 : b);
                        return "" === b ? void 0 : new a(b, this.timersSink, this.countersSink)
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(a.prototype, "root", {
                get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = this.name.indexOf(".");
                    b = this.name.substring(0, -1 === b ? 0 : b);
                    return "" === b ? this : new a(b, this.timersSink, this.countersSink)
                },
                enumerable: !0,
                configurable: !0
            }), a.prototype._createName = function(a) {
                return this.name + "." + a
            }, a.prototype.start = function() {
                var a =
                    Date.now(),
                    b = this;
                return {
                    stop: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        b.recordTime(Date.now() - a)
                    }
                }
            }, a.prototype.recordTime = function(a) {
                this.timersSink(this.name, a)
            }, a.prototype.timing = function(a) {
                var b = this.start();
                try {
                    return a()
                } finally {
                    try {
                        b.stop()
                    } catch (k) {}
                }
            }, a.prototype.increment = function(a) {
                void 0 === a && (a = 1);
                this.countersSink(this.name, a)
            }, a.prototype.decrement = function(a) {
                void 0 === a && (a = 1);
                this.increment(-a)
            }, a.prototype._createChild = function(b) {
                return new a(this._createName(b), this.timersSink, this.countersSink)
            }, a
        }();
        b.AbstractMetricsStorage = a;
        var g = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.call(this, "MP", function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return b("TIMER: " + a + " = " + c)
                }, function(a, c) {
                    return b("COUNTER: " + a + " = " + c)
                }) || this
            }
            return d.__extends(b, a), b
        }(a);
        b.MetricsPrinter = g;
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b, c, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                void 0 === e && (e = 7500);
                var f = a.call(this, b, function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return f._reportTimer(a, b)
                }, function(a, b) {
                    return f._reportCounter(a, b)
                }) || this;
                return f._fetch = d, f._sendTimeout = e, f._countersBuffer = {}, f._timersBuffer = [], f._sendTimer = void 0, f._sendData =
                    function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = [f._timersBuffer.join("&"), Object.keys(f._countersBuffer).map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return a + "=" + f._countersBuffer[a]
                            }).join("&")].filter(function(a) {
                                return a.length
                            }).join("&"),
                            b = f._baseUrl + a;
                        f._timersBuffer.length = 0;
                        f._countersBuffer = {};
                        f._sendTimer = void 0;
                        var c = 0,
                            d = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                f._fetch(b, {
                                    mode: "no-cors",
                                    cache: "no-cache"
                                })["catch"](function(a) {
                                    3 > c++ ? setTimeout(d, 5E3 * c) : console.error("Cannot send timesereies data", a, b)
                                })
                            };
                        d()
                    }, f._baseUrl = c + "/ts?", f
            }
            return d.__extends(b, a), b.createRoot = function(a,
                c, d) {
                return new b(a, c, d)
            }, b.prototype._reportTimer = function(a, b) {
                this._timersBuffer.push("t." + a + "=" + b);
                this._startSending()
            }, b.prototype._reportCounter = function(a, b) {
                a = "c." + a;
                this._countersBuffer[a] = (this._countersBuffer[a] || 0) + b;
                this._startSending()
            }, b.prototype._startSending = function() {
                this._sendTimer || (this._sendTimer = setTimeout(this._sendData, this._sendTimeout))
            }, b
        }(a);
        b.MetricsStorage = a;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {}
            return a.getRootMetric = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a._metricsRoot || (console.warn("[WARNING] Using default timeseries implementation."),
                    a._metricsRoot = new g(console.log)), a._metricsRoot
            }, a.configure = function(b) {
                a._metricsRoot = b
            }, a
        }();
        b.MetricsConfig = a
    }, {
        "./utils": 12,
        tslib: "tslib"
    }],
    12: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var d;
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.isErrorLike = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && (void 0 !== a.message && void 0 !== a.name || void 0 !== a.stack)
            }
        }(d = b.ErrorLike || (b.ErrorLike = {}));
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (!a) return {};
                var f = {};
                return (e ? Object.getOwnPropertyNames : Object.keys)(a).forEach(function(e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var g = a[e];
                    null ===
                        g || void 0 === g || "number" == typeof g || "string" == typeof g || "boolean" == typeof g ? f[e] = g : "object" == typeof g && (g instanceof Boolean || g instanceof Number || g instanceof String || g instanceof Date || g instanceof RegExp ? f[e] = g.toString() : -1 === c.indexOf(g) && (c.push(g), g = b(g, c, d.isErrorLike(g)), 0 < Object.keys(g).length && (f[e] = g)))
                }), f
            }
            a.fromAny = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b(a, [a], d.isErrorLike(a))
            }
        }(b.EventProps || (b.EventProps = {}));
        var e = /^(?!\.[\w])[\w.]*\w$/;
        b.validateName = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if ("" === a) throw Error("Empty name");
            if (!e.test(a)) throw Error("Invalid name: " + a + ". Should be hierarchical dot separated string and may contain only word characters)");
        }
    }, {}],
    13: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = {
            "default": a("core-js/library/fn/array/from"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/array/from": 36
    }],
    14: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = {
            "default": a("core-js/library/fn/get-iterator"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/get-iterator": 37
    }],
    15: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = {
            "default": a("core-js/library/fn/is-iterable"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/is-iterable": 38
    }],
    16: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = {
            "default": a("core-js/library/fn/json/stringify"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/json/stringify": 39
    }],
    17: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = {
            "default": a("core-js/library/fn/object/assign"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/object/assign": 40
    }],
    18: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = {
            "default": a("core-js/library/fn/object/create"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/object/create": 41
    }],
    19: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            c.exports = {
                "default": a("core-js/library/fn/object/define-property"),
                __esModule: !0
            }
        },
        {
            "core-js/library/fn/object/define-property": 42
        }
    ],
    20: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = {
            "default": a("core-js/library/fn/object/get-own-property-symbols"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/object/get-own-property-symbols": 43
    }],
    21: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = {
            "default": a("core-js/library/fn/object/get-prototype-of"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/object/get-prototype-of": 44
    }],
    22: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = {
            "default": a("core-js/library/fn/object/keys"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/object/keys": 45
    }],
    23: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = {
            "default": a("core-js/library/fn/object/set-prototype-of"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/object/set-prototype-of": 46
    }],
    24: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = {
            "default": a("core-js/library/fn/promise"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/promise": 47
    }],
    25: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = {
            "default": a("core-js/library/fn/symbol"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/symbol": 48
    }],
    26: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = {
            "default": a("core-js/library/fn/symbol/iterator"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/symbol/iterator": 49
    }],
    27: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.__esModule = !0;
        b["default"] = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function");
        }
    }, {}],
    28: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.__esModule = !0;
        var d = (a = a("../core-js/object/define-property")) && a.__esModule ? a : {
            "default": a
        };
        b["default"] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var c = 0; c < b.length; c++) {
                    var e = b[c];
                    e.enumerable = e.enumerable || !1;
                    e.configurable = !0;
                    "value" in e && (e.writable = !0);
                    (0, d["default"])(a, e.key, e)
                }
            }
            return function(b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return c && a(b.prototype, c), d &&
                    a(b, d), b
            }
        }()
    }, {
        "../core-js/object/define-property": 19
    }],
    29: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.__esModule = !0;
        var d = (a = a("../core-js/object/define-property")) && a.__esModule ? a : {
            "default": a
        };
        b["default"] = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return b in a ? (0, d["default"])(a, b, {
                value: c,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : a[b] = c, a
        }
    }, {
        "../core-js/object/define-property": 19
    }],
    30: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b.__esModule = !0;
        c = a("../core-js/object/set-prototype-of");
        var e = d(c);
        c = a("../core-js/object/create");
        var g = d(c);
        a = a("../helpers/typeof");
        var h = d(a);
        b["default"] = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + ("undefined" == typeof b ? "undefined" : (0, h["default"])(b)));
            a.prototype = (0, g["default"])(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            });
            b && (e["default"] ? (0, e["default"])(a, b) : a.__proto__ = b)
        }
    }, {
        "../core-js/object/create": 18,
        "../core-js/object/set-prototype-of": 23,
        "../helpers/typeof": 34
    }],
    31: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.__esModule = !0;
        var d = (a = a("../helpers/typeof")) && a.__esModule ? a : {
            "default": a
        };
        b["default"] = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" !== ("undefined" == typeof b ? "undefined" : (0, d["default"])(b)) && "function" != typeof b ? a : b
        }
    }, {
        "../helpers/typeof": 34
    }],
    32: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.__esModule = !0;
        var d = (c = a("../core-js/is-iterable")) && c.__esModule ? c : {
                "default": c
            },
            e = (a = a("../core-js/get-iterator")) && a.__esModule ?
            a : {
                "default": a
            };
        b["default"] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (Array.isArray(a)) return a;
                if ((0, d["default"])(Object(a))) {
                    var c = [],
                        g = !0,
                        h = !1,
                        m = void 0;
                    try {
                        for (var p, r = (0, e["default"])(a); !(g = (p = r.next()).done) && (c.push(p.value), !b || c.length !== b); g = !0);
                    } catch (l) {
                        h = !0, m = l
                    } finally {
                        try {
                            !g && r["return"] && r["return"]()
                        } finally {
                            if (h) throw m;
                        }
                    }
                    return c
                }
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
            }
        }()
    }, {
        "../core-js/get-iterator": 14,
        "../core-js/is-iterable": 15
    }],
    33: [function(a,
        c, b) {
        b.__esModule = !0;
        var d = (a = a("../core-js/array/from")) && a.__esModule ? a : {
            "default": a
        };
        b["default"] = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (Array.isArray(a)) {
                for (var b = 0, c = Array(a.length); b < a.length; b++) c[b] = a[b];
                return c
            }
            return (0, d["default"])(a)
        }
    }, {
        "../core-js/array/from": 13
    }],
    34: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.__esModule = !0;
        c = (c = a("../core-js/symbol/iterator")) && c.__esModule ? c : {
            "default": c
        };
        var d = (a = a("../core-js/symbol")) && a.__esModule ? a : {
                "default": a
            },
            e = "function" == typeof d["default"] && "symbol" == typeof c["default"] ? function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return typeof a
            } :
            function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && "function" == typeof d["default"] && a.constructor === d["default"] && a !== d["default"].prototype ? "symbol" : typeof a
            };
        b["default"] = "function" == typeof d["default"] && "symbol" === e(c["default"]) ? function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "undefined" == typeof a ? "undefined" : e(a)
        } : function(a) {
            return a && "function" == typeof d["default"] && a.constructor === d["default"] && a !== d["default"].prototype ? "symbol" : "undefined" == typeof a ? "undefined" : e(a)
        }
    }, {
        "../core-js/symbol": 25,
        "../core-js/symbol/iterator": 26
    }],
    35: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports =
            a("regenerator-runtime")
    }, {
        "regenerator-runtime": 145
    }],
    36: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../../modules/es6.string.iterator");
        a("../../modules/es6.array.from");
        c.exports = a("../../modules/_core").Array.from
    }, {
        "../../modules/_core": 57,
        "../../modules/es6.array.from": 125,
        "../../modules/es6.string.iterator": 135
    }],
    37: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../modules/web.dom.iterable");
        a("../modules/es6.string.iterator");
        c.exports = a("../modules/core.get-iterator")
    }, {
        "../modules/core.get-iterator": 123,
        "../modules/es6.string.iterator": 135,
        "../modules/web.dom.iterable": 139
    }],
    38: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../modules/web.dom.iterable");
        a("../modules/es6.string.iterator");
        c.exports = a("../modules/core.is-iterable")
    }, {
        "../modules/core.is-iterable": 124,
        "../modules/es6.string.iterator": 135,
        "../modules/web.dom.iterable": 139
    }],
    39: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a = a("../../modules/_core");
        var d = a.JSON || (a.JSON = {
            stringify: JSON.stringify
        });
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.stringify.apply(d, arguments)
        }
    }, {
        "../../modules/_core": 57
    }],
    40: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../../modules/es6.object.assign");
        c.exports = a("../../modules/_core").Object.assign
    }, {
        "../../modules/_core": 57,
        "../../modules/es6.object.assign": 127
    }],
    41: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../../modules/es6.object.create");
        var d = a("../../modules/_core").Object;
        c.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.create(a, b)
        }
    }, {
        "../../modules/_core": 57,
        "../../modules/es6.object.create": 128
    }],
    42: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../../modules/es6.object.define-property");
        var d = a("../../modules/_core").Object;
        c.exports = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.defineProperty(a, b, c)
        }
    }, {
        "../../modules/_core": 57,
        "../../modules/es6.object.define-property": 129
    }],
    43: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../../modules/es6.symbol");
        c.exports = a("../../modules/_core").Object.getOwnPropertySymbols
    }, {
        "../../modules/_core": 57,
        "../../modules/es6.symbol": 136
    }],
    44: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../../modules/es6.object.get-prototype-of");
        c.exports = a("../../modules/_core").Object.getPrototypeOf
    }, {
        "../../modules/_core": 57,
        "../../modules/es6.object.get-prototype-of": 130
    }],
    45: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a("../../modules/es6.object.keys");
            c.exports = a("../../modules/_core").Object.keys
        },
        {
            "../../modules/_core": 57,
            "../../modules/es6.object.keys": 131
        }
    ],
    46: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../../modules/es6.object.set-prototype-of");
        c.exports = a("../../modules/_core").Object.setPrototypeOf
    }, {
        "../../modules/_core": 57,
        "../../modules/es6.object.set-prototype-of": 132
    }],
    47: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../modules/es6.object.to-string");
        a("../modules/es6.string.iterator");
        a("../modules/web.dom.iterable");
        a("../modules/es6.promise");
        c.exports = a("../modules/_core").Promise
    }, {
        "../modules/_core": 57,
        "../modules/es6.object.to-string": 133,
        "../modules/es6.promise": 134,
        "../modules/es6.string.iterator": 135,
        "../modules/web.dom.iterable": 139
    }],
    48: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../../modules/es6.symbol");
        a("../../modules/es6.object.to-string");
        a("../../modules/es7.symbol.async-iterator");
        a("../../modules/es7.symbol.observable");
        c.exports = a("../../modules/_core").Symbol
    }, {
        "../../modules/_core": 57,
        "../../modules/es6.object.to-string": 133,
        "../../modules/es6.symbol": 136,
        "../../modules/es7.symbol.async-iterator": 137,
        "../../modules/es7.symbol.observable": 138
    }],
    49: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../../modules/es6.string.iterator");
        a("../../modules/web.dom.iterable");
        c.exports = a("../../modules/_wks-ext").f("iterator")
    }, {
        "../../modules/_wks-ext": 120,
        "../../modules/es6.string.iterator": 135,
        "../../modules/web.dom.iterable": 139
    }],
    50: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if ("function" != typeof a) throw TypeError(a + " is not a function!");
            return a
        }
    }, {}],
    51: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = function() {}
    }, {}],
    52: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = function(a, b, c, h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!(a instanceof b) || void 0 !==
                h && h in a) throw TypeError(c + ": incorrect invocation!");
            return a
        }
    }, {}],
    53: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_is-object");
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!d(a)) throw TypeError(a + " is not an object!");
            return a
        }
    }, {
        "./_is-object": 77
    }],
    54: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_to-iobject"),
            e = a("./_to-length"),
            g = a("./_to-index");
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(b, c, h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var f;
                b = d(b);
                var k = e(b.length);
                h = g(h, k);
                if (a && c != c)
                    for (; k > h;) {
                        if (f = b[h++], f != f) return !0
                    } else
                        for (; k > h; h++)
                            if ((a || h in b) && b[h] === c) return a || h || 0;
                return !a &&
                    -1
            }
        }
    }, {
        "./_to-index": 112,
        "./_to-iobject": 114,
        "./_to-length": 115
    }],
    55: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_cof"),
            e = a("./_wks")("toStringTag"),
            g = "Arguments" == d(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return arguments
            }());
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b;
            if (void 0 === a) var c = "Undefined";
            else {
                if (null === a) var h = "Null";
                else {
                    a: {
                        var m = a = Object(a);
                        try {
                            h = m[e];
                            break a
                        } catch (p) {}
                        h = void 0
                    }
                    h = "string" == typeof(c = h) ? c : g ? d(a) : "Object" == (b = d(a)) && "function" == typeof a.callee ? "Arguments" : b
                }
                c = h
            }
            return c
        }
    }, {
        "./_cof": 56,
        "./_wks": 121
    }],
    56: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = {}.toString;
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.call(a).slice(8, -1)
        }
    }, {}],
    57: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a = c.exports = {
            version: "2.4.0"
        };
        "number" == typeof __e && (__e = a)
    }, {}],
    58: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-dp"),
            e = a("./_property-desc");
        c.exports = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            b in a ? d.f(a, b, e(0, c)) : a[b] = c
        }
    }, {
        "./_object-dp": 90,
        "./_property-desc": 101
    }],
    59: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_a-function");
        c.exports = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (d(a), void 0 === b) return a;
            switch (c) {
                case 1:
                    return function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.call(b, c)
                    };
                case 2:
                    return function(c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.call(b,
                            c, d)
                    };
                case 3:
                    return function(c, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.call(b, c, d, e)
                    }
            }
            return function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.apply(b, arguments)
            }
        }
    }, {
        "./_a-function": 50
    }],
    60: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (void 0 == a) throw TypeError("Can't call method on  " + a);
            return a
        }
    }, {}],
    61: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = !a("./_fails")(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return 7 != Object.defineProperty({}, "a", {
                get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return 7
                }
            }).a
        })
    }, {
        "./_fails": 66
    }],
    62: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b = a("./_is-object");
        var d = a("./_global").document,
            e = b(d) && b(d.createElement);
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return e ?
                d.createElement(a) : {}
        }
    }, {
        "./_global": 68,
        "./_is-object": 77
    }],
    63: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ")
    }, {}],
    64: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-keys"),
            e = a("./_object-gops"),
            g = a("./_object-pie");
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = d(a),
                c = e.f;
            if (c) {
                var h;
                c = c(a);
                for (var m = g.f, p = 0; c.length > p;) m.call(a, h = c[p++]) && b.push(h)
            }
            return b
        }
    }, {
        "./_object-gops": 95,
        "./_object-keys": 98,
        "./_object-pie": 99
    }],
    65: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d =
            a("./_global"),
            e = a("./_core"),
            g = a("./_ctx"),
            h = a("./_hide"),
            f = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var k, r, l = a & f.F,
                    q = a & f.G,
                    t = a & f.S,
                    u = a & f.P,
                    m = a & f.B,
                    n = a & f.W,
                    w = q ? e : e[b] || (e[b] = {}),
                    z = w.prototype;
                t = q ? d : t ? d[b] : (d[b] || {}).prototype;
                q && (c = b);
                for (k in c)(b = !l && t && void 0 !== t[k]) && k in w || (r = b ? t[k] : c[k], w[k] = q && "function" != typeof t[k] ? c[k] : m && b ? g(r, d) : n && t[k] == r ? function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = function(b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (this instanceof a) {
                            switch (arguments.length) {
                                case 0:
                                    return new a;
                                case 1:
                                    return new a(b);
                                case 2:
                                    return new a(b, c)
                            }
                            return new a(b, c, d)
                        }
                        return a.apply(this,
                            arguments)
                    };
                    return b.prototype = a.prototype, b
                }(r) : u && "function" == typeof r ? g(Function.call, r) : r, u && ((w.virtual || (w.virtual = {}))[k] = r, a & f.R && z && !z[k] && h(z, k, r)))
            };
        f.F = 1;
        f.G = 2;
        f.S = 4;
        f.P = 8;
        f.B = 16;
        f.W = 32;
        f.U = 64;
        f.R = 128;
        c.exports = f
    }, {
        "./_core": 57,
        "./_ctx": 59,
        "./_global": 68,
        "./_hide": 70
    }],
    66: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            try {
                return !!a()
            } catch (e) {
                return !0
            }
        }
    }, {}],
    67: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_ctx"),
            e = a("./_iter-call"),
            g = a("./_is-array-iter"),
            h = a("./_an-object"),
            f = a("./_to-length"),
            n = a("./core.get-iterator-method"),
            k = {},
            m = {};
        b = c.exports = function(a, b, c, q, t) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var l, r;
            t = t ? function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a
            } : n(a);
            c = d(c, q, b ? 2 : 1);
            q = 0;
            if ("function" != typeof t) throw TypeError(a + " is not iterable!");
            if (g(t))
                for (t = f(a.length); t > q; q++) {
                    if (r = b ? c(h(l = a[q])[0], l[1]) : c(a[q]), r === k || r === m) return r
                } else
                    for (t = t.call(a); !(l = t.next()).done;)
                        if (r = e(t, c, l.value, b), r === k || r === m) return r
        };
        b.BREAK = k;
        b.RETURN = m
    }, {
        "./_an-object": 53,
        "./_ctx": 59,
        "./_is-array-iter": 75,
        "./_iter-call": 78,
        "./_to-length": 115,
        "./core.get-iterator-method": 122
    }],
    68: [function(a,
        c, b) {
        a = c.exports = "undefined" != typeof window && Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
        "number" == typeof __g && (__g = a)
    }, {}],
    69: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = {}.hasOwnProperty;
        c.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.call(a, b)
        }
    }, {}],
    70: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-dp"),
            e = a("./_property-desc");
        c.exports = a("./_descriptors") ? function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.f(a, b, e(1, c))
        } : function(a, b, c) {
            return a[b] = c, a
        }
    }, {
        "./_descriptors": 61,
        "./_object-dp": 90,
        "./_property-desc": 101
    }],
    71: [function(a,
        c, b) {
        c.exports = a("./_global").document && document.documentElement
    }, {
        "./_global": 68
    }],
    72: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = !a("./_descriptors") && !a("./_fails")(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return 7 != Object.defineProperty(a("./_dom-create")("div"), "a", {
                get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return 7
                }
            }).a
        })
    }, {
        "./_descriptors": 61,
        "./_dom-create": 62,
        "./_fails": 66
    }],
    73: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = void 0 === c;
            switch (b.length) {
                case 0:
                    return d ? a() : a.call(c);
                case 1:
                    return d ? a(b[0]) : a.call(c, b[0]);
                case 2:
                    return d ? a(b[0], b[1]) : a.call(c, b[0],
                        b[1]);
                case 3:
                    return d ? a(b[0], b[1], b[2]) : a.call(c, b[0], b[1], b[2]);
                case 4:
                    return d ? a(b[0], b[1], b[2], b[3]) : a.call(c, b[0], b[1], b[2], b[3])
            }
            return a.apply(c, b)
        }
    }, {}],
    74: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_cof");
        c.exports = Object("z").propertyIsEnumerable(0) ? Object : function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "String" == d(a) ? a.split("") : Object(a)
        }
    }, {
        "./_cof": 56
    }],
    75: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_iterators"),
            e = a("./_wks")("iterator"),
            g = Array.prototype;
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return void 0 !== a && (d.Array === a || g[e] === a)
        }
    }, {
        "./_iterators": 83,
        "./_wks": 121
    }],
    76: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_cof");
        c.exports = Array.isArray || function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "Array" == d(a)
        }
    }, {
        "./_cof": 56
    }],
    77: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "object" == typeof a ? null !== a : "function" == typeof a
        }
    }, {}],
    78: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_an-object");
        c.exports = function(a, b, c, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            try {
                return f ? b(d(c)[0], c[1]) : b(c)
            } catch (n) {
                throw b = a["return"], void 0 !== b && d(b.call(a)), n;
            }
        }
    }, {
        "./_an-object": 53
    }],
    79: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-create"),
            e = a("./_property-desc"),
            g = a("./_set-to-string-tag"),
            h = {};
        a("./_hide")(h, a("./_wks")("iterator"), function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this
        });
        c.exports = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.prototype = d(h, {
                next: e(1, c)
            });
            g(a, b + " Iterator")
        }
    }, {
        "./_hide": 70,
        "./_object-create": 89,
        "./_property-desc": 101,
        "./_set-to-string-tag": 106,
        "./_wks": 121
    }],
    80: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_library"),
            e = a("./_export"),
            g = a("./_redefine"),
            h = a("./_hide"),
            f = a("./_has"),
            n = a("./_iterators"),
            k = a("./_iter-create"),
            m = a("./_set-to-string-tag"),
            p = a("./_object-gpo"),
            r = a("./_wks")("iterator"),
            l = !([].keys && "next" in [].keys()),
            q = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return this
            };
        c.exports = function(a, b, c, x, w, z, y) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            k(c, b, x);
            var t, u, v;
            x = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return !l && a in H ? H[a] : function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return new c(this, a)
                }
            };
            var D = b + " Iterator",
                C = "values" == w,
                G = !1,
                H = a.prototype,
                B = H[r] || H["@@iterator"] || w && H[w],
                J = B || x(w),
                K = w ? C ? x("entries") : J : void 0,
                E = "Array" == b ? H.entries || B : B;
            if (E && (v = p(E.call(new a)), v !== Object.prototype && (m(v, D, !0), d || f(v, r) || h(v, r, q))), C && B && "values" !== B.name && (G = !0, J = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return B.call(this)
                }), d && !y || !l && !G && H[r] || h(H, r, J), n[b] = J, n[D] = q, w)
                if (t = {
                        values: C ?
                            J : x("values"),
                        keys: z ? J : x("keys"),
                        entries: K
                    }, y)
                    for (u in t) u in H || g(H, u, t[u]);
                else e(e.P + e.F * (l || G), b, t);
            return t
        }
    }, {
        "./_export": 65,
        "./_has": 69,
        "./_hide": 70,
        "./_iter-create": 79,
        "./_iterators": 83,
        "./_library": 85,
        "./_object-gpo": 96,
        "./_redefine": 103,
        "./_set-to-string-tag": 106,
        "./_wks": 121
    }],
    81: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_wks")("iterator"),
            e = !1;
        try {
            var g = [7][d]();
            g["return"] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                e = !0
            };
            Array.from(g, function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                throw 2;
            })
        } catch (h) {}
        c.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!b && !e) return !1;
            var c = !1;
            try {
                b = [7];
                var f =
                    b[d]();
                f.next = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return {
                        done: c = !0
                    }
                };
                b[d] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return f
                };
                a(b)
            } catch (m) {}
            return c
        }
    }, {
        "./_wks": 121
    }],
    82: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                value: b,
                done: !!a
            }
        }
    }, {}],
    83: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = {}
    }, {}],
    84: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-keys"),
            e = a("./_to-iobject");
        c.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var c = e(a), g = d(c), h = g.length, m = 0; h > m;)
                if (c[a = g[m++]] === b) return a
        }
    }, {
        "./_object-keys": 98,
        "./_to-iobject": 114
    }],
    85: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = !0
    }, {}],
    86: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_uid")("meta"),
            e = a("./_is-object"),
            g = a("./_has"),
            h = a("./_object-dp").f,
            f = 0,
            n = Object.isExtensible || function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return !0
            },
            k = !a("./_fails")(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return n(Object.preventExtensions({}))
            }),
            m = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                h(a, d, {
                    value: {
                        i: "O" + ++f,
                        w: {}
                    }
                })
            },
            p = c.exports = {
                KEY: d,
                NEED: !1,
                fastKey: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (!e(a)) return "symbol" == typeof a ? a : ("string" == typeof a ? "S" : "P") + a;
                    if (!g(a, d)) {
                        if (!n(a)) return "F";
                        if (!b) return "E";
                        m(a)
                    }
                    return a[d].i
                },
                getWeak: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (!g(a, d)) {
                        if (!n(a)) return !0;
                        if (!b) return !1;
                        m(a)
                    }
                    return a[d].w
                },
                onFreeze: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return k &&
                        p.NEED && n(a) && !g(a, d) && m(a), a
                }
            }
    }, {
        "./_fails": 66,
        "./_has": 69,
        "./_is-object": 77,
        "./_object-dp": 90,
        "./_uid": 118
    }],
    87: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_global"),
            e = a("./_task").set,
            g = d.MutationObserver || d.WebKitMutationObserver,
            h = d.process,
            f = d.Promise,
            n = "process" == a("./_cof")(h);
        c.exports = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a, b, c = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c;
                for (n && (c = h.domain) && c.exit(); a;) {
                    var d = a.fn;
                    a = a.next;
                    try {
                        d()
                    } catch (x) {
                        throw a ? r() : b = void 0, x;
                    }
                }
                b = void 0;
                c && c.enter()
            };
            if (n) var r = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                h.nextTick(c)
            };
            else if (g) {
                var l = !0,
                    q = document.createTextNode("");
                (new g(c)).observe(q, {
                    characterData: !0
                });
                r = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    q.data = l = !l
                }
            } else if (f && f.resolve) {
                var t = f.resolve();
                r = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    t.then(c)
                }
            } else r = function() {
                e.call(d, c)
            };
            return function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                c = {
                    fn: c,
                    next: void 0
                };
                b && (b.next = c);
                a || (a = c, r());
                b = c
            }
        }
    }, {
        "./_cof": 56,
        "./_global": 68,
        "./_task": 111
    }],
    88: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-keys"),
            e = a("./_object-gops"),
            g = a("./_object-pie"),
            h = a("./_to-object"),
            f = a("./_iobject"),
            n = Object.assign;
        c.exports = !n || a("./_fails")(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = {},
                b = {},
                c = Symbol();
            return a[c] = 7,
                "abcdefghijklmnopqrst".split("").forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b[a] = a
                }), 7 != n({}, a)[c] || "abcdefghijklmnopqrst" != Object.keys(n({}, b)).join("")
        }) ? function(a, b) {
            for (var c = h(a), r = arguments.length, l = 1, q = e.f, t = g.f; r > l;)
                for (var k, m = f(arguments[l++]), n = q ? d(m).concat(q(m)) : d(m), w = n.length, z = 0; w > z;) t.call(m, k = n[z++]) && (c[k] = m[k]);
            return c
        } : n
    }, {
        "./_fails": 66,
        "./_iobject": 74,
        "./_object-gops": 95,
        "./_object-keys": 98,
        "./_object-pie": 99,
        "./_to-object": 116
    }],
    89: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_an-object"),
            e = a("./_object-dps"),
            g =
            a("./_enum-bug-keys"),
            h = a("./_shared-key")("IE_PROTO"),
            f = function() {},
            n = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = a("./_dom-create")("iframe");
                var c = g.length;
                b.style.display = "none";
                a("./_html").appendChild(b);
                b.src = "javascript:";
                b = b.contentWindow.document;
                b.open();
                b.write("<script>document.F=Object\x3c/script>");
                b.close();
                for (n = b.F; c--;) delete n.prototype[g[c]];
                return n()
            };
        c.exports = Object.create || function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c;
            return null !== a ? (f.prototype = d(a), c = new f, f.prototype = null, c[h] = a) : c = n(), void 0 === b ? c : e(c, b)
        }
    }, {
        "./_an-object": 53,
        "./_dom-create": 62,
        "./_enum-bug-keys": 63,
        "./_html": 71,
        "./_object-dps": 91,
        "./_shared-key": 107
    }],
    90: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_an-object"),
            e = a("./_ie8-dom-define"),
            g = a("./_to-primitive"),
            h = Object.defineProperty;
        b.f = a("./_descriptors") ? Object.defineProperty : function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (d(a), b = g(b, !0), d(c), e) try {
                return h(a, b, c)
            } catch (m) {}
            if ("get" in c || "set" in c) throw TypeError("Accessors not supported!");
            return "value" in c && (a[b] = c.value), a
        }
    }, {
        "./_an-object": 53,
        "./_descriptors": 61,
        "./_ie8-dom-define": 72,
        "./_to-primitive": 117
    }],
    91: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-dp"),
            e = a("./_an-object"),
            g = a("./_object-keys");
        c.exports = a("./_descriptors") ? Object.defineProperties : function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            e(a);
            for (var c, f = g(b), h = f.length, p = 0; h > p;) d.f(a, c = f[p++], b[c]);
            return a
        }
    }, {
        "./_an-object": 53,
        "./_descriptors": 61,
        "./_object-dp": 90,
        "./_object-keys": 98
    }],
    92: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-pie"),
            e = a("./_property-desc"),
            g = a("./_to-iobject"),
            h = a("./_to-primitive"),
            f = a("./_has"),
            n = a("./_ie8-dom-define"),
            k = Object.getOwnPropertyDescriptor;
        b.f = a("./_descriptors") ?
            k : function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (a = g(a), b = h(b, !0), n) try {
                    return k(a, b)
                } catch (r) {}
                if (f(a, b)) return e(!d.f.call(a, b), a[b])
            }
    }, {
        "./_descriptors": 61,
        "./_has": 69,
        "./_ie8-dom-define": 72,
        "./_object-pie": 99,
        "./_property-desc": 101,
        "./_to-iobject": 114,
        "./_to-primitive": 117
    }],
    93: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_to-iobject"),
            e = a("./_object-gopn").f,
            g = {}.toString,
            h = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
        c.exports.f = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (h && "[object Window]" == g.call(a)) try {
                var b =
                    e(a)
            } catch (k) {
                b = h.slice()
            } else b = e(d(a));
            return b
        }
    }, {
        "./_object-gopn": 94,
        "./_to-iobject": 114
    }],
    94: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-keys-internal"),
            e = a("./_enum-bug-keys").concat("length", "prototype");
        b.f = Object.getOwnPropertyNames || function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d(a, e)
        }
    }, {
        "./_enum-bug-keys": 63,
        "./_object-keys-internal": 97
    }],
    95: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.f = Object.getOwnPropertySymbols
    }, {}],
    96: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_has"),
            e = a("./_to-object"),
            g = a("./_shared-key")("IE_PROTO"),
            h = Object.prototype;
        c.exports = Object.getPrototypeOf ||
            function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a = e(a), d(a, g) ? a[g] : "function" == typeof a.constructor && a instanceof a.constructor ? a.constructor.prototype : a instanceof Object ? h : null
            }
    }, {
        "./_has": 69,
        "./_shared-key": 107,
        "./_to-object": 116
    }],
    97: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_has"),
            e = a("./_to-iobject"),
            g = a("./_array-includes")(!1),
            h = a("./_shared-key")("IE_PROTO");
        c.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c;
            a = e(a);
            var f = 0,
                p = [];
            for (c in a) c != h && d(a, c) && p.push(c);
            for (; b.length > f;) d(a, c = b[f++]) && (~g(p, c) || p.push(c));
            return p
        }
    }, {
        "./_array-includes": 54,
        "./_has": 69,
        "./_shared-key": 107,
        "./_to-iobject": 114
    }],
    98: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-keys-internal"),
            e = a("./_enum-bug-keys");
        c.exports = Object.keys || function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d(a, e)
        }
    }, {
        "./_enum-bug-keys": 63,
        "./_object-keys-internal": 97
    }],
    99: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.f = {}.propertyIsEnumerable
    }, {}],
    100: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_export"),
            e = a("./_core"),
            g = a("./_fails");
        c.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = (e.Object || {})[a] || Object[a],
                f = {};
            f[a] = b(c);
            d(d.S + d.F * g(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                c(1)
            }), "Object", f)
        }
    }, {
        "./_core": 57,
        "./_export": 65,
        "./_fails": 66
    }],
    101: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                enumerable: !(1 & a),
                configurable: !(2 & a),
                writable: !(4 & a),
                value: b
            }
        }
    }, {}],
    102: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_hide");
        c.exports = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var e in b) c && a[e] ? a[e] = b[e] : d(a, e, b[e]);
            return a
        }
    }, {
        "./_hide": 70
    }],
    103: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = a("./_hide")
    }, {
        "./_hide": 70
    }],
    104: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_is-object"),
            e = a("./_an-object"),
            g = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (e(a), !d(b) && null !== b) throw TypeError(b + ": can't set as prototype!");
            };
        c.exports = {
            set: Object.setPrototypeOf ||
                ("__proto__" in {} ? function(b, c, d) {
                    try {
                        d = a("./_ctx")(Function.call, a("./_object-gopd").f(Object.prototype, "__proto__").set, 2), d(b, []), c = !(b instanceof Array)
                    } catch (k) {
                        c = !0
                    }
                    return function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return g(a, b), c ? a.__proto__ = b : d(a, b), a
                    }
                }({}, !1) : void 0),
            check: g
        }
    }, {
        "./_an-object": 53,
        "./_ctx": 59,
        "./_is-object": 77,
        "./_object-gopd": 92
    }],
    105: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_global"),
            e = a("./_core"),
            g = a("./_object-dp"),
            h = a("./_descriptors"),
            f = a("./_wks")("species");
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = "function" == typeof e[a] ? e[a] :
                d[a];
            h && a && !a[f] && g.f(a, f, {
                configurable: !0,
                get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return this
                }
            })
        }
    }, {
        "./_core": 57,
        "./_descriptors": 61,
        "./_global": 68,
        "./_object-dp": 90,
        "./_wks": 121
    }],
    106: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-dp").f,
            e = a("./_has"),
            g = a("./_wks")("toStringTag");
        c.exports = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a && !e(a = c ? a : a.prototype, g) && d(a, g, {
                configurable: !0,
                value: b
            })
        }
    }, {
        "./_has": 69,
        "./_object-dp": 90,
        "./_wks": 121
    }],
    107: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_shared")("keys"),
            e = a("./_uid");
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d[a] || (d[a] = e(a))
        }
    }, {
        "./_shared": 108,
        "./_uid": 118
    }],
    108: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a = a("./_global");
        var d = a["__core-js_shared__"] || (a["__core-js_shared__"] = {});
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d[a] || (d[a] = {})
        }
    }, {
        "./_global": 68
    }],
    109: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_an-object"),
            e = a("./_a-function"),
            g = a("./_wks")("species");
        c.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c;
            a = d(a).constructor;
            return void 0 === a || void 0 == (c = d(a)[g]) ? b : e(c)
        }
    }, {
        "./_a-function": 50,
        "./_an-object": 53,
        "./_wks": 121
    }],
    110: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_to-integer"),
            e = a("./_defined");
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(b,
                c) {
                var f, g;
                b = String(e(b));
                c = d(c);
                var h = b.length;
                return 0 > c || c >= h ? a ? "" : void 0 : (f = b.charCodeAt(c), 55296 > f || 56319 < f || c + 1 === h || 56320 > (g = b.charCodeAt(c + 1)) || 57343 < g ? a ? b.charAt(c) : f : a ? b.slice(c, c + 2) : (f - 55296 << 10) + (g - 56320) + 65536)
            }
        }
    }, {
        "./_defined": 60,
        "./_to-integer": 113
    }],
    111: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d, e, g, h = a("./_ctx"),
            f = a("./_invoke"),
            n = a("./_html"),
            k = a("./_dom-create"),
            m = a("./_global"),
            p = m.process;
        b = m.setImmediate;
        var r = m.clearImmediate,
            l = m.MessageChannel,
            q = 0,
            t = {},
            u = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = +this;
                if (t.hasOwnProperty(a)) {
                    var b =
                        t[a];
                    delete t[a];
                    b()
                }
            },
            v = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                u.call(a.data)
            };
        b && r || (b = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b = [], c = 1; arguments.length > c;) b.push(arguments[c++]);
            return t[++q] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                f("function" == typeof a ? a : Function(a), b)
            }, d(q), q
        }, r = function(a) {
            delete t[a]
        }, "process" == a("./_cof")(p) ? d = function(a) {
            p.nextTick(h(u, a, 1))
        } : l ? (e = new l, g = e.port2, e.port1.onmessage = v, d = h(g.postMessage, g, 1)) : m.addEventListener && "function" == typeof postMessage && !m.importScripts ? (d = function(a) {
            m.postMessage(a + "", "*")
        }, m.addEventListener("message", v, !1)) : d = "onreadystatechange" in k("script") ? function(a) {
            n.appendChild(k("script")).onreadystatechange = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                n.removeChild(this);
                u.call(a)
            }
        } : function(a) {
            setTimeout(h(u, a, 1), 0)
        });
        c.exports = {
            set: b,
            clear: r
        }
    }, {
        "./_cof": 56,
        "./_ctx": 59,
        "./_dom-create": 62,
        "./_global": 68,
        "./_html": 71,
        "./_invoke": 73
    }],
    112: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_to-integer"),
            e = Math.max,
            g = Math.min;
        c.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a = d(a), 0 > a ? e(a + b, 0) : g(a, b)
        }
    }, {
        "./_to-integer": 113
    }],
    113: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = Math.ceil,
            e = Math.floor;
        c.exports =
            function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return isNaN(a = +a) ? 0 : (0 < a ? e : d)(a)
            }
    }, {}],
    114: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_iobject"),
            e = a("./_defined");
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d(e(a))
        }
    }, {
        "./_defined": 60,
        "./_iobject": 74
    }],
    115: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_to-integer"),
            e = Math.min;
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return 0 < a ? e(d(a), 9007199254740991) : 0
        }
    }, {
        "./_to-integer": 113
    }],
    116: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_defined");
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return Object(d(a))
        }
    }, {
        "./_defined": 60
    }],
    117: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_is-object");
        c.exports = function(a,
            b) {
            if (!d(a)) return a;
            var c, e;
            if (b && "function" == typeof(c = a.toString) && !d(e = c.call(a)) || "function" == typeof(c = a.valueOf) && !d(e = c.call(a)) || !b && "function" == typeof(c = a.toString) && !d(e = c.call(a))) return e;
            throw TypeError("Can't convert object to primitive value");
        }
    }, {
        "./_is-object": 77
    }],
    118: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = 0,
            e = Math.random();
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "Symbol(".concat(void 0 === a ? "" : a, ")_", (++d + e).toString(36))
        }
    }, {}],
    119: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_global"),
            e = a("./_core"),
            g = a("./_library"),
            h = a("./_wks-ext"),
            f = a("./_object-dp").f;
        c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = e.Symbol || (e.Symbol = g ? {} : d.Symbol || {});
            "_" == a.charAt(0) || a in b || f(b, a, {
                value: h.f(a)
            })
        }
    }, {
        "./_core": 57,
        "./_global": 68,
        "./_library": 85,
        "./_object-dp": 90,
        "./_wks-ext": 120
    }],
    120: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.f = a("./_wks")
    }, {
        "./_wks": 121
    }],
    121: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_shared")("wks"),
            e = a("./_uid"),
            g = a("./_global").Symbol,
            h = "function" == typeof g;
        (c.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d[a] || (d[a] = h && g[a] || (h ? g : e)("Symbol." + a))
        }).store = d
    }, {
        "./_global": 68,
        "./_shared": 108,
        "./_uid": 118
    }],
    122: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_classof"),
            e = a("./_wks")("iterator"),
            g = a("./_iterators");
        c.exports = a("./_core").getIteratorMethod = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (void 0 != a) return a[e] || a["@@iterator"] || g[d(a)]
        }
    }, {
        "./_classof": 55,
        "./_core": 57,
        "./_iterators": 83,
        "./_wks": 121
    }],
    123: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_an-object"),
            e = a("./core.get-iterator-method");
        c.exports = a("./_core").getIterator = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = e(a);
            if ("function" != typeof b) throw TypeError(a + " is not iterable!");
            return d(b.call(a))
        }
    }, {
        "./_an-object": 53,
        "./_core": 57,
        "./core.get-iterator-method": 122
    }],
    124: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_classof"),
            e = a("./_wks")("iterator"),
            g = a("./_iterators");
        c.exports = a("./_core").isIterable = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = Object(a);
            return void 0 !== a[e] || "@@iterator" in a || g.hasOwnProperty(d(a))
        }
    }, {
        "./_classof": 55,
        "./_core": 57,
        "./_iterators": 83,
        "./_wks": 121
    }],
    125: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_ctx");
        c = a("./_export");
        var e = a("./_to-object"),
            g = a("./_iter-call"),
            h = a("./_is-array-iter"),
            f = a("./_to-length"),
            n = a("./_create-property"),
            k = a("./core.get-iterator-method");
        c(c.S + c.F * !a("./_iter-detect")(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            Array.from(a)
        }), "Array", {
            from: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = e(a);
                var c = "function" == typeof this ? this : Array;
                var l = arguments.length;
                var q = 1 < l ? arguments[1] : void 0,
                    t = void 0 !== q,
                    u = 0,
                    m = k(b);
                if (t && (q = d(q, 2 < l ? arguments[2] : void 0, 2)), void 0 == m || c == Array && h(m))
                    for (l = f(b.length), c = new c(l); l > u; u++) n(c, u, t ? q(b[u], u) : b[u]);
                else
                    for (b = m.call(b), c = new c; !(l = b.next()).done; u++) n(c, u, t ? g(b, q, [l.value, u], !0) : l.value);
                return c.length = u, c
            }
        })
    }, {
        "./_create-property": 58,
        "./_ctx": 59,
        "./_export": 65,
        "./_is-array-iter": 75,
        "./_iter-call": 78,
        "./_iter-detect": 81,
        "./_to-length": 115,
        "./_to-object": 116,
        "./core.get-iterator-method": 122
    }],
    126: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b = a("./_add-to-unscopables");
        var d = a("./_iter-step"),
            e = a("./_iterators"),
            g = a("./_to-iobject");
        c.exports = a("./_iter-define")(Array, "Array", function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            this._t = g(a);
            this._i = 0;
            this._k = b
        }, function() {
            var a = this._t,
                b = this._k,
                c = this._i++;
            return !a || c >= a.length ? (this._t = void 0, d(1)) : "keys" == b ? d(0, c) : "values" == b ? d(0, a[c]) : d(0, [c, a[c]])
        }, "values");
        e.Arguments =
            e.Array;
        b("keys");
        b("values");
        b("entries")
    }, {
        "./_add-to-unscopables": 51,
        "./_iter-define": 80,
        "./_iter-step": 82,
        "./_iterators": 83,
        "./_to-iobject": 114
    }],
    127: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c = a("./_export");
        c(c.S + c.F, "Object", {
            assign: a("./_object-assign")
        })
    }, {
        "./_export": 65,
        "./_object-assign": 88
    }],
    128: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c = a("./_export");
        c(c.S, "Object", {
            create: a("./_object-create")
        })
    }, {
        "./_export": 65,
        "./_object-create": 89
    }],
    129: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            c = a("./_export");
            c(c.S + c.F * !a("./_descriptors"), "Object", {
                defineProperty: a("./_object-dp").f
            })
        },
        {
            "./_descriptors": 61,
            "./_export": 65,
            "./_object-dp": 90
        }
    ],
    130: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_to-object"),
            e = a("./_object-gpo");
        a("./_object-sap")("getPrototypeOf", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return e(d(a))
            }
        })
    }, {
        "./_object-gpo": 96,
        "./_object-sap": 100,
        "./_to-object": 116
    }],
    131: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_to-object"),
            e = a("./_object-keys");
        a("./_object-sap")("keys", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return e(d(a))
            }
        })
    }, {
        "./_object-keys": 98,
        "./_object-sap": 100,
        "./_to-object": 116
    }],
    132: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c = a("./_export");
        c(c.S, "Object", {
            setPrototypeOf: a("./_set-proto").set
        })
    }, {
        "./_export": 65,
        "./_set-proto": 104
    }],
    133: [function(a, c, b) {}, {}],
    134: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d, e;
        c = a("./_library");
        var g = a("./_global"),
            h = a("./_ctx"),
            f = a("./_classof");
        b = a("./_export");
        var n = a("./_is-object"),
            k = a("./_a-function"),
            m = a("./_an-instance"),
            p = a("./_for-of"),
            r = a("./_species-constructor"),
            l = a("./_task").set,
            q = a("./_microtask")(),
            t = g.TypeError,
            u = g.process,
            v = g.Promise;
        u = g.process;
        var x = "process" == f(u),
            w = function() {};
        f = !! function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            try {
                var b =
                    v.resolve(1),
                    c = (b.constructor = {})[a("./_wks")("species")] = function(a) {
                        a(w, w)
                    };
                return (x || "function" == typeof PromiseRejectionEvent) && b.then(w) instanceof c
            } catch (O) {}
        }();
        var z = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b;
                return !(!n(a) || "function" != typeof(b = a.then)) && b
            },
            y = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return v === a || v === v && a === J ? new A(a) : new e(a)
            },
            A = e = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b, c;
                this.promise = new a(function(a, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (void 0 !== b || void 0 !== c) throw t("Bad Promise constructor");
                    b = a;
                    c = d
                });
                this.resolve = k(b);
                this.reject = k(c)
            },
            F = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                try {
                    a()
                } catch (E) {
                    return {
                        error: E
                    }
                }
            },
            I = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (!a._n) {
                    a._n = !0;
                    var c = a._c;
                    q(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (var d = a._v, e = 1 == a._s, f = 0; c.length > f;) {
                            var g = void 0,
                                l = void 0,
                                r = c[f++],
                                q = e ? r.ok : r.fail,
                                u = r.resolve,
                                h = r.reject,
                                k = r.domain;
                            try {
                                q ? (e || (2 == a._h && G(a), a._h = 1), !0 === q ? l = d : (k && k.enter(), l = q(d), k && k.exit()), l === r.promise ? h(t("Promise-chain cycle")) : (g = z(l)) ? g.call(l, u, h) : u(l)) : h(d)
                            } catch (R) {
                                h(R)
                            }
                        }
                        a._c = [];
                        a._n = !1;
                        b && !a._h && D(a)
                    })
                }
            },
            D = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                l.call(g, function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b, c, d, e = a._v;
                    if (C(a) && (b = F(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            x ? u.emit("unhandledRejection", e, a) : (c = g.onunhandledrejection) ?
                                c({
                                    promise: a,
                                    reason: e
                                }) : (d = g.console) && d.error && d.error("Unhandled promise rejection", e)
                        }), a._h = x || C(a) ? 2 : 1), a._a = void 0, b) throw b.error;
                })
            },
            C = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (1 == a._h) return !1;
                var b;
                a = a._a || a._c;
                for (var c = 0; a.length > c;)
                    if (b = a[c++], b.fail || !C(b.promise)) return !1;
                return !0
            },
            G = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                l.call(g, function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b;
                    x ? u.emit("rejectionHandled", a) : (b = g.onrejectionhandled) && b({
                        promise: a,
                        reason: a._v
                    })
                })
            },
            H = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = this;
                b._d || (b._d = !0, b = b._w || b, b._v = a, b._s = 2, b._a || (b._a = b._c.slice()), I(b, !0))
            },
            B = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b,
                    c = this;
                if (!c._d) {
                    c._d = !0;
                    c = c._w || c;
                    try {
                        if (c === a) throw t("Promise can't be resolved itself");
                        (b = z(a)) ? q(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var d = {
                                _w: c,
                                _d: !1
                            };
                            try {
                                b.call(a, h(B, d, 1), h(H, d, 1))
                            } catch (P) {
                                H.call(d, P)
                            }
                        }): (c._v = a, c._s = 1, I(c, !1))
                    } catch (S) {
                        H.call({
                            _w: c,
                            _d: !1
                        }, S)
                    }
                }
            };
        f || (v = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            m(this, v, "Promise", "_h");
            k(a);
            d.call(this);
            try {
                a(h(B, this, 1), h(H, this, 1))
            } catch (E) {
                H.call(this, E)
            }
        }, d = function(a) {
            this._c = [];
            this._a = void 0;
            this._s = 0;
            this._d = !1;
            this._v = void 0;
            this._h = 0;
            this._n = !1
        }, d.prototype = a("./_redefine-all")(v.prototype, {
            then: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = y(r(this, v));
                return c.ok = "function" != typeof a || a, c.fail = "function" == typeof b && b, c.domain = x ? u.domain : void 0, this._c.push(c), this._a && this._a.push(c), this._s && I(this, !1), c.promise
            },
            "catch": function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return this.then(void 0, a)
            }
        }), A = function() {
            var a = new d;
            this.promise = a;
            this.resolve = h(B, a, 1);
            this.reject = h(H, a, 1)
        });
        b(b.G + b.W + b.F * !f, {
            Promise: v
        });
        a("./_set-to-string-tag")(v, "Promise");
        a("./_set-species")("Promise");
        var J = a("./_core").Promise;
        b(b.S + b.F * !f, "Promise", {
            reject: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b =
                    y(this),
                    c = b.reject;
                return c(a), b.promise
            }
        });
        b(b.S + b.F * (c || !f), "Promise", {
            resolve: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b;
                if (b = a instanceof v) b = a.constructor, b = b === this || b === v && this === J;
                if (b) return a;
                b = y(this);
                var c = b.resolve;
                return c(a), b.promise
            }
        });
        b(b.S + b.F * !(f && a("./_iter-detect")(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            v.all(a)["catch"](w)
        })), "Promise", {
            all: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = this,
                    c = y(b),
                    d = c.resolve,
                    e = c.reject,
                    f = F(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var c = [],
                            f = 0,
                            l = 1;
                        p(a, !1, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var g = f++,
                                r = !1;
                            c.push(void 0);
                            l++;
                            b.resolve(a).then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                r || (r = !0, c[g] = a, --l ||
                                    d(c))
                            }, e)
                        });
                        --l || d(c)
                    });
                return f && e(f.error), c.promise
            },
            race: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = this,
                    c = y(b),
                    d = c.reject,
                    e = F(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        p(a, !1, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b.resolve(a).then(c.resolve, d)
                        })
                    });
                return e && d(e.error), c.promise
            }
        })
    }, {
        "./_a-function": 50,
        "./_an-instance": 52,
        "./_classof": 55,
        "./_core": 57,
        "./_ctx": 59,
        "./_export": 65,
        "./_for-of": 67,
        "./_global": 68,
        "./_is-object": 77,
        "./_iter-detect": 81,
        "./_library": 85,
        "./_microtask": 87,
        "./_redefine-all": 102,
        "./_set-species": 105,
        "./_set-to-string-tag": 106,
        "./_species-constructor": 109,
        "./_task": 111,
        "./_wks": 121
    }],
    135: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_string-at")(!0);
        a("./_iter-define")(String, "String", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            this._t = String(a);
            this._i = 0
        }, function() {
            var a, b = this._t,
                c = this._i;
            return c >= b.length ? {
                value: void 0,
                done: !0
            } : (a = d(b, c), this._i += a.length, {
                value: a,
                done: !1
            })
        })
    }, {
        "./_iter-define": 80,
        "./_string-at": 110
    }],
    136: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c = a("./_global");
        var d = a("./_has"),
            e = a("./_descriptors");
        b = a("./_export");
        var g = a("./_redefine"),
            h = a("./_meta").KEY,
            f = a("./_fails"),
            n = a("./_shared"),
            k = a("./_set-to-string-tag"),
            m = a("./_uid"),
            p = a("./_wks"),
            r = a("./_wks-ext"),
            l = a("./_wks-define"),
            q = a("./_keyof"),
            t = a("./_enum-keys"),
            u = a("./_is-array"),
            v = a("./_an-object"),
            x = a("./_to-iobject"),
            w = a("./_to-primitive"),
            z = a("./_property-desc"),
            y = a("./_object-create"),
            A = a("./_object-gopn-ext"),
            F = a("./_object-gopd"),
            I = a("./_object-dp"),
            D = a("./_object-keys"),
            C = F.f,
            G = I.f,
            H = A.f,
            B = c.Symbol,
            J = c.JSON,
            K = J && J.stringify,
            E = p("_hidden"),
            O = p("toPrimitive"),
            S = {}.propertyIsEnumerable,
            P = n("symbol-registry"),
            N = n("symbols"),
            L = n("op-symbols"),
            M = Object.prototype;
        n = "function" == typeof B;
        var Q = c.QObject,
            T = !Q || !Q.prototype || !Q.prototype.findChild,
            U = e && f(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return 7 != y(G({}, "a", {
                    get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return G(this, "a", {
                            value: 7
                        }).a
                    }
                })).a
            }) ? function(a, b, c) {
                var d = C(M, b);
                d && delete M[b];
                G(a, b, c);
                d && a !== M && G(M, b, d)
            } : G,
            W = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = N[a] = y(B.prototype);
                return b._k = a, b
            },
            V = n && "symbol" == typeof B.iterator ? function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "symbol" == typeof a
            } : function(a) {
                return a instanceof B
            },
            R = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a === M && R(L, b, c), v(a), b = w(b, !0), v(c), d(N, b) ? (c.enumerable ? (d(a,
                    E) && a[E][b] && (a[E][b] = !1), c = y(c, {
                    enumerable: z(0, !1)
                })) : (d(a, E) || G(a, E, z(1, {})), a[E][b] = !0), U(a, b, c)) : G(a, b, c)
            },
            X = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                v(a);
                for (var c, d = t(b = x(b)), e = 0, f = d.length; f > e;) R(a, c = d[e++], b[c]);
                return a
            },
            Y = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = S.call(this, a = w(a, !0));
                return !(this === M && d(N, a) && !d(L, a)) && (!(b || !d(this, a) || !d(N, a) || d(this, E) && this[E][a]) || b)
            };
        Q = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a = x(a), b = w(b, !0), a !== M || !d(N, b) || d(L, b)) {
                var c = C(a, b);
                return !c || !d(N, b) || d(a, E) && a[E][b] || (c.enumerable = !0), c
            }
        };
        var Z = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b;
                a = H(x(a));
                for (var c = [], e = 0; a.length > e;) d(N, b = a[e++]) || b == E || b == h || c.push(b);
                return c
            },
            aa = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b, c = a === M;
                a = H(c ? L : x(a));
                for (var e = [], f = 0; a.length > f;) !d(N, b = a[f++]) || c && !d(M, b) || e.push(N[b]);
                return e
            };
        n || (B = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (this instanceof B) throw TypeError("Symbol is not a constructor!");
            var a = m(0 < arguments.length ? arguments[0] : void 0),
                b = function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this === M && b.call(L, c);
                    d(this, E) && d(this[E], a) && (this[E][a] = !1);
                    U(this, a, z(1, c))
                };
            return e && T && U(M, a, {
                configurable: !0,
                set: b
            }), W(a)
        }, g(B.prototype, "toString",
            function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return this._k
            }), F.f = Q, I.f = R, a("./_object-gopn").f = A.f = Z, a("./_object-pie").f = Y, a("./_object-gops").f = aa, e && !a("./_library") && g(M, "propertyIsEnumerable", Y, !0), r.f = function(a) {
            return W(p(a))
        });
        b(b.G + b.W + b.F * !n, {
            Symbol: B
        });
        g = "hasInstance isConcatSpreadable iterator match replace search species split toPrimitive toStringTag unscopables".split(" ");
        for (r = 0; g.length > r;) p(g[r++]);
        g = D(p.store);
        for (r = 0; g.length > r;) l(g[r++]);
        b(b.S + b.F * !n, "Symbol", {
            "for": function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return d(P, a += "") ? P[a] : P[a] = B(a)
            },
            keyFor: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (V(a)) return q(P, a);
                throw TypeError(a + " is not a symbol!");
            },
            useSetter: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                T = !0
            },
            useSimple: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                T = !1
            }
        });
        b(b.S + b.F * !n, "Object", {
            create: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return void 0 === b ? y(a) : X(y(a), b)
            },
            defineProperty: R,
            defineProperties: X,
            getOwnPropertyDescriptor: Q,
            getOwnPropertyNames: Z,
            getOwnPropertySymbols: aa
        });
        J && b(b.S + b.F * (!n || f(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = B();
            return "[null]" != K([a]) || "{}" != K({
                a: a
            }) || "{}" != K(Object(a))
        })), "JSON", {
            stringify: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (void 0 !== a && !V(a)) {
                    for (var b, c, d = [a],
                            e = 1; arguments.length > e;) d.push(arguments[e++]);
                    return b = d[1], "function" == typeof b && (c = b), !c && u(b) || (b = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (c && (b = c.call(this, a, b)), !V(b)) return b
                    }), d[1] = b, K.apply(J, d)
                }
            }
        });
        B.prototype[O] || a("./_hide")(B.prototype, O, B.prototype.valueOf);
        k(B, "Symbol");
        k(Math, "Math", !0);
        k(c.JSON, "JSON", !0)
    }, {
        "./_an-object": 53,
        "./_descriptors": 61,
        "./_enum-keys": 64,
        "./_export": 65,
        "./_fails": 66,
        "./_global": 68,
        "./_has": 69,
        "./_hide": 70,
        "./_is-array": 76,
        "./_keyof": 84,
        "./_library": 85,
        "./_meta": 86,
        "./_object-create": 89,
        "./_object-dp": 90,
        "./_object-gopd": 92,
        "./_object-gopn": 94,
        "./_object-gopn-ext": 93,
        "./_object-gops": 95,
        "./_object-keys": 98,
        "./_object-pie": 99,
        "./_property-desc": 101,
        "./_redefine": 103,
        "./_set-to-string-tag": 106,
        "./_shared": 108,
        "./_to-iobject": 114,
        "./_to-primitive": 117,
        "./_uid": 118,
        "./_wks": 121,
        "./_wks-define": 119,
        "./_wks-ext": 120
    }],
    137: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("./_wks-define")("asyncIterator")
    }, {
        "./_wks-define": 119
    }],
    138: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("./_wks-define")("observable")
    }, {
        "./_wks-define": 119
    }],
    139: [function(a,
        c, b) {
        a("./es6.array.iterator");
        c = a("./_global");
        b = a("./_hide");
        var d = a("./_iterators");
        a = a("./_wks")("toStringTag");
        for (var e = ["NodeList", "DOMTokenList", "MediaList", "StyleSheetList", "CSSRuleList"], g = 0; 5 > g; g++) {
            var h = e[g],
                f = c[h];
            (f = f && f.prototype) && !f[a] && b(f, a, h);
            d[h] = d.Array
        }
    }, {
        "./_global": 68,
        "./_hide": 70,
        "./_iterators": 83,
        "./_wks": 121,
        "./es6.array.iterator": 126
    }],
    140: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            throw Error("setTimeout has not been defined");
        }

        function e() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            throw Error("clearTimeout has not been defined");
        }

        function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (p === setTimeout) return setTimeout(a, 0);
            if ((p === d || !p) && setTimeout) return p = setTimeout, setTimeout(a, 0);
            try {
                return p(a, 0)
            } catch (x) {
                try {
                    return p.call(null, a, 0)
                } catch (w) {
                    return p.call(this, a, 0)
                }
            }
        }

        function h(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (r === clearTimeout) return clearTimeout(a);
            if ((r === e || !r) && clearTimeout) return r = clearTimeout, clearTimeout(a);
            try {
                return r(a)
            } catch (x) {
                try {
                    return r.call(null, a)
                } catch (w) {
                    return r.call(this, a)
                }
            }
        }

        function f() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            t && l && (t = !1, l.length ? q = l.concat(q) : u = -1, q.length && n())
        }

        function n() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!t) {
                var a =
                    g(f);
                t = !0;
                for (var b = q.length; b;) {
                    l = q;
                    for (q = []; ++u < b;) l && l[u].run();
                    u = -1;
                    b = q.length
                }
                l = null;
                t = !1;
                h(a)
            }
        }

        function k(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            this.fun = a;
            this.array = b
        }

        function m() {}
        a = c.exports = {};
        try {
            var p = "function" == typeof setTimeout ? setTimeout : d
        } catch (v) {
            p = d
        }
        try {
            var r = "function" == typeof clearTimeout ? clearTimeout : e
        } catch (v) {
            r = e
        }!0;
        var l, q = [],
            t = !1,
            u = -1;
        a.nextTick = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = Array(arguments.length - 1);
            if (1 < arguments.length)
                for (var c = 1; c < arguments.length; c++) b[c - 1] = arguments[c];
            q.push(new k(a, b));
            1 !== q.length || t || g(n)
        };
        k.prototype.run = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            this.fun.apply(null, this.array)
        };
        a.title = "browser";
        a.browser = !0;
        a.env = {};
        a.argv = [];
        a.version = "";
        a.versions = {};
        a.on = m;
        a.addListener = m;
        a.once = m;
        a.off = m;
        a.removeListener = m;
        a.removeAllListeners = m;
        a.emit = m;
        a.binding = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            throw Error("process.binding is not supported");
        };
        a.cwd = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "/"
        };
        a.chdir = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            throw Error("process.chdir is not supported");
        };
        a.umask = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return 0
        }
    }, {}],
    141: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.exports = a("./lib/effects")
    }, {
        "./lib/effects": 142
    }],
    142: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        b.select = b.cancel = b.join = b.fork = b.cps = b.apply = b.call = b.race = b.put = b.take = void 0;
        a = a("./internal/io");
        b.take = a.take;
        b.put = a.put;
        b.race = a.race;
        b.call = a.call;
        b.apply = a.apply;
        b.cps = a.cps;
        b.fork = a.fork;
        b.join = a.join;
        b.cancel = a.cancel;
        b.select = a.select
    }, {
        "./internal/io": 143
    }],
    143: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return b in a ? Object.defineProperty(a, b, {
                value: c,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : a[b] = c, a
        }

        function e(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            (0,
                h.check)(a, h.is.notUndef, f);
            var c = null;
            h.is.array(a) ? (a = g(a, 2), c = a[0], a = a[1]) : a.fn && (c = a.context, a = a.fn);
            return (0, h.check)(a, h.is.func, f), {
                context: c,
                fn: a,
                args: b
            }
        }
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        b.asEffect = b.SELECT_ARG_ERROR = b.INVALID_PATTERN = b.CANCEL_ARG_ERROR = b.JOIN_ARG_ERROR = b.FORK_ARG_ERROR = b.CALL_FUNCTION_ARG_ERROR = void 0;
        var g = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (Array.isArray(a)) return a;
                if (Symbol.iterator in Object(a)) {
                    var c = [],
                        d = !0,
                        e = !1,
                        f = void 0;
                    try {
                        for (var l, g = a[Symbol.iterator](); !(d =
                                (l = g.next()).done) && (c.push(l.value), !b || c.length !== b); d = !0);
                    } catch (E) {
                        e = !0, f = E
                    } finally {
                        try {
                            !d && g["return"] && g["return"]()
                        } finally {
                            if (e) throw f;
                        }
                    }
                    return c
                }
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
            }
        }();
        b.matcher = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return ("*" === a ? F.wildcard : h.is.array(a) ? F.array : h.is.func(a) ? F.predicate : F["default"])(a)
        };
        b.take = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (0 < arguments.length && h.is.undef(a)) throw Error(m);
            return A(l, h.is.undef(a) ? "*" : a)
        };
        b.put = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return A(q, a)
        };
        b.race = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return A(t,
                a)
        };
        b.call = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b = arguments.length, c = Array(1 < b ? b - 1 : 0), d = 1; d < b; d++) c[d - 1] = arguments[d];
            return A(u, e(a, c))
        };
        b.apply = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return A(u, e({
                context: a,
                fn: b
            }, 2 >= arguments.length || void 0 === arguments[2] ? [] : arguments[2]))
        };
        b.cps = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b = arguments.length, c = Array(1 < b ? b - 1 : 0), d = 1; d < b; d++) c[d - 1] = arguments[d];
            return A(v, e(a, c))
        };
        b.fork = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b = arguments.length, c = Array(1 < b ? b - 1 : 0), d = 1; d < b; d++) c[d - 1] = arguments[d];
            return A(x, e(a, c))
        };
        b.join = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a[h.TASK]) throw Error(n);
            return A(w, a)
        };
        b.cancel = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a[h.TASK]) throw Error(k);
            return A(z, a)
        };
        b.select = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b = arguments.length, c = Array(1 < b ? b - 1 : 0), d = 1; d < b; d++) c[d - 1] = arguments[d];
            return 0 === arguments.length ? a = h.ident : (0, h.check)(a, h.is.func, p), A(y, {
                selector: a,
                args: c
            })
        };
        var h = a("./utils"),
            f = b.CALL_FUNCTION_ARG_ERROR = "call/cps/fork first argument must be a function, an array [context, function] or an object {context, fn}",
            n = (b.FORK_ARG_ERROR = "fork first argument must be a generator function or an iterator",
                b.JOIN_ARG_ERROR = "join argument must be a valid task (a result of a fork)"),
            k = b.CANCEL_ARG_ERROR = "cancel argument must be a valid task (a result of a fork)",
            m = b.INVALID_PATTERN = "Invalid pattern passed to `take` (HINT: check if you didn't mispell a constant)",
            p = b.SELECT_ARG_ERROR = "select first argument must be a function",
            r = (0, h.sym)("IO"),
            l = "TAKE",
            q = "PUT",
            t = "RACE",
            u = "CALL",
            v = "CPS",
            x = "FORK",
            w = "JOIN",
            z = "CANCEL",
            y = "SELECT",
            A = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c;
                return c = {}, d(c, r, !0), d(c, a, b), c
            },
            F = {
                wildcard: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return h.kTrue
                },
                "default": function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return b.type === a
                    }
                },
                array: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.some(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a === b.type
                        })
                    }
                },
                predicate: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a(b)
                    }
                }
            };
        b.asEffect = {
            take: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && a[r] && a[l]
            },
            put: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && a[r] && a[q]
            },
            race: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && a[r] && a[t]
            },
            call: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && a[r] && a[u]
            },
            cps: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && a[r] && a[v]
            },
            fork: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && a[r] && a[x]
            },
            join: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && a[r] && a[w]
            },
            cancel: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a &&
                    a[r] && a[z]
            },
            select: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && a[r] && a[y]
            }
        }
    }, {
        "./utils": 144
    }],
    144: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        (function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = d({}, 0 >= arguments.length || void 0 === arguments[0] ? {} : arguments[0]),
                    b = new Promise(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.resolve = b;
                        a.reject = c
                    });
                return a.promise = b, a
            }
            Object.defineProperty(b, "__esModule", {
                value: !0
            });
            var d = Object.assign || function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var b = 1; b < arguments.length; b++) {
                    var c = arguments[b],
                        d;
                    for (d in c) Object.prototype.hasOwnProperty.call(c, d) && (a[d] = c[d])
                }
                return a
            };
            b.ident = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a
            };
            b.check = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (!b(a)) throw Error(c);
            };
            b.remove = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b = a.indexOf(b);
                0 <= b && a.splice(b, 1)
            };
            b.deferred = c;
            b.arrayOfDeffered = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var b = [], d = 0; d < a; d++) b.push(c());
                return b
            };
            b.autoInc = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = 0 >= arguments.length || void 0 === arguments[0] ? 0 : arguments[0];
                return function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return ++a
                }
            };
            b.asap = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return Promise.resolve(1).then(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a()
                })
            };
            b.warnDeprecated = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                n && console.warn("DEPRECATION WARNING", a)
            };
            var h = b.sym = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return "@@redux-saga/" +
                        a
                },
                f = b.TASK = h("TASK"),
                n = (b.kTrue = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !0
                }, b.noop = function() {}, b.isDev = "undefined" != typeof a && a.env && "development" === a.env.NODE_ENV),
                k = b.is = {
                    undef: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return null === a || void 0 === a
                    },
                    notUndef: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return null !== a && void 0 !== a
                    },
                    func: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return "function" == typeof a
                    },
                    array: Array.isArray,
                    promise: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a && k.func(a.then)
                    },
                    iterator: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a && k.func(a.next) && k.func(a["throw"])
                    },
                    task: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a && a[f]
                    }
                }
        }).call(this, a("_process"))
    }, {
        _process: 140
    }],
    145: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b = "undefined" != typeof window ? window : {};
        b = "object" == typeof b ? b : "object" == typeof window ? window : "object" == typeof self ? self : this;
        var d = b.regeneratorRuntime && 0 <= Object.getOwnPropertyNames(b).indexOf("regeneratorRuntime"),
            e = d && b.regeneratorRuntime;
        if (b.regeneratorRuntime = void 0, c.exports = a("./runtime"), d) b.regeneratorRuntime = e;
        else try {
            delete b.regeneratorRuntime
        } catch (g) {
            b.regeneratorRuntime = void 0
        }
    }, {
        "./runtime": 146
    }],
    146: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        (function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            ! function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function d(a,
                    b, c, d) {
                    b = Object.create((b && b.prototype instanceof g ? b : g).prototype);
                    d = new v(d || []);
                    return b._invoke = l(a, c, d), b
                }

                function e(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    try {
                        return {
                            type: "normal",
                            arg: a.call(b, c)
                        }
                    } catch (N) {
                        return {
                            type: "throw",
                            arg: N
                        }
                    }
                }

                function g() {}

                function k() {}

                function m() {}

                function p(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    ["next", "throw", "return"].forEach(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a[b] = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return this._invoke(b, a)
                        }
                    })
                }

                function r(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function c(a, d, f, l) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a = e(b[a], b, d);
                        if ("throw" !== a.type) {
                            var g = a.arg;
                            return (a = g.value) && "object" == typeof a && A.call(a, "__await") ? Promise.resolve(a.__await).then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                c("next",
                                    a, f, l)
                            }, function(a) {
                                c("throw", a, f, l)
                            }) : Promise.resolve(a).then(function(a) {
                                g.value = a;
                                f(g)
                            }, l)
                        }
                        l(a.arg)
                    }
                    "object" == typeof a && a.domain && (c = a.domain.bind(c));
                    var d;
                    this._invoke = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        function e() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return new Promise(function(d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                c(a, b, d, e)
                            })
                        }
                        return d = d ? d.then(e, e) : e()
                    }
                }

                function l(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var d = G;
                    return function(f, l) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (d === B) throw Error("Generator is already running");
                        if (d === J) {
                            if ("throw" === f) throw l;
                            return w()
                        }
                        c.method = f;
                        for (c.arg = l;;) {
                            if (f = c.delegate)
                                if (f = q(f, c)) {
                                    if (f === K) continue;
                                    return f
                                }
                            if ("next" ===
                                c.method) c.sent = c._sent = c.arg;
                            else if ("throw" === c.method) {
                                if (d === G) throw d = J, c.arg;
                                c.dispatchException(c.arg)
                            } else "return" === c.method && c.abrupt("return", c.arg);
                            d = B;
                            f = e(a, b, c);
                            if ("normal" === f.type) {
                                if (d = c.done ? J : H, f.arg === K) continue;
                                return {
                                    value: f.arg,
                                    done: c.done
                                }
                            }
                            "throw" === f.type && (d = J, c.method = "throw", c.arg = f.arg)
                        }
                    }
                }

                function q(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var c = a.iterator[b.method];
                    if (c === z) {
                        if (b.delegate = null, "throw" === b.method) {
                            if (a.iterator["return"] && (b.method = "return", b.arg = z, q(a, b), "throw" === b.method)) return K;
                            b.method =
                                "throw";
                            b.arg = new TypeError("The iterator does not provide a 'throw' method")
                        }
                        return K
                    }
                    c = e(c, a.iterator, b.arg);
                    return "throw" === c.type ? (b.method = "throw", b.arg = c.arg, b.delegate = null, K) : (c = c.arg) ? c.done ? (b[a.resultName] = c.value, b.next = a.nextLoc, "return" !== b.method && (b.method = "next", b.arg = z), b.delegate = null, K) : c : (b.method = "throw", b.arg = new TypeError("iterator result is not an object"), b.delegate = null, K)
                }

                function t(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = {
                        tryLoc: a[0]
                    };
                    1 in a && (b.catchLoc = a[1]);
                    2 in a && (b.finallyLoc = a[2], b.afterLoc =
                        a[3]);
                    this.tryEntries.push(b)
                }

                function u(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = a.completion || {};
                    b.type = "normal";
                    delete b.arg;
                    a.completion = b
                }

                function v(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this.tryEntries = [{
                        tryLoc: "root"
                    }];
                    a.forEach(t, this);
                    this.reset(!0)
                }

                function x(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (a) {
                        var b = a[I];
                        if (b) return b.call(a);
                        if ("function" == typeof a.next) return a;
                        if (!isNaN(a.length)) {
                            var c = -1;
                            b = function L() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                for (; ++c < a.length;)
                                    if (A.call(a, c)) return L.value = a[c], L.done = !1, L;
                                return L.value = z, L.done = !0, L
                            };
                            return b.next = b
                        }
                    }
                    return {
                        next: w
                    }
                }

                function w() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return {
                        value: z,
                        done: !0
                    }
                }
                var z, y =
                    Object.prototype,
                    A = y.hasOwnProperty,
                    F = "function" == typeof Symbol ? Symbol : {},
                    I = F.iterator || "@@iterator",
                    D = F.toStringTag || "@@toStringTag";
                F = "object" == typeof c;
                var C = b.regeneratorRuntime;
                if (C) return void(F && (c.exports = C));
                C = b.regeneratorRuntime = F ? c.exports : {};
                C.wrap = d;
                var G = "suspendedStart",
                    H = "suspendedYield",
                    B = "executing",
                    J = "completed",
                    K = {};
                b = {};
                b[I] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return this
                };
                (F = (F = Object.getPrototypeOf) && F(F(x([])))) && F !== y && A.call(F, I) && (b = F);
                var E = m.prototype = g.prototype = Object.create(b);
                k.prototype =
                    E.constructor = m;
                m.constructor = k;
                m[D] = k.displayName = "GeneratorFunction";
                C.isGeneratorFunction = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a = "function" == typeof a && a.constructor;
                    return !!a && (a === k || "GeneratorFunction" === (a.displayName || a.name))
                };
                C.mark = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return Object.setPrototypeOf ? Object.setPrototypeOf(a, m) : (a.__proto__ = m, D in a || (a[D] = "GeneratorFunction")), a.prototype = Object.create(E), a
                };
                C.awrap = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return {
                        __await: a
                    }
                };
                p(r.prototype);
                C.AsyncIterator = r;
                C.async = function(a, b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var f = new r(d(a, b, c, e));
                    return C.isGeneratorFunction(b) ?
                        f : f.next().then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.done ? a.value : f.next()
                        })
                };
                p(E);
                E[D] = "Generator";
                E.toString = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return "[object Generator]"
                };
                C.keys = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = [],
                        c;
                    for (c in a) b.push(c);
                    return b.reverse(),
                        function L() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (; b.length;) {
                                var c = b.pop();
                                if (c in a) return L.value = c, L.done = !1, L
                            }
                            return L.done = !0, L
                        }
                };
                C.values = x;
                v.prototype = {
                    constructor: v,
                    reset: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (this.prev = 0, this.next = 0, this.sent = this._sent = z, this.done = !1, this.delegate = null, this.method = "next", this.arg = z, this.tryEntries.forEach(u), !a)
                            for (var b in this) "t" === b.charAt(0) && A.call(this, b) && !isNaN(+b.slice(1)) && (this[b] = z)
                    },
                    stop: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this.done = !0;
                        var a = this.tryEntries[0].completion;
                        if ("throw" === a.type) throw a.arg;
                        return this.rval
                    },
                    dispatchException: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        function b(b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return f.type = "throw", f.arg = a, c.next = b, d && (c.method = "next", c.arg = z), !!d
                        }
                        if (this.done) throw a;
                        for (var c = this, d = this.tryEntries.length - 1; 0 <= d; --d) {
                            var e = this.tryEntries[d];
                            var f = e.completion;
                            if ("root" === e.tryLoc) return b("end");
                            if (e.tryLoc <= this.prev) {
                                var l =
                                    A.call(e, "catchLoc"),
                                    g = A.call(e, "finallyLoc");
                                if (l && g) {
                                    if (this.prev < e.catchLoc) return b(e.catchLoc, !0);
                                    if (this.prev < e.finallyLoc) return b(e.finallyLoc)
                                } else if (l) {
                                    if (this.prev < e.catchLoc) return b(e.catchLoc, !0)
                                } else {
                                    if (!g) throw Error("try statement without catch or finally");
                                    if (this.prev < e.finallyLoc) return b(e.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (var c, d = this.tryEntries.length - 1; 0 <= d; --d) {
                            var e = this.tryEntries[d];
                            if (e.tryLoc <= this.prev && A.call(e, "finallyLoc") && this.prev < e.finallyLoc) {
                                c = e;
                                break
                            }
                        }
                        c &&
                            ("break" === a || "continue" === a) && c.tryLoc <= b && b <= c.finallyLoc && (c = null);
                        d = c ? c.completion : {};
                        return d.type = a, d.arg = b, c ? (this.method = "next", this.next = c.finallyLoc, K) : this.complete(d)
                    },
                    complete: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if ("throw" === a.type) throw a.arg;
                        return "break" === a.type || "continue" === a.type ? this.next = a.arg : "return" === a.type ? (this.rval = this.arg = a.arg, this.method = "return", this.next = "end") : "normal" === a.type && b && (this.next = b), K
                    },
                    finish: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (var b = this.tryEntries.length - 1; 0 <= b; --b) {
                            var c = this.tryEntries[b];
                            if (c.finallyLoc === a) return this.complete(c.completion, c.afterLoc), u(c), K
                        }
                    },
                    "catch": function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (var b, c = this.tryEntries.length - 1; 0 <= c; --c) {
                            var d = this.tryEntries[c];
                            if (d.tryLoc === a) return a = d.completion, "throw" === a.type && (b = a.arg, u(d)), b
                        }
                        throw Error("illegal catch attempt");
                    },
                    delegateYield: function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return this.delegate = {
                            iterator: x(a),
                            resultName: b,
                            nextLoc: c
                        }, "next" === this.method && (this.arg = z), K
                    }
                }
            }("object" == typeof b ? b : "object" == typeof window ? window : "object" == typeof self ? self : this)
        }).call(this,
            a("_process"), "undefined" != typeof window ? window : {})
    }, {
        _process: 140
    }],
    147: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        a("extension-api/globals");
        a("config").initGlobal("chrome", "popup");
        c = a("extension-api/chrome");
        b = a("extension-api");
        a("extension-api/web-extensions").hacksForCompatibility();
        b.initGlobalExtensionApi(c.createApi());
        a("universal/popup")
    }, {
        config: 151,
        "extension-api": 159,
        "extension-api/chrome": 157,
        "extension-api/globals": 158,
        "extension-api/web-extensions": 166,
        "universal/popup": 217
    }],
    148: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var d = a("stdlib"),
            e = a("./url"),
            g = a("./services");
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.create = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var f = "prod" === b ? "https://f-log-extension.grammarly.io" : "qa" === b || "dev" === b ? "https://127.0.0.1:8000" : d.assertNever(b);
                b = "prod" === b ? "grammarly.com" : "qa" === b || "dev" === b ? "qagr.io" : d.assertNever(b);
                return {
                    url: e.UrlConfig.create("grammarly.com", f, c),
                    gnar: g.GnarConfig.create(a, b),
                    felog: g.FelogConfig.create(a),
                    extensionId: "87677a2c52b84ad3a151a4a72f5bd3c4"
                }
            }
        }(b.AppConfig ||
            (b.AppConfig = {}))
    }, {
        "./services": 153,
        "./url": 155,
        stdlib: 201
    }],
    149: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var d = a("stdlib");
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.create = function(a, b, c, d, e, m, p) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var f = void 0 !== m && void 0 !== p ? m : "UNVERSIONED";
                a = a + "." + b + "." + c;
                e = ["prod" !== e ? e : null, f !== d ? f : null].filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !!a
                }).join(".");
                return {
                    version: a,
                    fullVersion: a + "-" + [d, e].filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return "" !== a
                    }).join("/"),
                    commitHash: p,
                    gitBranch: m
                }
            };
            a.getManifestVersion = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                try {
                    switch (a) {
                        case "safari":
                            switch (b) {
                                case "bg":
                                case "popup":
                                    return c.safari.extension.displayVersion;
                                default:
                                    return
                            }
                        case "chrome":
                            return c.chrome.runtime.getManifest().version;
                        case "firefox":
                            return c.firefox.runtime.getManifest().version;
                        case "edge":
                            return c.edge.runtime.getManifest().version;
                        default:
                            return d.assertNever(a)
                    }
                } catch (n) {
                    return void console.error("Could not get extension version from manifest", n)
                }
            }
        }(b.BuildInfo || (b.BuildInfo = {}))
    }, {
        stdlib: 201
    }],
    150: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var d = a("stdlib");
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.create = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return d.optionalStringUnion(["chrome",
                    "safari", "firefox", "edge"
                ], a)
            };
            a.detect = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.chrome && /google/i.test(a.navigator.vendor) ? "chrome" : -1 !== a.navigator.userAgent.indexOf("Firefox") ? "firefox" : /^((?!chrome).)*safari/i.test(a.navigator.userAgent) ? "safari" : "Netscape" === a.navigator.appName && -1 < a.navigator.appVersion.indexOf("Edge") ? "edge" : void 0
            }
        }(b.TargetBrowser || (b.TargetBrowser = {}));
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.create = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return d.optionalStringUnion(["dev", "prod", "qa"], a)
            }
        }(b.TargetEnv || (b.TargetEnv = {}));
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.create =
                function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return d.optionalStringUnion(["bg", "cs", "popup"], a)
                };
            a.detect = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = !!a.IS_BG;
                if ("safari" === b) try {
                    var d = a.safari.extension.globalPage.contentWindow !== a
                } catch (k) {
                    d = !1
                } else d = !!a.IS_POPUP;
                return c ? "bg" : d ? "popup" : "cs"
            }
        }(b.TargetContext || (b.TargetContext = {}));
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.create = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return {
                    browser: a,
                    env: b,
                    context: c
                }
            }
        }(b.BundleInfo || (b.BundleInfo = {}))
    }, {
        stdlib: 201
    }],
    151: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var c in a) b.hasOwnProperty(c) || (b[c] = a[c])
        }
        Object.defineProperty(b,
            "__esModule", {
                value: !0
            });
        d(a("./app"));
        d(a("./build"));
        d(a("./bundle"));
        d(a("./services"));
        d(a("./system"));
        d(a("./url"));
        d(a("./mainConfig"));
        var e = a("./mainConfig"),
            g = a("./bundle"),
            h = a("stdlib"),
            f = new h.Global(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                console.warn("Global config not initialized -- using fall back value.");
                var a = h.assertNonNull(g.TargetBrowser.detect(window), "runtime-detected browser type");
                a = e.MainConfig.create(a, g.TargetContext.detect(window, a), e.ProcessEnv.fromBrowserify());
                return window.GR_CFG = a, a
            });
        b.getGlobal =
            function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return f.get()
            };
        b.initGlobal = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            f.init(e.MainConfig.create(a, b, c || e.ProcessEnv.fromBrowserify()));
            window.GR_CFG = f.get()
        }
    }, {
        "./app": 148,
        "./build": 149,
        "./bundle": 150,
        "./mainConfig": 152,
        "./services": 153,
        "./system": 154,
        "./url": 155,
        stdlib: 201
    }],
    152: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        (function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = a("babel-runtime/helpers/slicedToArray"),
                g = d && d.__esModule ? d : {
                    "default": d
                };
            Object.defineProperty(b, "__esModule", {
                value: !0
            });
            var h = a("./app"),
                f = a("./build"),
                n = a("./system"),
                k = a("./bundle"),
                m = a("stdlib");
            ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function b(a, b, c, d, e, f, g) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return {
                        env: a,
                        major_number: b,
                        build_number: c,
                        release_number: d,
                        git_branch: e,
                        git_commit: f,
                        edge_popup_url: g
                    }
                }
                a.create = b;
                a.fromBrowserify = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return b("prod", 14, "798", "1133", c.env.GIT_BRANCH, "bd5d43593488c0ca3f63a383a7ce0b09264146a8", "https://grammarly_neweditor.s3.amazonaws.com/popup-editor-static/d571e8cf4b45110649b1ed823d8d9d12e54cca04a4c4d230d419b911b829da99/popup-edge.html")
                }
            }(b.ProcessEnv || (b.ProcessEnv = {}));
            ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.create = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var d =
                        void 0;
                    if (c.env) {
                        var e = k.TargetEnv.create(c.env);
                        void 0 !== e ? d = e : (console.warn("*** process.env.ENV is invalid ('" + c.env + "'), assuming 'prod' env"), d = "prod")
                    } else console.warn("*** process.env.ENV is not defined, assuming 'prod' env"), d = "prod";
                    d = m.assertNonNull(d, "ENV env var OR a fallback value");
                    e = [c.major_number, c.build_number, c.release_number].map(m.optionalIntString);
                    var l = void 0;
                    3 === e.length && e.every(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return void 0 !== a
                    }) ? l = e : (e = (f.BuildInfo.getManifestVersion(a, b, window) || "").split(".").map(m.optionalIntString),
                        l = 3 === e.length && e.every(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return void 0 !== a
                        }) ? e : [0, 0, 0]);
                    e = l;
                    e = (0, g["default"])(e, 3);
                    return {
                        buildInfo: f.BuildInfo.create(e[0], e[1], e[2], a, d, c.git_branch, c.git_commit),
                        bundleInfo: k.BundleInfo.create(a, d, b),
                        appConfig: h.AppConfig.create(a, d, c.edge_popup_url),
                        systemInfo: n.SystemInfo.create(a, window)
                    }
                }
            }(b.MainConfig || (b.MainConfig = {}))
        }).call(this, a("_process"))
    }, {
        "./app": 148,
        "./build": 149,
        "./bundle": 150,
        "./system": 154,
        _process: 140,
        "babel-runtime/helpers/slicedToArray": 32,
        stdlib: 201
    }],
    153: [function(a,
        c, b) {
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var d = a("stdlib");
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = {
                chrome: "chromeExt",
                firefox: "firefoxExt",
                safari: "safariExt",
                edge: "edgeExt"
            };
            a.create = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return {
                    appName: d.assertNonNull(b[a], "gnar app name"),
                    url: "https://gnar." + c,
                    domain: "." + c
                }
            }
        }(b.GnarConfig || (b.GnarConfig = {}));
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = {
                chrome: "extensionChrome",
                firefox: "extensionFirefox",
                safari: "extensionSafari",
                edge: "extensionEdge"
            };
            a.create = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return {
                    appName: d.assertNonNull(b[a], "felog app name")
                }
            }
        }(b.FelogConfig ||
            (b.FelogConfig = {}))
    }, {
        stdlib: 201
    }],
    154: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var d, e = a("./bundle"),
            g = a("stdlib");
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.create = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return {
                    type: e.TargetBrowser.detect(b) || "other",
                    isWE: "firefox" === a ? g.try_(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return !!firefox.runtime
                    }, function(a) {
                        return !1
                    }) : "chrome" === a || "edge" === a
                }
            }
        }(d = b.BrowserInfo || (b.BrowserInfo = {}));
        var h;
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.create = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return {
                    isWindows: -1 !== a.navigator.appVersion.indexOf("Win")
                }
            }
        }(h = b.OsInfo || (b.OsInfo = {}));
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.create = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return {
                    browser: d.create(a, b),
                    os: h.create(b)
                }
            }
        }(b.SystemInfo || (b.SystemInfo = {}))
    }, {
        "./bundle": 150,
        stdlib: 201
    }],
    155: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.create = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = "https://www." + a,
                    e = "https://data." + a,
                    g = "https://app." + a,
                    h = "https://auth." + a + "/v3";
                return {
                    app: g,
                    appPersonalDictionary: g + "/profile/dictionary",
                    capi: "wss://capi." + a + "/freews",
                    dapiMimic: e + "/api/mimic",
                    dapiProps: e + "/api/props",
                    editorDictionary: g +
                        "/profile/dictionary",
                    dictionary: "https://capi." + a + "/api/defs",
                    docs: g + "/docs",
                    docsApi: "https://dox." + a + "/documents",
                    userOrAnonymous: h + "/user/oranonymous",
                    authSignin: h + "/login",
                    authSignup: h + "/signup",
                    signin: d + "/signin",
                    signup: d + "/signup",
                    resetPassword: d + "/resetpassword",
                    saveEmailFeedback: "https://emailfeedback." + a + "/api/feedback/",
                    newFelog: b,
                    referral: d + "/referral?page=extension",
                    welcomeC: d + "/extension-success",
                    afterInstall: d + "/after_install_page",
                    upgrade: d + "/upgrade",
                    uninstall: d + "/extension-uninstall",
                    terms: d + "/terms",
                    policy: d + "/privacy-policy",
                    pageConfigUrl: "https://d3cv4a9a9wh0bt.cloudfront.net/browserplugin/config.json",
                    edgePopupUrl: c,
                    grammarlyDomain: a
                }
            }
        }(b.UrlConfig || (b.UrlConfig = {}))
    }, {}],
    156: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        b.handleChromeError = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            chrome.runtime.lastError ? b(chrome.runtime.lastError) : a()
        }
    }, {}],
    157: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        c = a("babel-runtime/core-js/promise");
        var e = d(c);
        c = a("babel-runtime/core-js/object/assign");
        var g = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var h = d(c);
        c = a("babel-runtime/helpers/createClass");
        var f = d(c);
        c = a("babel-runtime/helpers/defineProperty");
        c = (d(c), a("babel-runtime/core-js/object/get-own-property-symbols"));
        var n = d(c),
            k = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = {},
                    d;
                for (d in a) Object.prototype.hasOwnProperty.call(a, d) && 0 > b.indexOf(d) && (c[d] = a[d]);
                if (null != a && "function" == typeof n["default"]) {
                    var e = 0;
                    for (d = (0, n["default"])(a); e < d.length; e++) 0 > b.indexOf(d[e]) && (c[d[e]] = a[d[e]])
                }
                return c
            };
        Object.defineProperty(b,
            "__esModule", {
                value: !0
            });
        var m = a("./message/bg"),
            p = a("./message/content"),
            r = a("./tabs/chrome"),
            l = a("./chrome-util"),
            q = a("./web-extensions"),
            t = a("lib/util"),
            u = a("stdlib"),
            v = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function a(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    (0, h["default"])(this, a);
                    this.port = chrome.runtime.connect({
                        name: b
                    })
                }
                return (0, f["default"])(a, [{
                        key: "onMessage",
                        value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            this.port.onMessage.addListener(a)
                        }
                    }, {
                        key: "onDisconnect",
                        value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            this.port.onDisconnect.addListener(a)
                        }
                    }, {
                        key: "postMessage",
                        value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            this.port.postMessage(a)
                        }
                    }]),
                    a
            }(),
            x = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function a(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    (0, h["default"])(this, a);
                    this._port = b;
                    this.sender = {};
                    var c = b.sender;
                    this.name = b.name;
                    c && (this.sender.url = c.url, c.tab && c.tab.url && c.tab.id && (this.sender.tab = {
                        url: c.tab.url,
                        id: c.tab.id,
                        active: c.tab.active
                    }))
                }
                return (0, f["default"])(a, [{
                    key: "onMessage",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this._port.onMessage.addListener(a)
                    }
                }, {
                    key: "onDisconnect",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this._port.onDisconnect.addListener(a)
                    }
                }, {
                    key: "postMessage",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this._port.postMessage(a)
                    }
                }]), a
            }(),
            w = function y() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0,
                    h["default"])(this, y);
                this.tabs = new r.ChromeTabsApiImpl;
                this.notification = {
                    kind: "web-extension",
                    create: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return u.SafePromise.create(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var d = a.onClicked,
                                e = a.onButtonClicked,
                                f = k(a, ["onClicked", "onButtonClicked"]),
                                q = chrome.notifications,
                                r = t.guid();
                            q.create(r, (0, g["default"])({
                                type: "basic"
                            }, f), function() {
                                l.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    void 0 !== d && q.onClicked.addListener(d);
                                    void 0 !== e && q.onButtonClicked.addListener(e);
                                    b(r)
                                }, c)
                            })
                        })
                    },
                    clear: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return u.SafePromise.create(function(b,
                            c) {
                            chrome.notifications.clear(a, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                l.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return b(a)
                                }, c)
                            })
                        })
                    }
                };
                this.cookies = {
                    kind: "web-extension",
                    get: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return u.SafePromise.create(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return chrome.cookies.get(a, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return l.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return b(a)
                                }, c)
                            })
                        })
                    },
                    remove: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return new e["default"](function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return chrome.cookies.remove(a, function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return l.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return b(null)
                                }, c)
                            })
                        })
                    },
                    getAll: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return u.SafePromise.create(function(b,
                            c) {
                            return chrome.cookies.getAll(a, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return l.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return b(a)
                                }, c)
                            })
                        })
                    },
                    set: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return u.SafePromise.create(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return chrome.cookies.set(a, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return l.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return b(a)
                                }, c)
                            })
                        })
                    },
                    watch: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        chrome.cookies.onChanged.addListener(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var d = c.cookie;
                            c = c.cause;
                            !d || !d.name || a.path && a.path !== d.path || a.name !== d.name || a.domain && -1 === d.domain.indexOf(a.domain) || ("explicit" === c && b(d), "expired_overwrite" === c &&
                                b())
                        })
                    }
                };
                this.preferences = q.preferencesApi.windowLocalStorage;
                this.button = {
                    kind: "web-extension",
                    setBadge: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        chrome.browserAction.setBadgeText({
                            text: a
                        })
                    },
                    setIconByName: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a = a ? "-" + a : "";
                        chrome.browserAction.setIcon({
                            path: {
                                16: "./src/icon/icon16" + a + ".png",
                                32: "./src/icon/icon32" + a + ".png"
                            }
                        })
                    },
                    setBadgeBackgroundColor: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        chrome.browserAction.setBadgeBackgroundColor({
                            color: a
                        })
                    }
                };
                this.management = {
                    uninstallSelf: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        chrome.management.uninstallSelf()
                    }
                };
                this.message = t.isBg() ? new m.GenericBackgroundMessageApiImpl(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return chrome.runtime.onConnect.addListener(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a(new x(b))
                        })
                    },
                    this.tabs.getActiveTab.bind(this.tabs), this.tabs.getAllTabs.bind(this.tabs)) : new p.GenericContentScriptMessageApiImpl(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return new v(a)
                })
            };
        b.createApi = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return new w
        }
    }, {
        "./chrome-util": 156,
        "./message/bg": 161,
        "./message/content": 162,
        "./tabs/chrome": 165,
        "./web-extensions": 166,
        "babel-runtime/core-js/object/assign": 17,
        "babel-runtime/core-js/object/get-own-property-symbols": 20,
        "babel-runtime/core-js/promise": 24,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        "babel-runtime/helpers/defineProperty": 29,
        "lib/util": 198,
        stdlib: 201
    }],
    158: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        window.firefox = window.browser;
        try {
            window.firefox = browser
        } catch (d) {}
        window.edge = window.browser;
        window.chrome = window.chrome;
        b["default"] = void 0
    }, {}],
    159: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var d = a("stdlib");
        (function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var c in a) b.hasOwnProperty(c) || (b[c] = a[c])
        })(a("./interface"));
        b.initGlobalExtensionApi = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            window.extensionApi &&
                console.warn("Extension Api init called more than once");
            window.extensionApi = window.extensionApi || a
        };
        b.getGlobalExtensionApi = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.assertNonNull(window.extensionApi, "extension api was not initialized")
        }
    }, {
        "./interface": 160,
        stdlib: 201
    }],
    160: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        b.ports = {
            bridge: "bridge",
            background: "message:to-priv",
            broadcast: "message:to-non-priv"
        }
    }, {}],
    161: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a) return !1;
            var b = n.getGlobal().bundleInfo.browser;
            b = "firefox" === b ? /^moz-extension:\/\/.*\/src\/popup.html$/ : "edge" === b ? /^ms-browser-extension:\/\/.*\/src\/popup.html$/ : "chrome" === b ? chrome && chrome.runtime && chrome.runtime.id ? new RegExp(chrome.runtime.id + "/src/popup.html") : void 0 : k.assertNever(b);
            return void 0 !== b && b.test(a)
        }
        var e = (c = a("babel-runtime/helpers/classCallCheck")) && c.__esModule ? c : {
                "default": c
            },
            g = (c = a("babel-runtime/helpers/createClass")) && c.__esModule ? c : {
                "default": c
            };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var h = a("./helpers"),
            f = a("lib/util"),
            n = a("config"),
            k = a("stdlib"),
            m = a("../interface");
        b.SETTINGS_TAB_ID = "popup";
        b.bgPreload = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = (f.isChrome() || f.isFF()) && (!chrome.extension || !chrome.tabs || !chrome.runtime || !chrome.runtime.onConnect),
                b = f.isEdge() && (!edge.extension || !edge.tabs || !edge.runtime || !edge.runtime.onConnect);
            if (a || b) a = window.localStorage.getItem("bgInitFail") || "0", a = parseInt(a, 10), 4 < a ? console.error("too many bgInitFail", a) : (window.localStorage.setItem("bgInitFail", (a + 1).toString()), document.location.reload())
        };
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(c, l, g) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var q = this;
                (0, e["default"])(this, a);
                this._getActiveTab = l;
                this._getAllTabs = g;
                this.kind = "background-message-api";
                this._callbacks = {};
                this._tabPorts = {
                    popup: []
                };
                this._messageHelper = new h.MessageHelperImpl;
                this._sendMessageToPorts = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    (a = q._tabPorts[a]) && a.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.postMessage(b)
                    })
                };
                this.toFocused = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return q._getActiveTab().then(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var e = c.id;
                        c = c.url;
                        if (e) return d(c) ? console.warn("toFocussed not allowed for popup when it open like regular tab",
                            a, b) : void q._sendMessageToPorts(e.toString(), {
                            type: a,
                            content: b,
                            callid: f.guid()
                        })
                    })
                };
                this.broadcast = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (c) {
                        var d = function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var d = b.id;
                            b = b.url;
                            d && b && -1 === b.indexOf("chrome-extension:") && q._sendMessageToPorts(d.toString(), {
                                type: a,
                                callid: f.guid(),
                                content: c
                            })
                        };
                        q._getAllTabs().then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.forEach(d)
                        });
                        q._tabPorts.popup && q._tabPorts.popup.length && q._getActiveTab().then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            d({
                                id: b.SETTINGS_TAB_ID,
                                url: a.url,
                                active: a.active
                            })
                        })
                    }
                };
                this._initPortListener = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (a.name ===
                        m.ports.bridge) a.onMessage(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        "message.toFocussed" === a.method && q.toFocused(a.params && a.params.type, a.params && a.params.content)
                    });
                    else if (a.name === m.ports.broadcast) a.onMessage(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return q.broadcast(a.type, a.content)
                    });
                    else if (a.name === m.ports.background) {
                        var c = a.sender;
                        if (c) {
                            if (c.tab) {
                                var e = c.tab,
                                    f = e.id;
                                e = e.url;
                                if (f) {
                                    var l = q._tabPorts[f];
                                    void 0 === l && (l = q._tabPorts[f] = []);
                                    l.push(a)
                                }
                                e && 0 === e.indexOf("http") && q._messageHelper.fire("tab-connected", {
                                    tab: f,
                                    url: e
                                });
                                a.onDisconnect(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    if (f) {
                                        var b =
                                            q._tabPorts[f];
                                        b && b.splice(b.indexOf(a), 1)
                                    }
                                })
                            }
                            if ((e = c.url ? c.url : c.tab ? c.tab.url : "") && d(e)) {
                                var g = b.SETTINGS_TAB_ID;
                                q._tabPorts[g] = q._tabPorts[g] || [];
                                q._tabPorts[g].push(a);
                                a.onDisconnect(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    var b = q._tabPorts[g];
                                    b.splice(b.indexOf(a), 1)
                                })
                            }
                        }
                        a.onMessage(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var e = function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                var d = b.callid,
                                    e = b.content;
                                b = b.type;
                                q._callbacks[d] && (q._callbacks[d](e), delete q._callbacks[d]);
                                q._messageHelper.fire(b, e, function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return a.postMessage({
                                        content: b,
                                        callid: d
                                    })
                                }, c && c.tab ? c.tab.id : -1)
                            };
                            "tab-connected" ===
                            d.type ? q._getActiveTab().then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                d.content = {
                                    tab: b.SETTINGS_TAB_ID,
                                    url: a.url
                                };
                                e(d)
                            }) : e(d)
                        })
                    }
                };
                c(this._initPortListener)
            }
            return (0, g["default"])(a, [{
                key: "sendTo",
                value: function(a, b, c, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a = this._tabPorts[a];
                    if (!a || !a.length) return void(e && e({
                        message: "no ports on specified tabId"
                    }));
                    var l = {
                        type: b,
                        content: c
                    };
                    d && "function" == typeof d && (l.callid = f.guid(), this._callbacks[l.callid] = d);
                    a.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.postMessage(l)
                    })
                }
            }, {
                key: "listen",
                value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._messageHelper.listen(a,
                        b)
                }
            }]), a
        }();
        b.GenericBackgroundMessageApiImpl = a
    }, {
        "../interface": 160,
        "./helpers": 163,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        config: 151,
        "lib/util": 198,
        stdlib: 201
    }],
    162: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = (c = a("babel-runtime/helpers/classCallCheck")) && c.__esModule ? c : {
                    "default": c
                },
                e = (c = a("babel-runtime/helpers/createClass")) && c.__esModule ? c : {
                    "default": c
                };
            Object.defineProperty(b, "__esModule", {
                value: !0
            });
            var g = a("stdlib"),
                h = a("./helpers"),
                f = a("lib/util"),
                n = a("../interface");
            a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function a(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var c = this;
                    (0, d["default"])(this, a);
                    this.kind = "content-script-message-api";
                    this._callbacks = {};
                    this._messageHelper = new h.MessageHelperImpl;
                    this._proxyPortsStorage = {};
                    this.broadcastBackground = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (var a = arguments.length, b = Array(a), d = 0; d < a; d++) b[d] = arguments[d];
                        return c._emit(c.backgroundPort, "bg").apply(null, b)
                    };
                    this.broadcast = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (var a = arguments.length, b = Array(a), d = 0; d < a; d++) b[d] = arguments[d];
                        return c._emit(c.broadcastPort, "tabs").apply(null, b)
                    };
                    this._onPortMessage =
                        function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            console.log("[Messaging] extension api", "portMessage", a)
                        };
                    this._checkHealth = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        function a() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            document.removeEventListener("grammarly:pong", f);
                            d && (clearTimeout(d), d = null);
                            b && (clearInterval(b), b = null)
                        }
                        var b = null,
                            d = null,
                            e = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return document.dispatchEvent(new CustomEvent("grammarly:ping"))
                            },
                            f = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                a()
                            },
                            g = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                [c.port, c.backgroundPort, c.broadcastPort].forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    a && a.removeMessageListeners && a.removeMessageListeners()
                                });
                                c.port = c.backgroundPort = c.broadcastPort =
                                    null;
                                a();
                                document.addEventListener("grammarly:proxyports", c._onGrammarlyResetAfterTimeout);
                                document.dispatchEvent(new CustomEvent("grammarly:offline"))
                            };
                        return function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            a();
                            document.addEventListener("grammarly:pong", f);
                            b = window.setInterval(e, 500);
                            d = window.setTimeout(g, 5E3)
                        }
                    }();
                    this._onGrammarlyResetAfterTimeout = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        document.removeEventListener("grammarly:proxyports", c._onGrammarlyResetAfterTimeout);
                        c.port = c._initProxyPort(n.ports.bridge, c._onPortMessage, c._checkHealth, !0);
                        c.backgroundPort =
                            c._initProxyPort(n.ports.background, c._onBgPortMessage, c._checkHealth);
                        c.broadcastPort = c._initProxyPort(n.ports.broadcast, null, c._checkHealth)
                    };
                    this._onBgPortMessage = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var b = a.callid,
                            d = a.content;
                        a = a.type;
                        c._callbacks[b] ? (c._callbacks[b](d), delete c._callbacks[b]) : c._messageHelper.fire(a, d, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            if (!c.backgroundPort) throw Error("fail reply to bg page - connection lost");
                            c.backgroundPort.postMessage({
                                content: a,
                                callid: b
                            })
                        })
                    };
                    this._initProxyPort = function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var e = 3 < arguments.length &&
                            void 0 !== arguments[3] && arguments[3],
                            f = c._proxyPort(a);
                        return e && c._checkHealth(), b && f.onMessage(b), d && f.onDisconnect(d), f
                    };
                    this._emit = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return function(d, e, l, g) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var q = f.guid();
                            l && "function" == typeof l && (c._callbacks[q] = l);
                            try {
                                if (!a) throw Error("lost connection to " + b + " port");
                                a.postMessage({
                                    type: d,
                                    callid: q,
                                    content: e
                                })
                            } catch (w) {
                                if (!g) throw w;
                                g(w)
                            }
                        }
                    };
                    this._proxyPort = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        c._proxyPortsStorage[a] = {};
                        var b = function(b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                d = d.detail;
                                d.name === a && (b = c._proxyPortsStorage[a][b]) && b(d.msg)
                            },
                            d = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return b("success", a)
                            },
                            e = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return b("error", a)
                            };
                        return document.addEventListener("grammarly:message", d), document.addEventListener("grammarly:error", e), {
                            postMessage: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return document.dispatchEvent(new CustomEvent("grammarly:action", {
                                    detail: {
                                        data: 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
                                        name: a
                                    }
                                }))
                            },
                            onMessage: function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                c._proxyPortsStorage[a].success = b
                            },
                            onDisconnect: function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                c._proxyPortsStorage[a].error = b
                            },
                            removeMessageListeners: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                document.removeEventListener("grammarly:message",
                                    d);
                                document.removeEventListener("grammarly:error", e)
                            }
                        }
                    };
                    this.port = b(n.ports.bridge);
                    this.port.onMessage(this._onPortMessage);
                    this.port.onDisconnect(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        c.port = null;
                        c.port = c._initProxyPort(n.ports.bridge, c._onPortMessage, c._checkHealth, !0)
                    });
                    this.backgroundPort = b(n.ports.background);
                    this.backgroundPort.onMessage(this._onBgPortMessage);
                    this.backgroundPort.onDisconnect(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        c.backgroundPort = null;
                        c.backgroundPort = c._initProxyPort(n.ports.background, c._onBgPortMessage, c._checkHealth)
                    });
                    this.broadcastPort =
                        b(n.ports.broadcast);
                    this.broadcastPort.onDisconnect(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        c.broadcastPort = null;
                        c.broadcastPort = c._initProxyPort(n.ports.broadcast, null, c._checkHealth)
                    })
                }
                return (0, e["default"])(a, [{
                    key: "listen",
                    value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this._messageHelper.listen(a, b)
                    }
                }, {
                    key: "toFocused",
                    value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var c = this;
                        return g.SafePromise.create(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            if (!c.port) throw Error("lost connection to bg page");
                            c.port.postMessage({
                                method: "message.toFocussed",
                                params: {
                                    type: a,
                                    content: b
                                }
                            });
                            d()
                        })
                    }
                }]), a
            }();
            b.GenericContentScriptMessageApiImpl =
                a;
            b.hacksForCompatibility = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                window.addEventListener("update-window-size-gr", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        document.body.appendChild(c);
                        setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            c.parentNode && c.parentNode.removeChild(c)
                        }, 10)
                    }
                    var c = document.createElement("div");
                    if (c.style.height = "1px", a.detail && a.detail.force) {
                        var d = setInterval(b, 100);
                        setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return clearInterval(d)
                        }, 405)
                    }
                }, !1);
                window.addEventListener("close-popup-gr", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    -1 !== window.navigator.userAgent.indexOf("Firefox") && window.close()
                }, !1)
            }
        },
        {
            "../interface": 160,
            "./helpers": 163,
            "babel-runtime/helpers/classCallCheck": 27,
            "babel-runtime/helpers/createClass": 28,
            "lib/util": 198,
            stdlib: 201
        }
    ],
    163: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return safari.application.activeBrowserWindow && safari.application.activeBrowserWindow.activeTab
        }
        var e = (c = a("babel-runtime/core-js/get-iterator")) && c.__esModule ? c : {
                "default": c
            },
            g = (c = a("babel-runtime/helpers/classCallCheck")) && c.__esModule ? c : {
                "default": c
            };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        a = a("lib/config");
        var h =
            function() {};
        b.MessageHelperImpl = function n() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = this;
            (0, g["default"])(this, n);
            this._listeners = {};
            this._queue = {};
            this.fire = function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : h,
                    e = arguments[3],
                    g = a._listeners[b] || [];
                g.length ? g.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a(c, d, e)
                }) : (a._queue[b] = a._queue[b] || [], a._queue[b].push({
                    content: c,
                    callback: d,
                    sender: e
                }))
            };
            this.unlisten = function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = a._listeners[b] || [];
                c = d.indexOf(c); - 1 !== c && (1 === d.length ? delete a._listeners[b] : d.splice(c, 1))
            };
            this.listenOnce =
                function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a.listen(b, function l(d, e, g) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.unlisten(b, l);
                        c && c(d, e, g)
                    })
                };
            this.listen = function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a._listeners[b] = a._listeners[b] || []; - 1 === a._listeners[b].indexOf(c) && a._listeners[b].push(c);
                var d = a._queue[b] || [];
                if (d.length) {
                    var g = !0,
                        q = !1,
                        h = void 0;
                    try {
                        for (var k, p = (0, e["default"])(d); !(g = (k = p.next()).done); g = !0) {
                            var m = k.value;
                            try {
                                c(m.content, m.callback, m.sender)
                            } catch (w) {
                                console.error("exception during proccesing buffered messages", w)
                            }
                        }
                    } catch (w) {
                        q = !0, h = w
                    } finally {
                        try {
                            !g && p["return"] && p["return"]()
                        } finally {
                            if (q) throw h;
                        }
                    }
                    delete a._queue[b]
                }
            }
        };
        b.safariBridgeId = "forge-bridge" + a.getUuid();
        b.getSafariActiveTab = d;
        b.getSafariActiveTabUrl = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = d();
            return a && a.url || "http://newtab"
        };
        b.emitter = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = {},
                b = {};
            return {
                emit: function(c, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var g = a[c];
                    g ? g.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a(d, e)
                    }) : (b[c] || (b[c] = []), b[c].push({
                        data: d,
                        callback: e
                    }))
                },
                on: function(c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a[c] || (a[c] = []);
                    a[c].push(d);
                    b[c] && b[c].forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return d(a.data, a.callback)
                    })
                }
            }
        }
    }, {
        "babel-runtime/core-js/get-iterator": 14,
        "babel-runtime/helpers/classCallCheck": 27,
        "lib/config": 167
    }],
    164: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }

        function e(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                get: a.get.bind(a),
                set: a.set.bind(a),
                getAll: a.getAll.bind(a),
                remove: a.remove.bind(a),
                removeAll: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return m(this, void 0, void 0, f["default"].mark(function x() {
                        var c;
                        return f["default"].wrap(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (d.prev = d.next) {
                                case 0:
                                    return d.next = 2, a.getAll();
                                case 2:
                                    return c = d.sent, d.next = 5, a.removeAll();
                                case 5:
                                    return d.next = 7, k["default"].all((0, n["default"])(c).filter(b).map(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        return a.set(b,
                                            c[b])
                                    }));
                                case 7:
                                case "end":
                                    return d.stop()
                            }
                        }, x, this)
                    }))
                }
            }
        }
        c = a("babel-runtime/helpers/classCallCheck");
        var g = d(c);
        c = a("babel-runtime/helpers/createClass");
        var h = d(c);
        c = a("babel-runtime/regenerator");
        var f = d(c);
        c = a("babel-runtime/core-js/object/keys");
        var n = d(c);
        c = a("babel-runtime/core-js/promise");
        var k = d(c),
            m = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c || (c = k["default"]))(function(e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            q(d.next(a))
                        } catch (D) {
                            f(D)
                        }
                    }

                    function l(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            q(d["throw"](a))
                        } catch (D) {
                            f(D)
                        }
                    }

                    function q(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? e(a.value) :
                            (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                b(a.value)
                            })).then(g, l)
                    }
                    q((d = d.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var p, r = a("stdlib"),
            l = a("lodash");
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a[a.success = 0] = "success";
            a[a.successWithEmpty = 1] = "successWithEmpty";
            a[a.alreadyMigrated = 2] = "alreadyMigrated"
        }(p = b.StorageMigrationResult || (b.StorageMigrationResult = {}));
        var q;
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a[a.nonEmptyMigration = 0] = "nonEmptyMigration";
            a[a.emptyMigration = 1] = "emptyMigration"
        }(q || (q = {}));
        b.createMigrationAwareApi = e;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(b,
                c, d) {
                var f = this,
                    l = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : [];
                (0, g["default"])(this, a);
                this._name = b;
                this._source = c;
                this._destination = d;
                this._destValuesToKeep = l;
                this._migrationFlagSuccessfulValue = "ok";
                this._migrationFlagUniqueKey = "104ccd8c-9919-9ae4-931f-782fb197486c";
                this._migrationFlagKey = "__migration-" + this._migrationFlagUniqueKey + ":(" + this._name + ")";
                this._migrationInProgress = !1;
                this.migrationAwareDestination = e(this._destination, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a === f._migrationFlagKey
                })
            }
            return (0,
                h["default"])(a, [{
                key: "_getMigrated",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this;
                    return this._destination.get(this._migrationFlagKey).then(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return b === a._migrationFlagSuccessfulValue
                    })
                }
            }, {
                key: "_setMigrated",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return m(this, void 0, void 0, f["default"].mark(function v() {
                        var a;
                        return f["default"].wrap(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (b.prev = b.next) {
                                case 0:
                                    return b.next = 2, this._destination.set(this._migrationFlagKey, this._migrationFlagSuccessfulValue);
                                case 2:
                                    return b.next = 4, this._destination.get(this._migrationFlagKey);
                                case 4:
                                    if (a = b.sent, a === this._migrationFlagSuccessfulValue) {
                                        b.next = 7;
                                        break
                                    }
                                    throw Error("Could not verify status write, actual value: " + a);
                                case 7:
                                case "end":
                                    return b.stop()
                            }
                        }, v, this)
                    }))
                }
            }, {
                key: "_runMigration",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return m(this, void 0, void 0, f["default"].mark(function v() {
                        var a, b, c = this;
                        return f["default"].wrap(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (d.prev = d.next) {
                                case 0:
                                    return r.assert(!this._migrationInProgress, "migration already in progress"), this._migrationInProgress = !0, d.prev = 2, d.next = 5, this._source.getAll();
                                case 5:
                                    return a = d.sent, b = 0 === (0, n["default"])(a).length, d.next = 9, k["default"].all(this._destValuesToKeep.map(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        return c._destination.get(b).then(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                            null != c && (a[b] = c)
                                        })
                                    }));
                                case 9:
                                    return d.next = 11, this._destination.removeAll();
                                case 11:
                                    return d.next = 13, k["default"].all((0, n["default"])(a).filter(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        return null != a[b]
                                    }).map(function(b) {
                                        return c._destination.set(b, a[b])
                                    }));
                                case 13:
                                    return d.t0 = l, d.t1 = a, d.next = 17, this._destination.getAll();
                                case 17:
                                    if (d.t2 = d.sent, d.t0.isEqual.call(d.t0,
                                            d.t1, d.t2)) {
                                        d.next = 20;
                                        break
                                    }
                                    throw Error("Could not verify write");
                                case 20:
                                    return this._migrationInProgress = !1, d.abrupt("return", b ? q.emptyMigration : q.nonEmptyMigration);
                                case 24:
                                    throw d.prev = 24, d.t3 = d["catch"](2), this._migrationInProgress = !1, d.t3;
                                case 28:
                                case "end":
                                    return d.stop()
                            }
                        }, v, this, [
                            [2, 24]
                        ])
                    }))
                }
            }, {
                key: "ensureMigrationCompleted",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return m(this, void 0, void 0, f["default"].mark(function v() {
                        var a;
                        return f["default"].wrap(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (b.prev = b.next) {
                                case 0:
                                    return b.next =
                                        2, this._getMigrated();
                                case 2:
                                    if (!b.sent) {
                                        b.next = 6;
                                        break
                                    }
                                    return b.abrupt("return", p.alreadyMigrated);
                                case 6:
                                    return b.next = 8, this._runMigration();
                                case 8:
                                    return a = b.sent, b.next = 11, this._setMigrated();
                                case 11:
                                    b.t0 = a;
                                    b.next = b.t0 === q.nonEmptyMigration ? 14 : b.t0 === q.emptyMigration ? 15 : 16;
                                    break;
                                case 14:
                                    return b.abrupt("return", p.success);
                                case 15:
                                    return b.abrupt("return", p.successWithEmpty);
                                case 16:
                                    throw Error("Match not exhaustive: " + a);
                                case 18:
                                case "end":
                                    return b.stop()
                            }
                        }, v, this)
                    }))
                }
            }]), a
        }();
        b.StorageMigration =
            a
    }, {
        "babel-runtime/core-js/object/keys": 22,
        "babel-runtime/core-js/promise": 24,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        "babel-runtime/regenerator": 35,
        lodash: "lodash",
        stdlib: 201
    }],
    165: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (c = a("babel-runtime/helpers/classCallCheck")) && c.__esModule ? c : {
                "default": c
            },
            e = (c = a("babel-runtime/helpers/createClass")) && c.__esModule ? c : {
                "default": c
            };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var g = a("../chrome-util"),
            h = a("stdlib");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0,
                    d["default"])(this, a);
                this.kind = "web-extension"
            }
            return (0, e["default"])(a, [{
                key: "open",
                value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return h.SafePromise.create(function(c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        chrome.tabs.create({
                            url: a,
                            active: b
                        }, function(a) {
                            g.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return c(a)
                            }, d)
                        })
                    })
                }
            }, {
                key: "updateCurrent",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return h.SafePromise.create(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        chrome.tabs.update({
                            url: a
                        }, function(a) {
                            g.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return b(a)
                            }, c)
                        })
                    })
                }
            }, {
                key: "getActiveTab",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return h.SafePromise.create(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var c =
                            chrome.tabs;
                        c.query({
                            active: !0,
                            lastFocusedWindow: !0
                        }, function(d) {
                            g.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                d && d.length ? a(d[0]) : c.query({
                                    active: !0
                                }, function(c) {
                                    g.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        a(c[0])
                                    }, b)
                                })
                            }, b)
                        })
                    })
                }
            }, {
                key: "getAllTabs",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return h.SafePromise.create(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return chrome.tabs.query({}, function(c) {
                            return g.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return a(c)
                            }, b)
                        })
                    })
                }
            }, {
                key: "getActiveTabUrl",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this;
                    return h.SafePromise.create(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.getActiveTab().then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return g.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return b(a &&
                                    a.url)
                            }, c)
                        })
                    })
                }
            }, {
                key: "onActiveTabChange",
                value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var c = this,
                        d = function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            g.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                c && a(c)
                            }, b)
                        };
                    chrome.tabs.onActivated.addListener(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return chrome.tabs.get(a.tabId, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return d(a)
                        })
                    });
                    chrome.tabs.onUpdated.addListener(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        c.getActiveTab().then(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            c && c.id === a && (b.url || b.favIconUrl || "complete" === b.status) && chrome.tabs.get(a, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return d(a)
                            })
                        })
                    });
                    chrome.windows.onFocusChanged.addListener(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return chrome.tabs.query({
                            active: !0,
                            windowId: a,
                            lastFocusedWindow: !0
                        }, function(a) {
                            return d(a[0])
                        })
                    });
                    this.getActiveTab().then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return d(a)
                    })
                }
            }, {
                key: "reload",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return h.SafePromise.create(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var d = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return g.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return b()
                            }, c)
                        };
                        a ? chrome.tabs.reload(a, {}, d) : chrome.tabs.reload(d)
                    })
                }
            }]), a
        }();
        b.ChromeTabsApiImpl = a
    }, {
        "../chrome-util": 156,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        stdlib: 201
    }],
    166: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a &&
                a.__esModule ? a : {
                    "default": a
                }
        }
        c = a("babel-runtime/helpers/defineProperty");
        var e = d(c);
        c = a("babel-runtime/regenerator");
        var g = d(c);
        c = a("babel-runtime/core-js/object/keys");
        var h = d(c);
        c = a("babel-runtime/core-js/promise");
        var f = d(c),
            n = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c || (c = f["default"]))(function(e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            q(d.next(a))
                        } catch (y) {
                            f(y)
                        }
                    }

                    function l(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            q(d["throw"](a))
                        } catch (y) {
                            f(y)
                        }
                    }

                    function q(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? e(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(g, l)
                    }
                    q((d = d.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(b,
            "__esModule", {
                value: !0
            });
        var k = a("stdlib"),
            m = a("./storage-migration");
        c = a("./message/content");
        b.hacksForCompatibility = c.hacksForCompatibility;
        a = a("./message/bg");
        b.bgPreload = a.bgPreload;
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (var e = arguments.length, f = Array(e), g = 0; g < e; g++) f[g] = arguments[g];
                    return k.assert(!0 === t, "supposed to run data migration before accessing prefs with web-extensions API"), d.then(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        d = d ? c.migrationAwareDestination : a.windowLocalStorage;
                        return d[b].apply(d, f)
                    })
                }
            }
            a.windowLocalStorage = {
                get: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return k.SafePromise.sync(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return window.localStorage.getItem(a)
                    })
                },
                set: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return k.SafePromise.sync(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return window.localStorage.setItem(a, b)
                    })
                },
                getAll: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return k.SafePromise.sync(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = {};
                        return (0, h["default"])(window.localStorage).forEach(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            a[b] = window.localStorage.getItem(b)
                        }), a
                    })
                },
                remove: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return k.SafePromise.sync(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return window.localStorage.removeItem(a)
                    })
                },
                removeAll: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return k.SafePromise.sync(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return window.localStorage.clear()
                    })
                }
            };
            a.browserStorageLocal = {
                get: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return n(this, void 0, void 0, g["default"].mark(function x() {
                        var b;
                        return g["default"].wrap(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (c.prev = c.next) {
                                case 0:
                                    return c.next = 2, firefox.storage.local.get(a);
                                case 2:
                                    return b = c.sent, c.abrupt("return", b.hasOwnProperty(a) ? b[a] : null);
                                case 4:
                                case "end":
                                    return c.stop()
                            }
                        }, x, this)
                    }))
                },
                set: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return firefox.storage.local.set((0, e["default"])({}, a, b))
                },
                getAll: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return firefox.storage.local.get(null)
                },
                remove: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return firefox.storage.local.remove(a)
                },
                removeAll: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return n(this, void 0, void 0, g["default"].mark(function v() {
                        return g["default"].wrap(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (a.prev = a.next) {
                                case 0:
                                    return a.next = 2, firefox.storage.local.clear();
                                case 2:
                                case "end":
                                    return a.stop()
                            }
                        }, v, this)
                    }))
                }
            };
            var c = new m.StorageMigration("firefoxLocalStorageToExtApi", a.windowLocalStorage, a.browserStorageLocal, ["version"]),
                d = f["default"].resolve(!1),
                t = !1;
            a.ensureMigrationCompleted = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                t = !0;
                var a = k.SafePromise.createCompletionSource();
                return d = a.promise,
                    c.ensureMigrationCompleted().then(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.resolve(!0), f["default"].resolve(b)
                    }, function(b) {
                        return a.resolve(!1), f["default"].reject(b)
                    })
            };
            a.migrationAware = {
                get: b("get"),
                set: b("set"),
                getAll: b("getAll"),
                remove: b("remove"),
                removeAll: b("removeAll")
            }
        }(b.preferencesApi || (b.preferencesApi = {}))
    }, {
        "./message/bg": 161,
        "./message/content": 162,
        "./storage-migration": 164,
        "babel-runtime/core-js/object/keys": 22,
        "babel-runtime/core-js/promise": 24,
        "babel-runtime/helpers/defineProperty": 29,
        "babel-runtime/regenerator": 35,
        stdlib: 201
    }],
    167: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c = (c = a("babel-runtime/helpers/toConsumableArray")) && c.__esModule ? c : {
            "default": c
        };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var d = a("spark-md5"),
            e = a("config");
        a = a("./newConfig");
        b.isTestsMode = a.isTestsMode;
        b.getVersion = a.getVersion;
        b.getUuid = a.getUuid;
        b.ENV = a.ENV;
        b.URLS = a.URLS;
        b.GRAMMARLY_DOMAIN = a.GRAMMARLY_DOMAIN;
        b.appName = a.appName;
        b.gnarAppName = a.gnarAppName;
        b.GNAR = e.getGlobal().appConfig.gnar;
        b.news = ["The G logo gets out of the way when you're typing", "Switch between American and British English",
            "Quickly disable checking in certain types of text fields", "A fully redesigned and improved interface"
        ];
        b.newsId = b.news.length && d.hash(b.news.join("\n"));
        b.userFields = "id email firstName anonymous type subscriptionFree experiments isTest premium settings registrationDate mimic groups extensionInstallDate fixed_errors referral".split(" ");
        b.userFields.push("token");
        b.nextVerClass = "gr_ver_2";
        b.grammarlyAttrs = ["data-gramm_editor", "data-gramm", "data-gramm_id", "gramm_editor"];
        b.restrictedAttrs = [].concat((0,
            c["default"])(b.grammarlyAttrs), ["readonly", "disabled"]);
        b.customFieldsRestrictedAttrs = ["pm-container", ["class", "ProseMirror"], "data-synchrony", ["data-gramm", "false"],
            ["class", "redactor-layer"],
            ["class", "redactor-editor"],
            ["class", "ck-editor__editable"],
            ["class", "redactor_box"],
            ["aria-label", "Search Facebook"]
        ];
        b.allRestrictedAttrs = [].concat((0, c["default"])(b.restrictedAttrs), (0, c["default"])(b.customFieldsRestrictedAttrs));
        b.restrictedParentAttrs = "[data-reactid]";
        b.externalEvents = "changed-user changed-plan changed-dialect cleanup editor-fix enable-email-perception".split(" ");
        b.development = "127.0.0.1:3117" === document.location.host
    }, {
        "./newConfig": 172,
        "babel-runtime/helpers/toConsumableArray": 33,
        config: 151,
        "spark-md5": "spark-md5"
    }],
    168: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            f.on("bg-log", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b;
                (b = console)[a.method].apply(b, ["BG LOG"].concat((0, g["default"])(a.args)))
            })
        }
        var e = (c = a("babel-runtime/core-js/json/stringify")) && c.__esModule ? c : {
                "default": c
            },
            g = (c = a("babel-runtime/helpers/toConsumableArray")) && c.__esModule ? c : {
                "default": c
            };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var h = a("./util"),
            f = a("./message"),
            n = "info warn error time timeEnd debug".split(" "),
            k = window,
            m = console;
        b.disableConsoleLog = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (h.isEdge()) k.console.log = h._f, k.__BROWSERTOOLS_CONSOLE_SAFEFUNC = h._f;
            else {
                var a = {
                    log: h._f
                };
                n.forEach(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a[b] = m[b]
                });
                k.console = a
            }
        };
        var p = [];
        b.setSeleniumCompatibility = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            d();
            var a = {};
            n.concat("log").forEach(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a[b] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (var a = arguments.length, c = Array(a), d = 0; d < a; d++) c[d] = arguments[d];
                    try {
                        p.push({
                            method: b,
                            args: c
                        }), m[b]((0,
                            e["default"])(c))
                    } catch (v) {}
                }
            });
            k.console = a
        };
        b.flushLog = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = p.concat();
            return p.length = 0, a
        }
    }, {
        "./message": 171,
        "./util": 198,
        "babel-runtime/core-js/json/stringify": 16,
        "babel-runtime/helpers/toConsumableArray": 33
    }],
    169: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }

        function e(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return !(!a || void 0 === a.className) && a.classList.contains(b)
        }

        function g(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a && a.classList) return a.classList.remove(b)
        }

        function h(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a) {
                if (-1 === b.indexOf(" ")) return a.classList.add(b);
                b = b.split(" ");
                for (var c = 0; c < b.length; c++) a.classList.add(b[c])
            }
        }

        function f(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "true" === a.contentEditable || "plaintext-only" === a.contentEditable
        }

        function n(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a) return !1;
            var c = a.matches || a.msMatchesSelector || a.matchesSelector || a.webkitMatchesSelector || a.mozMatchesSelector;
            return !!c && c.apply(a, [b])
        }

        function k(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var e = 4 < arguments.length && void 0 !== arguments[4] && arguments[4];
            if (null != a) {
                if ("string" != typeof b) return C.each(b, function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    k(a, c, b, d)
                });
                if (c) {
                    var f = a[B] || [];
                    return a[B] =
                        f, d ? (a[B] = f.filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return !(a.event === b && a.cb === c)
                        }), a.removeEventListener(b, c, e)) : (f.push({
                            event: b,
                            cb: c
                        }), a.addEventListener(b, c, e)), {
                            el: a,
                            event: b,
                            cb: c,
                            bubble: e
                        }
                }
            }
        }

        function m(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            b || null == a[B] ? k(a, b, c, !0, d) : a[B].forEach(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return m(a, b.event, b.cb, b.bubble)
            })
        }

        function p(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = this;
            return this.addEventListener(a, b, c), {
                off: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return r.apply(d, [a, b, c])
                }
            }
        }

        function r(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            this.removeEventListener(a, b, c)
        }

        function l(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "number" != typeof b || J[t(a)] ? b : b + "px"
        }

        function q(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.replace(/-+(.)?/g, function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b ? b.toUpperCase() : ""
            })
        }

        function t(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.replace(/::/g, "/").replace(/([A-Z]+)([A-Z][a-z])/g, "$1_$2").replace(/([a-z\d])([A-Z])/g, "$1_$2").replace(/_/g, "-").toLowerCase()
        }

        function u(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (3 > arguments.length) {
                if (!a) return;
                var d = getComputedStyle(a, "");
                if ("string" == typeof b) return a.style[q(b)] || d.getPropertyValue(b);
                if (C.isArray(b)) {
                    var e = {};
                    return C.each(b, function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        e[q(b)] = a.style[q(b)] || d.getPropertyValue(b)
                    }), e
                }
            }
            var f = "";
            if (C.isString(b)) c || 0 === c ? f = t(b) + ":" + l(b, c) : a.style.removeProperty(t(b));
            else
                for (var g in b) b[g] || 0 === b[g] ? f += t(g) + ":" + l(g, b[g]) + ";" : a.style.removeProperty(t(g));
            return a.style.cssText += ";" + f
        }

        function v(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (a = a.parentNode; null !== a;) {
                if (e(a, b)) return a;
                a = a.parentNode
            }
            return !1
        }

        function x() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 1;
            return a ? x.call(this.parentNode, --a) : this
        }

        function w(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b = arguments.length, c = Array(1 < b ? b - 1 : 0), d = 1; d < b; d++) c[d - 1] = arguments[d];
            if (0 < c.length) {
                var e = [];
                return e.push(w(a)), c.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return e.push(w(a))
                }), e.join(", ")
            }
            return a = a.split(", ").map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "." !== a[0] ? "." + a : a
            }).join(", ").trim(), a + ", " + a + " *"
        }

        function z(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a.getSelection();
            a.removeAllRanges();
            a.addRange(b)
        }

        function y(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return null === a ? null : n(a, b) ? a : a.querySelector(b) || y(a.parentElement, b)
        }
        c = a("babel-runtime/helpers/defineProperty");
        var A = d(c);
        c = a("babel-runtime/core-js/object/assign");
        var F = d(c);
        c = a("babel-runtime/core-js/object/keys");
        var I = d(c);
        Object.defineProperty(b,
            "__esModule", {
                value: !0
            });
        var D = a("react-dom"),
            C = a("lodash");
        c = a("./util");
        var G = a("stdlib"),
            H = a("dompurify");
        b.createEl = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            b = (b || document).createElement("div");
            return b.innerHTML = H.sanitize(a.trim()), b.firstElementChild
        };
        b.renderReactWithParent = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : "div",
                e = b[c] = b[c] || {};
            e.el || (e.el = b.ownerDocument.createElement(d), b.appendChild(e.el));
            d = D.render(a, e.el);
            return null == e.remove && (e.remove = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                delete b[c];
                b.removeChild(e.el);
                D.unmountComponentAtNode(e.el)
            }), {
                component: d,
                remove: e.remove.bind(e),
                el: e.el
            }
        };
        b.inEl = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 1E3, d = a; d.parentNode && 0 < c;) {
                if ("string" != typeof b && b === d || d.id === b || d === b) return !0;
                d = d.parentNode
            }
            return !1
        };
        b.hasClass = e;
        b.removeClass = g;
        b.addClass = h;
        b.toggleClass = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            b ? h(a, c) : g(a, c)
        };
        b.getParentBySel = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (a = a.parentNode; null !== a;) {
                if (n(a, b)) return a;
                a = a.parentNode
            }
            return !1
        };
        b.parentIsContentEditable = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (a =
                a.parentNode; null !== a;) {
                if (f(a)) return a;
                a = a.parentNode
            }
            return !1
        };
        b.isContentEditable = f;
        b.matchesSelector = n;
        b.isFocused = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return document.activeElement && "IFRAME" === document.activeElement.tagName ? a === a.ownerDocument.activeElement : a === document.activeElement
        };
        var B = c.guid();
        b.listen = k;
        b.unlisten = m;
        b.on = p;
        b.off = r;
        b.once = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = this;
            p.call(this, a, function P(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b(d);
                c.removeEventListener(a, P, void 0)
            })
        };
        b.emit = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = document.createEvent("CustomEvent");
            c.initCustomEvent(a, !0, !0, b);
            this.dispatchEvent(c)
        };
        b.isVisible = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = getComputedStyle(a, void 0);
            return "none" !== b.getPropertyValue("display") && "hidden" !== b.getPropertyValue("visibility") && 0 < a.clientHeight
        };
        b.cs = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var a = arguments.length, b = Array(a), c = 0; c < a; c++) b[c] = arguments[c];
            return b.reduce(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.concat(C.isObject(b) ? (0, I["default"])(b).filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return b[a]
                }) : b)
            }, []).filter(function(a) {
                return !!a
            }).join(" ")
        };
        var J = {
            "column-count": 1,
            columns: 1,
            "font-weight": 1,
            "line-height": 1,
            opacity: 1,
            "z-index": 1,
            zoom: 1
        };
        b.maybeAddPx = l;
        b.camelize = q;
        b.camelizeAttrs = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return C.transform(a, function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a[q(c)] = b
            })
        };
        b.dasherize = t;
        b.css = u;
        b.setCustomCss = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (b && a) {
                var c = u(a, (0, I["default"])(b));
                return u(a, b),
                    function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return u(a, c)
                    }
            }
        };
        b.getParentByTag = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (a = a.parentNode; null !== a;) {
                if (a.tagName === b) return a;
                a = a.parentNode
            }
            return null
        };
        b.getParentByData = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (a = a.parentNode; null !== a;) {
                if (a.dataset && a.dataset[b] && a.dataset[b] == c) return a;
                a = a.parentNode
            }
        };
        b.resolveEl = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return e(a, b) ? a : v(a, b)
        };
        b.getParent = v;
        b.parentHasClass = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a) return !1;
            for (; a.parentNode;) {
                if (e(a, b)) return a;
                a = a.parentNode
            }
            return !1
        };
        b.getParentByDepth = x;
        b.isParent = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a) return !1;
            for (; a.parentNode;) {
                if (b === a.parentNode) return a;
                a = a.parentNode
            }
            return !1
        };
        b.insertAfter = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = b.parentNode;
            if (null === c) throw new G.AssertionError("Expected non-null parent");
            c.lastChild === b ? c.appendChild(a) : c.insertBefore(a, b.nextSibling)
        };
        b.insertBefore = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            G.assertNonNull(b.parentNode, "parent node").insertBefore(a, b)
        };
        b.elementInDocument = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (b = b || document; a;) {
                if (a === b) return !0;
                a = a.parentNode
            }
            return !1
        };
        b.runKeyEvent = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = void 0,
                c = void 0;
            a = C.extend({
                ctrl: !1,
                meta: !1,
                shift: !1,
                alt: !1
            }, a);
            try {
                b = a.el.ownerDocument.createEvent("KeyEvents"), c = a.el.ownerDocument.defaultView, b.initKeyEvent(a.type, !0, !0, c, a.ctrl, a.alt, a.shift, a.meta, 0, 0)
            } catch (S) {
                b = a.el.ownerDocument.createEvent("UIEvents"), b.initUIEvent.bind(b)(void 0, !0, !0, window, 1), b.keyCode = 0, b.which = 0, b.charCode = 0, b.ctrlKey = a.ctrl, b.altKey = a.alt, b.shiftKey = a.shift, b.metaKey = a.meta
            }
            a.el.dispatchEvent(b)
        };
        b.docHidden = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "undefined" != typeof a.hidden ? a.hidden : "undefined" != typeof a.mozHidden ? a.mozHidden : "undefined" != typeof a.webkitHidden ? a.webkitHidden : "undefined" != typeof a.msHidden && a.msHidden
        };
        b.visibilityEvent = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "undefined" != typeof a.hidden ? "visibilitychange" : "undefined" != typeof a.mozHidden ? "mozvisibilitychange" : "undefined" != typeof a.webkitHidden ?
                "webkitvisibilitychange" : "undefined" != typeof a.msHidden && "msvisibilitychange"
        };
        b.transformProp = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : document;
            return "undefined" != typeof a.body.style.transform ? "transform" : "undefined" != typeof a.body.style.WebkitTransform ? "WebkitTransform" : "undefined" != typeof a.body.style.MozTransform ? "MozTransform" : void 0
        };
        b.getDocSelection = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.getSelection() || {}
        };
        b.compStyle = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a) {
                var b = a.ownerDocument;
                if (b && (b = b.defaultView ||
                        window)) {
                    var c = b.getComputedStyle(a, void 0);
                    if (c) {
                        b = arguments.length;
                        for (var d = Array(1 < b ? b - 1 : 0), e = 1; e < b; e++) d[e - 1] = arguments[e];
                        return 1 === d.length ? c.getPropertyValue(d[0]) : d.reduce(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return (0, F["default"])({}, a, (0, A["default"])({}, b, c.getPropertyValue(b)))
                        }, {})
                    }
                }
            }
        };
        b.classSelector = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.split(" ").map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "." !== a[0] ? "." + a : a
            }).join("").trim()
        };
        b.selectorAll = w;
        b.whichAnimationEndEvent = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = document.createElement("fakeelement"),
                b = {
                    animation: "animationend",
                    MozAnimation: "animationend",
                    WebkitAnimation: "webkitAnimationEnd"
                },
                c;
            for (c in b)
                if (void 0 !== a.style[c]) return b[c]
        };
        b.transitionEndEventName = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = document.createElement("fakeelement"),
                b = {
                    transition: "transitionend",
                    MozTransition: "transitionend",
                    WebkitTransition: "webkitTransitionEnd"
                },
                c;
            for (c in b)
                if (b.hasOwnProperty(c) && void 0 !== a.style[c]) return b[c]
        };
        b.addIframeCss = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if ("undefined" != typeof window.GR_INLINE_STYLES) {
                var b = a.createElement("style");
                b.innerHTML = window.GR_INLINE_STYLES;
                try {
                    a.querySelector("head").appendChild(b)
                } catch (O) {
                    console.log("can't append style", O)
                }
            }
        };
        b.setGRAttributes = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.setAttribute("data-gramm_id", b);
            a.setAttribute("data-gramm", "true")
        };
        b.emitDomEvent = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {},
                c = document.createEvent("CustomEvent");
            c.initCustomEvent(a + "-gr", !0, !0, b);
            document.dispatchEvent(c)
        };
        b.addRange = z;
        b.setDomRange = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = a.createRange();
            c.setStart(b.anchorNode, b.anchorOffset);
            c.setEnd(b.focusNode,
                b.focusOffset);
            z(a, c)
        };
        b.closestEl = y
    }, {
        "./util": 198,
        "babel-runtime/core-js/object/assign": 17,
        "babel-runtime/core-js/object/keys": 22,
        "babel-runtime/helpers/defineProperty": 29,
        dompurify: "dompurify",
        lodash: "lodash",
        "react-dom": "react-dom",
        stdlib: 201
    }],
    170: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = this,
                c = a.tabs;
            return p.SafePromise.create(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return n(b, void 0, void 0, h["default"].mark(function v() {
                    var b, d;
                    return h["default"].wrap(function(e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return b = setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        return c.getActiveTabUrl().then(a)
                                    },
                                    2E3), e.next = 3, c.getActiveTabUrl();
                            case 3:
                                d = e.sent, clearTimeout(b), a(d);
                            case 6:
                            case "end":
                                return e.stop()
                        }
                    }, v, this)
                }))
            })
        }

        function e(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a && a.ownerDocument || document;
            return (a = a.location || a.defaultView.location) ? a.hostname.replace("www.", "") : ""
        }

        function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (k.isFF() && /^about:/.test(a)) return a;
            var b = document.createElement("a");
            return b.href = a, b.hostname.replace("www.", "")
        }
        var h = (c = a("babel-runtime/regenerator")) && c.__esModule ? c : {
                "default": c
            },
            f = (c = a("babel-runtime/core-js/promise")) && c.__esModule ?
            c : {
                "default": c
            },
            n = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c || (c = f["default"]))(function(e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            q(d.next(a))
                        } catch (A) {
                            f(A)
                        }
                    }

                    function l(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            q(d["throw"](a))
                        } catch (A) {
                            f(A)
                        }
                    }

                    function q(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? e(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(g, l)
                    }
                    q((d = d.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var k = a("./util"),
            m = a("./page-config/defaults"),
            p = a("stdlib");
        b.currentUrl = d;
        b.getDomain = e;
        b.promiseGetDomain = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return f["default"].race([d(a).then(g), k.delay(1E4).then(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                throw Error("Request to tabs.getCurrentTabUrl rejected by timeout");
            })])
        };
        b.domainFromUrl = g;
        b.isFacebookSite = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return m.FACEBOOK_SITES.includes(e())
        };
        b.isJiraSite = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return /\.atlassian\.net/.test(e())
        };
        b.isBlackboardSite = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return /\.blackboard\.com/.test(e())
        };
        b.getUrl = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a && a.ownerDocument || document;
            return (a = a.location || a.defaultView.location) ? a.pathname + a.search : ""
        };
        b.getFavicon = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var a = "", b = document.getElementsByTagName("link"), c = 0; c < b.length; c++) {
                var d = b[c]; - 1 !== ('"' + d.getAttribute("rel") + '"').search(/(\"icon )|( icon\")|(\"icon\")|( icon )/i) &&
                    (a = d.getAttribute("href"))
            }
            return a || (a = "favicon.ico"), /^(?:[a-z]+:)?\/\//i.test(a) ? a : "/" !== a[0] ? "//" + document.location.host + document.location.pathname + a : "//" + document.location.host + a
        }
    }, {
        "./page-config/defaults": 176,
        "./util": 198,
        "babel-runtime/core-js/promise": 24,
        "babel-runtime/regenerator": 35,
        stdlib: 201
    }],
    171: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        (function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function d(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if ("__bgerror" === a) return void q.on("__bgerror", c);
                var d = t[a] = t[a] || [];
                if (d.push(c), 1 === d.length) try {
                    l.listen(a, function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = !0,
                            b = !1,
                            c = void 0;
                        try {
                            for (var e, f = (0, n["default"])(d); !(a = (e = f.next()).done); a = !0) e.value.apply(void 0, arguments)
                        } catch (I) {
                            b = !0, c = I
                        } finally {
                            try {
                                !a && f["return"] && f["return"]()
                            } finally {
                                if (b) throw c;
                            }
                        }
                    })
                } catch (w) {
                    b.emitError(w)
                }
            }

            function g(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if ("__bgerror" === a) return void q.off("__bgerror", b);
                var c = t[a];
                c && (b = c.indexOf(b), -1 !== b && c.splice(b, 1), 0 === c.length && delete t[a])
            }
            var h = a("babel-runtime/core-js/promise"),
                f = h && h.__esModule ? h : {
                    "default": h
                },
                n = (h = a("babel-runtime/core-js/get-iterator")) && h.__esModule ? h : {
                    "default": h
                };
            Object.defineProperty(b, "__esModule", {
                value: !0
            });
            h = a("lodash");
            var k = a("emitter"),
                m = a("./util"),
                p = a("./dom"),
                r = a("extension-api"),
                l = (c && c.env && c.env.SANDBOX ? {
                    message: {
                        broadcastBackground: m._f,
                        listen: m._f,
                        toFocused: m._f
                    }
                } : r.getGlobalExtensionApi()).message,
                q = k({}),
                t = {};
            b.emitError = h.throttle(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return q.emit("__bgerror", a)
            }, 1E3);
            m.isBg() && p.listen(document, "grammarly:offline", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b.emitError("proxy dead")
            }, void 0);
            b.one = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g(a, c);
                    for (var d = arguments.length,
                            e = Array(d), f = 0; f < d; f++) e[f] = arguments[f];
                    b.apply(this, e)
                }
                d(a, c)
            };
            b.on = d;
            b.off = g;
            b.emitTabs = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                try {
                    switch (l.kind) {
                        case "background-message-api":
                            l.broadcast(a, {});
                            break;
                        default:
                            throw Error("emitTabs can be used only on background");
                    }
                } catch (v) {
                    b.emitError(v)
                }
            };
            b.emitTo = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : {},
                    e = arguments[3] || function() {};
                try {
                    if (!a) throw TypeError("emitTo can't be used without destination point");
                    switch (l.kind) {
                        case "background-message-api":
                            l.sendTo(a,
                                c, d, e);
                            break;
                        default:
                            throw Error("emitTo can be used only on background");
                    }
                } catch (z) {
                    b.emitError(z)
                }
            };
            b.emitFocusedTab = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                try {
                    l.toFocused(a, c)
                } catch (x) {
                    b.emitError(x)
                }
            };
            b.emitBackground = function(a, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                try {
                    switch (l.kind) {
                        case "content-script-message-api":
                            l.broadcastBackground(a, c, d);
                            break;
                        default:
                            throw Error("emitBackground can be used only in content script");
                    }
                } catch (w) {
                    b.emitError(w)
                }
            };
            b.promiseBackground = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {},
                    d = 2 <
                    arguments.length && void 0 !== arguments[2] ? arguments[2] : 1E4,
                    e = new f["default"](function(d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            switch (l.kind) {
                                case "content-script-message-api":
                                    l.broadcastBackground(a, c, d, e);
                                    break;
                                default:
                                    throw Error("promiseBackground can be used only on client scripts");
                            }
                        } catch (A) {
                            e(A), b.emitError(A)
                        }
                    });
                return f["default"].race([e, m.delay(d).then(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    throw Error("Request to bg page (" + l + ") rejected by timeout");
                })])
            }
        }).call(this, a("_process"))
    }, {
        "./dom": 169,
        "./util": 198,
        _process: 140,
        "babel-runtime/core-js/get-iterator": 14,
        "babel-runtime/core-js/promise": 24,
        emitter: "emitter",
        "extension-api": 159,
        lodash: "lodash"
    }],
    172: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function d() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "bg" === g.bundleInfo.context
            }

            function e() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "popup" === g.bundleInfo.context
            }
            Object.defineProperty(b, "__esModule", {
                value: !0
            });
            var g = a("config").getGlobal();
            b.isTestsMode = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return !!window.__extensionTestsMode
            };
            b.getUuid = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return g.appConfig.extensionId
            };
            b.isFF = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "firefox" === g.bundleInfo.browser
            };
            b.isChrome = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "chrome" === g.bundleInfo.browser
            };
            b.isSafari = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "safari" === g.bundleInfo.browser
            };
            b.isEdge = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "edge" === g.bundleInfo.browser
            };
            b.isWindows = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return g.systemInfo.os.isWindows
            };
            b.isBg = d;
            b.isPopup = e;
            b.isBgOrPopup = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return d() || e()
            };
            b.getBrowser = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return g.bundleInfo.browser
            };
            b.getVersion = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return g.buildInfo.version
            };
            b.ENV = g.bundleInfo.env;
            b.URLS = g.appConfig.url;
            b.appName = g.appConfig.felog.appName;
            b.gnarAppName = g.appConfig.gnar.appName;
            b.GRAMMARLY_DOMAIN = g.appConfig.url.grammarlyDomain
        },
        {
            config: 151
        }
    ],
    173: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        c = a("babel-runtime/core-js/object/keys");
        var e = d(c);
        c = a("babel-runtime/core-js/object/get-prototype-of");
        var g = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var h = d(c);
        c = a("babel-runtime/helpers/createClass");
        var f = d(c);
        c = a("babel-runtime/helpers/possibleConstructorReturn");
        var n = d(c);
        c = a("babel-runtime/helpers/inherits");
        var k = d(c);
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var m = a("lib/util"),
            p = a("./defaults"),
            r = a("lib/location");
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, h["default"])(this, b);
                var c = (0, n["default"])(this, (b.__proto__ || (0, g["default"])(b)).call(this, a));
                return c.invalidate = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return c.load()
                }, c
            }
            return (0, k["default"])(b, a), (0, f["default"])(b, [{
                key: "getByPage",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : r.getUrl();
                    if (a) {
                        var c = (0, e["default"])(a).find(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return (new RegExp(a)).test(b)
                        });
                        return c ? a[c] : void 0
                    }
                }
            }, {
                key: "get",
                value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var c = this.config.pageConfig[a] ||
                        this.config.subdomains.find(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return (new RegExp("\\." + m.escapeRegExp(b.domain) + "$")).test(a)
                        }) || this.config.partials.find(function(b) {
                            return a.includes(b.domain)
                        });
                    if (c && !1 === c.enabled) return c;
                    b = this.getByPage(c && c.pages, b) || c || {};
                    return b.enabled = !1 !== b.enabled, b
                }
            }, {
                key: "toReload",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return 0 === a.indexOf("http") && p.SITES_TO_RELOAD.some(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.includes(b)
                    })
                }
            }]), b
        }(a("./config-loader").ConfigLoader);
        b.Config = a
    }, {
        "./config-loader": 174,
        "./defaults": 176,
        "babel-runtime/core-js/object/get-prototype-of": 21,
        "babel-runtime/core-js/object/keys": 22,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        "babel-runtime/helpers/inherits": 30,
        "babel-runtime/helpers/possibleConstructorReturn": 31,
        "lib/location": 170,
        "lib/util": 198
    }],
    174: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        c = a("babel-runtime/regenerator");
        var e = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var g = d(c);
        c = a("babel-runtime/helpers/createClass");
        var h = d(c);
        c = a("babel-runtime/core-js/promise");
        var f = d(c),
            n = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c || (c = f["default"]))(function(e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            q(d.next(a))
                        } catch (G) {
                            f(G)
                        }
                    }

                    function l(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            q(d["throw"](a))
                        } catch (G) {
                            f(G)
                        }
                    }

                    function q(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? e(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(g, l)
                    }
                    q((d = d.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var k = a("./localforage"),
            m = a("lib/request"),
            p = a("lib/config"),
            r = a("lib/tracking"),
            l = a("./meta"),
            q = a("./utils"),
            t = a("./decorator"),
            u = a("lib/profiler");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0,
                    g["default"])(this, a);
                this._prefs = b
            }
            return (0, h["default"])(a, [{
                    key: "init",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return n(this, void 0, void 0, e["default"].mark(function w() {
                            var a;
                            return e["default"].wrap(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                for (;;) switch (b.prev = b.next) {
                                    case 0:
                                        return u.Profiler.start("pageConfig_init"), a = void 0, b.next = 4, this.isSkipConfig();
                                    case 4:
                                        if (!b.sent) {
                                            b.next = 8;
                                            break
                                        }
                                        console.warn("Config: use default config in DEBUG mode (skipConfig=true)");
                                        b.next = 11;
                                        break;
                                    case 8:
                                        return b.next = 10, this.loadFromStorage();
                                    case 10:
                                        a = b.sent;
                                    case 11:
                                        return this.config =
                                            a ? a : {}, b.next = 14, (new l.Meta).load();
                                    case 14:
                                        return this.meta = b.sent, u.Profiler.stop("pageConfig_init"), b.abrupt("return", this);
                                    case 17:
                                    case "end":
                                        return b.stop()
                                }
                            }, w, this)
                        }))
                    }
                }, {
                    key: "isSkipConfig",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return n(this, void 0, void 0, e["default"].mark(function w() {
                            return e["default"].wrap(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    for (;;) switch (a.prev = a.next) {
                                        case 0:
                                            if (a.t0 = !1, !a.t0) {
                                                a.next = 5;
                                                break
                                            }
                                            return a.next = 4, this._prefs.get("skipConfig");
                                        case 4:
                                            a.t0 = a.sent;
                                        case 5:
                                            return a.abrupt("return", a.t0);
                                        case 6:
                                        case "end":
                                            return a.stop()
                                    }
                                },
                                w, this)
                        }))
                    }
                }, {
                    key: "load",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return n(this, void 0, void 0, e["default"].mark(function w() {
                            var a, b, c, d;
                            return e["default"].wrap(function(e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            if (a = this.meta.config, b = a.date, c = a.interval, !(b + c > Date.now())) {
                                                e.next = 5;
                                                break
                                            }
                                            return d = (b + c - Date.now()) / 1E3 / 60, console.info("Config: next update in " + d.toFixed(2) + " m"), e.abrupt("return");
                                        case 5:
                                            return console.info("Config: going to update config from CDN..."), e.abrupt("return", this.updateFromCDN());
                                        case 7:
                                        case "end":
                                            return e.stop()
                                    }
                                },
                                w, this)
                        }))
                    }
                }, {
                    key: "updateFromCDN",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return n(this, void 0, void 0, e["default"].mark(function w() {
                            var a, b;
                            return e["default"].wrap(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                for (;;) switch (c.prev = c.next) {
                                    case 0:
                                        return a = void 0, c.prev = 1, c.next = 4, m.fetch(p.URLS.pageConfigUrl, {
                                            timeout: 6E4
                                        });
                                    case 4:
                                        if (a = c.sent, q.isValid(a)) {
                                            c.next = 7;
                                            break
                                        }
                                        throw Error("Config malformed");
                                    case 7:
                                        this.config = a;
                                        this.save(a);
                                        c.next = 17;
                                        break;
                                    case 11:
                                        c.prev = 11, c.t0 = c["catch"](1), r.logger.pageConfigCDNError(c.t0.message), b = "Config: can't get valid config - " +
                                            c.t0.message, console.warn(b, a), this.saveOnError(b);
                                    case 17:
                                    case "end":
                                        return c.stop()
                                }
                            }, w, this, [
                                [1, 11]
                            ])
                        }))
                    }
                }, {
                    key: "loadFromStorage",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return n(this, void 0, void 0, e["default"].mark(function w() {
                            var a;
                            return e["default"].wrap(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                for (;;) switch (b.prev = b.next) {
                                    case 0:
                                        return b.prev = 0, b.next = 3, k.localforage.getItem("config");
                                    case 3:
                                        if (a = b.sent) {
                                            b.next = 6;
                                            break
                                        }
                                        throw Error("Config missed");
                                    case 6:
                                        if (q.isValid(a)) {
                                            b.next = 8;
                                            break
                                        }
                                        throw Error("Config malformed");
                                    case 8:
                                        return console.info("Config: loaded from local storage successfully"),
                                            b.abrupt("return", a);
                                    case 12:
                                        return b.prev = 12, b.t0 = b["catch"](0), "Config missed" === b.t0.message || r.logger.pageConfigLocalStorageError(b.t0.message, b.t0.name), console.warn("Config: cannot get valid config from storage: " + b.t0), b.abrupt("return", void 0);
                                    case 17:
                                    case "end":
                                        return b.stop()
                                }
                            }, w, this, [
                                [0, 12]
                            ])
                        }))
                    }
                }, {
                    key: "save",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var b = a.interval,
                            c = a.protocolVersion,
                            d = a.version;
                        k.localforage.setItem("config", a);
                        this.fireVersionUpdate(d, this.meta.config.version);
                        this.meta.set({
                            date: this.getCurrentTimestamp(),
                            status: "success",
                            interval: b,
                            protocolVersion: c,
                            version: d
                        });
                        console.info("Config: new config saved to local storage successfully:", a.version, a)
                    }
                }, {
                    key: "saveOnError",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var b = this.meta.config,
                            c = b.interval,
                            d = b.protocolVersion;
                        b = b.version;
                        this.meta.set({
                            date: this.getCurrentTimestamp(),
                            status: "failed",
                            interval: c,
                            protocolVersion: d,
                            version: b,
                            info: a
                        })
                    }
                }, {
                    key: "fireVersionUpdate",
                    value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a && b !== a && r.logger.pageConfigUpdated(b, a)
                    }
                }, {
                    key: "getCurrentTimestamp",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return Date.now()
                    }
                },
                {
                    key: "config",
                    set: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a = a || {};
                        this._config = t.decorateConfig(a)
                    },
                    get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return this._config
                    }
                }
            ]), a
        }();
        b.ConfigLoader = a
    }, {
        "./decorator": 175,
        "./localforage": 178,
        "./meta": 179,
        "./utils": 180,
        "babel-runtime/core-js/promise": 24,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        "babel-runtime/regenerator": 35,
        "lib/config": 167,
        "lib/profiler": 181,
        "lib/request": 182,
        "lib/tracking": 192
    }],
    175: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }

        function e(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a =
                l.merge({
                    pageConfig: {}
                }, a);
            return a.pageConfig || (a.pageConfig = {}), a
        }
        c = a("babel-runtime/helpers/defineProperty");
        var g = d(c);
        c = a("babel-runtime/core-js/object/keys");
        var h = d(c);
        c = a("babel-runtime/core-js/object/assign");
        var f = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var n = d(c);
        c = a("babel-runtime/helpers/createClass");
        var k = d(c);
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var m = a("../config"),
            p = a("./defaults"),
            r = a("../util"),
            l = a("lodash");
        b.deepCopyWithDefault = e;
        var q = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0,
                    n["default"])(this, a)
            }
            return (0, k["default"])(a, null, [{
                key: "decorate",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a = a || {}, a = this.filterByVersion(a), a = this.withDefault(a), a = this.parseBooleans(a), a = this.parseBrowserValues(a), a = this.filterInvalidPageRegexp(a), a = this.collectSubdomains(a), this.collectPartials(a)
                }
            }, {
                key: "withDefault",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a = e(a);
                    var b = p.PAGE_CONFIG && p.PAGE_CONFIG.pageConfig || {};
                    p.OVERRIDE_PAGE_CONFIG || {};
                    return a.pageConfig = l.merge({}, b, a.pageConfig), a
                }
            }, {
                key: "filterByVersion",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b =
                        1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : m.getVersion();
                    a = e(a);
                    var c = a.pageConfig;
                    return a.pageConfig = (0, h["default"])(c).filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a = c[a].version;
                        return !a || "*" === a || 1 !== r.versionComparator(b, a)
                    }).reduce(function(b, c) {
                        return (0, f["default"])({}, b, (0, g["default"])({}, c, a.pageConfig[c]))
                    }, {}), a
                }
            }, {
                key: "parseBooleans",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return !(!1 === a || "false" === a)
                    }

                    function c(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return !!a && b(a)
                    }
                    a = e(a);
                    var d = a.pageConfig;
                    return (0, h["default"])(d).forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        d[a] ||
                            (d[a] = {});
                        var e = d[a];
                        e.enabled = b(e.enabled);
                        e.matchInclusions = c(e.matchInclusions);
                        e.matchSubdomains = c(e.matchSubdomains);
                        e.pages && (0, h["default"])(e.pages).forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            e.pages[a].enabled = b(e.pages[a].enabled)
                        })
                    }), a
                }
            }, {
                key: "parseBrowserValues",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : r.getBrowser();
                    a = e(a);
                    var c = a.pageConfig;
                    return (0, h["default"])(c).map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var d = c[a] && c[a].disabledBrowsers;
                        d && d.includes(b) && (c[a].enabled = !1)
                    }), a
                }
            }, {
                key: "filterInvalidPageRegexp",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a = e(a);
                    var b = a.pageConfig;
                    return (0, h["default"])(b).forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var c = b[a];
                        c.pages && (c.pages = (0, h["default"])(c.pages).filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            try {
                                return new RegExp(a)
                            } catch (y) {
                                return !1
                            }
                        }).reduce(function(a, b) {
                            return (0, f["default"])({}, a, (0, g["default"])({}, b, c.pages[b]))
                        }, {}))
                    }), a
                }
            }, {
                key: "collectSubdomains",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a = e(a);
                    var b = a.pageConfig;
                    a.subdomains = [];
                    try {
                        a.subdomains = (0, h["default"])(b).filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return b[a].matchSubdomains
                        }).map(function(a) {
                            return (0,
                                f["default"])({
                                domain: a
                            }, b[a])
                        })
                    } catch (x) {
                        console.warn("Cannot collect subdomains from config")
                    }
                    return a
                }
            }, {
                key: "collectPartials",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a = e(a);
                    var b = a.pageConfig;
                    a.partials = [];
                    try {
                        a.partials = (0, h["default"])(b).filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return b[a].matchInclusions
                        }).map(function(a) {
                            return (0, f["default"])({
                                domain: a
                            }, b[a])
                        })
                    } catch (x) {
                        console.warn("Cannot collect partials from config")
                    }
                    return a
                }
            }]), a
        }();
        b.RawConfigDecorator = q;
        b.decorateConfig = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return q.decorate(a)
        }
    }, {
        "../config": 167,
        "../util": 198,
        "./defaults": 176,
        "babel-runtime/core-js/object/assign": 17,
        "babel-runtime/core-js/object/keys": 22,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        "babel-runtime/helpers/defineProperty": 29,
        lodash: "lodash"
    }],
    176: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d;
        c = (c = a("babel-runtime/helpers/defineProperty")) && c.__esModule ? c : {
            "default": c
        };
        var e = a("babel-runtime/helpers/toConsumableArray");
        e = e && e.__esModule ? e : {
            "default": e
        };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var g = a("lodash");
        a = a("lib/config");
        b.PROTOCOL_VERSION = "1.0";
        b.SITES_TO_RELOAD = "inbox.google.com mail.google.com yahoo.com mail.live.com facebook.com tumblr.com stackoverflow.com wordpress.com wordpress.org blogspot.com".split(" ");
        b.FACEBOOK_SITES = ["facebook.com", "messenger.com", "work.fb.com", "business.facebook.com"];
        b.HTML_GHOST_SITES = ["twitter.com"].concat((0, e["default"])(b.FACEBOOK_SITES));
        b.CUSTOM_UNSUPPORTED_MESSAGES = {
            "drive.google.com": {
                title: "Google Drive",
                message: 'We hope to support Google Drive apps<br/> in the future, but for now please use your</br> <a class="openGrammarly" href="' +
                    a.URLS.app + '">Grammarly Editor</a>.'
            },
            "docs.google.com": {
                title: "Google Drive",
                message: 'We hope to support Google Drive apps<br/> in the future, but for now please use your</br> <a class="openGrammarly" href="' + a.URLS.app + '">Grammarly Editor</a>.'
            },
            "chrome.google.com": {
                title: "Web Store"
            }
        };
        b.PAGE_CONFIG_DEFAULT_INTERVAL = 18E5;
        b.PAGE_CONFIG_UPDATE_INTERVALS = [6E5, b.PAGE_CONFIG_DEFAULT_INTERVAL, 36E5, 108E5, 432E5, 864E5, 31536E6];
        b.OVERRIDE_PAGE_CONFIG = {};
        b.PAGE_CONFIG_INTERNAL = (d = {
                version: {
                    enabled: !1,
                    servicePage: !0
                },
                extensions: {
                    enabled: !1,
                    servicePage: !0
                },
                settings: {
                    enabled: !1,
                    servicePage: !0
                },
                "com.safari.grammarlyspellcheckergrammarchecker": {
                    enabled: !1,
                    matchInclusions: !0,
                    servicePage: !0
                }
            }, (0, c["default"])(d, "app." + a.GRAMMARLY_DOMAIN, {
                enabled: !1,
                grammarlyEditor: !0
            }), (0, c["default"])(d, "linkedin.com", {
                pages: {
                    "/messaging": {
                        afterReplaceEvents: ["input"]
                    }
                }
            }), (0, c["default"])(d, "plus.google.com", {
                afterReplaceEvents: ["keyup"],
                minFieldHeight: 0,
                minFieldWidth: 0
            }), (0, c["default"])(d, "facebook.com", {
                minFieldHeight: 0,
                fields: [{
                    name: "caption_text"
                }]
            }),
            (0, c["default"])(d, "mail.google.com", {
                fields: [{
                    name: "to"
                }, {
                    name: "cc"
                }, {
                    name: "bcc"
                }, {
                    className: "vO"
                }],
                subframes: !1
            }), (0, c["default"])(d, "drive.google.com", {
                track: !0
            }), (0, c["default"])(d, "docs.google.com", {
                track: !0
            }), (0, c["default"])(d, "app.asana.com", {
                fields: [{
                    className: "task-row-text-input"
                }]
            }), (0, c["default"])(d, "tumblr.com", {
                fields: [{
                    attr: ["aria-label", "Post title"]
                }, {
                    attr: ["aria-label", "Type or paste a URL"]
                }]
            }), (0, c["default"])(d, "chrome.google.com", {
                dontShowDisabledBadge: !0
            }), (0, c["default"])(d,
                "airbnb.com", {
                    fields: [{
                        attr: ["id", "question"]
                    }]
                }), d);
        b.PAGE_CONFIG = {
            pageConfig: g.merge({}, {
                "hootsuite.com": {
                    enabled: !1
                },
                "chrome.google.com": {
                    enabled: !1
                },
                "facebook.com": {
                    enabled: !0,
                    pages: {
                        ".*/notes": {
                            enabled: !1
                        }
                    }
                },
                "onedrive.live.com": {
                    enabled: !1
                },
                "docs.com": {
                    enabled: !1
                },
                "sp.docs.com": {
                    enabled: !1
                },
                "docs.google.com": {
                    enabled: !1
                },
                "drive.google.com": {
                    enabled: !1
                },
                "texteditor.nsspot.net": {
                    enabled: !1
                },
                "jsbin.com": {
                    enabled: !1
                },
                "jsfiddle.net": {
                    enabled: !1
                },
                "quora.com": {
                    enabled: !1
                },
                "paper.dropbox.com": {
                    enabled: !1
                },
                "mail.live.com": {
                    enabled: !1,
                    matchInclusions: !0
                },
                "imperavi.com": {
                    enabled: !1
                },
                "usecanvas.com": {
                    enabled: !1
                }
            }, b.PAGE_CONFIG_INTERNAL)
        }
    }, {
        "babel-runtime/helpers/defineProperty": 29,
        "babel-runtime/helpers/toConsumableArray": 33,
        "lib/config": 167,
        lodash: "lodash"
    }],
    177: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        c = a("./config-base");
        var d = a("universal/bg/prefs");
        a = a("extension-api");
        a = new d.PrefsImpl(a.getGlobalExtensionApi().preferences);
        b.pageConfig = new c.Config(a)
    }, {
        "./config-base": 173,
        "extension-api": 159,
        "universal/bg/prefs": 204
    }],
    178: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (c = a("babel-runtime/core-js/promise")) && c.__esModule ? c : {
            "default": c
        };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        c = void 0;
        try {
            c = a("localforage"), c.config({
                name: "Grammarly",
                version: 1,
                size: 4194304,
                storeName: "configuration"
            })
        } catch (g) {
            console.error("Fallback to memory storage", g);
            var e = {};
            c = {
                getItem: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return d["default"].resolve(e[a])
                },
                setItem: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return e[a] = b, d["default"].resolve(b)
                },
                clear: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    e = {};
                    d["default"].resolve(!0)
                }
            }
        }
        b.localforage = c
    }, {
        "babel-runtime/core-js/promise": 24,
        localforage: "localforage"
    }],
    179: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        c = a("babel-runtime/regenerator");
        var e = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var g = d(c);
        c = a("babel-runtime/helpers/createClass");
        var h = d(c);
        c = a("babel-runtime/core-js/promise");
        var f = d(c),
            n = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c || (c = f["default"]))(function(e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            q(d.next(a))
                        } catch (y) {
                            f(y)
                        }
                    }

                    function l(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            q(d["throw"](a))
                        } catch (y) {
                            f(y)
                        }
                    }

                    function q(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? e(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(g, l)
                    }
                    q((d = d.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var k = a("./localforage"),
            m = a("./utils");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, g["default"])(this, a)
            }
            return (0, h["default"])(a, [{
                key: "load",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return n(this, void 0, void 0, e["default"].mark(function l() {
                        var a;
                        return e["default"].wrap(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (b.prev = b.next) {
                                case 0:
                                    return b.next = 2, k.localforage.getItem("lastConfigUpdate");
                                case 2:
                                    return a =
                                        b.sent, this.set(a), b.abrupt("return", this);
                                case 5:
                                case "end":
                                    return b.stop()
                            }
                        }, l, this)
                    }))
                }
            }, {
                key: "set",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a = a || {};
                    var b = a.protocolVersion,
                        c = a.version,
                        d = a.status,
                        e = a.info;
                    return this._meta = {
                        date: Number(a.date) || 0,
                        interval: m.getInterval(Number(a.interval)),
                        protocolVersion: b,
                        version: c,
                        status: d,
                        info: e
                    }, k.localforage.setItem("lastConfigUpdate", this._meta)
                }
            }, {
                key: "config",
                get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return this._meta
                }
            }]), a
        }();
        b.Meta = a
    }, {
        "./localforage": 178,
        "./utils": 180,
        "babel-runtime/core-js/promise": 24,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        "babel-runtime/regenerator": 35
    }],
    180: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (c = a("babel-runtime/core-js/object/keys")) && c.__esModule ? c : {
            "default": c
        };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var e = a("./defaults");
        b.isValid = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a && a.pageConfig && (0, d["default"])(a).length && (0, d["default"])(a.pageConfig).length && (!a.protocolVersion || a.protocolVersion === e.PROTOCOL_VERSION)) return !0
        };
        b.getInterval = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return e.PAGE_CONFIG_UPDATE_INTERVALS.includes(a) ?
                a : e.PAGE_CONFIG_DEFAULT_INTERVAL
        }
    }, {
        "./defaults": 176,
        "babel-runtime/core-js/object/keys": 22
    }],
    181: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        c = a("babel-runtime/regenerator");
        var e = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var g = d(c);
        c = a("babel-runtime/helpers/createClass");
        var h = d(c);
        c = a("babel-runtime/core-js/promise");
        var f = d(c),
            n = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c || (c = f["default"]))(function(e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            q(d.next(a))
                        } catch (y) {
                            f(y)
                        }
                    }

                    function l(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            q(d["throw"](a))
                        } catch (y) {
                            f(y)
                        }
                    }

                    function q(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? e(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(g, l)
                    }
                    q((d = d.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var k = a("lib/timers"),
            m = a("lib/tracking");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = this;
                (0, g["default"])(this, a);
                this.timings = {};
                this.track = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (var c = arguments.length, d = Array(1 < c ? c - 1 : 0), f = 1; f < c; f++) d[f - 1] = arguments[f];
                    return n(b, void 0, void 0, e["default"].mark(function x() {
                        return e["default"].wrap(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (b.prev = b.next) {
                                case 0:
                                    return b.abrupt("return",
                                        this._track.apply(this, [!1, a].concat(d)));
                                case 1:
                                case "end":
                                    return b.stop()
                            }
                        }, x, this)
                    }))
                };
                this.trackAsync = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (var c = arguments.length, d = Array(1 < c ? c - 1 : 0), f = 1; f < c; f++) d[f - 1] = arguments[f];
                    return n(b, void 0, void 0, e["default"].mark(function x() {
                        return e["default"].wrap(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (b.prev = b.next) {
                                case 0:
                                    return b.abrupt("return", this._track.apply(this, [!0, a].concat(d)));
                                case 1:
                                case "end":
                                    return b.stop()
                            }
                        }, x, this)
                    }))
                };
                this._track = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (var d = arguments.length, f = Array(2 <
                            d ? d - 2 : 0), g = 2; g < d; g++) f[g - 2] = arguments[g];
                    return n(b, void 0, void 0, e["default"].mark(function w() {
                        var b;
                        return e["default"].wrap(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                for (;;) switch (d.prev = d.next) {
                                    case 0:
                                        if (b = c.name + (a ? "__sync" : ""), k.timers.start(b), d.prev = 2, !a) {
                                            d.next = 8;
                                            break
                                        }
                                        return d.next = 6, c.apply(void 0, f);
                                    case 6:
                                        d.next = 9;
                                        break;
                                    case 8:
                                        c.apply(void 0, f);
                                    case 9:
                                        d.next = 14;
                                        break;
                                    case 11:
                                        throw d.prev = 11, d.t0 = d["catch"](2), d.t0;
                                    case 14:
                                        return d.prev = 14, this.timings[b] = k.timers.stop(b), d.finish(14);
                                    case 17:
                                    case "end":
                                        return d.stop()
                                }
                            },
                            w, this, [
                                [2, 11, 14, 17]
                            ])
                    }))
                }
            }
            return (0, h["default"])(a, [{
                key: "start",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    k.timers.start(a)
                }
            }, {
                key: "stop",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this.timings[a] = k.timers.stop(a)
                }
            }], [{
                key: "start",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    k.timers.start(a)
                }
            }, {
                key: "stop",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 3E4,
                        c = k.timers.stop(a);
                    return c > b && (console.warn("profiler_" + a + "_time_exceeded", c), "pageConfig_init" === a && m.logger.tooLongPageConfigInit(c), "updateUser" === a && m.logger.tooLongUserUpdateTime(c)),
                        c
                }
            }]), a
        }();
        b.Profiler = a
    }, {
        "babel-runtime/core-js/promise": 24,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        "babel-runtime/regenerator": 35,
        "lib/timers": 186,
        "lib/tracking": 192
    }],
    182: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a.data && (a.query || "post" !== a.method) && (a.url += "?" + g(a.data)), a.data && "post" === a.method && !a.query && !a.body) {
                try {
                    a.body = (0, f["default"])(a.data)
                } catch (q) {
                    a.body = {}, console.warn(q)
                }
                a.headers = a.headers || {};
                a.headers["Content-Type"] = a.headers["Content-Type"] ||
                    "application/json";
                delete a.data
            }
            return a.credentials = "include", a
        }

        function e(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b.ok ? b[a.isText ? "text" : "json"]() : b.text().then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    throw {
                        name: "RequestError",
                        body: a,
                        statusCode: b.status,
                        message: b.statusText
                    };
                })
            }
            var c = a.url;
            return delete a.url, c ? h["default"].race([window.fetch(c, a).then(b).then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if ("string" != typeof a && a && a.error) throw Error(a.error);
                    return a
                }), k.delay(a.timeout || r).then(function() {
                    throw Error("Fetch request to " + c + " rejected by timeout");
                })]) :
                h["default"].reject(Error("Url is not defined in fetch request"))
        }

        function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = "",
                c = function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (Array.isArray(a[c])) {
                        if (a[c].length) {
                            var d = a[c].map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return c + "=" + a
                            }).join("&");
                            b += "" + (b.length ? "&" : "") + d
                        }
                    } else b += "" + (b.length ? "&" : "") + c + "=" + encodeURIComponent(a[c])
                },
                d;
            for (d in a) c(d);
            return b
        }
        var h = (c = a("babel-runtime/core-js/promise")) && c.__esModule ? c : {
                "default": c
            },
            f = (c = a("babel-runtime/core-js/json/stringify")) && c.__esModule ? c : {
                "default": c
            };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var n = a("lodash"),
            k = a("./util"),
            m = a("./config"),
            p = a("./message"),
            r = 1E4;
        k.isBg() && p.on("fetch", function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return e(a).then(b, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b({
                    error: a.message
                })
            })
        });
        b.transformOptions = d;
        b.fetch = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {};
            return b.url = a, d(b), k.isBg() || m.isTestsMode() ? e(b) : p.promiseBackground("fetch", b).then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (n.isObject(a) && a.error) throw Error(a.error);
                return a
            })
        };
        b.paramStr = g
    }, {
        "./config": 167,
        "./message": 171,
        "./util": 198,
        "babel-runtime/core-js/json/stringify": 16,
        "babel-runtime/core-js/promise": 24,
        lodash: "lodash"
    }],
    183: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        c = a("babel-runtime/helpers/defineProperty");
        var e = d(c);
        c = a("babel-runtime/core-js/object/assign");
        var g = d(c);
        c = a("babel-runtime/core-js/object/keys");
        var h = d(c);
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var f = a("lodash"),
            n = a("lib/util");
        b.observeStore = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = a.getState();
                f.isEmpty(c) || f.isEqual(d, c) ||
                    (d = c, b(c))
            }
            var d = void 0;
            return n.asyncCall(c), a.subscribe(c)
        };
        b.bindActions = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return (0, h["default"])(a).filter(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a[b]
            }).reduce(function(c, d) {
                return (0, g["default"])(c, (0, e["default"])({}, d, function() {
                    var c = a[d].apply(a, arguments),
                        e = "undefined" == typeof c.sync || c.sync;
                    return b((0, g["default"])({}, c, {
                        sync: e
                    }))
                }))
            }, {})
        }
    }, {
        "babel-runtime/core-js/object/assign": 17,
        "babel-runtime/core-js/object/keys": 22,
        "babel-runtime/helpers/defineProperty": 29,
        "lib/util": 198,
        lodash: "lodash"
    }],
    184: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (c = a("babel-runtime/core-js/object/assign")) && c.__esModule ? c : {
            "default": c
        };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        c = a("redux-logger");
        var e = a("redux"),
            g = a("lib/message"),
            h = a("universal/bg/store"),
            f = a("./helpers"),
            n = a("../util"),
            k = c({
                level: "debug",
                collapsed: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !0
                },
                predicate: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !1
                }
            }),
            m = {
                page: {},
                connection: {}
            };
        b.createMirrorStore = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {},
                c = arguments[2],
                q = e.createStore(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a =
                        0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : m,
                        b = arguments[1],
                        e = (a.page || a.config || {}).domain;
                    return b.sync && g.emitBackground("dispatch", (0, d["default"])({}, b, {
                        domain: e
                    })), "store/SYNC" === b.type ? (0, d["default"])({}, a, b.data) : c ? c(a, b) : a
                }, {}, e.applyMiddleware(k));
            b = f.bindActions((0, d["default"])({}, h.pureActions, b), q.dispatch);
            return g.on("state", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                n.asyncCall(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return q.dispatch({
                        type: "store/SYNC",
                        data: a
                    })
                }, 0)
            }), f.observeStore(q, a), {
                store: q,
                actions: b
            }
        }
    }, {
        "../util": 198,
        "./helpers": 183,
        "babel-runtime/core-js/object/assign": 17,
        "lib/message": 171,
        redux: "redux",
        "redux-logger": "redux-logger",
        "universal/bg/store": 214
    }],
    185: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (c = a("babel-runtime/helpers/typeof")) && c.__esModule ? c : {
                "default": c
            },
            e = (c = a("babel-runtime/core-js/json/stringify")) && c.__esModule ? c : {
                "default": c
            };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var g = a("./dom"),
            h = a("./message"),
            f = a("./console");
        b.api = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = [];
                return (0, e["default"])(a, function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if ("object" === ("undefined" ==
                            typeof c ? "undefined" : (0, d["default"])(c)) && null !== c) {
                        if (-1 !== b.indexOf(c)) return;
                        b.push(c)
                    }
                    return c
                })
            }
            "bg-reload reset qa-relogin disable-auth enable-auth disable-defs enable-defs disable-domain enable-domain uninstall set-popup-url set-premium-user set-fake-capi run-fake-capi disable-send-state-to-tabs enable-send-state-to-tabs".split(" ").forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                g.listen(document, a, function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h.emitBackground(a, b.value)
                })
            });
            g.listen(document, "get-extid", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                h.emitBackground("get-extid", {}, function(a) {
                    return g.emitDomEvent("extid",
                        a)
                })
            });
            g.listen(document, "get-ext-uuid", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                h.emitBackground("get-ext-uuid", {}, function(a) {
                    return g.emitDomEvent("ext-uuid", a)
                })
            });
            g.listen(document, "get-capi-log", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                h.emitBackground("get-capi-log", {}, function(a) {
                    return g.emitDomEvent("capi-log", a)
                })
            });
            g.listen(document, "get-tracker-log", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                h.emitBackground("get-tracker-log", {}, function(a) {
                    return g.emitDomEvent("tracker-log", a)
                })
            });
            g.listen(document, "get-console-log", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                g.emitDomEvent("console-log", a(f.flushLog()))
            });
            g.listen(document, "get-localforage", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                h.emitBackground("get-localforage", {}, function(a) {
                    return g.emitDomEvent("localforage", a)
                })
            });
            g.listen(document, "set-localforage", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                h.emitBackground("set-localforage", {
                    key: a.key,
                    value: a.value
                }, function(a) {
                    return g.emitDomEvent("localforage", a)
                })
            });
            g.listen(document, "get-pref", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = a.key;
                h.emitBackground("get-pref", {
                    key: b
                }, function(a) {
                    return g.emitDomEvent("pref", {
                        key: b,
                        value: a
                    })
                })
            });
            g.listen(document, "set-prefs", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                h.emitBackground("set-pref", {
                    key: a.key,
                    value: a.value
                })
            })
        }
    }, {
        "./console": 168,
        "./dom": 169,
        "./message": 171,
        "babel-runtime/core-js/json/stringify": 16,
        "babel-runtime/helpers/typeof": 34
    }],
    186: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var d = {};
        b.timers = {
            start: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                d[a] = Date.now()
            },
            stop: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = this.passed(a);
                return delete d[a], b
            },
            passed: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && d[a] ? Date.now() - d[a] : 0
            }
        }
    }, {}],
    187: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (c = a("babel-runtime/regenerator")) && c.__esModule ? c : {
                "default": c
            },
            e = (c = a("babel-runtime/core-js/promise")) &&
            c.__esModule ? c : {
                "default": c
            },
            g = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c || (c = e["default"]))(function(e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            h(d.next(a))
                        } catch (D) {
                            f(D)
                        }
                    }

                    function l(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            h(d["throw"](a))
                        } catch (D) {
                            f(D)
                        }
                    }

                    function h(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? e(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(g, l)
                    }
                    h((d = d.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var h = a("cookie"),
            f = a("../location"),
            n = a("../config"),
            k = a("../util"),
            m = a("../config"),
            p = a("./tracker"),
            r = a("./logger"),
            l = a("@grammarly-npm/gnarclientweb"),
            q = a("@grammarly-npm/telemetry.ts");
        b.init = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return g(this, void 0, void 0, d["default"].mark(function u() {
                return d["default"].wrap(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (;;) switch (a.prev = a.next) {
                        case 0:
                            try {
                                var b = p.tracker(),
                                    c = window.fetch.bind(window),
                                    d = q.LoggingImpl.DefaultLogAppender.createRootLogger("gnar", q.Logging.LogLevel.INFO, new q.LoggingImpl.GetFelogClient(n.URLS.newFelog, n.appName, n.getVersion(), n.ENV, c)),
                                    e = q.TimeSeriesImpl.MetricsStorage.createRoot("gnar", n.URLS.newFelog, c),
                                    f = new l.BackendStorage(c, m.GNAR.url),
                                    g = new l.ChromeCookieStorage(m.GNAR.url, m.GNAR.domain),
                                    h = new l.WebExtensionsCookieStorage(m.GNAR.url, m.GNAR.domain),
                                    u = new l.ContainerIdManager(k.isChrome() ? g : k.isFF() ? h : f, [new l.CookieStorage(m.GNAR.domain), new l.LocalStorage, new l.MemoryStorage], d.getLogger("containerId"), e.getCounter("containerId"), k.isChrome() ? 1E3 : 5E3);
                                var v = new l.GnarClientImpl(m.GNAR.url, n.gnarAppName, m.getVersion(), c, u, d, e, !0);
                                b.gnar = v
                            } catch (G) {
                                r.logger.gnarClientInitFail(G && G.message)
                            }
                        case 1:
                        case "end":
                            return a.stop()
                    }
                }, u, this)
            }))
        };
        b.processCookiesFromGrammarly = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a.dapi;
            var b = {
                path: "/",
                domain: f.getDomain(),
                expires: new Date((new Date).setFullYear((new Date).getFullYear() + 1))
            };
            a && (h("__fngrprnt__", null), h("__fngrprnt__", a, b))
        };
        b.getContainerIdOrUndefined = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return g(void 0, void 0, void 0, d["default"].mark(function u() {
                return d["default"].wrap(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (;;) switch (a.prev = a.next) {
                        case 0:
                            return a.prev = 0, a.next = 3, p.tracker().gnar.getContainerId();
                        case 3:
                            return a.abrupt("return", a.sent);
                        case 6:
                            return a.prev =
                                6, a.t0 = a["catch"](0), a.abrupt("return", void 0);
                        case 9:
                        case "end":
                            return a.stop()
                    }
                }, u, this, [
                    [0, 6]
                ])
            }))
        }
    }, {
        "../config": 167,
        "../location": 170,
        "../util": 198,
        "./logger": 193,
        "./tracker": 196,
        "@grammarly-npm/gnarclientweb": 3,
        "@grammarly-npm/telemetry.ts": 6,
        "babel-runtime/core-js/promise": 24,
        "babel-runtime/regenerator": 35,
        cookie: "cookie"
    }],
    188: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }

        function e(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b = arguments.length, c = Array(1 < b ? b - 1 : 0), d = 1; d < b; d++) c[d - 1] = arguments[d];
            var e =
                function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    console.warn("tracking call " + a + " failed, reason: ", b)
                };
            if (k.isBg()) k.asyncCall(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b;
                try {
                    switch (console.info(a, c), a) {
                        case f.CALL_HANDLER_ID:
                            var d = c[0],
                                l = c.slice(1);
                            (b = f.methods)[d].apply(b, (0, h["default"])(l));
                            break;
                        default:
                            g(a, c)
                    }
                } catch (C) {
                    e(C)
                }
            }, 20);
            else {
                var l = void 0,
                    q = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return clearInterval(l)
                    };
                l = window.setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    q();
                    e("timeout call through bg page")
                }, 1E4);
                n.emitBackground("tracking-call", {
                    msg: a,
                    data: c
                }, q)
            }
        }

        function g(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = a.split("."),
                d = c.pop();
            return (c = c.reduce(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b in a ? a[b] : {}
            }, m.tracker())) && d && c[d] ? void c[d].apply(c, (0, h["default"])(b)) : console.error("No method " + a + " in tracker object")
        }
        c = a("babel-runtime/core-js/object/assign");
        c = (d(c), a("babel-runtime/helpers/toConsumableArray"));
        var h = d(c);
        c = a("babel-runtime/core-js/object/keys");
        c = d(c);
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var f, n = a("../message"),
            k = a("../util"),
            m = a("./tracker"),
            p = a("./felogPixel"),
            r = a("../config"),
            l = a("./felogClient"),
            q = a("lib/request");
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = k.isBg() ? new l.DefaultFelogClient(r.URLS.newFelog, r.appName, r.getVersion(), r.ENV, q.fetch.bind(window)) : void 0;
            ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.sendFelog = function(a, c, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (!b) throw Error("felogClient unavailable");
                    b.sendEvent(a, c, d, e)["catch"](function(f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return p.sendEventPixel(a, c, d, e, b.getContext())
                    })
                };
                a.sendFelogUsageEvent = function(a, c, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (!b) throw Error("felogClient unavailable");
                    b.sendUsageEvent(a, c, d, e)["catch"](function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return p.sendEventPixel(a, c, d)
                    })
                };
                a.setUserId = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b &&
                        b.setUserId(a)
                };
                a.setContainerId = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b && b.setContainerId(a)
                }
            }(a.methods || (a.methods = {}));
            a.CALL_HANDLER_ID = "tracking/RPC"
        }(f || (f = {}));
        b.callBgPage = (0, c["default"])(f.methods).reduce(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a[b] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var a = arguments.length, c = Array(a), d = 0; d < a; d++) c[d] = arguments[d];
                return e.apply(void 0, [f.CALL_HANDLER_ID, b].concat(c))
            }, a
        }, {});
        var t = [];
        b.call = e;
        b.getLog = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = t.slice(0);
            return t.length = 0, a
        }
    }, {
        "../config": 167,
        "../message": 171,
        "../util": 198,
        "./felogClient": 190,
        "./felogPixel": 191,
        "./tracker": 196,
        "babel-runtime/core-js/object/assign": 17,
        "babel-runtime/core-js/object/keys": 22,
        "babel-runtime/helpers/toConsumableArray": 33,
        "lib/request": 182
    }],
    189: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (a = a("babel-runtime/core-js/json/stringify")) && a.__esModule ? a : {
            "default": a
        };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var e;
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a[a.INFO = 0] = "INFO";
            a[a.WARN = 1] = "WARN";
            a[a.ERROR = 2] = "ERROR"
        }(e = b.LogLevel || (b.LogLevel = {}));
        (function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.toFelogString = function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                switch (b) {
                    case a.INFO:
                        return "INFO";
                    case a.WARN:
                        return "WARN";
                    case a.ERROR:
                        return "ERROR";
                    default:
                        throw new TypeError("Unrecognized log level " + b);
                }
            }
        })(e = b.LogLevel || (b.LogLevel = {}));
        b.felogRequestUrl = function(a, b, c, n, k, m, p, r, l) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = {
                message: m,
                logger: k,
                level: e.toFelogString(p),
                application: a,
                version: b,
                userId: l && l.userId,
                containerId: l && l.containerId,
                env: c
            };
            return r && (a.extra = r), n + "/log?json=" + encodeURIComponent((0, d["default"])(a))
        };
        b.felogUsageRequestUrl = function(a, b, c, n, k, m, p, r) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = {
                message: m,
                logger: k,
                level: e.toFelogString(p),
                application: a,
                version: b,
                env: c,
                extra_usage: r
            };
            return n + "/log?json=" + encodeURIComponent((0, d["default"])(a))
        }
    }, {
        "babel-runtime/core-js/json/stringify": 16
    }],
    190: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        c = a("babel-runtime/core-js/object/assign");
        var e = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var g = d(c);
        c = a("babel-runtime/helpers/createClass");
        var h = d(c);
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var f = a("@grammarly-npm/telemetry.ts/lib/timeseries_impl"),
            n = a("./felog"),
            k = a("lib/util");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(b, c, d, e, h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, g["default"])(this, a);
                this._baseUrl = b;
                this._appName = c;
                this._appVersion = d;
                this._env = e;
                this._fetch = h;
                this._context = {
                    userId: void 0,
                    containerId: void 0
                };
                this._metrics = f.MetricsStorage.createRoot(this._env + "." + this._appName, this._baseUrl, this._fetch)
            }
            return (0, h["default"])(a, [{
                    key: "setUserId",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this._context = (0, e["default"])({}, this._context, {
                            userId: a
                        })
                    }
                }, {
                    key: "setContainerId",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this._context = (0, e["default"])({}, this._context, {
                            containerId: a
                        })
                    }
                },
                {
                    key: "getContext",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return this._context
                    }
                }, {
                    key: "sendEvent",
                    value: function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return this._fetch(n.felogRequestUrl(this._appName, this._appVersion, this._env, this._baseUrl, a, b, c, d, this._context), {
                            mode: "no-cors",
                            method: "get",
                            cache: "no-cache"
                        }).then(function(a) {})["catch"](function(a) {})
                    }
                }, {
                    key: "sendUsageEvent",
                    value: function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var e = {
                            domain: d.domain,
                            accountType: d.accountType,
                            fieldType: d.fieldType,
                            fieldSupported: d.fieldSupported
                        };
                        if (this._context.containerId || this._context.userId) e.groupInfo =
                            k.normalizedHashCode((this._context.containerId || this._context.userId) + d.domain, 1E9);
                        return this._fetch(n.felogUsageRequestUrl(this._appName, this._appVersion, this._env, this._baseUrl, a, b, c, e), {
                            mode: "no-cors",
                            method: "get",
                            cache: "no-cache"
                        }).then(function(a) {})["catch"](function(a) {})
                    }
                }, {
                    key: "sendCounter",
                    value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this._metrics.getCounter(a).increment(b)
                    }
                }, {
                    key: "sendTimer",
                    value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this._metrics.getTimer(a).recordTime(b)
                    }
                }
            ]), a
        }();
        b.DefaultFelogClient = a
    }, {
        "./felog": 189,
        "@grammarly-npm/telemetry.ts/lib/timeseries_impl": 11,
        "babel-runtime/core-js/object/assign": 17,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        "lib/util": 198
    }],
    191: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = (c = a("babel-runtime/core-js/promise")) && c.__esModule ? c : {
                "default": c
            };
            Object.defineProperty(b, "__esModule", {
                value: !0
            });
            var e = a("../newConfig"),
                g = a("./felog");
            b.sendEventPixel = function(a, b, c, k, m) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return document.createElement("img").src = g.felogRequestUrl(e.appName, e.getVersion(), e.ENV, e.URLS.newFelog, a, b, c, k, m), d["default"].resolve()
            }
        },
        {
            "../newConfig": 172,
            "./felog": 189,
            "babel-runtime/core-js/promise": 24
        }
    ],
    192: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b = arguments.length, c = Array(1 < b ? b - 1 : 0), d = 1; d < b; d++) c[d - 1] = arguments[d];
            if (g.isBg()) {
                if (!k[a]) return console.error("No handler specified for message: " + a);
                g.asyncCall(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b;
                    return (b = k)[a].apply(b, c)
                }, 20)
            } else h.emitBackground("tracking-fire", {
                msg: a,
                data: c
            })
        }
        var e = (c = a("babel-runtime/helpers/toConsumableArray")) && c.__esModule ? c : {
            "default": c
        };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var g = a("../util"),
            h = a("../message"),
            f = a("./call"),
            n = a("./logger");
        b.logger = n.logger;
        c = a("./call");
        b.call = c.call;
        b.getLog = c.getLog;
        var k = {};
        b.initBg = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a("./bgonly"),
                c = b.init;
            b = b.processCookiesFromGrammarly;
            c()["catch"](function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return n.logger.bgTrackingInitFail()
            });
            k = a("./on").on;
            h.on("tracking-fire", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = a.data;
                return d.apply(void 0, [a.msg].concat((0, e["default"])(b)))
            });
            h.on("tracker-init", b);
            h.on("tracking-call", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = a.data,
                    c = 1 < arguments.length &&
                    void 0 !== arguments[1] ? arguments[1] : g._f;
                f.call.apply(f, [a.msg].concat((0, e["default"])(b)));
                c()
            });
            d("activity-ping")
        };
        b.fire = d;
        b.initContentScript = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = 0,
                c = a("cookie");
            c["default"] && (c = c["default"]);
            var d = setInterval(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b++;
                    b > e && clearInterval(d);
                    var a = {
                        gnar: c("gnar_containerId"),
                        dapi: c("__fngrprnt__")
                    };
                    clearInterval(d);
                    h.emitBackground("tracker-init", a)
                }, 500),
                e = 10
        }
    }, {
        "../message": 171,
        "../util": 198,
        "./bgonly": 187,
        "./call": 188,
        "./logger": 193,
        "./on": 194,
        "babel-runtime/helpers/toConsumableArray": 33,
        cookie: "cookie"
    }],
    193: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            window.addEventListener("error", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b.logger.unhandledBgPageException(a)
            });
            window.addEventListener("unhandledrejection", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b.logger.unhandledBgPageRejection(a)
            })
        }
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        c = a("./call");
        var e = a("./telemetry");
        a = a("../newConfig");
        b.logger = new e.Telemetry(c.callBgPage.sendFelog.bind(c.callBgPage), c.callBgPage.sendFelogUsageEvent.bind(c.callBgPage), c.callBgPage.setUserId.bind(c.callBgPage),
            c.callBgPage.setContainerId.bind(c.callBgPage));
        a.isBg() && (console.info("Installing unhandled error loggers..."), d())
    }, {
        "../newConfig": 172,
        "./call": 188,
        "./telemetry": 195
    }],
    194: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        var e;
        c = a("babel-runtime/helpers/defineProperty");
        c = d(c);
        var g = a("babel-runtime/regenerator"),
            h = d(g);
        g = a("babel-runtime/helpers/slicedToArray");
        var f = d(g);
        g = a("babel-runtime/core-js/promise");
        var n = d(g),
            k = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c || (c = n["default"]))(function(e,
                    f) {
                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            l(d.next(a))
                        } catch (D) {
                            f(D)
                        }
                    }

                    function h(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            l(d["throw"](a))
                        } catch (D) {
                            f(D)
                        }
                    }

                    function l(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? e(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(g, h)
                    }
                    l((d = d.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var m = a("../util"),
            p = a("./call"),
            r = a("./logger"),
            l = a("universal/bg/prefs"),
            q = a("extension-api");
        b.on = (e = {}, (0, c["default"])(e, "activity-ping", function() {}), (0, c["default"])(e, "daily-ping", function(a, b) {
                return k(this, void 0, void 0, h["default"].mark(function x() {
                    var c,
                        d, e, g, k, t, n;
                    return h["default"].wrap(function(h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (;;) switch (h.prev = h.next) {
                            case 0:
                                if (a) {
                                    h.next = 2;
                                    break
                                }
                                return h.abrupt("return");
                            case 2:
                                return p.call("gnar.pingMaybe"), c = new l.PrefsImpl(q.getGlobalExtensionApi().preferences), h.next = 6, c.get("pingDate");
                            case 6:
                                if (d = h.sent, "string" != typeof d && (d = ""), e = d.split("|"), g = (0, f["default"])(e, 2), k = g[0], t = g[1], n = b ? "cookiesDisabled" : a, !(k && k > Date.now() && t === n)) {
                                    h.next = 12;
                                    break
                                }
                                return h.abrupt("return");
                            case 12:
                                return r.logger.dailyPing(), h.next = 15, c.set("pingDate", [m.getNextPingDate(), n].join("|"));
                            case 15:
                            case "end":
                                return h.stop()
                        }
                    }, x, this)
                }))
            }), (0, c["default"])(e, "app_signin_success", function(a) {
                p.call("gnar.track", "userLoginForm/accepted", {
                    placement: a
                })
            }), (0, c["default"])(e, "app_signup_success", function(a) {
                p.call("gnar.track", "userAccountSignupForm/accepted", {
                    placement: a
                })
            }), (0, c["default"])(e, "signin-error", function(a) {
                a.errorType = "Server-Side";
                p.call("gnar.track", "userLoginForm/rejected")
            }), (0, c["default"])(e, "signup-error", function(a) {
                a.errorType = "Server-Side";
                p.call("gnar.track", "userAccountSignupForm/rejected")
            }), (0, c["default"])(e, "upgrade-after-register", function() {
                return k(this, void 0, void 0, h["default"].mark(function u() {
                    return h["default"].wrap(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (;;) switch (a.prev = a.next) {
                            case 0:
                                p.call("gnar.track", "Account_Type_Selected");
                            case 1:
                            case "end":
                                return a.stop()
                        }
                    }, u, this)
                }))
            }), (0, c["default"])(e, "hook-clicked", function(a) {
                p.call("gnar.track", "upgradeHookClicked", {
                    placement: a
                });
                r.logger.userUpgradeClick(a)
            }), (0, c["default"])(e, "correct-btn-clicked",
                function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    p.call("gnar.track", "gbuttonClicked");
                    r.logger.gButtonClick()
                }), (0, c["default"])(e, "btn-disable-in-field", function(a) {
                p.call("gnar.track", "checkingInFieldToggled", {
                    enabled: a
                });
                r.logger.checkingToggledInField(a)
            }), (0, c["default"])(e, "button-change-state", function() {}), (0, c["default"])(e, "login-attempt", function(a) {
                p.call("gnar.track", "signInClicked", {
                    placement: a
                })
            }), (0, c["default"])(e, "show-dictionary", function() {
                p.call("gnar.track", "showDictionary")
            }), (0, c["default"])(e, "referral-shown",
                function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    p.call("gnar.track", "referral/referralNotificationShown", {
                        placement: a
                    })
                }), (0, c["default"])(e, "referral-clicked", function(a) {
                p.call("gnar.track", "referral/referralButtonClicked", {
                    placement: a
                })
            }), (0, c["default"])(e, "tab-connected", function(a, b, c, d, e, f) {
                b = b.enabled;
                (this["daily-ping"](a.id, c.cookiesDisabled), b || !0 === f) || (r.logger.disabledTabLoad(e, a.type), p.call("gnar.track", "NotEnabledOnDomain"));
                !0 === b && !1 === d && r.logger.disabledTabByUserLoad(e, a.type)
            }), (0, c["default"])(e, "session-invalidate",
                function(a, b, c, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    e = a.id;
                    var f = a.anonymous;
                    a = a.isTest;
                    e !== b.id && (p.call("gnar.setUser", e, a), this["daily-ping"](e, d));
                    c && r.logger.sessionInvalidated(c, e !== b.id);
                    b.email && !b.anonymous && f && r.logger.unexpectedAnonymous({
                        email: b.email,
                        token: b.token,
                        grauth: b.grauth,
                        tokenEqualsGrauth: b.token === b.grauth,
                        cookiesDisabled: d,
                        reason: c
                    })
                }), (0, c["default"])(e, "set-dapi-prop", function(a, b) {
                r.logger.dapiPropInitialized(a, b)
            }), (0, c["default"])(e, "change-dialect", function(a) {
                p.call("gnar.track", "languageStrongPreference",
                    a)
            }), (0, c["default"])(e, "change-defs", function(a) {
                p.call("gnar.track", "definitionsToggled", a);
                r.logger.toggleExtensionDefs(a.enabled)
            }), (0, c["default"])(e, "checking-toggled", function(a) {
                p.call("gnar.track", "checkingToggled", a);
                r.logger.toggleExtension(a.enabled, a.placement)
            }), (0, c["default"])(e, "disable-until-next-visit", function() {
                p.call("gnar.track", "disableUntilNextVisit");
                r.logger.disableUntilNextVisit()
            }), (0, c["default"])(e, "disable-button-click", function() {
                p.call("gnar.track", "disableButtonClick");
                r.logger.disableButtonClick()
            }), (0, c["default"])(e, "popup-open", function() {
                p.call("gnar.track", "browserToolbarButtonClicked")
            }), (0, c["default"])(e, "popup-open-on-unsupported", function() {
                p.call("gnar.track", "browserToolbarButtonClicked/unsupported")
            }), (0, c["default"])(e, "cookie-overflow", function(a, b) {
                r.logger.cookieOverflow(a, b)
            }), (0, c["default"])(e, "premium-popup-show", function() {
                p.call("gnar.track", "upgradeReferralPopupShown")
            }), (0, c["default"])(e, "premium-popup-upgrade-click", function() {
                p.call("gnar.track",
                    "upgradeReferralPremiumBtnClicked")
            }), (0, c["default"])(e, "premium-popup-referral-click", function() {
                p.call("gnar.track", "upgradeReferralInviteBtnClicked")
            }), (0, c["default"])(e, "email-perception-popup-show", function(a) {
                p.call("gnar.track", "askForFeedback-popup-show", {
                    isFirstShown: a
                });
                r.logger.emailPerceptionPopupShow()
            }), (0, c["default"])(e, "email-perception-popup-cancel", function(a) {
                p.call("gnar.track", "askForFeedback-popup-cancel", {
                    isFirstShown: a
                });
                r.logger.emailPerceptionPopupCancel()
            }), (0, c["default"])(e,
                "email-perception-button-hover",
                function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    p.call("gnar.track", "askForFeedback-button-hover");
                    r.logger.emailPerceptiongButtonHover()
                }), (0, c["default"])(e, "email-perception-learn-more-click", function() {
                p.call("gnar.track", "emailPerceptionOptInLearnMore-button-click")
            }), (0, c["default"])(e, "email-perception-disable-click", function() {
                p.call("gnar.track", "dontShowEmailPerceptionAgain-button-click")
            }), (0, c["default"])(e, "onboarding-popup-show", function() {
                p.call("gnar.track", "onboarding-popup-show");
                r.logger.onboardingPopupShow()
            }),
            (0, c["default"])(e, "onboarding-popup-cancel", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                p.call("gnar.track", "onboarding-popup-cancel");
                r.logger.onboardingPopupCancel()
            }), (0, c["default"])(e, "onboardingTutorial-popup-show", function() {
                p.call("gnar.track", "onboardingTutorial-popup-show");
                r.logger.onboardingTutorialShow()
            }), (0, c["default"])(e, "onboardingTutorialNext-button-click", function() {
                p.call("gnar.track", "onboardingTutorialNext-button-click")
            }), (0, c["default"])(e, "onboardingTutorialPersonalize-button-click", function() {
                p.call("gnar.track",
                    "onboardingTutorialPersonalize-button-click")
            }), (0, c["default"])(e, "onboardingTutorialSave-button-click", function() {
                p.call("gnar.track", "onboardingTutorialSave-button-click")
            }), (0, c["default"])(e, "onboardingTutorialLetsWrite-button-click", function() {
                p.call("gnar.track", "onboardingTutorialLetsWrite-button-click")
            }), e)
    }, {
        "../util": 198,
        "./call": 188,
        "./logger": 193,
        "babel-runtime/core-js/promise": 24,
        "babel-runtime/helpers/defineProperty": 29,
        "babel-runtime/helpers/slicedToArray": 32,
        "babel-runtime/regenerator": 35,
        "extension-api": 159,
        "universal/bg/prefs": 204
    }],
    195: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        c = a("babel-runtime/core-js/json/stringify");
        var e = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var g = d(c);
        c = a("babel-runtime/helpers/createClass");
        var h = d(c);
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var f = a("./felog");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(b, c, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var h = this;
                (0, g["default"])(this, a);
                this._sendFelog = b;
                this._sendFelogUsage = c;
                this._setUserId = d;
                this._setContainerId = e;
                this.pageLoadTimeout = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.connection.failover.pageLoad.timeout", "content script init failed", f.LogLevel.ERROR)
                };
                this.appLoadTimeout = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.connection.failover.appLoad.timeout", "extension init timed out", f.LogLevel.ERROR)
                };
                this.differentStateDomain = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.state.differentDomain", "received state for different domain", f.LogLevel.INFO, {
                        stateDomain: a
                    })
                };
                this.restoredBgConnection = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.connection.bg.restored", "bg page connection restored",
                        f.LogLevel.INFO, {
                            timeWithoutConnection: a
                        })
                };
                this.initWithoutBgConnection = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.connection.bg.disconnected", "no connection to bg page", f.LogLevel.INFO)
                };
                this.fetchDefinitionsFail = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.connection.api.definition.failed", "definitions fetch failed", f.LogLevel.WARN)
                };
                this.infinityCheckResetFail = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.connection.infiniteCheck.failed", "infinite check reset failed", f.LogLevel.ERROR, {
                        delay: a
                    })
                };
                this.tooLongPageConfigInit = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.pageConfig.init.exceeded",
                        "page config init timeout", f.LogLevel.WARN, {
                            initTime: a
                        })
                };
                this.tooLongUserUpdateTime = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.state.user.update.exceeded", "user state update took too long", f.LogLevel.WARN, {
                        updateTime: a
                    })
                };
                this.lostBgPageConnection = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.gbutton.bg\u0421onnection.lost", "gbutton connection to bg page lost", f.LogLevel.INFO)
                };
                this.restoreBgPageConnection = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.gbutton.bg\u0421onnection.restored", "gbutton connection to bg page restored", f.LogLevel.INFO, {
                        time: a
                    })
                };
                this.badCursorPosition =
                    function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        h._send("cs.editor.badCursorPosition", "incorrect cursor position in grammarly-editor", f.LogLevel.INFO)
                    };
                this.cursorJump = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.editor.cursorJump", "cursor jump detected", f.LogLevel.WARN)
                };
                this.signinOpen = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.signin.open", "sign in dialog opened", f.LogLevel.INFO)
                };
                this.signinClose = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.signin.close", "sign in dialog closed", f.LogLevel.INFO, {
                        openTime: a
                    })
                };
                this.tabReloadClick = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.gbutton.reload.click", "gbutton reload clicked",
                        f.LogLevel.WARN)
                };
                this.popupLoadError = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.popup.load.error", "could not open pop-up editor", f.LogLevel.ERROR, {
                        message: a,
                        name: b
                    })
                };
                this.loginNoBgPageConnection = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("debug.cs.connection.signin.bg.timeout", "can not connect to bg page on login", f.LogLevel.INFO, {
                        message: a
                    })
                };
                this.pageConfigCDNError = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.pageConfig.cdn.error", "could not read page config", f.LogLevel.ERROR, {
                        message: a
                    })
                };
                this.pageConfigLocalStorageError = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.pageConfig.localStorage.error",
                        "could not read page config from localStorage", f.LogLevel.INFO, {
                            message: a,
                            name: b
                        })
                };
                this.pageConfigUpdated = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.pageConfig.updated", "page config updated", f.LogLevel.INFO, {
                        oldVersion: a,
                        newVersion: b
                    })
                };
                this.settingsPopupTimeout = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("settings.popup.init.timeout", "settings popup open timeout", f.LogLevel.WARN)
                };
                this.settingsUsupportedShow = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("settings.popup.state.unsupported.show", "page unsupported message shown", f.LogLevel.INFO, {
                        popupType: a
                    })
                };
                this.settingsPopupToggled =
                    function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        h._send("settings.popup.experiment.toggle", "settings popup disabled/enabled for experiment on /personalize page", f.LogLevel.INFO, {
                            isPopupDisabled: a
                        })
                    };
                this.socketBgError = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.socket.error", "bg page socket error", f.LogLevel.WARN)
                };
                this.capiNotAuthorizedLoop = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("debug.socket.notAuthorizedLoop", "could not authenticate on capi and auth", f.LogLevel.INFO, {
                        authDegradation: a,
                        cookiesDisabled: b
                    })
                };
                this.socketDisabledCookie = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("debug.socket.disabledCookies",
                        "disabled cookies after failed authentication", f.LogLevel.INFO)
                };
                this.socketBgRestored = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("debug.bg.socket.restored", "capi session restored", f.LogLevel.INFO, {
                        tryCount: a
                    })
                };
                this.socketBgReconnectFail = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.socket.reconnect.fail", "could not restore ws connection", f.LogLevel.WARN, {
                        token: a,
                        tryCount: b
                    })
                };
                this.socketCsError = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.socket.error", "content script socket error", f.LogLevel.WARN)
                };
                this.soketCsErrorMsg = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.socket.errorMsg",
                        "capi error", f.LogLevel.WARN, {
                            message: a
                        })
                };
                this.gnarClientInitFail = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("gnar.bg.tracking.gnar.init.fail", "gnar init failed", f.LogLevel.WARN, {
                        message: a
                    })
                };
                this.bgTrackingInitFail = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("debug.tracking.init.fail", "bg page tracking library init failed", f.LogLevel.INFO)
                };
                this.dailyPing = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("debug.dailyPing", "daily ping", f.LogLevel.INFO)
                };
                this.userUpgradeClick = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.ui.action.upgradeClick", "upgrade hook clicked", f.LogLevel.INFO, {
                        placement: a
                    })
                };
                this.gButtonClick = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.ui.gbutton.click", "gbutton clicked", f.LogLevel.INFO)
                };
                this.checkingToggledInField = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.ui.gbutton.toggleInField", "checking toggled in field", f.LogLevel.INFO, {
                        enabled: a
                    })
                };
                this.sessionInvalidated = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.session.invalidated", "user session invalidated", f.LogLevel.INFO, {
                        reason: a,
                        userChanged: b
                    })
                };
                this.unexpectedAnonymous = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("debug.bg.session.unexpectedAnonymous", "user changed to anonymous", f.LogLevel.INFO, a)
                };
                this.dapiPropInitialized = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.settings.dapi.prop.init", "save property to the DAPI", f.LogLevel.INFO, {
                        name: a,
                        value: b
                    })
                };
                this.getDapiPropError = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.connection.dapi.getProp.error", "could not get dapi property", f.LogLevel.WARN, {
                        property: a,
                        body: b
                    })
                };
                this.setDapiPropError = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.connection.dapi.setProp.error", "could not set dapi property", f.LogLevel.WARN, {
                        property: a,
                        body: b
                    })
                };
                this.toggleExtensionDefs = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.settings.definitions.toggle",
                        "definitions toggled for domain", f.LogLevel.INFO, {
                            enabled: a
                        })
                };
                this.toggleExtension = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.settings.extension.toggle", "extension toggled for domain", f.LogLevel.INFO, {
                        enabled: a,
                        placement: b
                    })
                };
                this.disableUntilNextVisit = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.gbutton.disableUntilNextVisit", "extension temporary disabled on the current tab", f.LogLevel.INFO)
                };
                this.disableButtonClick = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.gbutton.disableButtonClick", "clicked on disable button in gButton", f.LogLevel.INFO)
                };
                this.cookieOverflow =
                    function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        h._send("debug.bg.state.cookie.overflow", "cookie is too big", f.LogLevel.INFO, {
                            size: a,
                            biggestCookie: b
                        })
                    };
                this.externalChangePlan = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.api.external.changePlan", "plan changed from editor", f.LogLevel.INFO)
                };
                this.externalChangeDialect = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.api.external.changeDialect", "dialect changed from editor", f.LogLevel.INFO)
                };
                this.externalChangeUser = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.api.external.changeUsed", "user changed from editor", f.LogLevel.INFO)
                };
                this.externalLogout = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.api.external.logout",
                        "user logged out form editor", f.LogLevel.INFO)
                };
                this.externalEnableEmailPerception = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.api.external.enableEmailPerception", "user enabled email perception feature on the funnel", f.LogLevel.INFO)
                };
                this.bgPageStartFail = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.start.fail", "bg page start failed", f.LogLevel.ERROR, {
                        message: a,
                        stack: b
                    })
                };
                this.bgPageInitTimeout = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.state.start.timeout", "bg page init timeout", f.LogLevel.WARN, {
                        initTime: a
                    })
                };
                this.bgPageInitFail = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.state.init.fail",
                        "bg page init failed", f.LogLevel.ERROR, {
                            initAttempts: a
                        })
                };
                this.extensionUpdated = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.state.updated", "extension updated", f.LogLevel.INFO, {
                        currentVersion: a,
                        previousVersion: b
                    })
                };
                this.extensionUpdateFail = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.state.update.fail", "extension update failed", f.LogLevel.INFO, {
                        previousVersion: a
                    })
                };
                this.cannotGetInstallSource = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.getSource.fail", "failed to get extension install source", f.LogLevel.WARN)
                };
                this.extensionInstall = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.state.install",
                        "extension installed", f.LogLevel.INFO, {
                            source: a
                        })
                };
                this.chromeForcedToUpdate = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.chrome.forcedToUpdate", "chrome forced update", f.LogLevel.INFO, {
                        newVersion: a
                    })
                };
                this.chromeContentScriptLoadError = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.chrome.cs.load.error", "content script execution error", f.LogLevel.WARN, {
                        message: a,
                        type: b
                    })
                };
                this.reloadNotificationShow = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.ui.notification.tabsReload.show", "extension reload notification shown", f.LogLevel.WARN)
                };
                this.reloadNotificationClick =
                    function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        h._send("bg.ui.notification.tabsReload.click", "reload notification clicked", f.LogLevel.INFO)
                    };
                this.fetchUserFail = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.user.fetch.fail", "failed to update user", f.LogLevel.WARN, {
                        body: b,
                        statusCode: c,
                        reason: a
                    })
                };
                this.fetchMimicFail = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.user.mimic.fail", "mimic request failed", f.LogLevel.WARN, {
                        body: a,
                        statusCode: b
                    })
                };
                this.fetchCookieFail = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.cookie.fail", "could not get grauth from cookie", f.LogLevel.WARN)
                };
                this.fetchSettingsFail =
                    function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        h._send("bg.user.settings.fail", "could not get settings from auth", f.LogLevel.WARN, {
                            body: a,
                            statusCode: b
                        })
                    };
                this.frequentCookieChanges = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("debug.cookie.onChange.error", "cookie change too frequent", f.LogLevel.INFO, {
                        canceled: a
                    })
                };
                this.initializePropFromDapi = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.state.dapi.prop.initialize", "set property from dapi", f.LogLevel.INFO, {
                        name: a
                    })
                };
                this.emailPerceptionPopupShow = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.emailPerception.popup.show", "show email perception popup on gmail/inbox domain",
                        f.LogLevel.INFO)
                };
                this.emailPerceptionPopupCancel = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.emailPerception.popup.cancel", "user canceled email perception popup on gmail/inbox", f.LogLevel.INFO)
                };
                this.emailPerceptiongButtonHover = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.emailPerception.gbutton.hover", "user hovered gButton and ask for feedback btn is shown on gmail/inbox", f.LogLevel.INFO)
                };
                this.onboardingPopupShow = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.onboarding.popup.show", "show onboarding popup to user after first time extension install", f.LogLevel.INFO)
                };
                this.onboardingPopupCancel = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.onboarding.popup.cancel", "user canceled onboarding popup", f.LogLevel.INFO)
                };
                this.onboardingTutorialShow = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.onboarding.tutorial.show", "opened onboarding dialog after popup", f.LogLevel.INFO)
                };
                this.onboardingVideoLoaded = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.onboarding.tutorial.video.loaded", "load video data for onboarding tutorial", f.LogLevel.INFO)
                };
                this.saveEmailFeedbackError = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.emailfeedback.save.error", "failed to save email feedback",
                        f.LogLevel.INFO, {
                            body: a
                        })
                };
                this.incognitoInit = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.incognito.init", "extension initialized in incognito mode", f.LogLevel.INFO)
                };
                this.disabledCookiesInit = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.cookie.disabled", "extension initialized with disabled cookies", f.LogLevel.INFO)
                };
                this.proxyInit = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._sendWithProbability(.05, "proxy.init", "proxy script initialized", f.LogLevel.INFO)
                };
                this.proxyPortDisconnected = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._sendWithProbability(.05, "proxy.disconnect", "proxy port disconnected", f.LogLevel.INFO, {
                        port: a,
                        error: b
                    })
                };
                this.unhandledBgPageException = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.unhandledException", "unhandled exception on background page", f.LogLevel.ERROR, {
                        message: a.error ? a.error.message : a.message
                    })
                };
                this.unhandledBgPageRejection = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.unhandledRejection", "unhandled promise rejection on background page", f.LogLevel.ERROR, {
                        message: null != a.reason ? "string" == typeof a.reason ? a.reason : a.reason.message : void 0
                    })
                };
                this.storageMigrationSucceeded = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.storageMigration.success",
                        "storage migration succeeded", f.LogLevel.INFO, {})
                };
                this.storageMigrationFailed = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("bg.storageMigration.failure", "storage migration failed", f.LogLevel.ERROR, {
                        message: a && a.message
                    })
                };
                this.cardShowAction = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._sendWithProbability(.1, "cs.editor.card.show", "show card action", f.LogLevel.INFO)
                };
                this.cardHideAction = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._sendWithProbability(.1, "cs.editor.card.hide", "hide card action", f.LogLevel.INFO)
                };
                this.cardReplacementAction = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._sendWithProbability(.1, "cs.editor.card.replacement",
                        "click on the replacement in the card", f.LogLevel.INFO)
                };
                this.cardAddToDictAction = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._sendWithProbability(.1, "cs.editor.card.addToDict", "click add to dictionary button in the card", f.LogLevel.INFO)
                };
                this.cardIgnoreAction = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._sendWithProbability(.1, "cs.editor.card.ignore", "click ignore button in the card", f.LogLevel.INFO)
                };
                this.synonymCardShowAction = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._sendWithProbability(.1, "cs.editor.synonym.show", "show synonymous card action", f.LogLevel.INFO, {
                        notFoundCard: a
                    })
                };
                this.synonymCardHideAction =
                    function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        h._sendWithProbability(.1, "cs.editor.synonym.hide", "hide synonymous card action", f.LogLevel.INFO, {
                            notFoundCard: a
                        })
                    };
                this.synonymReplacementAction = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._sendWithProbability(.1, "cs.editor.synonym.replacement", "click on the replacement in the synonym", f.LogLevel.INFO)
                };
                this.dictCardShowAction = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._sendWithProbability(.1, "cs.editor.dict.show", "show dictionary card action", f.LogLevel.INFO)
                };
                this.dictCardHideAction = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._sendWithProbability(.1, "cs.editor.dict.hide",
                        "hide dictionary card action", f.LogLevel.INFO)
                };
                this.couldNotParseTransform = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._send("cs.cards.transforms.parse.error", "Could not parse transform in inline cards", f.LogLevel.WARN, {
                        transformHTML: a,
                        fallbackParseSuccessful: b
                    })
                };
                this.disabledTabLoad = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._sendUsage("usage.loadOnDisabledTab", "tab load event with disabled extension", f.LogLevel.INFO, {
                        domain: a,
                        accountType: b
                    })
                };
                this.disabledTabByUserLoad = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._sendUsage("usage.loadOnDisabledByUserTab", "tab load event with disabled by user extension",
                        f.LogLevel.INFO, {
                            domain: a,
                            accountType: b
                        })
                };
                this.initSession = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._sendUsage("usage.session.init", "init in the field", f.LogLevel.INFO, {
                        domain: a,
                        accountType: b,
                        fieldType: c,
                        fieldSupported: d
                    })
                };
                this.cardFirstInteraction = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h._sendUsage("usage.card.interaction", "interaction with card in the field", f.LogLevel.INFO, {
                        domain: a,
                        accountType: b,
                        fieldType: c
                    })
                }
            }
            return (0, h["default"])(a, [{
                key: "_send",
                value: function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var f = void 0;
                    try {
                        f = (0, e["default"])(d)
                    } catch (q) {
                        f = "Failed to stringify event properties: '" +
                            q + "', '" + (q && q.message) + "'", console.warn(f, "for " + b + "@" + a)
                    }
                    try {
                        this._sendFelog(a, b, c, null != d ? {
                            json: f
                        } : void 0)
                    } catch (q) {
                        console.warn("Failed to send felog for " + b + "@" + a + ": '" + q + "', '" + (q && q.message) + "'")
                    }
                }
            }, {
                key: "_sendUsage",
                value: function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._sendFelogUsage(a, b, c, d)
                }
            }, {
                key: "_sendWithProbability",
                value: function(a, b, c, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a > Math.random() && this._send(b, c, d, e)
                }
            }, {
                key: "setUserId",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._setUserId(a)
                }
            }, {
                key: "setContainerId",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._setContainerId(a)
                }
            }, {
                key: "notificationShown",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._send("cs.notification.show", "show notification on the page", f.LogLevel.INFO, {
                        type: a
                    })
                }
            }, {
                key: "notificationHide",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._send("cs.notification.hide", "hide notification on the page", f.LogLevel.INFO, {
                        type: a
                    })
                }
            }]), a
        }();
        b.Telemetry = a
    }, {
        "./felog": 189,
        "babel-runtime/core-js/json/stringify": 16,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28
    }],
    196: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        b.tracker = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return window.tracker =
                window.tracker || {}, window.tracker
        }
    }, {}],
    197: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "utm_medium=" + encodeURIComponent("internal") + "&" + ("utm_source=" + encodeURIComponent(a)) + "&" + ("utm_campaign=" + encodeURIComponent(b))
        }
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var e = a("./newConfig");
        b.getSignUpURL = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return e.URLS.signup + "?" + d(a, b)
        };
        b.getSignInURL = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return e.URLS.signin + "?" + ("utm_medium=" + encodeURIComponent("internal"))
        };
        b.getResetPasswordURL = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return e.URLS.resetPassword +
                "?" + ("utm_medium=" + encodeURIComponent("internal"))
        };
        b.getTermsURL = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return e.URLS.terms + "?" + ("utm_medium=" + encodeURIComponent("internal"))
        };
        b.getPrivatePolicyURL = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return e.URLS.policy + "?" + ("utm_medium=" + encodeURIComponent("internal"))
        };
        b.getUpgradeURL = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return e.URLS.upgrade + "?" + d(a, b)
        };
        b.getExtensionSuccessURL = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return e.URLS.welcomeC + "?" + ("utm_medium=" + encodeURIComponent("navigation"))
        };
        b.getAfterInstallURL = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return e.URLS.afterInstall + "/?extension_install=true&" +
                ("utm_medium=" + encodeURIComponent("navigation"))
        };
        b.addParamsToUpgradeURL = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a + "&" + d(b, c)
        }
    }, {
        "./newConfig": 172
    }],
    198: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }

        function e(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    e();
                    a()
                }

                function e() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var e = setTimeout(c, b);
                    d[a] = e
                }
                e()
            }
            var d = e.items = e.items || {},
                f = d[a];
            if (f || b) return f && !b ? (clearTimeout(f), void delete d[a]) : void c()
        }

        function g() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return (65536 * (1 + Math.random()) | 0).toString(16).substring(1)
        }

        function h() {}

        function f(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return new l["default"](function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return setTimeout(b,
                    a)
            })
        }
        c = a("babel-runtime/regenerator");
        var n = d(c);
        c = a("babel-runtime/helpers/toConsumableArray");
        var k = d(c);
        c = a("babel-runtime/helpers/defineProperty");
        var m = d(c);
        c = a("babel-runtime/core-js/object/assign");
        var p = d(c);
        c = a("babel-runtime/core-js/object/keys");
        var r = d(c);
        c = a("babel-runtime/core-js/promise");
        var l = d(c),
            q = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c || (c = l["default"]))(function(e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            k(d.next(a))
                        } catch (O) {
                            f(O)
                        }
                    }

                    function h(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            k(d["throw"](a))
                        } catch (O) {
                            f(O)
                        }
                    }

                    function k(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? e(a.value) :
                            (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                b(a.value)
                            })).then(g, h)
                    }
                    k((d = d.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var t = a("lodash"),
            u = a("non-crypto-hash"),
            v = a("./newConfig");
        a = a("./newConfig");
        b.isTestsMode = a.isTestsMode;
        b.getBrowser = a.getBrowser;
        b.isBg = a.isBg;
        b.isBgOrPopup = a.isBgOrPopup;
        b.isChrome = a.isChrome;
        b.isFF = a.isFF;
        b.isPopup = a.isPopup;
        b.isSafari = a.isSafari;
        b.isEdge = a.isEdge;
        b.isWindows = a.isWindows;
        b.isGrammarlyEmail = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return -1 === ["freeeeeeee@grammarly.com", "premiumuser@grammarly.com"].indexOf(a) &&
                /^.*@grammarly.com$/.test(a)
        };
        b.chromeBgError = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return window.chrome && window.chrome.runtime && window.chrome.runtime.lastError
        };
        b.isFunction = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return !!(a && a.constructor && a.call && a.apply)
        };
        b.interval = e;
        (e = b.interval || (b.interval = {})).items = {};
        b.cancelInterval = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            e(a)
        };
        b.guid = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return g() + g() + "-" + g() + "-" + g() + "-" + g() + "-" + g() + g() + g()
        };
        b._f = h;
        b._F = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return !0
        };
        b.bgPageReload = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            window.chrome && window.chrome.runtime && window.chrome.runtime.reload ? window.chrome.runtime.reload() :
                window.location.reload()
        };
        b.isGmail = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a.location) {
                var b = "mail.google.com" == a.location.host;
                a = a.querySelector("iframe#js_frame") && a.querySelector("iframe#sound_frame");
                return b || a
            }
        };
        b.isValidEmail = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return /^[-!#$%&\'*+\\.\/0-9=?A-Z^_`a-z{|}~]+@[-!#$%&\'*+\\/0-9=?A-Z^_`a-z{|}~]+\.[-!#$%&\'*+\\.\/0-9=?A-Z^_`a-z{|}~]+$/.test(a)
        };
        b.formatNumber = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
        };
        b.declension = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return b[1 == a ? 0 : 1]
        };
        b.stub = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return t.transform(a,
                function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a[b] = h
                })
        };
        b.memoize = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = {};
            return function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var e = "_memoize_" + (b ? b.apply(this, arguments) : arguments[0]);
                return window.hasOwnProperty.call(d, e) ? d[e] : (c && setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    delete d[e]
                }, c), d[e] = a.apply(this, arguments))
            }
        };
        b.syncWait = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return (0, r["default"])(b).reduce(function(c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (0, p["default"])({}, c, (0, m["default"])({}, d, function() {
                    for (var c = arguments.length, e = Array(c), f = 0; f < c; f++) e[f] = arguments[f];
                    return a.then(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return b[d].apply(b,
                            e)
                    })
                }))
            }, {})
        };
        b.promisify = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return new l["default"](function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a(b)
            })
        };
        b.getRandomIntInclusive = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return Math.floor(Math.random() * (b - a + 1)) + a
        };
        b.delay = f;
        var x = "January February March April May June July August September October November December".split(" ");
        b.formatDate = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a && (a = new Date(a), "Invalid Date" !== a.toString())) return x[a.getMonth()] + " " + a.getDate() + ", " + a.getFullYear()
        };
        b.createClass = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = function() {};
            return b.prototype = a(), b
        };
        b.versionComparator =
            function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function a(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a.split(".").map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return Number(a) || 0
                    })
                }
                var b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "",
                    c = a(0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : ""),
                    d = a(b);
                b = Array(Math.abs(c.length - d.length)).fill(0);
                if (c.length > d.length ? d.push.apply(d, (0, k["default"])(b)) : c.push.apply(c, (0, k["default"])(b)), c.every(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a === d[b]
                    })) return 0;
                b = 0;
                for (var e = c.length; b < e; b++) {
                    if (c[b] > d[b]) return 1;
                    if (c[b] < d[b]) break
                }
                return -1
            };
        b.isBgAlive = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return q(this,
                void 0, void 0, n["default"].mark(function I() {
                    return n["default"].wrap(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (a.prev = a.next) {
                                case 0:
                                    if (v.isChrome() || v.isFF()) {
                                        a.next = 2;
                                        break
                                    }
                                    return a.abrupt("return", null);
                                case 2:
                                    return a.prev = 2, a.next = 5, l["default"].race([new l["default"](function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        return window.chrome.runtime.sendMessage("ping", a)
                                    }), f(1E4).then(function(a) {
                                        return "timeouted"
                                    })]);
                                case 5:
                                    return a.abrupt("return", a.sent);
                                case 8:
                                    return a.prev = 8, a.t0 = a["catch"](2), a.abrupt("return", "orphaned");
                                case 11:
                                case "end":
                                    return a.stop()
                            }
                        },
                        I, this, [
                            [2, 8]
                        ])
                }))
        };
        b.asyncCall = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            setTimeout(a, 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 10)
        };
        b.createChannel = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = (0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}).buffered,
                b = void 0 === a || a,
                c = [],
                d = [];
            return {
                take: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return c.length ? l["default"].resolve(c.shift()) : new l["default"](function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return d.push(a)
                    })
                },
                put: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    0 < d.length ? d.shift()(a) : b ? c.push(a) : c[0] = a
                }
            }
        };
        b.normalizedHashCode = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = 1 < arguments.length && void 0 !== arguments[1] ?
                arguments[1] : 100;
            if (!a) return NaN;
            var c = u.createHash("superfasthash");
            return parseInt(c.hash(a), 16) % b
        };
        b.keyCode = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.which || a.charCode || a.keyCode || 0
        };
        b.NBSP_RE = new RegExp(String.fromCharCode(160), "g");
        var w = String.fromCharCode(160),
            z = /\n/g,
            y = /\s$/g,
            A = new RegExp("\n" + String.fromCharCode(32), "g");
        b.br = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a = a.replace(A, "<br>" + w).replace(z, "<br>"), b && (a = a.replace(y, w)), a
        };
        b.trimLeft = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.replace(/^\s+/, "")
        };
        b.trimRight = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.replace(/\s+$/,
                "")
        };
        b.SECOND = 1E3;
        b.MINUTE = 60 * b.SECOND;
        b.HOUR = 60 * b.MINUTE;
        b.DAY = 24 * b.HOUR;
        b.ESC_KEY = 27;
        b.ENTER_KEY = 13;
        b.pastDays = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return Math.round(Math.abs(+new Date - +new Date(a)) / b.DAY)
        };
        b.getNextPingDate = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = new Date;
            return 2 < a.getHours() && a.setDate(a.getDate() + 1), a.setHours(3), a.setMinutes(Math.floor(60 * Math.random())), a.getTime()
        };
        b.escapeRegExp = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&")
        }
    }, {
        "./newConfig": 172,
        "babel-runtime/core-js/object/assign": 17,
        "babel-runtime/core-js/object/keys": 22,
        "babel-runtime/core-js/promise": 24,
        "babel-runtime/helpers/defineProperty": 29,
        "babel-runtime/helpers/toConsumableArray": 33,
        "babel-runtime/regenerator": 35,
        lodash: "lodash",
        "non-crypto-hash": "non-crypto-hash"
    }],
    199: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (c = a("babel-runtime/core-js/array/from")) && c.__esModule ? c : {
                "default": c
            },
            e = (a = a("babel-runtime/helpers/toConsumableArray")) && a.__esModule ? a : {
                "default": a
            };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        b.flatMap = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c;
            return (c = []).concat.apply(c, (0, e["default"])(b.map(a)))
        };
        b.scan = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var d = [b], e = 0; e < c.length; e++) b = a(b, c[e]), d.push(b);
            return d
        };
        b.maximum = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.reduce(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b > a ? b : a
            }, a[0])
        };
        b.maximumBy = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return 0 === a.length ? void 0 : a.reduce(function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = b(c);
                return d > a[1] ? [c, d] : a
            }, [a[0], b(a[0])])[0]
        };
        b.reverse = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.slice().reverse()
        };
        b.partition = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var c = [], d = [], e = 0, g = 0, h = 0; h < b.length; h++) a(b[h]) ? c[e++] = b[h] : d[g++] = b[h];
            return [c, d]
        };
        b.chunkBySize = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (1 > a) throw Error("Invalid chunk size, expected > 0");
            if (0 === b.length) return [
                []
            ];
            for (var c = [], d = 0; d < Math.ceil(b.length / a); d++) c.push(b.slice(d * a, (d + 1) * a));
            return c
        };
        b.unfold = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = [];
            for (b = a(b); void 0 !== b;) c.push(b[0]), b = a(b[1]);
            return c
        };
        b.range = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return void 0 !== b ? (0, d["default"])(Array(b - a), function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return c + a
            }) : (0, d["default"])(Array(a), function(a, b) {
                return b
            })
        }
    }, {
        "babel-runtime/core-js/array/from": 13,
        "babel-runtime/helpers/toConsumableArray": 33
    }],
    200: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        c = a("babel-runtime/core-js/object/get-prototype-of");
        var e = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var g = d(c);
        c = a("babel-runtime/helpers/possibleConstructorReturn");
        var h = d(c);
        a = a("babel-runtime/helpers/inherits");
        var f = d(a);
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var n = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (0, g["default"])(this, b), (0, h["default"])(this, (b.__proto__ || (0, e["default"])(b)).call(this, "Assertion failed: " + (a ? "string" == typeof a ? a : a() : "(unnamed)")))
            }
            return (0, f["default"])(b,
                a), b
        }(Error);
        b.AssertionError = n;
        b.assert = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a) throw new n(b);
        };
        b.assertNonNull = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (null == a) throw new n(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b ? "Expected " + b + " to be non-null" : "Expected non-null"
            });
            return a
        }
    }, {
        "babel-runtime/core-js/object/get-prototype-of": 21,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/inherits": 30,
        "babel-runtime/helpers/possibleConstructorReturn": 31
    }],
    201: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }

        function e(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.some(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a ===
                    b
            }) ? b : void 0
        }

        function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = parseInt(a, 10);
            return isNaN(a) ? void 0 : a
        }
        c = a("babel-runtime/core-js/object/get-prototype-of");
        var h = d(c);
        c = a("babel-runtime/helpers/possibleConstructorReturn");
        var f = d(c);
        c = a("babel-runtime/helpers/inherits");
        var n = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var k = d(c);
        c = a("babel-runtime/helpers/createClass");
        var m = d(c);
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        c = a("./assert");
        b.assert = c.assert;
        b.assertNonNull = c.assertNonNull;
        b.AssertionError = c.AssertionError;
        c = a("./promise");
        b.SafePromise = c.SafePromise;
        c = a("./array");
        b.Arr = c;
        a = a("./object");
        b.Obj = a;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, k["default"])(this, a);
                this._getFallbackValue = b
            }
            return (0, m["default"])(a, [{
                    key: "init",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (void 0 !== this._value) throw Error("Global value already initialized.");
                        this._value = a
                    }
                }, {
                    key: "get",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (void 0 === this._value) {
                            if (void 0 === this._getFallbackValue) throw Error("Global value not initialized and no fallback value provided.");
                            this._value = this._getFallbackValue()
                        }
                        return this._value
                    }
                }]),
                a
        }();
        b.Global = a;
        b.optionalStringUnion = e;
        b.assertStringUnion = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = e(a, b);
            if (void 0 !== a) return a;
            throw new TypeError('Unrecognized string union value "' + b + '"' + (c ? " for " + c : ""));
        };
        var p = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (0, k["default"])(this, b), (0, f["default"])(this, (b.__proto__ || (0, h["default"])(b)).call(this, "Matching not exhaustive" + (a ? ": unexpected value " + a : "")))
            }
            return (0, n["default"])(b, a), b
        }(Error);
        b.MatchingNotExhaustiveError = p;
        b.assertNever = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            throw new p(a);
        };
        b.optionalIntString =
            g;
        b.assertIntString = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = g(a);
            if (void 0 !== c) return c;
            throw Error("Expected a number string, got '" + a + "'" + (void 0 !== b ? " for " + b : ""));
        };
        b.try_ = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            try {
                return a()
            } catch (q) {
                return b(q)
            }
        }
    }, {
        "./array": 199,
        "./assert": 200,
        "./object": 202,
        "./promise": 203,
        "babel-runtime/core-js/object/get-prototype-of": 21,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        "babel-runtime/helpers/inherits": 30,
        "babel-runtime/helpers/possibleConstructorReturn": 31
    }],
    202: [function(a,
        c, b) {
        var d = (a = a("babel-runtime/core-js/object/keys")) && a.__esModule ? a : {
            "default": a
        };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        b.map = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = {};
            return (0, d["default"])(b).forEach(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return c[d] = a(d, b[d])
            }), c
        };
        b.filter = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = {};
            return (0, d["default"])(b).forEach(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a(d, b[d]) && (c[d] = b[d])
            }), c
        };
        b.values = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return (0, d["default"])(a).map(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a[b]
            })
        };
        b.pairs = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return (0, d["default"])(a).map(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return [b, a[b]]
            })
        }
    }, {
        "babel-runtime/core-js/object/keys": 22
    }],
    203: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (a = a("babel-runtime/core-js/promise")) && a.__esModule ? a : {
            "default": a
        };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new d["default"](a)
            }
            a.create = b;
            a.createCompletionSource = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = void 0,
                    b = void 0;
                return {
                    promise: new d["default"](function(c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a = c;
                        b = d
                    }),
                    resolve: function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a(b)
                    },
                    reject: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        b(a)
                    }
                }
            };
            a.sync = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return b(a())
                })
            }
        }(b.SafePromise || (b.SafePromise = {}))
    }, {
        "babel-runtime/core-js/promise": 24
    }],
    204: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        c = a("babel-runtime/core-js/json/stringify");
        var e = d(c);
        c = a("babel-runtime/core-js/object/keys");
        var g = d(c);
        c = a("babel-runtime/helpers/typeof");
        var h = d(c);
        c = a("babel-runtime/helpers/defineProperty");
        var f = d(c);
        c = a("babel-runtime/core-js/object/assign");
        var n = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var k = d(c);
        c = a("babel-runtime/regenerator");
        var m = d(c);
        a = a("babel-runtime/core-js/promise");
        var p = d(a),
            r = function(a, b, c,
                d) {
                return new(c || (c = p["default"]))(function(e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            k(d.next(a))
                        } catch (I) {
                            f(I)
                        }
                    }

                    function h(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            k(d["throw"](a))
                        } catch (I) {
                            f(I)
                        }
                    }

                    function k(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? e(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(g, h)
                    }
                    k((d = d.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var l = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return r(void 0, void 0, void 0, m["default"].mark(function v() {
                var c;
                return m["default"].wrap(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (;;) switch (d.prev = d.next) {
                        case 0:
                            return d.prev = 0, d.next = 3, b.get(a);
                        case 3:
                            if (c =
                                d.sent, "undefined" !== c) {
                                d.next = 8;
                                break
                            }
                            return d.abrupt("return", void 0);
                        case 8:
                            return d.abrupt("return", c && JSON.parse(c));
                        case 9:
                            d.next = 19;
                            break;
                        case 11:
                            if (d.prev = 11, d.t0 = d["catch"](0), !d.t0 || !d.t0.toString().includes("SyntaxError")) {
                                d.next = 18;
                                break
                            }
                            throw b.remove(a), Error("'" + a + "' has unparseable value, removing");
                        case 18:
                            throw d.t0;
                        case 19:
                        case "end":
                            return d.stop()
                    }
                }, v, this, [
                    [0, 11]
                ])
            }))
        };
        b.PrefsImpl = function t(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = this;
            (0, k["default"])(this, t);
            this._api = a;
            this.get = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return r(b, void 0,
                    void 0, m["default"].mark(function z() {
                        var b, c, d, e = this;
                        return m["default"].wrap(function(g) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (g.prev = g.next) {
                                case 0:
                                    if (b = Array.isArray(a), c = void 0, g.prev = 2, !b) {
                                        g.next = 11;
                                        break
                                    }
                                    return g.next = 7, p["default"].all(a.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        return l(a, e._api)
                                    }));
                                case 7:
                                    d = g.sent;
                                    c = a.reduce(function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        return (0, n["default"])(a, (0, f["default"])({}, b, d[c]))
                                    }, {});
                                    g.next = 15;
                                    break;
                                case 11:
                                    return g.next = 14, l(a, this._api);
                                case 14:
                                    c = g.sent;
                                case 15:
                                    g.next = 21;
                                    break;
                                case 17:
                                    g.prev = 17, g.t0 = g["catch"](2), b && (c = {}), console.warn("prefs get error:", g.t0);
                                case 21:
                                    return g.abrupt("return", c);
                                case 22:
                                case "end":
                                    return g.stop()
                            }
                        }, z, this, [
                            [2, 17]
                        ])
                    }))
            };
            this.set = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return r(b, void 0, void 0, m["default"].mark(function y() {
                    var b = this;
                    return m["default"].wrap(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (;;) switch (d.prev = d.next) {
                            case 0:
                                if (null === a || "object" !== ("undefined" == typeof a ? "undefined" : (0, h["default"])(a))) {
                                    d.next = 5;
                                    break
                                }
                                return d.next = 3, p["default"].all((0, g["default"])(a).map(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return b.set(c, a[c])
                                }));
                            case 3:
                                d.next =
                                    14;
                                break;
                            case 5:
                                return d.prev = 5, c = void 0 === c ? "undefined" : (0, e["default"])(c), d.next = 9, this._api.set(a, c);
                            case 9:
                                d.next = 14;
                                break;
                            case 11:
                                d.prev = 11, d.t0 = d["catch"](5), console.warn("prefs set error", d.t0);
                            case 14:
                            case "end":
                                return d.stop()
                        }
                    }, y, this, [
                        [5, 11]
                    ])
                }))
            };
            this.all = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return r(b, void 0, void 0, m["default"].mark(function w() {
                    var a, b, c;
                    return m["default"].wrap(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (;;) switch (d.prev = d.next) {
                            case 0:
                                return d.next = 2, this._api.getAll();
                            case 2:
                                a = d.sent;
                                for (b in a)
                                    if ("undefined" === a[b]) a[b] =
                                        void 0;
                                    else try {
                                        c = a[b], a[b] = c && JSON.parse(c)
                                    } catch (I) {}
                                return d.abrupt("return", a);
                            case 5:
                            case "end":
                                return d.stop()
                        }
                    }, w, this)
                }))
            };
            this.remove = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                try {
                    return b._api.remove(a)
                } catch (w) {
                    return console.warn("prefs remove error", w), p["default"].resolve()
                }
            };
            this.clearAll = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                try {
                    return b._api.removeAll()["catch"](function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return console.warn("prefs clearAll error", a)
                    })
                } catch (x) {
                    return console.warn("prefs clearAll error", x), p["default"].resolve()
                }
            }
        }
    }, {
        "babel-runtime/core-js/json/stringify": 16,
        "babel-runtime/core-js/object/assign": 17,
        "babel-runtime/core-js/object/keys": 22,
        "babel-runtime/core-js/promise": 24,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/defineProperty": 29,
        "babel-runtime/helpers/typeof": 34,
        "babel-runtime/regenerator": 35
    }],
    205: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c = (c = a("babel-runtime/core-js/object/assign")) && c.__esModule ? c : {
            "default": c
        };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var d = a("./user/actions"),
            e = a("./settings/actions");
        a = a("./connection/actions");
        b.pureActions =
            (0, c["default"])({}, d, a, e)
    }, {
        "./connection/actions": 206,
        "./settings/actions": 208,
        "./user/actions": 212,
        "babel-runtime/core-js/object/assign": 17
    }],
    206: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        b.t = {
            UPDATE_CONNECTION: "connection/UPDATE_CONNECTION",
            ONLINE_STATE: "connection/ONLINE_STATE"
        };
        b.updateConnection = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.UPDATE_CONNECTION,
                data: a
            }
        };
        b.onlineConnection = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.ONLINE_STATE,
                online: a
            }
        }
    }, {}],
    207: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = (c = a("babel-runtime/core-js/object/assign")) &&
                c.__esModule ? c : {
                    "default": c
                };
            Object.defineProperty(b, "__esModule", {
                value: !0
            });
            var e = a("./actions");
            b.defaultConnection = {
                networkOffline: !window.navigator.onLine,
                cookiesDisabled: !1 === navigator.cookieEnabled,
                online: !0
            };
            b.connectionReducer = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : b.defaultConnection,
                    c = arguments[1],
                    f = c.data,
                    n = c.online;
                switch (c.type) {
                    case e.t.ONLINE_STATE:
                        return (0, d["default"])({}, a, {
                            online: n
                        });
                    case e.t.UPDATE_CONNECTION:
                        return (0, d["default"])({}, a, f);
                    default:
                        return a
                }
            }
        },
        {
            "./actions": 206,
            "babel-runtime/core-js/object/assign": 17
        }
    ],
    208: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        b.t = {
            SETTINGS_INITIAL: "settings/SETTINGS_INITIAL",
            TOGGLE_DEFS: "settings/TOGGLE_DEFS",
            TOGGLE_SITE: "settings/TOGGLE_SITE",
            TOGGLE_FIELD: "settings/TOGGLE_FIELD",
            TOGGLE_POPUP: "settings/TOGGLE_POPUP",
            DISABLE_ON_TAB: "settings/DISABLE_ON_TAB",
            SHOW_DISABLE_REMINDER: "settings/SHOW_DISABLE_REMINDER",
            SHOW_NEWS: "settings/SHOW_NEWS",
            SEEN_NEWS: "settings/SEEN_NEWS",
            SEEN_REFERRALS: "settings/SEEN_REFERRALS",
            CLICK_REFERRALS: "settings/CLICK_REFERRALS",
            SHOW_ONBOARDING: "settings/SHOW_ONBOARDING",
            SEEN_ONBOARDING: "settings/SEEN_ONBOARDING",
            SET_DAPI_PROP: "settings/SET_DAPI_PROP",
            CHANGE_STRONG_DIALECT: "settings/CHANGE_STRONG_DIALECT",
            SAVE_ANONYMOUS_PROPERTIES: "settings/SAVE_ANONYMOUS_PROPERTIES",
            ENABLE_EMAIL_FEEDBACK: "settings/ENABLE_EMAIL_FEEDBACK",
            SAVE_FEEDBACK_DATA: "settings/SAVE_FEEDBACK_DATA",
            SEEN_EMAIL_PERCEPTION_POPUP: "settings/EMAIL_PERCEPTION_POPUP_SEEN",
            SET_EMAIL_PERCEPTION_POPUP_STATE: "settings/SET_EMAIL_PERCEPTION_POPUP_STATE"
        };
        b.DAPI_ACTIONS = [b.t.CHANGE_STRONG_DIALECT];
        b.CACHED_ACTIONS = [b.t.TOGGLE_DEFS, b.t.TOGGLE_SITE, b.t.TOGGLE_FIELD, b.t.SEEN_NEWS, b.t.SEEN_REFERRALS, b.t.CLICK_REFERRALS, b.t.SHOW_ONBOARDING, b.t.SEEN_ONBOARDING, b.t.SEEN_EMAIL_PERCEPTION_POPUP, b.t.SET_EMAIL_PERCEPTION_POPUP_STATE, b.t.SHOW_DISABLE_REMINDER];
        b.setDapiProp = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.SET_DAPI_PROP,
                propKey: a,
                data: c
            }
        };
        b.changeStrongDialect = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.CHANGE_STRONG_DIALECT,
                data: a
            }
        };
        b.initialSettings = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.SETTINGS_INITIAL,
                data: a
            }
        };
        b.toggleDefs = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.TOGGLE_DEFS,
                enabledDefs: a
            }
        };
        b.toggleSite = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.TOGGLE_SITE,
                domain: c,
                enabled: a
            }
        };
        b.toggleField = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.TOGGLE_FIELD,
                domain: c,
                data: a
            }
        };
        b.seenNews = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.SEEN_NEWS
            }
        };
        b.showOnboarding = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.SHOW_ONBOARDING
            }
        };
        b.seenOnboarding = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.SEEN_ONBOARDING
            }
        };
        b.showNews = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.SHOW_NEWS,
                showNews: a
            }
        };
        b.seenReferrals = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.SEEN_REFERRALS
            }
        };
        b.clickReferrals = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.CLICK_REFERRALS
            }
        };
        b.togglePopup = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.TOGGLE_POPUP,
                isPopupDisabled: a
            }
        };
        b.enableEmailFeedback = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.ENABLE_EMAIL_FEEDBACK,
                domain: a
            }
        };
        b.saveAnonymousProps = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.SAVE_ANONYMOUS_PROPERTIES,
                props: a
            }
        };
        b.seenEmailPerceptionPopup = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.SEEN_EMAIL_PERCEPTION_POPUP,
                seenEmailPerceptionPopupDate: a
            }
        };
        b.disableEmailPerceptionPopup = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.SET_EMAIL_PERCEPTION_POPUP_STATE,
                emailPerceptionPopupEnabled: !1
            }
        };
        b.enableEmailPerceptionPopup = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.SET_EMAIL_PERCEPTION_POPUP_STATE,
                emailPerceptionPopupEnabled: !0
            }
        };
        b.saveFeedbackData = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.SAVE_FEEDBACK_DATA,
                subject: a,
                docId: c
            }
        };
        b.disableOnTab = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.DISABLE_ON_TAB
            }
        };
        b.showDisableReminder = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.SHOW_DISABLE_REMINDER,
                domain: a
            }
        }
    }, {}],
    209: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (c = a("babel-runtime/helpers/defineProperty")) && c.__esModule ? c : {
                "default": c
            },
            e = (c = a("babel-runtime/core-js/object/assign")) &&
            c.__esModule ? c : {
                "default": c
            };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var g = a("lib/config"),
            h = a("./actions");
        b.settingsReducer = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
                b = arguments[1],
                c = b.data;
            c = void 0 === c ? {} : c;
            var m = b.domain,
                p = b.enabledDefs,
                r = b.enabled,
                l = b.showNews,
                q = b.isPopupDisabled,
                t = b.seenEmailPerceptionPopupDate,
                u = b.emailPerceptionPopupEnabled,
                v = b.propKey,
                x = a[m] || {};
            switch (b.type) {
                case h.t.SETTINGS_INITIAL:
                    return (0, e["default"])({}, a, c);
                case h.t.TOGGLE_DEFS:
                    return (0,
                        e["default"])({}, a, {
                        common: (0, e["default"])({}, a.common, {
                            enabledDefs: p
                        })
                    });
                case h.t.TOGGLE_SITE:
                    return (0, e["default"])({}, a, (0, d["default"])({}, m, (0, e["default"])({}, x, {
                        enabled: r,
                        disabledDate: !0 === r ? null : Date.now()
                    })));
                case h.t.TOGGLE_FIELD:
                    return (0, e["default"])({}, a, (0, d["default"])({}, m, (0, e["default"])({}, a[m], {
                        disabledFields: (0, e["default"])({}, x.disabledFields, c)
                    })));
                case h.t.ENABLE_EMAIL_FEEDBACK:
                    return (0, e["default"])({}, a, (0, d["default"])({}, m, (0, e["default"])({}, a[m], {
                        emailFeedbackEnabled: !0
                    })));
                case h.t.SHOW_NEWS:
                    return (0, e["default"])({}, a, {
                        common: (0, e["default"])({}, a.common, {
                            showNews: l
                        })
                    });
                case h.t.SHOW_ONBOARDING:
                    return (0, e["default"])({}, a, {
                        common: (0, e["default"])({}, a.common, {
                            showOnboarding: !0
                        })
                    });
                case h.t.SEEN_ONBOARDING:
                    return (0, e["default"])({}, a, {
                        common: (0, e["default"])({}, a.common, {
                            showOnboarding: !1
                        })
                    });
                case h.t.SEEN_EMAIL_PERCEPTION_POPUP:
                    return (0, e["default"])({}, a, {
                        common: (0, e["default"])({}, a.common, {
                            seenEmailPerceptionPopupDate: t
                        })
                    });
                case h.t.SET_EMAIL_PERCEPTION_POPUP_STATE:
                    return (0,
                        e["default"])({}, a, {
                        common: (0, e["default"])({}, a.common, {
                            emailPerceptionPopupEnabled: u
                        })
                    });
                case h.t.SEEN_NEWS:
                    return (0, e["default"])({}, a, {
                        common: (0, e["default"])({}, a.common, {
                            seenNewsVersion: g.newsId
                        })
                    });
                case h.t.TOGGLE_POPUP:
                    return (0, e["default"])({}, a, {
                        common: (0, e["default"])({}, a.common, {
                            isPopupDisabled: q
                        })
                    });
                case h.t.SEEN_REFERRALS:
                    return (0, e["default"])({}, a, {
                        common: (0, e["default"])({}, a.common, {
                            referralNewsBadge: !0
                        })
                    });
                case h.t.CLICK_REFERRALS:
                    return (0, e["default"])({}, a, {
                        common: (0, e["default"])({},
                            a.common, {
                                referralWasClicked: !0
                            })
                    });
                case h.t.SET_DAPI_PROP:
                    return (0, e["default"])({}, a, {
                        common: (0, e["default"])({}, a.common, (0, d["default"])({}, v, c))
                    });
                case h.t.SHOW_DISABLE_REMINDER:
                    return (0, e["default"])({}, a, (0, d["default"])({}, m, (0, e["default"])({}, x, {
                        disabledDate: Date.now()
                    })));
                default:
                    return a
            }
        }
    }, {
        "./actions": 208,
        "babel-runtime/core-js/object/assign": 17,
        "babel-runtime/helpers/defineProperty": 29,
        "lib/config": 167
    }],
    210: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        b.t = {
            SET_ACTIVE_TAB: "tabs/SET_ACTIVE_TAB"
        };
        b.setActiveTab = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.SET_ACTIVE_TAB,
                data: a
            }
        }
    }, {}],
    211: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (c = a("babel-runtime/core-js/object/assign")) && c.__esModule ? c : {
            "default": c
        };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var e = a("./actions");
        b.tabsReducer = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
                b = arguments[1],
                c = b.data;
            switch (b.type) {
                case e.t.SET_ACTIVE_TAB:
                    return (0, d["default"])({}, a, {
                        active: c
                    });
                default:
                    return a
            }
        }
    }, {
        "./actions": 210,
        "babel-runtime/core-js/object/assign": 17
    }],
    212: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        b.t = {
            SET_USER: "user/SET_USER",
            SET_SETTINGS: "user/SET_SETTINGS",
            SESSION_INVALIDATE: "user/SESSION_INVALIDATE",
            INC_FIXED: "user/INC_FIXED"
        };
        b.setUser = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.SET_USER,
                data: a
            }
        };
        b.setSettings = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.SET_SETTINGS,
                data: a
            }
        };
        b.sessionInvalidate = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.SESSION_INVALIDATE,
                reason: a
            }
        };
        b.incFixed = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: b.t.INC_FIXED
            }
        }
    }, {}],
    213: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (c = a("babel-runtime/core-js/object/assign")) &&
            c.__esModule ? c : {
                "default": c
            };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var e = a("./actions");
        b.defaultUser = {
            anonymous: !0,
            premium: !1
        };
        b.userReducer = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : b.defaultUser,
                c = arguments[1],
                f = c.data;
            f = void 0 === f ? {} : f;
            switch (c.type) {
                case e.t.SET_USER:
                    return f;
                case e.t.SET_SETTINGS:
                    return (0, d["default"])({}, a, {
                        settings: f
                    });
                case e.t.INC_FIXED:
                    return c = a.fixed_errors + 1, (0, d["default"])({}, a, {
                        fixed_errors: c
                    });
                default:
                    return a
            }
        }
    }, {
        "./actions": 212,
        "babel-runtime/core-js/object/assign": 17
    }],
    214: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }

        function e(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = k.combineReducers({
                    user: l.userReducer,
                    tabs: q.tabsReducer,
                    settings: r.settingsReducer,
                    connection: p.connectionReducer
                }),
                c = n({
                    level: "debug",
                    colors: {
                        title: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return "green"
                        }
                    }
                });
            return k.createStore(b, {}, k.applyMiddleware(a, c))
        }
        c = a("babel-runtime/regenerator");
        var g = d(c);
        c = a("babel-runtime/helpers/createClass");
        var h = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var f = d(c);
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var n = a("redux-logger"),
            k = a("redux"),
            m = a("redux-saga"),
            p = a("./state/connection/reducer"),
            r = a("./state/settings/reducer"),
            l = a("./state/user/reducer"),
            q = a("./state/tabs/reducer"),
            t = a("lib/config"),
            u = a("./state/actions");
        c = a("./state/actions");
        b.pureActions = c.pureActions;
        var v = a("redux-saga/effects"),
            x = a("lib/page-config");
        b.AuthSagaRunners = function z(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = this;
            (0, f["default"])(this, z);
            this._store = a;
            this._userSagas = b;
            this.refreshUser =
                function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (var a, b = arguments.length, d = Array(b), e = 0; e < b; e++) d[e] = arguments[e];
                    return (a = c._store).runSaga.apply(a, [c._userSagas.externalUpdateUser.bind(c._userSagas)].concat(d)).done
                };
            this.signin = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return c._store.runSaga(c._userSagas.authRequest.bind(c._userSagas), t.URLS.authSignin, a, "app_signin_success").done
            };
            this.signup = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return c._store.runSaga(c._userSagas.authRequest.bind(c._userSagas), t.URLS.authSignup, a, "app_signup_success").done
            }
        };
        b.TabsSagaRunner = function y(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c =
                this;
            (0, f["default"])(this, y);
            this._store = a;
            this._tabsSagas = b;
            this.sendStateToTabs = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return c._store.runSaga(c._tabsSagas.sendStateToTabs.bind(c._tabsSagas))
            }
        };
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(b, c, d, g) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var h = this;
                (0, f["default"])(this, a);
                this._userSagas = b;
                this._settingsSagas = c;
                this._tabsSagas = d;
                this._connectionSagas = g;
                var l = m["default"](b.start.bind(b), c.start.bind(c), g.start.bind(g));
                this.store = e(l);
                this.runSaga = l.run;
                this.initStore = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return l.run(h._startupFlow.bind(h)).done.then(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        h.store.subscribe(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return l.run(d.sendStateToTabs.bind(d))
                        })
                    })
                };
                this.actions = k.bindActionCreators(u.pureActions, this.store.dispatch)
            }
            return (0, h["default"])(a, [{
                key: "_startupFlow",
                value: g["default"].mark(function F() {
                    return g["default"].wrap(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (;;) switch (a.prev = a.next) {
                            case 0:
                                return a.next = 2, [v.call([this._settingsSagas, this._settingsSagas.setInitialSettings]), v.call([x.pageConfig, x.pageConfig.init]), v.call([this._userSagas, this._userSagas.updateUser], {
                                    failoverFromCache: !0
                                })];
                            case 2:
                                return a.next = 4, v.fork([this._connectionSagas, this._connectionSagas.monitorIsIncognito]);
                            case 4:
                                return a.next = 6, v.call([this._tabsSagas, this._tabsSagas.start]);
                            case 6:
                            case "end":
                                return a.stop()
                        }
                    }, F, this)
                })
            }]), a
        }();
        b.StoreControllerImpl = a
    }, {
        "./state/actions": 205,
        "./state/connection/reducer": 207,
        "./state/settings/reducer": 209,
        "./state/tabs/reducer": 211,
        "./state/user/reducer": 213,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        "babel-runtime/regenerator": 35,
        "lib/config": 167,
        "lib/page-config": 177,
        redux: "redux",
        "redux-logger": "redux-logger",
        "redux-saga": "redux-saga",
        "redux-saga/effects": 141
    }],
    215: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        c = a("babel-runtime/core-js/object/get-prototype-of");
        var e = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var g = d(c);
        c = a("babel-runtime/helpers/createClass");
        var h = d(c);
        c = a("babel-runtime/helpers/possibleConstructorReturn");
        var f = d(c);
        c = a("babel-runtime/helpers/inherits");
        var n = d(c);
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var k = a("react"),
            m = a("lib/dom"),
            p = a("lib/config"),
            r = a("lib/request");
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, g["default"])(this, b);
                var a = (0, f["default"])(this, (b.__proto__ || (0, e["default"])(b)).apply(this, arguments));
                return a.addDocument = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return r.fetch(p.URLS.docsApi, {
                        data: {
                            content: ""
                        },
                        method: "post",
                        headers: {
                            "Content-Type": "application/json"
                        }
                    }).then(function(b) {
                        a.props.openUrl(p.URLS.docs + "/" + b.id)
                    })["catch"](function(a) {
                        console.error("request failed", a)
                    })
                }, a
            }
            return (0, n["default"])(b, a), (0, h["default"])(b, [{
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return k.createElement("div", {
                        className: "footer"
                    }, k.createElement("span", {
                        onClick: this.addDocument,
                        className: m.cs("new_document", "footer_btn")
                    }, "New Document"), k.createElement("a", {
                        href: p.URLS.app,
                        target: "_blank",
                        className: m.cs("my_grammarly", "footer_btn")
                    }, "My Grammarly"))
                }
            }]), b
        }(k.Component);
        b.Footer = a
    }, {
        "babel-runtime/core-js/object/get-prototype-of": 21,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        "babel-runtime/helpers/inherits": 30,
        "babel-runtime/helpers/possibleConstructorReturn": 31,
        "lib/config": 167,
        "lib/dom": 169,
        "lib/request": 182,
        react: "react"
    }],
    216: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var d = a("react"),
            e = a("lib/dom"),
            g = a("lib/config"),
            h = a("lib/util"),
            f = {
                header: "_0cc899-header",
                logo: "_0cc899-logo",
                chrome: "_0cc899-chrome",
                safari: "_0cc899-safari",
                firefox: "_0cc899-firefox"
            };
        b.Header = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.createElement("div", {
                className: f.header
            }, d.createElement("a", {
                target: "_blank",
                href: g.URLS.app,
                className: e.cs(f.logo, f[h.getBrowser()])
            }))
        }
    }, {
        "lib/config": 167,
        "lib/dom": 169,
        "lib/util": 198,
        react: "react"
    }],
    217: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        window.IS_POPUP = document.querySelector(".popup");
        window.IS_POPUP && a("./popup")
    }, {
        "./popup": 219
    }],
    218: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }

        function e() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            u.emitDomEvent("close-popup")
        }

        function g() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            u.emitDomEvent("update-window-size", {
                force: (0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}).force
            })
        }

        function h(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            v.emitBackground("open-url", a);
            e()
        }
        c = a("babel-runtime/helpers/toConsumableArray");
        var f = d(c);
        c = a("babel-runtime/core-js/object/get-prototype-of");
        var n = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var k = d(c);
        c = a("babel-runtime/helpers/createClass");
        var m = d(c);
        c = a("babel-runtime/helpers/possibleConstructorReturn");
        var p = d(c);
        c = a("babel-runtime/helpers/inherits");
        var r = d(c);
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var l = a("react"),
            q = a("react-dom"),
            t = a("react-redux"),
            u = a("lib/dom"),
            v = a("lib/message"),
            x = a("lib/tracking"),
            w = a("./signin"),
            z = a("./settings"),
            y = a("./unsupported"),
            A = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return (0, k["default"])(this, b),
                        (0, p["default"])(this, (b.__proto__ || (0, n["default"])(b)).apply(this, arguments))
                }
                return (0, r["default"])(b, a), (0, m["default"])(b, [{
                    key: "componentDidUpdate",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this.props.resize()
                    }
                }, {
                    key: "componentDidMount",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = this;
                        this.props.resize({
                            force: !0
                        });
                        u.on.call(q.findDOMNode(this), "click", function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var c = b.target;
                            (c = "A" === c.nodeName ? c : c.parentNode && "A" === c.parentNode.nodeName ? c.parentNode : null) && (b.preventDefault(), a.processHrefClick(c))
                        })
                    }
                }, {
                    key: "componentWillMount",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        u.on.call(document,
                            "popup-open", this.props.resize)
                    }
                }, {
                    key: "processHrefClick",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var b = a.href;
                        if (a = a.dataset.fire) a = a.split(", "), x.fire.apply(x, [a[0]].concat((0, f["default"])(a.splice(1))));
                        b && h(b)
                    }
                }, {
                    key: "render",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = this.props,
                            b = a.config,
                            c = b.enabled;
                        b = b.servicePage;
                        a = a.user.anonymous ? l.createElement(w.SigninComponent, null) : c || b ? l.createElement(z.SettingsComponent, a) : l.createElement(y.UnsupportedComponent, a);
                        return l.createElement("div", null, a)
                    }
                }]), b
            }(l.Component);
        b.MainView = A;
        b.renderMainView =
            function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = t.connect(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a
                }, function(a, c) {
                    return {
                        actions: b
                    }
                })(A);
                q.render(l.createElement(t.Provider, {
                    store: a
                }, l.createElement(c, {
                    close: e,
                    resize: g,
                    openUrl: h
                })), document.querySelector(".popup"))
            }
    }, {
        "./settings": 222,
        "./signin": 228,
        "./unsupported": 230,
        "babel-runtime/core-js/object/get-prototype-of": 21,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        "babel-runtime/helpers/inherits": 30,
        "babel-runtime/helpers/possibleConstructorReturn": 31,
        "babel-runtime/helpers/toConsumableArray": 33,
        "lib/dom": 169,
        "lib/message": 171,
        "lib/tracking": 192,
        react: "react",
        "react-dom": "react-dom",
        "react-redux": "react-redux"
    }],
    219: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return n(this, void 0, void 0, h["default"].mark(function u() {
                var a, b, c, d;
                return h["default"].wrap(function(e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            a = !1, k.addClass(document.documentElement, l.getBrowser()), l.isWindows() && k.addClass(document.documentElement, "windows"), b = r.createMirrorStore(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                a || (a = !0, g(c, d))
                            }), c = b.store, d = b.actions, m.emitBackground("tab-connected", {
                                tab: "popup"
                            }), l.asyncCall(function() {
                                return !a && p.logger.settingsPopupTimeout()
                            }, 2E3);
                        case 6:
                        case "end":
                            return e.stop()
                    }
                }, u, this)
            }))
        }

        function e(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = a.user,
                d = a.settings;
            a = a.config.enabled;
            p.fire("popup-open");
            c.anonymous || (a ? (d.showNews && b.seenNews(), c.referral && (p.fire("referral-shown", "menu"), d.referralNewsBadge || b.seenReferrals())) : p.fire("popup-open-on-unsupported"))
        }

        function g(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            console.warn("RENDER FROM", a, b);
            q.renderMainView(a, b);
            l.isSafari() ? document.addEventListener("popup-open",
                function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    e(a.getState(), b);
                    m.emitBackground("tab-connected", {
                        tab: "popup"
                    })
                }) : e(a.getState(), b)
        }
        var h = (c = a("babel-runtime/regenerator")) && c.__esModule ? c : {
                "default": c
            },
            f = (c = a("babel-runtime/core-js/promise")) && c.__esModule ? c : {
                "default": c
            },
            n = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c || (c = f["default"]))(function(e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            k(d.next(a))
                        } catch (D) {
                            f(D)
                        }
                    }

                    function h(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            k(d["throw"](a))
                        } catch (D) {
                            f(D)
                        }
                    }

                    function k(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? e(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(g, h)
                    }
                    k((d = d.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var k = a("lib/dom"),
            m = a("lib/message"),
            p = a("lib/tracking"),
            r = a("lib/store-mirror"),
            l = a("lib/util"),
            q = a("./main-view");
        d()["catch"](function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return console.log("EROROR: POPUP INIT", a.message)
        });
        b.init = d;
        b.track = e
    }, {
        "./main-view": 218,
        "babel-runtime/core-js/promise": 24,
        "babel-runtime/regenerator": 35,
        "lib/dom": 169,
        "lib/message": 171,
        "lib/store-mirror": 184,
        "lib/test-api": 185,
        "lib/tracking": 192,
        "lib/util": 198
    }],
    220: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a &&
                a.__esModule ? a : {
                    "default": a
                }
        }
        c = a("babel-runtime/core-js/object/get-prototype-of");
        var e = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var g = d(c);
        c = a("babel-runtime/helpers/createClass");
        var h = d(c);
        c = a("babel-runtime/helpers/possibleConstructorReturn");
        var f = d(c);
        c = a("babel-runtime/helpers/inherits");
        var n = d(c);
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var k = a("react"),
            m = a("lib/dom"),
            p = a("lib/tracking");
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, g["default"])(this, b);
                var a = (0, f["default"])(this, (b.__proto__ ||
                    (0, e["default"])(b)).apply(this, arguments));
                return a.onEnableDefsClick = function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var c = a.props.toggleDefs;
                    b = b.target.checked;
                    c(b);
                    p.fire("change-defs", {
                        enabled: b
                    })
                }, a
            }
            return (0, n["default"])(b, a), (0, h["default"])(b, [{
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this.props.enabledDefs,
                        b = m.cs("def_switcher", "line", "setting_item", a ? "on" : "off");
                    return k.createElement("div", {
                        className: b
                    }, k.createElement("label", {
                            className: "_a7c193-select_checkbox"
                        }, "Show Definitions and Synonyms ", k.createElement("br", null), "via Double Clicks (All Sites)",
                        k.createElement("input", {
                            className: "_a7c193-checkbox",
                            onChange: this.onEnableDefsClick,
                            checked: a,
                            type: "checkbox"
                        }), k.createElement("div", {
                            className: "_a7c193-checkbox_check"
                        }, k.createElement("div", {
                            className: "_a7c193-checkbox_check_round"
                        }))), k.createElement("div", {
                        className: "short_border"
                    }))
                }
            }]), b
        }(k.Component);
        b.DefsSwitcher = a
    }, {
        "babel-runtime/core-js/object/get-prototype-of": 21,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        "babel-runtime/helpers/inherits": 30,
        "babel-runtime/helpers/possibleConstructorReturn": 31,
        "lib/dom": 169,
        "lib/tracking": 192,
        react: "react"
    }],
    221: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        c = a("babel-runtime/core-js/object/get-prototype-of");
        var e = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var g = d(c);
        c = a("babel-runtime/helpers/createClass");
        var h = d(c);
        c = a("babel-runtime/helpers/possibleConstructorReturn");
        var f = d(c);
        c = a("babel-runtime/helpers/inherits");
        var n = d(c);
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var k = a("react"),
            m = a("lib/dom"),
            p = a("lib/tracking");
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, g["default"])(this, b);
                var a = (0, f["default"])(this, (b.__proto__ || (0, e["default"])(b)).apply(this, arguments));
                return a.onDialectChange = function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var c = a.props.changeStrongDialect;
                    b = b.target.value;
                    c(b);
                    p.fire("change-dialect", {
                        language: b
                    })
                }, a
            }
            return (0, n["default"])(b, a), (0, h["default"])(b, [{
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this.props.dialectStrong || "american",
                        b = m.cs("_177733-line", "_177733-dialect_switcher");
                    return k.createElement("div", {
                        className: b
                    }, k.createElement("span",
                        null, "I write in"), k.createElement("div", {
                        className: "_177733-selectWrap"
                    }, k.createElement("select", {
                        className: "_177733-select",
                        onChange: this.onDialectChange,
                        value: a
                    }, k.createElement("option", {
                        value: "american"
                    }, "American English"), k.createElement("option", {
                        value: "british"
                    }, "British English"))))
                }
            }]), b
        }(k.Component);
        b.DialectLine = a
    }, {
        "babel-runtime/core-js/object/get-prototype-of": 21,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        "babel-runtime/helpers/inherits": 30,
        "babel-runtime/helpers/possibleConstructorReturn": 31,
        "lib/dom": 169,
        "lib/tracking": 192,
        react: "react"
    }],
    222: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        c = a("babel-runtime/helpers/defineProperty");
        var e = d(c);
        c = a("babel-runtime/core-js/object/get-prototype-of");
        var g = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var h = d(c);
        c = a("babel-runtime/helpers/createClass");
        var f = d(c);
        c = a("babel-runtime/helpers/possibleConstructorReturn");
        var n = d(c);
        c = a("babel-runtime/helpers/inherits");
        var k = d(c);
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var m = a("react"),
            p = a("lib/dom"),
            r = a("../header"),
            l = a("../footer"),
            q = a("./news"),
            t = a("./settings-content"),
            u = {
                safari: "safari",
                "gr-popup-wrapper": "gr-popup-wrapper",
                windows: "windows",
                setting_item: "setting_item",
                errors: "errors",
                descr: "descr",
                thin_text: "thin_text",
                footer: "footer",
                gr_popup_settings: "gr_popup_settings",
                footer_btn: "footer_btn",
                line: "line",
                short_border: "short_border",
                top: "top",
                show_news: "show_news",
                news: "news",
                news_content: "news_content",
                close_news: "close_news",
                not_supported: "not_supported",
                checkbox_check: "checkbox_check",
                site_switcher: "site_switcher",
                upgrade: "upgrade",
                def_switcher: "def_switcher",
                on: "on",
                off: "off",
                upgraded: "upgraded",
                content: "content",
                summary: "summary",
                since: "since",
                has_favicon: "has_favicon",
                favicon: "favicon",
                domain: "domain",
                no_fixes: "no_fixes",
                lblCount: "lblCount",
                upgrade_title: "upgrade_title",
                my_grammarly: "my_grammarly",
                new_document: "new_document",
                unsupported_site: "unsupported_site",
                unsupported_item: "unsupported_item",
                unsupported_title: "unsupported_title",
                domain_in_details: "domain_in_details",
                unsupported_temporary: "unsupported_temporary",
                unsupported_permanently: "unsupported_permanently",
                unsupported_grammarly: "unsupported_grammarly",
                diamond: "diamond"
            };
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (0, h["default"])(this, b), (0, n["default"])(this, (b.__proto__ || (0, g["default"])(b)).apply(this, arguments))
            }
            return (0, k["default"])(b, a), (0, f["default"])(b, [{
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a, b = this.props,
                        c = b.user,
                        d = b.settings,
                        f = b.config,
                        g = b.activeTab,
                        h = b.actions;
                    b = b.openUrl;
                    var k = p.cs(u.gr_popup_settings, c.premium ? u.upgraded : u.free, (a = {}, (0, e["default"])(a, u.not_supported, !f.enabled), (0, e["default"])(a, u.no_fixes, !c.fixed_errors || isNaN(c.fixed_errors)), (0, e["default"])(a, u.show_news, d.showNews && f.enabled), (0, e["default"])(a, u.has_favicon, !!g.favIconUrl), a));
                    return m.createElement("div", {
                        className: k
                    }, m.createElement("div", {
                        className: u.content
                    }, m.createElement(r.Header, null), m.createElement(q.News, {
                        showNews: h.showNews
                    }), m.createElement(t.SettingsContent, {
                        actions: h,
                        activeTab: g,
                        config: f,
                        settings: d,
                        user: c
                    }), m.createElement(l.Footer, {
                        openUrl: b
                    })))
                }
            }]), b
        }(m.Component);
        b.SettingsComponent = a
    }, {
        "../footer": 215,
        "../header": 216,
        "./news": 223,
        "./settings-content": 225,
        "babel-runtime/core-js/object/get-prototype-of": 21,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        "babel-runtime/helpers/defineProperty": 29,
        "babel-runtime/helpers/inherits": 30,
        "babel-runtime/helpers/possibleConstructorReturn": 31,
        "lib/dom": 169,
        react: "react"
    }],
    223: [function(a,
        c, b) {
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        c = a("babel-runtime/core-js/object/get-prototype-of");
        var e = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var g = d(c);
        c = a("babel-runtime/helpers/createClass");
        var h = d(c);
        c = a("babel-runtime/helpers/possibleConstructorReturn");
        var f = d(c);
        c = a("babel-runtime/helpers/inherits");
        var n = d(c);
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var k = a("react"),
            m = a("spark-md5"),
            p = a("lib/dom"),
            r = a("lib/config");
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, g["default"])(this,
                    b);
                var a = (0, f["default"])(this, (b.__proto__ || (0, e["default"])(b)).apply(this, arguments));
                return a.closeNews = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a.props.showNews(!1)
                }, a
            }
            return (0, n["default"])(b, a), (0, h["default"])(b, [{
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return k.createElement("div", {
                        className: p.cs("line", "news")
                    }, k.createElement("div", {
                        onClick: this.closeNews,
                        className: "close_news"
                    }), k.createElement("div", {
                        className: "news_content"
                    }, k.createElement("h2", null, "What's new in this update:"), k.createElement("ul", null, r.news.map(function(a) {
                        return k.createElement("li", {
                            key: m.hash(a)
                        }, a)
                    }))))
                }
            }]), b
        }(k.Component);
        b.News = a
    }, {
        "babel-runtime/core-js/object/get-prototype-of": 21,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        "babel-runtime/helpers/inherits": 30,
        "babel-runtime/helpers/possibleConstructorReturn": 31,
        "lib/config": 167,
        "lib/dom": 169,
        react: "react",
        "spark-md5": "spark-md5"
    }],
    224: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        c = a("babel-runtime/core-js/object/get-prototype-of");
        var e = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var g = d(c);
        c = a("babel-runtime/helpers/createClass");
        var h = d(c);
        c = a("babel-runtime/helpers/possibleConstructorReturn");
        var f = d(c);
        c = a("babel-runtime/helpers/inherits");
        var n = d(c);
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var k = a("react"),
            m = a("lib/dom"),
            p = a("lib/config"),
            r = a("lib/util");
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (0, g["default"])(this, b), (0, f["default"])(this, (b.__proto__ || (0, e["default"])(b)).apply(this, arguments))
            }
            return (0, n["default"])(b, a), (0, h["default"])(b, [{
                key: "isRibbonShow",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a =
                        this.props,
                        b = a.extensionInstallDate;
                    return (a = a.registrationDate) && 14 > r.pastDays(a) || b && 7 > r.pastDays(b)
                }
            }, {
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return k.createElement("div", null, k.createElement("div", {
                        className: m.cs("setting_item", "_adb6eb-popupLine")
                    }, k.createElement("div", {
                        className: "short_border top"
                    }), this.isRibbonShow() && k.createElement("span", {
                        className: "_adb6eb-newLabel"
                    }, "New"), k.createElement("span", null, "Get Premium for Free"), k.createElement("a", {
                        href: p.URLS.referral,
                        "data-fire": "referral-clicked, menu",
                        target: "_blank",
                        className: "_adb6eb-popupLink"
                    }, "Invite Friends")))
                }
            }]), b
        }(k.Component);
        b.ReferralLine = a
    }, {
        "babel-runtime/core-js/object/get-prototype-of": 21,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        "babel-runtime/helpers/inherits": 30,
        "babel-runtime/helpers/possibleConstructorReturn": 31,
        "lib/config": 167,
        "lib/dom": 169,
        "lib/util": 198,
        react: "react"
    }],
    225: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var d = a("react"),
            e = a("./summary"),
            g = a("./dialect-line"),
            h = a("./referral-line"),
            f = a("./defs-switcher"),
            n = a("./site-switcher");
        b.SettingsContent = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.actions,
                c = a.config,
                k = a.settings,
                l = a.user;
            return d.createElement("div", null, d.createElement(n.SiteSwitcher, {
                    domain: c.domain,
                    toggleSite: b.toggleSite,
                    enabledInConfig: c.enabled,
                    enabledInSettings: k.enabled,
                    favicon: a.activeTab.favIconUrl
                }), d.createElement(f.DefsSwitcher, {
                    enabledDefs: k.enabledDefs,
                    toggleDefs: b.toggleDefs
                }), d.createElement(g.DialectLine, {
                    changeStrongDialect: b.changeStrongDialect,
                    dialectStrong: k.dialectStrong
                }),
                d.createElement(e.Summary, {
                    user: l
                }), l.referral && d.createElement(h.ReferralLine, {
                    extensionInstallDate: l.extensionInstallDate,
                    registrationDate: l.registrationDate
                }))
        }
    }, {
        "./defs-switcher": 220,
        "./dialect-line": 221,
        "./referral-line": 224,
        "./site-switcher": 226,
        "./summary": 227,
        react: "react"
    }],
    226: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && a.__esModule ? a : {
                    "default": a
                }
            }
            c = a("babel-runtime/core-js/object/get-prototype-of");
            var e = d(c);
            c = a("babel-runtime/helpers/classCallCheck");
            var g = d(c);
            c = a("babel-runtime/helpers/createClass");
            var h = d(c);
            c = a("babel-runtime/helpers/possibleConstructorReturn");
            var f = d(c);
            c = a("babel-runtime/helpers/inherits");
            var n = d(c);
            Object.defineProperty(b, "__esModule", {
                value: !0
            });
            var k = a("react"),
                m = a("lib/dom"),
                p = a("lib/tracking");
            a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    (0, g["default"])(this, b);
                    var a = (0, f["default"])(this, (b.__proto__ || (0, e["default"])(b)).apply(this, arguments));
                    return a.onEnableGrammarClick = function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var c = a.props,
                            d = c.toggleSite;
                        b = b.target.checked;
                        d(b, c.domain);
                        p.fire("checking-toggled", {
                            enabled: b,
                            placement: "toolbar"
                        })
                    }, a
                }
                return (0, n["default"])(b, a), (0, h["default"])(b, [{
                    key: "render",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = this.props,
                            b = a.enabledInConfig,
                            c = a.favicon,
                            d = a.domain;
                        a = a.enabledInSettings && b;
                        b = b ? "Check for Grammar and Spelling" : "Checking is not supported";
                        var e = m.cs("site_switcher", "line", "setting_item", a ? "on" : "off");
                        return k.createElement("div", {
                            className: e
                        }, k.createElement("label", {
                            className: "_a7c193-select_checkbox"
                        }, b, k.createElement("br", null), " ", k.createElement("span", {
                            className: "domain"
                        }, k.createElement("span", {
                            className: "thin_text"
                        }, "on"), "\u00a0", k.createElement("span", {
                            className: "favicon"
                        }, k.createElement("img", {
                            width: "16px",
                            height: "16px",
                            src: c
                        })), d), k.createElement("input", {
                            className: "_a7c193-checkbox",
                            onChange: this.onEnableGrammarClick,
                            checked: a,
                            type: "checkbox"
                        }), k.createElement("div", {
                            className: m.cs("_a7c193-checkbox_check", "checkbox_check")
                        }, k.createElement("div", {
                            className: "_a7c193-checkbox_check_round"
                        }))), k.createElement("div", {
                            className: "short_border"
                        }))
                    }
                }]), b
            }(k.Component);
            b.SiteSwitcher = a
        },
        {
            "babel-runtime/core-js/object/get-prototype-of": 21,
            "babel-runtime/helpers/classCallCheck": 27,
            "babel-runtime/helpers/createClass": 28,
            "babel-runtime/helpers/inherits": 30,
            "babel-runtime/helpers/possibleConstructorReturn": 31,
            "lib/dom": 169,
            "lib/tracking": 192,
            react: "react"
        }
    ],
    227: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        c = a("babel-runtime/core-js/object/get-prototype-of");
        var e = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var g = d(c);
        c = a("babel-runtime/helpers/createClass");
        var h = d(c);
        c = a("babel-runtime/helpers/possibleConstructorReturn");
        var f = d(c);
        c = a("babel-runtime/helpers/inherits");
        var n = d(c);
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var k = a("react"),
            m = a("lib/dom"),
            p = a("lib/url"),
            r = a("lib/util"),
            l = {
                safari: "safari",
                "gr-popup-wrapper": "gr-popup-wrapper",
                windows: "windows",
                setting_item: "setting_item",
                errors: "errors",
                descr: "descr",
                thin_text: "thin_text",
                footer: "footer",
                gr_popup_settings: "gr_popup_settings",
                footer_btn: "footer_btn",
                line: "line",
                short_border: "short_border",
                top: "top",
                show_news: "show_news",
                news: "news",
                news_content: "news_content",
                close_news: "close_news",
                not_supported: "not_supported",
                checkbox_check: "checkbox_check",
                site_switcher: "site_switcher",
                upgrade: "upgrade",
                def_switcher: "def_switcher",
                on: "on",
                off: "off",
                upgraded: "upgraded",
                content: "content",
                summary: "summary",
                since: "since",
                has_favicon: "has_favicon",
                favicon: "favicon",
                domain: "domain",
                no_fixes: "no_fixes",
                lblCount: "lblCount",
                upgrade_title: "upgrade_title",
                my_grammarly: "my_grammarly",
                new_document: "new_document",
                unsupported_site: "unsupported_site",
                unsupported_item: "unsupported_item",
                unsupported_title: "unsupported_title",
                domain_in_details: "domain_in_details",
                unsupported_temporary: "unsupported_temporary",
                unsupported_permanently: "unsupported_permanently",
                unsupported_grammarly: "unsupported_grammarly",
                diamond: "diamond"
            };
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (0, g["default"])(this, b), (0, f["default"])(this, (b.__proto__ || (0, e["default"])(b)).apply(this, arguments))
            }
            return (0, n["default"])(b, a), (0, h["default"])(b, [{
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this.props.user,
                        b = a.registrationDate,
                        c = a.fixed_errors;
                    a = a.premium ? "critical and advanced" : "critical";
                    var d = !c || isNaN(c) ? 0 : c;
                    c = "0" === r.formatNumber(d) ? "No" : r.formatNumber(d);
                    d = r.declension(d, ["fix", "fixes"]);
                    b = (b = r.formatDate(b)) ? "since " + b : "";
                    return k.createElement("div", {
                        className: m.cs(l.line, l.summary)
                    }, k.createElement("div", {
                        className: l.errors
                    }, k.createElement("span", {
                        className: m.cs(l.count, l.lblCount)
                    }, c), k.createElement("span", {
                        className: l.descr
                    }, a, " ", k.createElement("span", {
                        className: l.errorsLbl
                    }, d), " ", k.createElement("span", {
                        className: l.since
                    }, b))), k.createElement("div", {
                        className: l.upgrade
                    }, k.createElement("a", {
                        href: p.getUpgradeURL("upHook", "settingsToolbar"),
                        "data-fire": "hook-clicked, settings_toolbar",
                        target: "_blank",
                        className: l.upgrade_title
                    }, "Go Premium to enable advanced fixes")))
                }
            }]), b
        }(k.Component);
        b.Summary = a
    }, {
        "babel-runtime/core-js/object/get-prototype-of": 21,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        "babel-runtime/helpers/inherits": 30,
        "babel-runtime/helpers/possibleConstructorReturn": 31,
        "lib/dom": 169,
        "lib/url": 197,
        "lib/util": 198,
        react: "react"
    }],
    228: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        c = a("babel-runtime/core-js/object/get-prototype-of");
        var e = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var g = d(c);
        c = a("babel-runtime/helpers/createClass");
        var h = d(c);
        c = a("babel-runtime/helpers/possibleConstructorReturn");
        var f = d(c);
        c = a("babel-runtime/helpers/inherits");
        var n = d(c);
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var k = a("react"),
            m = a("lib/dom"),
            p = a("lib/url"),
            r = a("./header"),
            l = {
                signin: "_eb0767-signin",
                banner: "_eb0767-banner",
                descr: "_eb0767-descr",
                descr_title: "_eb0767-descr_title",
                buttons: "_eb0767-buttons",
                button: "_eb0767-button",
                auth_button: "_eb0767-auth_button",
                sign_up: "_eb0767-sign_up",
                free: "_eb0767-free",
                footer: "_eb0767-footer",
                signin_link: "_eb0767-signin_link"
            };
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (0, g["default"])(this, b), (0, f["default"])(this, (b.__proto__ || (0, e["default"])(b)).apply(this, arguments))
            }
            return (0, n["default"])(b, a), (0, h["default"])(b, [{
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return k.createElement("div", {
                        className: l.signin
                    }, k.createElement(r.Header, null), k.createElement("div", {
                        className: l.content
                    }, k.createElement("div", {
                        className: l.banner
                    }, "Grammarly is active, but", k.createElement("br", null), "key features are missing"), k.createElement("div", {
                        className: l.descr
                    }, k.createElement("div", {
                        className: l.descr_title
                    }, "Sign up now to unlock the following:"), k.createElement("ul", null, k.createElement("li",
                        null, "Enable/disable on preferred websites"), k.createElement("li", null, "Store your personal dictionary"), k.createElement("li", null, "Save and access your work from any computer"), k.createElement("li", null, "Get weekly writing statistics and tips"))), k.createElement("div", {
                        className: l.buttons
                    }, k.createElement("a", {
                        href: p.getSignUpURL("signupHook", "toolbarMenu"),
                        "data-fire": "login-attempt, settings_toolbar_sign_up",
                        target: "__blank",
                        className: m.cs(l.button, l.auth_button),
                        role: "button"
                    }, k.createElement("span", {
                        className: l.sign_up
                    }, "Sign Up"), k.createElement("span", {
                        className: l.free
                    }, "It's free")))), k.createElement("div", {
                        className: l.footer
                    }, k.createElement("div", {
                        className: l.login_text
                    }, "Already have an account? ", k.createElement("a", {
                        href: p.getSignInURL(),
                        "data-fire": "login-attempt, settings_toolbar_sign_in",
                        target: "__blank",
                        className: l.signin_link
                    }, "Log in"))))
                }
            }]), b
        }(k.Component);
        b.SigninComponent = a
    }, {
        "./header": 216,
        "babel-runtime/core-js/object/get-prototype-of": 21,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        "babel-runtime/helpers/inherits": 30,
        "babel-runtime/helpers/possibleConstructorReturn": 31,
        "lib/dom": 169,
        "lib/url": 197,
        react: "react"
    }],
    229: [function(a, c, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var d = a("react"),
            e = a("lib/dom"),
            g = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return e.cs("line", "unsupported_item", 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "")
            };
        b.DefaultUnsupportedComponent = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.favicon,
                c = a.domain;
            a = (a = a.customTitle) ? d.createElement("span", null,
                " ", a, " Not Supported") : d.createElement("span", null, " ", d.createElement("span", {
                className: "domain"
            }, c), " is Not Supported");
            return d.createElement("div", {
                className: g()
            }, d.createElement("span", {
                className: "unsupported_title"
            }, d.createElement("span", {
                className: "favicon"
            }, d.createElement("img", {
                width: "16px",
                height: "16px",
                src: b
            })), a), d.createElement("br", null), d.createElement("span", null, "For technical reasons, we currently do not check your text on this version of\u00a0", d.createElement("span", {
                className: e.cs("domain",
                    "domain_in_details")
            }, c)))
        };
        b.CustomUnsupportedComponent = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.favicon,
                c = a.domain,
                e = a.customMessage;
            a = e.message;
            e = e.title;
            c = void 0 === e ? c : e;
            return d.createElement("div", {
                className: g("unsupported_permanently")
            }, d.createElement("span", {
                className: "unsupported_title"
            }, d.createElement("span", {
                className: "favicon"
            }, d.createElement("img", {
                width: "16px",
                height: "16px",
                src: b
            })), " ", c, " Not Supported"), d.createElement("br", null), d.createElement("span", {
                dangerouslySetInnerHTML: {
                    __html: a
                }
            }))
        };
        b.TemporaryUnsupportedComponent =
            function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = a.favicon;
                a = a.domain;
                return d.createElement("div", {
                    className: g("unsupported_temporary")
                }, d.createElement("span", {
                    className: "unsupported_title"
                }, "Checking Down on ", d.createElement("span", {
                    className: "favicon"
                }, d.createElement("img", {
                    width: "16px",
                    height: "16px",
                    src: b
                })), " ", d.createElement("span", {
                    className: "domain"
                }, a)), d.createElement("br", null), d.createElement("span", null, "There appears to be a temporary glitch affecting Grammarly's performance on\u00a0", d.createElement("span", {
                    className: e.cs("domain",
                        "domain_in_details")
                }, a), ". Functionality should return soon."))
            };
        b.GrammarlyUnsupportedComponent = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.createElement("div", {
                className: g("unsupported_grammarly")
            }, d.createElement("span", {
                className: "diamond"
            }), d.createElement("span", {
                className: "unsupported_title"
            }, "You Can't Improve on Perfection"), d.createElement("br", null), d.createElement("span", null, "Naturally, Grammarly's browser extension is disabled while you use the Grammarly Editor."))
        }
    }, {
        "lib/dom": 169,
        react: "react"
    }],
    230: [function(a,
        c, b) {
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }

        function e(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.domain,
                c = a.favIconUrl,
                d = a.temporary,
                e = q.CUSTOM_UNSUPPORTED_MESSAGES[b],
                f = void 0,
                g = void 0;
            return a.grammarlyEditor ? (f = "grammarly_editor", g = p.createElement(v.GrammarlyUnsupportedComponent, null)) : e && e.message ? (f = "custom_message", g = p.createElement(v.CustomUnsupportedComponent, {
                customMessage: e,
                favicon: c,
                domain: b
            })) : d ? (f = "temporary", g = p.createElement(v.TemporaryUnsupportedComponent, {
                favicon: c,
                domain: b
            })) : (f = "default", g = p.createElement(v.DefaultUnsupportedComponent, {
                favicon: c,
                domain: b,
                customTitle: e && e.title
            })), r.logger.settingsUsupportedShow(f), g
        }
        c = a("babel-runtime/helpers/defineProperty");
        var g = d(c);
        c = a("babel-runtime/core-js/object/get-prototype-of");
        var h = d(c);
        c = a("babel-runtime/helpers/classCallCheck");
        var f = d(c);
        c = a("babel-runtime/helpers/createClass");
        var n = d(c);
        c = a("babel-runtime/helpers/possibleConstructorReturn");
        var k = d(c);
        c = a("babel-runtime/helpers/inherits");
        var m = d(c);
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        var p = a("react"),
            r = a("lib/tracking"),
            l = a("lib/dom"),
            q = a("lib/page-config/defaults"),
            t = a("../header"),
            u = a("../footer"),
            v = a("./components");
        b.getUnsupportedComponent = e;
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (0, f["default"])(this, b), (0, k["default"])(this, (b.__proto__ || (0, h["default"])(b)).apply(this, arguments))
            }
            return (0, m["default"])(b, a), (0, n["default"])(b, [{
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this.props,
                        b = a.config,
                        c = b.domain,
                        d = b.temporary;
                    b = b.grammarlyEditor;
                    var f = a.activeTab.favIconUrl;
                    a = l.cs("gr_popup_settings", (0, g["default"])({}, "has_favicon", !!f));
                    c = e({
                        domain: c,
                        favIconUrl: f,
                        temporary: d,
                        grammarlyEditor: b
                    });
                    return p.createElement("div", {
                        className: a
                    }, p.createElement("div", {
                        className: l.cs("content", "unsupported_site")
                    }, p.createElement(t.Header, null), c, p.createElement(u.Footer, {
                        openUrl: this.props.openUrl
                    })))
                }
            }]), b
        }(p.Component);
        b.UnsupportedComponent = a
    }, {
        "../footer": 215,
        "../header": 216,
        "./components": 229,
        "babel-runtime/core-js/object/get-prototype-of": 21,
        "babel-runtime/helpers/classCallCheck": 27,
        "babel-runtime/helpers/createClass": 28,
        "babel-runtime/helpers/defineProperty": 29,
        "babel-runtime/helpers/inherits": 30,
        "babel-runtime/helpers/possibleConstructorReturn": 31,
        "lib/dom": 169,
        "lib/page-config/defaults": 176,
        "lib/tracking": 192,
        react: "react"
    }]
}, {}, [147]);
