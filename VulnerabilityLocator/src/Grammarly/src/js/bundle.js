var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    a != Array.prototype && a != Object.prototype && (a[b] = c.value)
};
$jscomp.getGlobal = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return "undefined" != typeof window && window === a ? a : "undefined" != typeof global && null != global ? global : a
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.SYMBOL_PREFIX = "jscomp_symbol_";
$jscomp.initSymbol = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    $jscomp.initSymbol = function() {};
    $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol)
};
$jscomp.symbolCounter_ = 0;
$jscomp.Symbol = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return $jscomp.SYMBOL_PREFIX + (a || "") + $jscomp.symbolCounter_++
};
$jscomp.initSymbolIterator = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    $jscomp.initSymbol();
    var a = $jscomp.global.Symbol.iterator;
    a || (a = $jscomp.global.Symbol.iterator = $jscomp.global.Symbol("iterator"));
    "function" != typeof Array.prototype[a] && $jscomp.defineProperty(Array.prototype, a, {
        configurable: !0,
        writable: !0,
        value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return $jscomp.arrayIterator(this)
        }
    });
    $jscomp.initSymbolIterator = function() {}
};
$jscomp.arrayIterator = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    var b = 0;
    return $jscomp.iteratorPrototype(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return b < a.length ? {
            done: !1,
            value: a[b++]
        } : {
            done: !0
        }
    })
};
$jscomp.iteratorPrototype = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    $jscomp.initSymbolIterator();
    a = {
        next: a
    };
    a[$jscomp.global.Symbol.iterator] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return this
    };
    return a
};
$jscomp.makeIterator = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    $jscomp.initSymbolIterator();
    var b = a[Symbol.iterator];
    return b ? b.call(a) : $jscomp.arrayIterator(a)
};
$jscomp.polyfill = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    if (b) {
        c = $jscomp.global;
        a = a.split(".");
        for (d = 0; d < a.length - 1; d++) {
            var f = a[d];
            f in c || (c[f] = {});
            c = c[f]
        }
        a = a[a.length - 1];
        d = c[a];
        b = b(d);
        b != d && null != b && $jscomp.defineProperty(c, a, {
            configurable: !0,
            writable: !0,
            value: b
        })
    }
};
$jscomp.FORCE_POLYFILL_PROMISE = !1;
$jscomp.polyfill("Promise", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        this.batch_ = null
    }

    function c(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return a instanceof f ? a : new f(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            b(a)
        })
    }
    if (a && !$jscomp.FORCE_POLYFILL_PROMISE) return a;
    b.prototype.asyncExecute = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        null == this.batch_ && (this.batch_ = [], this.asyncExecuteBatch_());
        this.batch_.push(a);
        return this
    };
    b.prototype.asyncExecuteBatch_ = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var a = this;
        this.asyncExecuteFunction(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.executeBatch_()
        })
    };
    var d = $jscomp.global.setTimeout;
    b.prototype.asyncExecuteFunction = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        d(a,
            0)
    };
    b.prototype.executeBatch_ = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        for (; this.batch_ && this.batch_.length;) {
            var a = this.batch_;
            this.batch_ = [];
            for (var b = 0; b < a.length; ++b) {
                var c = a[b];
                delete a[b];
                try {
                    c()
                } catch (n) {
                    this.asyncThrow_(n)
                }
            }
        }
        this.batch_ = null
    };
    b.prototype.asyncThrow_ = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        this.asyncExecuteFunction(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            throw a;
        })
    };
    var f = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        this.state_ = 0;
        this.result_ = void 0;
        this.onSettledCallbacks_ = [];
        var b = this.createResolveAndReject_();
        try {
            a(b.resolve, b.reject)
        } catch (r) {
            b.reject(r)
        }
    };
    f.prototype.createResolveAndReject_ =
        function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return function(e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    c || (c = !0, a.call(b, e))
                }
            }
            var b = this,
                c = !1;
            return {
                resolve: a(this.resolveTo_),
                reject: a(this.reject_)
            }
        };
    f.prototype.resolveTo_ = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        if (a === this) this.reject_(new TypeError("A Promise cannot resolve to itself"));
        else if (a instanceof f) this.settleSameAsPromise_(a);
        else {
            a: switch (typeof a) {
                case "object":
                    var b = null != a;
                    break a;
                case "function":
                    b = !0;
                    break a;
                default:
                    b = !1
            }
            b ? this.resolveToNonPromiseObj_(a) : this.fulfill_(a)
        }
    };
    f.prototype.resolveToNonPromiseObj_ = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var b =
            void 0;
        try {
            b = a.then
        } catch (r) {
            this.reject_(r);
            return
        }
        "function" == typeof b ? this.settleSameAsThenable_(b, a) : this.fulfill_(a)
    };
    f.prototype.reject_ = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        this.settle_(2, a)
    };
    f.prototype.fulfill_ = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        this.settle_(1, a)
    };
    f.prototype.settle_ = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        if (0 != this.state_) throw Error("Cannot settle(" + a + ", " + b | "): Promise already settled in state" + this.state_);
        this.state_ = a;
        this.result_ = b;
        this.executeOnSettledCallbacks_()
    };
    f.prototype.executeOnSettledCallbacks_ = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        if (null != this.onSettledCallbacks_) {
            for (var a =
                    this.onSettledCallbacks_, b = 0; b < a.length; ++b) a[b].call(), a[b] = null;
            this.onSettledCallbacks_ = null
        }
    };
    var k = new b;
    f.prototype.settleSameAsPromise_ = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var b = this.createResolveAndReject_();
        a.callWhenSettled_(b.resolve, b.reject)
    };
    f.prototype.settleSameAsThenable_ = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var c = this.createResolveAndReject_();
        try {
            a.call(b, c.resolve, c.reject)
        } catch (n) {
            c.reject(n)
        }
    };
    f.prototype.then = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function c(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "function" == typeof a ? function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                try {
                    e(a(b))
                } catch (v) {
                    d(v)
                }
            } : b
        }
        var e, d, u = new f(function(a,
            b) {
            e = a;
            d = b
        });
        this.callWhenSettled_(c(a, e), c(b, d));
        return u
    };
    f.prototype.catch = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return this.then(void 0, a)
    };
    f.prototype.callWhenSettled_ = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            switch (e.state_) {
                case 1:
                    a(e.result_);
                    break;
                case 2:
                    b(e.result_);
                    break;
                default:
                    throw Error("Unexpected state: " + e.state_);
            }
        }
        var e = this;
        null == this.onSettledCallbacks_ ? k.asyncExecute(c) : this.onSettledCallbacks_.push(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            k.asyncExecute(c)
        })
    };
    f.resolve = c;
    f.reject = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return new f(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            c(a)
        })
    };
    f.race = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return new f(function(b,
            d) {
            for (var e = $jscomp.makeIterator(a), f = e.next(); !f.done; f = e.next()) c(f.value).callWhenSettled_(b, d)
        })
    };
    f.all = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var b = $jscomp.makeIterator(a),
            d = b.next();
        return d.done ? c([]) : new f(function(a, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function n(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    l[b] = c;
                    g--;
                    0 == g && a(l)
                }
            }
            var l = [],
                g = 0;
            do l.push(void 0), g++, c(d.value).callWhenSettled_(n(l.length - 1), e), d = b.next(); while (!d.done)
        })
    };
    return f
}, "es6", "es3");
$jscomp.polyfill("Object.setPrototypeOf", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : "object" != typeof "".__proto__ ? null : function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a.__proto__ = c;
        if (a.__proto__ !== c) throw new TypeError(a + " is not extensible");
        return a
    }
}, "es6", "es5");
$jscomp.findInternal = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    a instanceof String && (a = String(a));
    for (var d = a.length, f = 0; f < d; f++) {
        var k = a[f];
        if (b.call(c, k, f, a)) return {
            i: f,
            v: k
        }
    }
    return {
        i: -1,
        v: void 0
    }
};
$jscomp.polyfill("Array.prototype.find", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return $jscomp.findInternal(this, a, c).v
    }
}, "es6", "es3");
$jscomp.iteratorFromArray = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    $jscomp.initSymbolIterator();
    a instanceof String && (a += "");
    var c = 0,
        d = {
            next: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (c < a.length) {
                    var f = c++;
                    return {
                        value: b(f, a[f]),
                        done: !1
                    }
                }
                d.next = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return {
                        done: !0,
                        value: void 0
                    }
                };
                return d.next()
            }
        };
    d[Symbol.iterator] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return d
    };
    return d
};
$jscomp.polyfill("Array.prototype.keys", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return $jscomp.iteratorFromArray(this, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a
        })
    }
}, "es6", "es3");
$jscomp.owns = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return Object.prototype.hasOwnProperty.call(a, b)
};
$jscomp.polyfill("Object.assign", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        for (var b = 1; b < arguments.length; b++) {
            var f = arguments[b];
            if (f)
                for (var k in f) $jscomp.owns(f, k) && (a[k] = f[k])
        }
        return a
    }
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.entries", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return $jscomp.iteratorFromArray(this, function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return [a, c]
        })
    }
}, "es6", "es3");
$jscomp.polyfill("Array.from", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function(a, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        $jscomp.initSymbolIterator();
        c = null != c ? c : function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a
        };
        var b = [],
            k = a[Symbol.iterator];
        if ("function" == typeof k)
            for (a = k.call(a); !(k = a.next()).done;) b.push(c.call(d, k.value));
        else {
            k = a.length;
            for (var m = 0; m < k; m++) b.push(c.call(d, a[m]))
        }
        return b
    }
}, "es6", "es3");
$jscomp.polyfill("Object.getOwnPropertySymbols", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return []
    }
}, "es6", "es5");
$jscomp.polyfill("Object.is", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return a === c ? 0 !== a || 1 / a === 1 / c : a !== a && c !== c
    }
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.includes", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var b = this;
        b instanceof String && (b = String(b));
        var f = b.length;
        for (c = c || 0; c < f; c++)
            if (b[c] == a || Object.is(b[c], a)) return !0;
        return !1
    }
}, "es7", "es3");
$jscomp.checkStringArgs = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    if (null == a) throw new TypeError("The 'this' value for String.prototype." + c + " must not be null or undefined");
    if (b instanceof RegExp) throw new TypeError("First argument to String.prototype." + c + " must not be a regular expression");
    return a + ""
};
$jscomp.polyfill("String.prototype.includes", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return -1 !== $jscomp.checkStringArgs(this, a, "includes").indexOf(a, c || 0)
    }
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.findIndex", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return $jscomp.findInternal(this, a, c).i
    }
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.values", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return $jscomp.iteratorFromArray(this, function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return c
        })
    }
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.fill", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return a ? a : function(a, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var b = this.length || 0;
        0 > c && (c = Math.max(0, b + c));
        if (null == d || d > b) d = b;
        d = Number(d);
        0 > d && (d = Math.max(0, b + d));
        for (c = Number(c || 0); c < d; c++) this[c] = a;
        return this
    }
}, "es6", "es3");
! function e$jscomp$0(b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    function f(e, r) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        if (!c[e]) {
            if (!b[e]) {
                var n = "function" == typeof require && require;
                if (!r && n) return n(e, !0);
                if (k) return k(e, !0);
                r = Error("Cannot find module '" + e + "'");
                throw r.code = "MODULE_NOT_FOUND", r;
            }
            r = c[e] = {
                exports: {}
            };
            b[e][0].call(r.exports, function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = b[e][1][c];
                return f(d ? d : c)
            }, r, r.exports, e$jscomp$0, b, c, d)
        }
        return c[e].exports
    }
    for (var k = "function" == typeof require && require, m = 0; m < d.length; m++) f(d[m]);
    return f
}({
    1: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        (function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                "object" ==
                typeof c && "undefined" != typeof b ? b.exports = a() : "function" == typeof define && define.amd ? define([], a) : ("undefined" != typeof window ? window : "undefined" != typeof d ? d : "undefined" != typeof self ? self : this).Changesets = a()
            }(function() {
                return function k(b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function e(l, g) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (!c[l]) {
                            if (!b[l]) {
                                var q = "function" == typeof a && a;
                                if (!g && q) return q(l, !0);
                                if (r) return r(l, !0);
                                g = Error("Cannot find module '" + l + "'");
                                throw g.code = "MODULE_NOT_FOUND", g;
                            }
                            g = c[l] = {
                                exports: {}
                            };
                            b[l][0].call(g.exports, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                var c = b[l][1][a];
                                return e(c ?
                                    c : a)
                            }, g, g.exports, k, b, c, d)
                        }
                        return c[l].exports
                    }
                    for (var r = "function" == typeof a && a, u = 0; u < d.length; u++) e(d[u]);
                    return e
                }({
                    1: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            b.exports = a("./lib/changesets")
                        } catch (r) {}
                    }, {
                        "./lib/changesets": 2
                    }],
                    2: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var e = a("textdiff").textdiff,
                            d = a("lodash"),
                            k = {
                                op: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return a = d.clone(a), a.len = a.text ? a.text.length : 0, a.toString = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        return this.type + this.pos + ":" + this.text
                                    }, a.extend = function(b) {
                                        return a = d.extend(d.clone(this), b), a.len = a.text.length, a
                                    }, a.revision = function(a) {
                                        return d.extend(d.clone(this), {
                                            accessory: a
                                        })
                                    }, a.apply = function(b, c) {
                                        if ("+" == this.type) {
                                            if (b.length != this.tlen) throw Error("Text length doesn't match expected length. It's most likely you have missed a transformation: expected:" + this.tlen + ", actual:" + b.length);
                                            return c && (this.pos < c.b && (c.b += this.text.length), this.pos < c.e && (c.e += this.text.length)), b.slice(0, this.pos) + this.text + b.slice(this.pos)
                                        }
                                        if ("-" == this.type) {
                                            if (b.length != this.tlen) throw Error("Text length doesn't match expected length. It's most likely you have missed a transformation: expected:" +
                                                this.tlen + ", actual:" + b.length);
                                            if (b.substr(this.pos, this.len) != this.text) throw Error("Applying delete operation: Passed context doesn't match assumed context: " + JSON.stringify(a) + ', actual context: "' + b.substr(this.pos, this.len) + '"');
                                            return c && (this.pos < c.b && (c.b -= Math.min(this.text.length, c.b - this.pos)), this.pos < c.e && (c.e -= Math.min(this.text.length, c.e - this.pos))), b.slice(0, this.pos) + b.slice(this.pos + this.len)
                                        }
                                        if ("=" == this.type) return b
                                    }, a.transformAgainst = function(a) {
                                        if ("+" == this.type && "+" == a.type) {
                                            var b =
                                                this.tlen + a.len;
                                            if (this.pos < a.pos || this.pos == a.pos && this.accessory < a.accessory) return this.extend({
                                                tlen: b
                                            });
                                            if (a.pos <= this.pos) return this.extend({
                                                tlen: b,
                                                pos: this.pos + a.len
                                            })
                                        } else if ("+" == this.type && "-" == a.type) {
                                            b = this.tlen - a.len;
                                            if (this.pos < a.pos || this.pos == a.pos) return this.extend({
                                                tlen: b
                                            });
                                            if (a.pos < this.pos) return this.extend({
                                                tlen: b,
                                                pos: Math.max(this.pos - a.len, a.pos)
                                            })
                                        } else if ("-" == this.type && "-" == a.type) {
                                            b = this.tlen - a.len;
                                            if (this.pos < a.pos) {
                                                var c = Math.min(a.pos - this.pos, this.len);
                                                return this.extend({
                                                    tlen: b,
                                                    text: this.text.substr(0, c) + this.text.substr(c + a.len)
                                                })
                                            }
                                            if (this.pos == a.pos) return this.len <= a.len ? k.op({
                                                type: "="
                                            }) : this.extend({
                                                tlen: b,
                                                text: this.text.substr(a.len)
                                            });
                                            if (a.pos < this.pos) return c = a.pos + a.len - this.pos, c >= this.len ? k.op({
                                                type: "="
                                            }) : 0 < c ? this.extend({
                                                tlen: b,
                                                pos: a.pos,
                                                text: this.text.substr(c)
                                            }) : this.extend({
                                                tlen: b,
                                                pos: this.pos - a.len
                                            })
                                        } else if ("-" == this.type && "+" == a.type) {
                                            b = this.tlen + a.len;
                                            if (this.pos < a.pos) return this.pos + this.len > a.pos ? (c = a.pos - this.pos, [this.extend({
                                                tlen: b,
                                                text: this.text.substr(0,
                                                    c)
                                            }), this.extend({
                                                tlen: b,
                                                pos: a.pos + a.len,
                                                text: this.text.substr(c)
                                            })]) : this.extend({
                                                tlen: b
                                            });
                                            if (this.pos == a.pos || a.pos < this.pos) return this.extend({
                                                tlen: b,
                                                pos: this.pos + a.len
                                            })
                                        }
                                        return this
                                    }, a
                                },
                                cs: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return a = d.clone(a.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                            return d.clone(a)
                                        })), a.toString = function() {
                                            return this.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                                return a.toString()
                                            }).join(" ")
                                        }, a.push = function(b) {
                                            b instanceof Array ? b.forEach(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                                [].push.call(a, b)
                                            }) : [].push.call(a, b)
                                        }, a.revision = function(b) {
                                            return k.cs(a.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                                return a.revision(b)
                                            }))
                                        },
                                        a.maxRevision = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                            return Math.max(0, Math.max.apply(null, a.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                                return a.accessory
                                            })))
                                        }, a.apply = function(a, b) {
                                            return this.sequencify().forEach(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                                a = c.apply(a, b)
                                            }), a
                                        }, a.transformAgainst = function(a) {
                                            var b = k.cs([]);
                                            a = a.sequencify();
                                            return this.forEach(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                                a.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                                    c = c.transformAgainst(a)
                                                });
                                                b.push(c)
                                            }), b
                                        }, a.sequencify = function(a) {
                                            var b = k.cs([]);
                                            return this.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                                "=" != a.type && (b.forEach(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                                    a = a.transformAgainst(b)
                                                }), b.push(a))
                                            }), b
                                        }, a.pack =
                                        function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                            return this.filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                                return "=" != a.type
                                            }).map(function(a) {
                                                var b = a.text.replace(/%/g, "%25").replace(/:/g, "%3A"),
                                                    c = a.pos.toString(36),
                                                    e = a.tlen.toString(36),
                                                    p = a.accessory.toString(36);
                                                return a.type + c + ":" + e + ":" + b + ":" + p
                                            }).join("")
                                        }, a
                                },
                                diff: function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    c = c || 0;
                                    b = e(a, b);
                                    var d = k.cs([]);
                                    a = a.length;
                                    return b.oldFragment && d.push(k.op({
                                        type: "-",
                                        tlen: a,
                                        pos: b.from,
                                        text: b.oldFragment,
                                        accessory: c
                                    })), b.newFragment && d.push(k.op({
                                        type: "+",
                                        tlen: a,
                                        pos: b.from,
                                        text: b.newFragment,
                                        accessory: c
                                    })), d
                                },
                                unpack: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    if ("" == a) return k.cs([]);
                                    a = a.match(/(\+|-)\w+?:\w+?:[^:]+?:\w+/g);
                                    if (!a) throw Error("Cannot unpack invalid serialized changeset string");
                                    return k.cs(a.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        var b = a.substr(1).split(":");
                                        return k.op({
                                            type: a.substr(0, 1),
                                            pos: parseInt(b[0], 36),
                                            tlen: parseInt(b[1], 36),
                                            text: b[2].replace(/%3A/gi, ":").replace(/%25/g, "%"),
                                            accessory: parseInt(b[3], 36)
                                        })
                                    }))
                                }
                            };
                        try {
                            b.exports = k
                        } catch (u) {}
                    }, {
                        lodash: "lodash",
                        textdiff: "textdiff"
                    }]
                }, {}, [1])(1)
            })
        }).call(this, "undefined" != typeof window ? window : {})
    }, {
        "./lib/changesets": 2,
        lodash: "lodash",
        textdiff: "textdiff"
    }],
    2: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("textdiff").textdiff,
            f = a("lodash"),
            k = {
                op: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a = f.clone(a), a.len = a.text ? a.text.length : 0, a.toString = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return this.type + this.pos + ":" + this.text
                    }, a.extend = function(b) {
                        return a = f.extend(f.clone(this), b), a.len = a.text.length, a
                    }, a.revision = function(a) {
                        return f.extend(f.clone(this), {
                            accessory: a
                        })
                    }, a.apply = function(b, c) {
                        if ("+" == this.type) {
                            if (b.length != this.tlen) throw Error("Text length doesn't match expected length. It's most likely you have missed a transformation: expected:" +
                                this.tlen + ", actual:" + b.length);
                            return c && (this.pos < c.b && (c.b += this.text.length), this.pos < c.e && (c.e += this.text.length)), b.slice(0, this.pos) + this.text + b.slice(this.pos)
                        }
                        if ("-" == this.type) {
                            if (b.length != this.tlen) throw Error("Text length doesn't match expected length. It's most likely you have missed a transformation: expected:" + this.tlen + ", actual:" + b.length);
                            if (b.substr(this.pos, this.len) != this.text) throw Error("Applying delete operation: Passed context doesn't match assumed context: " + JSON.stringify(a) +
                                ', actual context: "' + b.substr(this.pos, this.len) + '"');
                            return c && (this.pos < c.b && (c.b -= Math.min(this.text.length, c.b - this.pos)), this.pos < c.e && (c.e -= Math.min(this.text.length, c.e - this.pos))), b.slice(0, this.pos) + b.slice(this.pos + this.len)
                        }
                        if ("=" == this.type) return b
                    }, a.transformAgainst = function(a) {
                        if ("+" == this.type && "+" == a.type) {
                            var b = this.tlen + a.len;
                            if (this.pos < a.pos || this.pos == a.pos && this.accessory < a.accessory) return this.extend({
                                tlen: b
                            });
                            if (a.pos <= this.pos) return this.extend({
                                tlen: b,
                                pos: this.pos + a.len
                            })
                        } else if ("+" ==
                            this.type && "-" == a.type) {
                            b = this.tlen - a.len;
                            if (this.pos < a.pos || this.pos == a.pos) return this.extend({
                                tlen: b
                            });
                            if (a.pos < this.pos) return this.extend({
                                tlen: b,
                                pos: Math.max(this.pos - a.len, a.pos)
                            })
                        } else if ("-" == this.type && "-" == a.type) {
                            b = this.tlen - a.len;
                            if (this.pos < a.pos) {
                                var c = Math.min(a.pos - this.pos, this.len);
                                return this.extend({
                                    tlen: b,
                                    text: this.text.substr(0, c) + this.text.substr(c + a.len)
                                })
                            }
                            if (this.pos == a.pos) return this.len <= a.len ? k.op({
                                type: "="
                            }) : this.extend({
                                tlen: b,
                                text: this.text.substr(a.len)
                            });
                            if (a.pos <
                                this.pos) return c = a.pos + a.len - this.pos, c >= this.len ? k.op({
                                type: "="
                            }) : 0 < c ? this.extend({
                                tlen: b,
                                pos: a.pos,
                                text: this.text.substr(c)
                            }) : this.extend({
                                tlen: b,
                                pos: this.pos - a.len
                            })
                        } else if ("-" == this.type && "+" == a.type) {
                            b = this.tlen + a.len;
                            if (this.pos < a.pos) return this.pos + this.len > a.pos ? (c = a.pos - this.pos, [this.extend({
                                tlen: b,
                                text: this.text.substr(0, c)
                            }), this.extend({
                                tlen: b,
                                pos: a.pos + a.len,
                                text: this.text.substr(c)
                            })]) : this.extend({
                                tlen: b
                            });
                            if (this.pos == a.pos || a.pos < this.pos) return this.extend({
                                tlen: b,
                                pos: this.pos +
                                    a.len
                            })
                        }
                        return this
                    }, a
                },
                cs: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a = f.clone(a.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return f.clone(a)
                    })), a.toString = function() {
                        return this.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.toString()
                        }).join(" ")
                    }, a.push = function(b) {
                        b instanceof Array ? b.forEach(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            [].push.call(a, b)
                        }) : [].push.call(a, b)
                    }, a.revision = function(b) {
                        return k.cs(a.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.revision(b)
                        }))
                    }, a.maxRevision = function() {
                        return Math.max(0, Math.max.apply(null, a.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.accessory
                        })))
                    }, a.apply = function(a, b) {
                        return this.sequencify().forEach(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            a =
                                c.apply(a, b)
                        }), a
                    }, a.transformAgainst = function(a) {
                        var b = k.cs([]);
                        a = a.sequencify();
                        return this.forEach(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            a.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                c = c.transformAgainst(a)
                            });
                            b.push(c)
                        }), b
                    }, a.sequencify = function(a) {
                        var b = k.cs([]);
                        return this.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            "=" != a.type && (b.forEach(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                a = a.transformAgainst(b)
                            }), b.push(a))
                        }), b
                    }, a.pack = function() {
                        return this.filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return "=" != a.type
                        }).map(function(a) {
                            var b = a.text.replace(/%/g, "%25").replace(/:/g, "%3A"),
                                c = a.pos.toString(36),
                                e = a.tlen.toString(36),
                                d = a.accessory.toString(36);
                            return a.type + c + ":" + e + ":" + b + ":" + d
                        }).join("")
                    }, a
                },
                diff: function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    c = c || 0;
                    b = d(a, b);
                    var e = k.cs([]);
                    a = a.length;
                    return b.oldFragment && e.push(k.op({
                        type: "-",
                        tlen: a,
                        pos: b.from,
                        text: b.oldFragment,
                        accessory: c
                    })), b.newFragment && e.push(k.op({
                        type: "+",
                        tlen: a,
                        pos: b.from,
                        text: b.newFragment,
                        accessory: c
                    })), e
                },
                unpack: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if ("" == a) return k.cs([]);
                    a = a.match(/(\+|-)\w+?:\w+?:[^:]+?:\w+/g);
                    if (!a) throw Error("Cannot unpack invalid serialized changeset string");
                    return k.cs(a.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var b =
                            a.substr(1).split(":");
                        return k.op({
                            type: a.substr(0, 1),
                            pos: parseInt(b[0], 36),
                            tlen: parseInt(b[1], 36),
                            text: b[2].replace(/%3A/gi, ":").replace(/%25/g, "%"),
                            accessory: parseInt(b[3], 36)
                        })
                    }))
                }
            };
        try {
            b.exports = k
        } catch (m) {}
    }, {
        lodash: "lodash",
        textdiff: "textdiff"
    }],
    3: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = 2 >= arguments.length || void 0 === arguments[2] ? {} : arguments[2],
                e = f(a) + "=" + f(b);
            null == b && (c.maxage = -1);
            c.maxage && (c.expires = new Date(+new Date + c.maxage));
            c.path && (e += "; path=" + c.path);
            c.domain && (e += "; domain=" + c.domain);
            c.expires && (e += "; expires=" + c.expires.toUTCString());
            c.secure && (e += "; secure");
            document.cookie = e
        }

        function f(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            try {
                return encodeURIComponent(a)
            } catch (e) {
                return null
            }
        }

        function k(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            try {
                return decodeURIComponent(a)
            } catch (e) {
                return null
            }
        }
        c.__esModule = !0;
        c["default"] = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (2 > arguments.length) {
                var e = {};
                var f = document.cookie.split(/ *; */);
                if (f[0]) {
                    var u = Array.isArray(f),
                        l = 0;
                    for (f = u ? f : f[Symbol.iterator]();;) {
                        if (u) {
                            if (l >= f.length) break;
                            var g = f[l++]
                        } else {
                            if (l = f.next(), l.done) break;
                            g = l.value
                        }
                        g =
                            g.split("=");
                        e[k(g[0])] = k(g[1])
                    }
                }
                e = a ? e[a] : e
            } else e = void d(a, b, c);
            return e
        }
    }, {}],
    4: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: "success",
                value: a
            }
        }

        function f(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: "failure",
                error: a
            }
        }

        function k(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var e = c();
            return 0 < a ? e["catch"](function(p) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (new Promise(function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return setTimeout(a, b)
                })).then(function(p) {
                    return k(a - 1, b, c)
                })
            }) : e
        }
        var m = this && this.__extends || function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = Object.setPrototypeOf || {
                __proto__: []
            }
            instanceof Array && function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.__proto__ = b
            } || function(a, b) {
                for (var c in b) b.hasOwnProperty(c) &&
                    (a[c] = b[c])
            };
            return function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function e() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this.constructor = b
                }
                a(b, c);
                b.prototype = null === c ? Object.create(c) : (e.prototype = c.prototype, new e)
            }
        }();
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = a("@grammarly-npm/cookie"),
            r = a("./util"),
            n = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (new Date).setFullYear((new Date).getFullYear() + 10)
            },
            t = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (new Date).setMinutes((new Date).getMinutes() + 10)
            },
            u = /^\.\w+\.\w+/;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, b, c, p, e, d, h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                void 0 === b && (b = []);
                void 0 === e && (e = 3E5);
                void 0 === d && (d = 0);
                void 0 ===
                    h && (h = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return Date.now()
                    });
                this.primaryStorage = a;
                this.secondaryStorages = b;
                this._logger = c;
                this._metric = p;
                this._cacheSuccessTimeoutMillis = e;
                this._cacheFailureTimeoutMillis = d;
                this._getTime = h;
                this._allStorages = [a].concat(b)
            }
            return a.prototype._expireCache = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    0 === a ? this._cacheExpireTimestamp = 0 : 0 < a && (this._cacheExpireTimestamp = this._getTime() + a)
                }, a.prototype.getContainerId = function() {
                    var a = this;
                    if (void 0 !== this._cache && (void 0 === this._cacheExpireTimestamp || this._getTime() < this._cacheExpireTimestamp)) return this._cache;
                    var b = this._metric.getTimer("doGetContainerId.timer").start(),
                        c = this._doGetContainerId();
                    return this._cache = c, this._cacheExpireTimestamp = void 0, c.then(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a._expireCache(a._cacheSuccessTimeoutMillis)
                    }, function(b) {
                        return a._expireCache(a._cacheFailureTimeoutMillis)
                    }), c.then(function(c) {
                        b.stop();
                        a._metric.getCounter("doGetContainerId.success").increment()
                    }, function(c) {
                        b.stop();
                        a._metric.getCounter("doGetContainerId.failure").increment();
                        a._logger.warn("doGetContainerId.failed", c)
                    }), c
                },
                a._generateContainerId = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return r.alphanumeric(12)
                }, a.prototype._doGetContainerId = function() {
                    var b = this;
                    return Promise.all(this._allStorages.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.safeGetContainerId().then(d, f)
                    })).then(function(c) {
                        var e = c[0];
                        if ("failure" === e.type) return Promise.reject("getting containerId from primary storage " + ("'" + b.primaryStorage.name + "' has failed: " + e.error));
                        var p, q = c.find(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return "success" === a.type && void 0 !== a.value
                            }),
                            l = "success" === e.type && void 0 === e.value && void 0 !== q,
                            h = !1;
                        void 0 === q ? (p = a._generateContainerId(), h = !0) : p = q.value;
                        c = c.map(function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return "success" === a.type && a.value !== p ? b._allStorages[c].safeSetContainerId(p).then(d, f) : Promise.resolve(d(void 0))
                        });
                        c = Promise.all(c).then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            if (l || h)
                                if (a = a[0], "success" !== a.type) return Promise.reject("setting containerId to primary storage has failed: " + a.error);
                            return Promise.resolve(p)
                        });
                        return c.then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                l ? b._metric.getCounter("recovered").increment() : h && b._metric.getCounter("generated").increment()
                            }),
                            c
                    })
                }, a
        }();
        c.ContainerIdManager = a;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                this.name = a
            }
            return a.prototype.safeSetContainerId = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = this;
                return this.ensureAvailable().then(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return b.setContainerId(a)
                })
            }, a.prototype.safeGetContainerId = function() {
                var a = this;
                return this.ensureAvailable().then(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a.getContainerId()
                }).then(function(a) {
                    return "" === a ? void 0 : a
                })
            }, a
        }();
        c.BaseStorage = a;
        b = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var e = a.call(this, "chromeCookie") || this;
                if (e._url = b, e._domain = c, !u.test(c)) throw Error('Incorrect cookie domain provided.\n        Use top-level domain, starting from "."');
                return e
            }
            return m(b, a), b.prototype._hasRuntimeError = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return window.chrome && window.chrome.runtime && window.chrome.runtime.lastError
            }, b.prototype.ensureAvailable = function() {
                var a = this;
                return k(2, 1E3, function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return new Promise(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var e = r.alphanumeric(10);
                        try {
                            window.chrome.cookies.set({
                                name: e,
                                value: e,
                                url: a._url,
                                domain: a._domain,
                                expirationDate: t() / 1E3
                            }, function(p) {
                                var h = a._hasRuntimeError();
                                !p && h && c("chrome.cookie.set failed with an error: " + h.message);
                                p && p.value === e ? b() : c(Error("ChromeCookieStorage is unavailable.\n              Availability test failed.\n              Tried to set " +
                                    e + ", the result is " + (p ? p.value : p) + "."))
                            })
                        } catch (z) {
                            c(z)
                        }
                    })
                })
            }, b.prototype.getContainerId = function() {
                var a = this;
                return new Promise(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    try {
                        window.chrome.cookies.get({
                            url: a._url,
                            name: "gnar_containerId"
                        }, function(e) {
                            var p = a._hasRuntimeError();
                            !e && p && c("chrome.cookie.get failed with an error: " + p.message);
                            b(e ? e.value : void 0)
                        })
                    } catch (y) {
                        c(y)
                    }
                })
            }, b.prototype.setContainerId = function(a) {
                var b = this;
                return new Promise(function(c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    try {
                        window.chrome.cookies.set({
                            name: "gnar_containerId",
                            value: a,
                            url: b._url,
                            domain: b._domain,
                            expirationDate: n() / 1E3
                        }, function(p) {
                            var h = b._hasRuntimeError();
                            !p && h && e("chrome.cookie.set failed with an error: " + h.message);
                            p && p.value === a || e(Error("setContainerId failed.\n            Tried to set " + a + ", the result is " + (p ? p.value : p) + "."));
                            c()
                        })
                    } catch (z) {
                        e(z)
                    }
                })
            }, b
        }(a);
        c.ChromeCookieStorage = b;
        b = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var e = a.call(this, "webExtensionsCookie") || this;
                if (e._url = b, e._domain = c, !u.test(c)) throw Error('Incorrect cookie domain provided.\n        Use top-level domain, starting from "."');
                return e
            }
            return m(b, a), b.prototype.ensureAvailable = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = this;
                return k(2, 1E3, function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return new Promise(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var e = r.alphanumeric(10);
                        window.browser.cookies.set({
                            name: e,
                            value: e,
                            url: a._url,
                            domain: a._domain,
                            expirationDate: t() / 1E3
                        }).then(function() {
                            window.browser.cookies.get({
                                url: a._url,
                                name: e
                            }).then(function(a) {
                                a && a.value === e ? b() : c(Error("WebExtensionsCookieStorage is unavailable.\n              Availability test failed.\n              Tried to set " + e + ", the result is " + (a ? a.value :
                                    a) + "."))
                            })["catch"](function(a) {
                                c("browser.cookies.get failed with an error: " + a.message)
                            })
                        })["catch"](function(a) {
                            c("browser.cookies.set failed with an error: " + a.message)
                        })
                    })
                })
            }, b.prototype.getContainerId = function() {
                var a = this;
                return new Promise(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    window.browser.cookies.get({
                        url: a._url,
                        name: "gnar_containerId"
                    }).then(function(a) {
                        b(a ? a.value : void 0)
                    })["catch"](function(a) {
                        c("browser.cookies.get failed with an error: " + a.message)
                    })
                })
            }, b.prototype.setContainerId = function(a) {
                var b = this;
                return new Promise(function(c,
                    e) {
                    window.browser.cookies.set({
                        name: "gnar_containerId",
                        value: a,
                        url: b._url,
                        domain: b._domain,
                        expirationDate: n() / 1E3
                    }).then(function(b) {
                        b && b.value === a || e(Error("setContainerId failed.\n          Tried to set " + a + ", the result is " + (b ? b.value : b) + "."));
                        c()
                    })["catch"](function(a) {
                        e("browser.cookies.set failed with an error: " + a.message)
                    })
                })
            }, b
        }(a);
        c.WebExtensionsCookieStorage = b;
        b = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.call(this, "localStorage") || this
            }
            return m(b, a), b.prototype.ensureAvailable = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a =
                    r.alphanumeric(10);
                return new Promise(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    localStorage.setItem("gnar_containerId_test", a);
                    localStorage.getItem("gnar_containerId_test") !== a ? c(Error("LocalStorage is unavailable.\n          Availability test failed.\n          Tried to set " + a + ", the result is " + localStorage.getItem("gnar_containerId_test") + ".")) : b();
                    localStorage.removeItem("gnar_containerId_test")
                })
            }, b.prototype.getContainerId = function() {
                var a = localStorage.getItem("gnar_containerId");
                return new Promise(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return b(null ===
                        a ? void 0 : a)
                })
            }, b.prototype.setContainerId = function(a) {
                return new Promise(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    localStorage.setItem("gnar_containerId", a);
                    b()
                })
            }, b
        }(a);
        c.LocalStorage = b;
        b = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = a.call(this, "cookie") || this;
                if (c._domain = b, !u.test(b)) throw Error('Incorrect cookie domain provided.\n        Use top-level domain, starting from "."');
                return c
            }
            return m(b, a), b.prototype._getCookieOptions = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return {
                    path: "/",
                    domain: this._domain,
                    expires: new Date(n())
                }
            }, b.prototype.ensureAvailable = function() {
                var a =
                    r.alphanumeric(10);
                return new Promise(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    e["default"](a, a);
                    e["default"](a) !== a ? c(Error("CookieStorage is unavailable.\n          Availability test failed.\n          Tried to set " + a + ", the result is " + e["default"](a) + ".")) : b();
                    e["default"](a, null)
                })
            }, b.prototype.getContainerId = function() {
                return new Promise(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a(e["default"]("gnar_containerId"))
                })
            }, b.prototype.setContainerId = function(a) {
                var b = this;
                return new Promise(function(c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    e["default"]("gnar_containerId", a, b._getCookieOptions());
                    c()
                })
            }, b
        }(a);
        c.CookieStorage = b;
        b = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var e = a.call(this, "backend") || this;
                return e._fetch = b, e._url = c, e._keyName = "gnar_containerId", e._testKeyName = "gnar_containerId_test", e._baseUrl = c + "/cookies", e
            }
            return m(b, a), b.prototype.ensureAvailable = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = this,
                    b = r.alphanumeric(10),
                    c = (t() - Date.now()) / 1E3,
                    e = this._baseUrl + "?name=" + this._testKeyName;
                return this._doSend(e + "&value=" + b + "&maxAge=" + c, "post").then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (!a.ok) throw Error("BackendStorage is unavailable.\n          Availability test failed.\n          Tried to set " +
                        b + ". Request failed.\n        ");
                }).then(function() {
                    return a._doSend(e, "get").then(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (c.ok) return c.json().then(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            if (c.value !== b) throw Error("BackendStorage is unavailable.\n                Availability test failed.\n                Tried to get " + a._testKeyName + " from server.\n                Got " + c.value + " instead of " + b + ".");
                        });
                        throw Error("BackendStorage is unavailable.\n            Availability test failed.\n            Tried to get " + a._testKeyName + " from server. Request failed.");
                    })
                })
            }, b.prototype._doSend = function(a, b) {
                return this._fetch(a, {
                    credentials: "include",
                    method: b
                })
            }, b.prototype.getContainerId = function() {
                return this._doSend(this._baseUrl + "?name=" + this._keyName, "get").then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a.json()
                }).then(function(a) {
                    return a.value
                })
            }, b.prototype.setContainerId = function(a) {
                var b = (n() - Date.now()) / 1E3;
                return this._doSend(this._baseUrl + "?name=" + this._keyName + "&value=" + a + "&maxAge=" + b, "post").then(function() {})
            }, b
        }(a);
        c.BackendStorage = b;
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                void 0 ===
                    b && (b = void 0);
                var c = a.call(this, "memory") || this;
                return c._value = b, c
            }
            return m(b, a), b.prototype.ensureAvailable = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return Promise.resolve()
            }, b.prototype.getContainerId = function() {
                return Promise.resolve(this._value)
            }, b.prototype.setContainerId = function(a) {
                return this._value = a, Promise.resolve()
            }, b
        }(a);
        c.MemoryStorage = a
    }, {
        "./util": 6,
        "@grammarly-npm/cookie": 3
    }],
    5: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("./util");
        a = a("./container_id_manager");
        c.ContainerIdManager =
            a.ContainerIdManager;
        c.BaseStorage = a.BaseStorage;
        c.MemoryStorage = a.MemoryStorage;
        c.LocalStorage = a.LocalStorage;
        c.CookieStorage = a.CookieStorage;
        c.ChromeCookieStorage = a.ChromeCookieStorage;
        c.WebExtensionsCookieStorage = a.WebExtensionsCookieStorage;
        c.BackendStorage = a.BackendStorage;
        var f = "eventName client clientVersion userId isTest containerId instanceId batchId".split(" ");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, b, c, f, k, u, l, g) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                void 0 === g && (g = !1);
                this._client = b;
                this._clientVersion = c;
                this._fetch = f;
                this._containerIdManager =
                    k;
                this._logger = u;
                this._metric = l;
                this._storePingTimestamp = g;
                this._batchId = 0;
                this._instanceId = d.alphanumeric(8);
                this._isReady = !1;
                this._queue = [];
                this._eventsUrl = a + "/events";
                this._pingMaybe()
            }
            return a.prototype.track = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (void 0 === b && (b = {}), 0 === a.indexOf(this._client + "/")) throw Error("Event name " + a + " should not start with '" + this._client + "/'");
                    Object.keys(b).forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (-1 !== f.indexOf(a)) throw Error("Event data should not contain '" + a + "' prop.");
                    });
                    this._isReady ? ("ping" !== a && this._pingMaybe(),
                        this._send(a, b)) : this._enqueue(a, b)
                }, a.prototype.setUser = function(a, b) {
                    if (null === a || "" === a) throw Error("Invalid userId: " + a);
                    var c = this._userId && this._userId !== a && !(/^-/.test(a) && /^-/.test(this._userId));
                    this._isTest = b;
                    this._userId = a;
                    c && this._pingMaybe(!0);
                    this._isReady || (this._execQueue(), this._isReady = !0)
                }, a.prototype.getContainerId = function() {
                    return this._containerIdManager.getContainerId()
                }, a.prototype._setNextPingTimestamp = function() {
                    var a = d.getNextPingDate();
                    if (this._nextPingTimestamp = a, this._storePingTimestamp) try {
                        localStorage.setItem("gnar_nextPingTimestamp",
                            a.toString())
                    } catch (e) {
                        this._metric.getCounter("nextPingDate.write.failure").increment(), this._logger.warn("nextPingDate.write.failed", e)
                    }
                }, a.prototype._getNextPingTimestamp = function() {
                    var a = this._nextPingTimestamp;
                    if (void 0 !== a || !this._storePingTimestamp) return a;
                    try {
                        var b = localStorage.getItem("gnar_nextPingTimestamp");
                        a = null === b ? void 0 : parseInt(b, 10)
                    } catch (r) {
                        a = void 0, this._metric.getCounter("nextPingDate.read.failure").increment(), this._logger.warn("nextPingDate.read.failed", r)
                    }
                    return a
                }, a.prototype._shouldPing =
                function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (a) return !0;
                    a = this._getNextPingTimestamp();
                    return void 0 === a || a < Date.now()
                }, a.prototype._pingMaybe = function(a) {
                    if (void 0 === a && (a = !1), this._shouldPing(a)) this._setNextPingTimestamp(), this.track("ping", {
                        referrer: document.referrer,
                        url: document.location.href,
                        userAgent: navigator.userAgent,
                        navigatorAppName: navigator.appName,
                        navigatorAppCodeName: navigator.appCodeName,
                        navigatorAppVersion: navigator.appVersion,
                        navigatorVendor: navigator.vendor,
                        screenWidth: screen.width,
                        screenHeight: screen.height
                    })
                },
                a.prototype.pingMaybe = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._pingMaybe()
                }, a.prototype._enqueue = function(a, b) {
                    this._queue.push([a, b])
                }, a.prototype._execQueue = function() {
                    var a = this;
                    this._queue.forEach(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a._send(b[0], b[1])
                    });
                    this._queue = []
                }, a.prototype._send = function(a, b) {
                    var c = this,
                        e = this._batchId++;
                    this.getContainerId().then(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return c._doSend({
                                eventName: c._client + "/" + a,
                                client: c._client,
                                clientVersion: c._clientVersion,
                                userId: c._userId,
                                isTest: c._isTest,
                                containerId: d,
                                instanceId: c._instanceId,
                                batchId: e
                            },
                            b)
                    })["catch"](function(a) {
                        c._metric.getCounter("send.failure").increment();
                        c._logger.warn("send.failed", a)
                    })
                }, a.prototype._doSend = function(a, b) {
                    return this._fetch(this._eventsUrl, {
                        mode: "cors",
                        credentials: "include",
                        method: "post",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            events: [Object.assign(a, b)]
                        })
                    })
                }, a
        }();
        c.GnarClientImpl = a;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                this.history = []
            }
            return a.prototype.track = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    void 0 === b && (b = {});
                    this.history.push({
                        eventName: a,
                        props: b
                    })
                }, a.prototype.pingMaybe =
                function() {}, a.prototype.setUser = function(a, b) {}, a.prototype.getContainerId = function() {
                    return Promise.resolve("dummy_container_id")
                }, a
        }();
        c.MemoryGnarClient = a;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {}
            return a.prototype.track = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    void 0 === b && (b = {});
                    try {
                        var c = JSON.parse(localStorage.getItem("trackingGnar")) || [];
                        c.push({
                            eventName: a,
                            props: b
                        });
                        localStorage.setItem("trackingGnar", JSON.stringify(c))
                    } catch (n) {}
                }, a.prototype.pingMaybe = function() {}, a.prototype.setUser = function(a, b) {}, a.prototype.getContainerId =
                function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return Promise.resolve("dummy_container_id")
                }, a
        }();
        c.LocalStorageGnarClient = a
    }, {
        "./container_id_manager": 4,
        "./util": 6
    }],
    6: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return (void 0 === b && (b = ""), 0 >= a) ? b : d(a - 1, b + f.charAt(Math.floor(Math.random() * (f.length - 1))))
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        c.alphanumeric = d;
        c.getNextPingDate = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = new Date;
            return 2 < a.getHours() && a.setDate(a.getDate() + 1), a.setHours(3),
                a.setMinutes(Math.floor(60 * Math.random())), a.getTime()
        }
    }, {}],
    7: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("./ring_buffer");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, b, c, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var e = this;
                this._eventsSink = c;
                this._crashLogger = f;
                this._crashLogged = !1;
                this.sink = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    e._buffer.push(a);
                    e._eventsSink(a);
                    e._trigger(a) && e._sendCrashLog(a)
                };
                this._buffer = new d.RingBuffer(a, !0);
                this._trigger = "function" == typeof b ? b : function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a.level >= b
                }
            }
            return a.prototype._sendCrashLog = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (!this._crashLogged ||
                    this._buffer.size > this._buffer.capacity / 2) {
                    var b = void 0;
                    try {
                        b = JSON.stringify(this._buffer, void 0, "")
                    } catch (e) {
                        b = e
                    }
                    this._crashLogger.log(a.level, "CrashLog", {
                        events: b,
                        first: !this._crashLogged
                    });
                    this._crashLogged = !0;
                    this._buffer.clear()
                }
            }, a
        }();
        c.CrashLogWrapper = a
    }, {
        "./ring_buffer": 11
    }],
    8: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        b = a("./log4ts");
        c.Logging = b;
        var d = a("./log4ts_impl");
        c.LoggingImpl = d;
        b = a("./timeseries");
        c.TimeSeries = b;
        var f = a("./timeseries_impl");
        c.TimeSeriesImpl =
            f;
        a = a("./utils");
        c.EventProps = a.EventProps;
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function a() {}
                return Object.defineProperty(a, "root", {
                    get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return d.LoggingConfig.getRootLogger()
                    },
                    enumerable: !0,
                    configurable: !0
                }), a.getLogger = function(b, c) {
                    return a.root.getLogger(b, c)
                }, a
            }();
            a.Logging = b;
            b = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function a() {}
                return Object.defineProperty(a, "root", {
                    get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return f.MetricsConfig.getRootMetric()
                    },
                    enumerable: !0,
                    configurable: !0
                }), a
            }();
            a.TimeSeries = b
        }(c.Monitoring || (c.Monitoring = {}))
    }, {
        "./log4ts": 9,
        "./log4ts_impl": 10,
        "./timeseries": 12,
        "./timeseries_impl": 13,
        "./utils": 14
    }],
    9: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a[a.TRACE = 0] = "TRACE";
            a[a.DEBUG = 1] = "DEBUG";
            a[a.INFO = 2] = "INFO";
            a[a.WARN = 3] = "WARN";
            a[a.ERROR = 4] = "ERROR";
            a[a.FATAL = 5] = "FATAL";
            a[a.OFF = 6] = "OFF"
        }(c.LogLevel || (c.LogLevel = {}));
        (function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.fromString = function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                switch (b) {
                    case "TRACE":
                        return a.TRACE;
                    case "DEBUG":
                        return a.DEBUG;
                    case "INFO":
                        return a.INFO;
                    case "WARN":
                        return a.WARN;
                    case "ERROR":
                        return a.ERROR;
                    case "FATAL":
                        return a.FATAL;
                    case "OFF":
                        return a.OFF;
                    default:
                        throw new TypeError("Unrecognized log level string '" + b + "'");
                }
            }
        })(c.LogLevel || (c.LogLevel = {}))
    }, {}],
    10: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("tslib"),
            f = a("./utils"),
            k = a("./log4ts"),
            m = a("./utils"),
            e = a("./crash_logger"),
            r = a("./ring_buffer"),
            n = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function a(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this.parent = a;
                    this.context = void 0
                }
                return a.prototype.get = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this.parent && this.parent.get(),
                        b = this.context;
                    return a || b ? Object.assign({},
                        a, b) : void 0
                }, a.prototype.add = function(a) {
                    this.context = Object.assign({}, this.context, a)
                }, a.prototype.remove = function(a) {
                    var b = this;
                    this.context && a.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a in b.context && delete b.context[a]
                    })
                }, a.prototype.clear = function() {
                    this.context = void 0
                }, a
            }();
        c.TreeContext = n;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                this.name = a;
                this.level = b;
                this.context = c;
                f.validateName(a)
            }
            return a.prototype.isEnabled = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a >= this.level
                }, a.prototype.handler = function(a, b) {
                    var c = this;
                    return {
                        trace: function(e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            throw c.trace(a,
                                e, b), e;
                        },
                        debug: function(e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            throw c.debug(a, e, b), e;
                        },
                        info: function(e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            throw c.info(a, e, b), e;
                        },
                        warn: function(e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            throw c.warn(a, e, b), e;
                        },
                        error: function(e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            throw c.error(a, e, b), e;
                        },
                        fatal: function(e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            throw c.fatal(a, e, b), e;
                        }
                    }
                }, a.prototype.trace = function(a, b, c) {
                    this.log(k.LogLevel.TRACE, a, b, c)
                }, a.prototype.debug = function(a, b, c) {
                    this.log(k.LogLevel.DEBUG, a, b, c)
                }, a.prototype.info = function(a, b, c) {
                    this.log(k.LogLevel.INFO, a, b, c)
                }, a.prototype.warn = function(a, b, c) {
                    this.log(k.LogLevel.WARN, a, b, c)
                }, a.prototype.error =
                function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this.log(k.LogLevel.ERROR, a, b, c)
                }, a.prototype.fatal = function(a, b, c) {
                    this.log(k.LogLevel.FATAL, a, b, c)
                }, a.prototype.log = function(a, b, c, e) {
                    this.isEnabled(a) && (c && e || m.ErrorLike.isErrorLike(c) ? this.logImpl(a, b, c, e) : this.logImpl(a, b, void 0, e || c))
                }, a
        }();
        c.AbstractLogger = a;
        var t = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(a, b, c, e, d, h, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                this.level = a;
                this.message = b;
                this.logger = c;
                this.timestamp = e;
                this.exception = d;
                this.extra = h;
                this.context = f
            }
        }();
        c.LogEvent = t;
        var u = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b, c, e, h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b = a.call(this,
                    b, c, h || new n) || this;
                return b.appender = e, b
            }
            return d.__extends(b, a), b.prototype.getLogger = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new b(this.name + "." + a, c || this.level, this.appender, new n(this.context))
            }, b.prototype.logImpl = function(a, b, c, e) {
                a = new t(a, b, this.name, Date.now(), c, e, this.context.get());
                try {
                    this.appender(a)
                } catch (w) {
                    console.error("Failed processing log event", w);
                    try {
                        l.printToConsole(a)
                    } catch (x) {
                        console.error("No luck. Can't print the event", x)
                    }
                }
            }, b
        }(a);
        c.SimpleLogger = u;
        var l = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(c, e, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.call(this,
                    c, e, b.printToConsole, d) || this
            }
            return d.__extends(b, a), b.printToConsole = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = console.log;
                b = a.level <= k.LogLevel.TRACE ? console.trace || console.log : a.level <= k.LogLevel.DEBUG ? console.debug || console.log : a.level <= k.LogLevel.INFO ? console.log : a.level <= k.LogLevel.WARN ? console.warn : console.error;
                b.apply(console, ["[" + a.logger + "]: " + k.LogLevel[a.level] + " : " + a.message, a.exception, a.extra].filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !!a
                }))
            }, b
        }(u);
        c.ConsoleLogger = l;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {}
            return a.createRootLogger =
                function(b, c, d, f, h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    void 0 === h && (h = !1);
                    var p = function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b.level >= c && (h && l.printToConsole(b), d.append(b)["catch"](a._onError))
                        },
                        v = new n,
                        g = p;
                    f && (g = new u(b + ".crashLogs", k.LogLevel.TRACE, function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        f.append(b)["catch"](a._onError)
                    }, new n(v)), g = (new e.CrashLogWrapper(500, k.LogLevel.ERROR, p, g)).sink);
                    return new u(b, c, g, v)
                }, a
        }();
        a._onError = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return l.printToConsole(new t(k.LogLevel.WARN, "Error while logging message to the server.", "Fallback", 0, void 0, a))
        };
        c.DefaultLogAppender = a;
        var g = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b =
                    this;
                this.event = a;
                this.promise = (new Promise(function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b.resolve = a
                })).then(function() {})
            }
        }();
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                void 0 === b && (b = 300);
                void 0 === c && (c = 1E4);
                this._sink = a;
                this._retryInterval = c;
                this._skippedCounter = this._currentItem = null;
                this._buffer = new r.RingBuffer(b, !1)
            }
            return a.prototype.append = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (this._buffer.isFull) return this._incSkippedCounter(), Promise.reject(Error("Outgoing message buffer is full"));
                    a = new g(a);
                    return this._buffer.push(a), this._doAppend(), a.promise
                }, a.prototype._incSkippedCounter =
                function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._skippedCounter || (this._skippedCounter = new t(k.LogLevel.WARN, "Messages was skipped due to buffer overflow", "log4ts_impl.LogQueue", Date.now(), void 0, {
                        count: 0
                    }));
                    this._skippedCounter.extra.count++
                }, a.prototype._doAppend = function() {
                    var a = this;
                    if (!this._buffer.isEmpty && !this._currentItem) {
                        var b = this._buffer.first,
                            c = this._sink.append(b.event);
                        this._currentItem = b;
                        c.then(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b.resolve();
                            var c = a._buffer.pop();
                            if (c !== b && c === a._currentItem) throw Error("Illegal state");
                            a._currentItem =
                                null;
                            a._skippedCounter && (a.append(a._skippedCounter), a._skippedCounter = null);
                            a._doAppend()
                        })["catch"](function(c) {
                            a._retryAppend(b)
                        })
                    }
                }, a.prototype._retryAppend = function(a) {
                    var b = this;
                    setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var c = a.event.extra || {};
                        c.appendRetries || (c = a.event.extra = Object.assign({
                            appendRetries: 1
                        }, c));
                        ++c.appendRetries;
                        b._currentItem = null;
                        b._doAppend()
                    }, this._retryInterval)
                }, a
        }();
        c.LogQueue = a;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {}
            return a.prototype.append = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return Promise.resolve()
            }, a
        }();
        c.DummyFelogClient =
            a;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                this._appName = a;
                this._appVersion = b;
                this._env = c;
                this._fetch = e
            }
            return a.prototype.append = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return this._fetch(this._prepareData(a))
            }, a.prototype._toObject = function(a) {
                return void 0 === a || null === a || a instanceof Object && !Array.isArray(a) ? a : {
                    extra: a
                }
            }, a.prototype._parseException = function(a) {
                if (a) {
                    a = this._toObject(a);
                    var b = a.name;
                    b = void 0 === b ? "UnknownError" : b;
                    var c = a.message;
                    c = void 0 === c ? "Unknown error message" : c;
                    var e = a.stack;
                    a = d.__rest(a, ["name", "message", "stack"]);
                    return {
                        exceptionPart: {
                            exception: {
                                name: b,
                                message: c,
                                stack: e
                            }
                        },
                        exceptionDetailsPart: 0 < Object.keys(a).length ? {
                            exceptionDetails: a
                        } : {}
                    }
                }
                return {
                    exceptionPart: {},
                    exceptionDetailsPart: {}
                }
            }, a.prototype._prepareData = function(a) {
                var b = a.context ? {
                        context: a.context
                    } : {},
                    c = this._parseException(a.exception),
                    e = c.exceptionPart;
                c = JSON.stringify(Object.assign({}, c.exceptionDetailsPart, this._toObject(a.extra)));
                a = Object.assign({
                    message: a.message,
                    logger: a.logger,
                    level: k.LogLevel[a.level],
                    application: this._appName,
                    version: this._appVersion,
                    env: this._env
                }, b, e, "{}" !== c && {
                    details: c
                });
                return JSON.stringify(a, null, "")
            }, a
        }();
        c.FelogClientBase = a;
        b = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b, c, e, h, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.call(this, c, e, h, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return d(b, {
                        method: "POST",
                        cache: "no-cache",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: a
                    }).then(function() {})
                }) || this
            }
            return d.__extends(b, a), b
        }(a);
        c.PostFelogClient = b;
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b, c, e, h, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var p = b + "/log?json=";
                return a.call(this, c, e, h, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return d(p + encodeURIComponent(a), {
                        mode: "no-cors",
                        method: "get",
                        cache: "no-cache"
                    }).then(function() {})
                }) || this
            }
            return d.__extends(b, a), b
        }(a);
        c.GetFelogClient = a;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {}
            return a.getRootLogger = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a._rootLogger || (a._rootLogger = a._createDefaultRootLogger(), a._rootLogger.warn("Using DEFAULT root logger")), a._rootLogger
            }, a.configure = function(b) {
                a._rootLogger = b;
                a._rootLogger.debug("ROOT logger changed", b)
            }, a._createDefaultRootLogger = function() {
                return new l("DEFAULT", k.LogLevel.DEBUG)
            }, a
        }();
        c.LoggingConfig = a
    }, {
        "./crash_logger": 7,
        "./log4ts": 9,
        "./ring_buffer": 11,
        "./utils": 14,
        tslib: "tslib"
    }],
    11: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (void 0 === b && (b = !1), this.capacity = a, this.allowOverflow = b, this._start = 0, this._end = 0, this._isFull = !1, this.toJSON = this.toArray, 0 >= a) throw Error("Invalid capacity " + a);
                this._buffer = Array(a)
            }
            return Object.defineProperty(a.prototype, "size", {
                get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return this._isFull ? this._buffer.length : (this._end - this._start + this._buffer.length) % this._buffer.length
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(a.prototype, "isEmpty", {
                get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return 0 === this.size
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(a.prototype, "isFull", {
                get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return this._isFull
                },
                enumerable: !0,
                configurable: !0
            }), a.prototype.push = function(a) {
                if (this.isFull) {
                    if (!this.allowOverflow) throw Error("Buffer is full");
                    ++this._start;
                    this._start === this.capacity && (this._start = 0)
                }
                this._buffer[this._end++] = a;
                this._end === this.capacity && (this._end = 0);
                this._start === this._end &&
                    (this._isFull = !0)
            }, a.prototype.pop = function() {
                if (!this.isEmpty) {
                    var a = this._buffer[this._start];
                    return this._buffer[this._start] = void 0, this._start++, this._start === this.capacity && (this._start = 0), this._isFull = !1, a
                }
            }, Object.defineProperty(a.prototype, "first", {
                get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return this.isEmpty ? void 0 : this._buffer[this._start]
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(a.prototype, "last", {
                get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return this.isEmpty ? void 0 : this._buffer[0 === this._end ? this.capacity - 1 : this._end - 1]
                },
                enumerable: !0,
                configurable: !0
            }), a.prototype.clear = function() {
                this._buffer = Array(this.capacity);
                this._start = this._end = 0;
                this._isFull = !1
            }, a.prototype.toArray = function() {
                if (this.isEmpty) var a = [];
                else if (this._start < this._end) a = this._buffer.slice(this._start, this._end);
                else {
                    a = Array(this.size);
                    for (var b = 0, c = this._start; c < this.capacity; ++c, ++b) a[b] = this._buffer[c];
                    for (c = 0; c < this._end; ++c, ++b) a[b] = this._buffer[c]
                }
                return a
            }, a
        }();
        c.RingBuffer = a
    }, {}],
    12: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            Object.defineProperty(c, "__esModule", {
                value: !0
            })
        },
        {}
    ],
    13: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("tslib"),
            f = a("./utils");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                this.name = a;
                this.timersSink = b;
                this.countersSink = c;
                f.validateName(a)
            }
            return a.prototype.getMetric = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return this._createChild(a)
                }, a.prototype.getTimer = function(a) {
                    return this._createChild(a)
                }, a.prototype.getCounter = function(a) {
                    return this._createChild(a)
                }, Object.defineProperty(a.prototype, "parent", {
                    get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var b = this.name.lastIndexOf(".");
                        b = this.name.substring(0, -1 === b ? 0 : b);
                        return "" === b ? void 0 : new a(b, this.timersSink, this.countersSink)
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(a.prototype, "root", {
                    get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var b = this.name.indexOf(".");
                        b = this.name.substring(0, -1 === b ? 0 : b);
                        return "" === b ? this : new a(b, this.timersSink, this.countersSink)
                    },
                    enumerable: !0,
                    configurable: !0
                }), a.prototype._createName = function(a) {
                    return this.name + "." + a
                }, a.prototype.start = function() {
                    var a = Date.now(),
                        b = this;
                    return {
                        stop: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b.recordTime(Date.now() - a)
                        }
                    }
                }, a.prototype.recordTime =
                function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this.timersSink(this.name, a)
                }, a.prototype.timing = function(a) {
                    var b = this.start();
                    try {
                        return a()
                    } finally {
                        try {
                            b.stop()
                        } catch (n) {}
                    }
                }, a.prototype.increment = function(a) {
                    void 0 === a && (a = 1);
                    this.countersSink(this.name, a)
                }, a.prototype.decrement = function(a) {
                    void 0 === a && (a = 1);
                    this.increment(-a)
                }, a.prototype._createChild = function(b) {
                    return new a(this._createName(b), this.timersSink, this.countersSink)
                }, a
        }();
        c.AbstractMetricsStorage = a;
        var k = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.call(this, "MP", function(a,
                    c) {
                    return b("TIMER: " + a + " = " + c)
                }, function(a, c) {
                    return b("COUNTER: " + a + " = " + c)
                }) || this
            }
            return d.__extends(b, a), b
        }(a);
        c.MetricsPrinter = k;
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b, c, e, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                void 0 === d && (d = 7500);
                var f = a.call(this, b, function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return f._reportTimer(a, b)
                }, function(a, b) {
                    return f._reportCounter(a, b)
                }) || this;
                return f._fetch = e, f._sendTimeout = d, f._countersBuffer = {}, f._timersBuffer = [], f._sendTimer = void 0, f._sendData = function() {
                    var a = [f._timersBuffer.join("&"), Object.keys(f._countersBuffer).map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a +
                                "=" + f._countersBuffer[a]
                        }).join("&")].filter(function(a) {
                            return a.length
                        }).join("&"),
                        b = f._baseUrl + a;
                    f._timersBuffer.length = 0;
                    f._countersBuffer = {};
                    f._sendTimer = void 0;
                    var c = 0,
                        e = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            f._fetch(b, {
                                mode: "no-cors",
                                cache: "no-cache"
                            })["catch"](function(a) {
                                3 > c++ ? setTimeout(e, 5E3 * c) : console.error("Cannot send timesereies data", a, b)
                            })
                        };
                    e()
                }, f._baseUrl = c + "/ts?", f
            }
            return d.__extends(b, a), b.createRoot = function(a, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new b(a, c, e)
            }, b.prototype._reportTimer = function(a, b) {
                this._timersBuffer.push("t." +
                    a + "=" + b);
                this._startSending()
            }, b.prototype._reportCounter = function(a, b) {
                a = "c." + a;
                this._countersBuffer[a] = (this._countersBuffer[a] || 0) + b;
                this._startSending()
            }, b.prototype._startSending = function() {
                this._sendTimer || (this._sendTimer = setTimeout(this._sendData, this._sendTimeout))
            }, b
        }(a);
        c.MetricsStorage = a;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {}
            return a.getRootMetric = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a._metricsRoot || (console.warn("[WARNING] Using default timeseries implementation."), a._metricsRoot = new k(console.log)), a._metricsRoot
                },
                a.configure = function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a._metricsRoot = b
                }, a
        }();
        c.MetricsConfig = a
    }, {
        "./utils": 14,
        tslib: "tslib"
    }],
    14: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d;
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.isErrorLike = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && (void 0 !== a.message && void 0 !== a.name || void 0 !== a.stack)
            }
        }(d = c.ErrorLike || (c.ErrorLike = {}));
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a, c, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (!a) return {};
                var e = {};
                return (f ? Object.getOwnPropertyNames : Object.keys)(a).forEach(function(f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var l = a[f];
                    null === l || void 0 === l || "number" == typeof l || "string" ==
                        typeof l || "boolean" == typeof l ? e[f] = l : "object" == typeof l && (l instanceof Boolean || l instanceof Number || l instanceof String || l instanceof Date || l instanceof RegExp ? e[f] = l.toString() : -1 === c.indexOf(l) && (c.push(l), l = b(l, c, d.isErrorLike(l)), 0 < Object.keys(l).length && (e[f] = l)))
                }), e
            }
            a.fromAny = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b(a, [a], d.isErrorLike(a))
            }
        }(c.EventProps || (c.EventProps = {}));
        var f = /^(?!\.[\w])[\w.]*\w$/;
        c.validateName = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if ("" === a) throw Error("Empty name");
            if (!f.test(a)) throw Error("Invalid name: " + a +
                ". Should be hierarchical dot separated string and may contain only word characters)");
        }
    }, {}],
    15: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        ! function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a = c(a, b);
                return void 0 == a.from ? {
                    s: -1,
                    delta: 0
                } : {
                    s: a.from,
                    delta: a.newFragment.length - a.oldFragment.length
                }
            }

            function c(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (a === b) return {};
                var c = a.length,
                    d = b.length;
                if (d > c) {
                    if (b.substr(0, c) === a) return {
                        from: c,
                        to: c,
                        oldFragment: "",
                        newFragment: b.substr(c)
                    };
                    if (b.substr(d - c) === a) return {
                        from: 0,
                        to: 0,
                        oldFragment: "",
                        newFragment: b.substr(0, d - c)
                    }
                }
                if (d < c) {
                    if (a.substr(c -
                            d) === b) return {
                        from: 0,
                        to: c - d,
                        oldFragment: a.substr(0, c - d),
                        newFragment: ""
                    };
                    if (a.substr(0, d) === b) return {
                        from: d,
                        to: c,
                        oldFragment: a.substr(d),
                        newFragment: ""
                    }
                }
                var f = d < c ? d : c,
                    k;
                for (k = 0; a[k] === b[k] && k < f;) k += 1;
                for (var u = 0; a[c - u - 1] === b[d - u - 1] && 0 <= f - u;) u += 1;
                f = u;
                return k + f > c && (f -= k + f - c), k + f > d && (f -= k + f - d), {
                    from: k,
                    to: c - f,
                    oldFragment: a.substr(k, c - f - k),
                    newFragment: b.substr(k, d - f - k)
                }
            }
            "undefined" == typeof b && (window.diffPos = a, window.textdiff = c);
            try {
                b.exports = {
                    diffPos: a,
                    textdiff: c
                }
            } catch (k) {}
        }()
    }, {}],
    16: [function(a, b,
        c) {
        try {
            b.exports = a("./lib/textdiff")
        } catch (d) {}
    }, {
        "./lib/textdiff": 15
    }],
    17: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                P.isConnected() || (l("connect to url: " + a.url), v = new B(a.url), D = !1, A = !1, v.onopen = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    L = M;
                    A = !0;
                    J && (J = !1, P.close());
                    b && a.resetQueueOnReconnect ? O = [] : n();
                    P.emit("connect");
                    b && (P.emit("reconnect"), w = !1)
                }, v.onmessage = function(b) {
                    x && console.log("%c Received: %s", "color: #46af91;", b.data);
                    c(b.data);
                    b = b.data;
                    try {
                        b = JSON.parse(b)
                    } catch (F) {
                        g(F.stack || F, b)
                    }
                    a.useQueue ? (K.push(b), q()) : P.emit("message",
                        b)
                }, v.onclose = function(a) {
                    A = !1;
                    P.emit("disconnect", a);
                    D || u("disconnected")
                }, v.onerror = u, window.app && app.one("offline", function() {
                    A && (P.close(), app.one("online", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        P.connect()
                    }))
                }))
            }

            function c(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.useStandBy && b && !d(b) && (clearTimeout(G), G = setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    P.close();
                    C = !0;
                    G = !1
                }, a.useStandBy))
            }

            function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (a && "ping" == a) return !0;
                var b = !1;
                try {
                    var c = JSON.parse(a)
                } catch (Y) {}
                return c && ("ping" == c || c.action && "pong" == c.action) && (b = !0), b
            }

            function n() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (v)
                    for (; v.readyState == B.OPEN && O.length;) {
                        var b =
                            O.shift();
                        x && console.log("%c Sending %s", "color:rgba(10, 10, 10, 0.6); font-size: 10px", b);
                        c(b);
                        v.send(b);
                        y && clearTimeout(y);
                        y = setTimeout(k, a.idleTimeout)
                    }
            }

            function k() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                y = null;
                P.send("ping")
            }

            function u(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                g("websocket error", a);
                P.emit("error", a);
                a && a.target && -1 < [B.CLOSING, B.CLOSED].indexOf(a.target.readyState) || p || (A && P.close(), l("try to reconnect in " + L / 1E3 + "s"), p = setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    L = Math.min(H, 1.5 * L);
                    p = null;
                    b(!0)
                }, L))
            }

            function l() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                x && console.log.apply(console, arguments)
            }

            function g() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                console.error.apply(console,
                    arguments)
            }

            function q() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (!z && !R) return 0 === K.length ? void(z = null) : void(z = setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    R || P.emit("message", K.shift());
                    z = null;
                    q()
                }, a.useQueue))
            }
            var v, p, y, z, h, w, x = !a.silentLogs,
                B = window.WebSocket || window.MozWebSocket,
                C = !1,
                G = null,
                A = !1,
                D = !1,
                J = !1,
                L = 1E3,
                M = 1E3,
                H = 6E4,
                O = [],
                K = [],
                R = !1;
            a = Object.assign({}, {
                url: null,
                connectionTimeout: 1E3,
                idleTimeout: 3E5,
                useQueue: !1,
                useStandBy: !1,
                playDelay: 50,
                resetQueueOnReconnect: !1
            }, a);
            var P = f({
                connect: b,
                reconnect: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    w || (w = !0, P.isConnected() ? (P.one("disconnect",
                        function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            setTimeout(P.connect.bind(null, !0), 0)
                        }), D = !0, P.close()) : P.connect(!0))
                },
                send: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    C ? !d(a) && C && (C = !1, b(!0)) : (a = JSON.stringify(a), O.push(a), n())
                },
                close: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (D = !0, l("explicit close requested"), !A) return J = !0;
                    try {
                        v && v.close(), p && (clearTimeout(p), p = null)
                    } catch (aa) {
                        g("socket closing bug", aa.stack || aa)
                    }
                    A = !1;
                    G && clearTimeout(G)
                },
                isConnected: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return A
                },
                release: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    clearTimeout(p)
                },
                toString: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return "[object WebSocket]"
                },
                wsPlay: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    clearTimeout(h);
                    h =
                        setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            R = !1;
                            q()
                        }, a.playDelay)
                },
                wsPause: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    clearTimeout(h);
                    R = !0
                }
            });
            return P
        }
        var f = a("emitter");
        "function" != typeof Object.assign && ! function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            Object.assign = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (void 0 === a || null === a) throw new TypeError("Cannot convert undefined or null to object");
                for (var b = Object(a), c = 1; c < arguments.length; c++) {
                    var d = arguments[c];
                    if (void 0 !== d && null !== d)
                        for (var f in d) d.hasOwnProperty(f) && (b[f] = d[f])
                }
                return b
            }
        }();
        try {
            b.exports = d
        } catch (k) {}
    }, {
        emitter: "emitter"
    }],
    18: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        try {
            b.exports =
                a("./lib/websocket")
        } catch (d) {}
    }, {
        "./lib/websocket": 17
    }],
    19: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = {
            "default": a("core-js/library/fn/array/from"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/array/from": 44
    }],
    20: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = {
            "default": a("core-js/library/fn/get-iterator"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/get-iterator": 45
    }],
    21: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = {
            "default": a("core-js/library/fn/is-iterable"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/is-iterable": 46
    }],
    22: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = {
            "default": a("core-js/library/fn/json/stringify"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/json/stringify": 47
    }],
    23: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = {
            "default": a("core-js/library/fn/map"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/map": 48
    }],
    24: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = {
            "default": a("core-js/library/fn/object/assign"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/object/assign": 49
    }],
    25: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = {
            "default": a("core-js/library/fn/object/create"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/object/create": 50
    }],
    26: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = {
            "default": a("core-js/library/fn/object/define-property"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/object/define-property": 51
    }],
    27: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = {
            "default": a("core-js/library/fn/object/get-own-property-symbols"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/object/get-own-property-symbols": 52
    }],
    28: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = {
            "default": a("core-js/library/fn/object/get-prototype-of"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/object/get-prototype-of": 53
    }],
    29: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = {
            "default": a("core-js/library/fn/object/keys"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/object/keys": 54
    }],
    30: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = {
            "default": a("core-js/library/fn/object/set-prototype-of"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/object/set-prototype-of": 55
    }],
    31: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = {
            "default": a("core-js/library/fn/promise"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/promise": 56
    }],
    32: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = {
            "default": a("core-js/library/fn/symbol"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/symbol": 57
    }],
    33: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = {
            "default": a("core-js/library/fn/symbol/iterator"),
            __esModule: !0
        }
    }, {
        "core-js/library/fn/symbol/iterator": 58
    }],
    34: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.__esModule = !0;
        c["default"] = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function");
        }
    }, {}],
    35: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.__esModule = !0;
        var d = (a = a("../core-js/object/define-property")) && a.__esModule ? a : {
            "default": a
        };
        c["default"] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var c = 0; c < b.length; c++) {
                    var f = b[c];
                    f.enumerable = f.enumerable || !1;
                    f.configurable = !0;
                    "value" in f && (f.writable = !0);
                    (0, d["default"])(a, f.key, f)
                }
            }
            return function(b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return c && a(b.prototype, c), e &&
                    a(b, e), b
            }
        }()
    }, {
        "../core-js/object/define-property": 26
    }],
    36: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.__esModule = !0;
        var d = (a = a("../core-js/object/define-property")) && a.__esModule ? a : {
            "default": a
        };
        c["default"] = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return b in a ? (0, d["default"])(a, b, {
                value: c,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : a[b] = c, a
        }
    }, {
        "../core-js/object/define-property": 26
    }],
    37: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.__esModule = !0;
        a = a("../core-js/object/assign");
        c["default"] = (a && a.__esModule ? a : {
            "default": a
        })["default"] || function(a) {
            for (var b = 1; b < arguments.length; b++) {
                var c =
                    arguments[b],
                    d;
                for (d in c) Object.prototype.hasOwnProperty.call(c, d) && (a[d] = c[d])
            }
            return a
        }
    }, {
        "../core-js/object/assign": 24
    }],
    38: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        c.__esModule = !0;
        b = a("../core-js/object/set-prototype-of");
        var f = d(b);
        b = a("../core-js/object/create");
        var k = d(b);
        a = a("../helpers/typeof");
        var m = d(a);
        c["default"] = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + ("undefined" == typeof b ?
                "undefined" : (0, m["default"])(b)));
            a.prototype = (0, k["default"])(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            });
            b && (f["default"] ? (0, f["default"])(a, b) : a.__proto__ = b)
        }
    }, {
        "../core-js/object/create": 25,
        "../core-js/object/set-prototype-of": 30,
        "../helpers/typeof": 42
    }],
    39: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.__esModule = !0;
        var d = (a = a("../helpers/typeof")) && a.__esModule ? a : {
            "default": a
        };
        c["default"] = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" !== ("undefined" == typeof b ? "undefined" : (0, d["default"])(b)) && "function" != typeof b ? a : b
        }
    }, {
        "../helpers/typeof": 42
    }],
    40: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.__esModule = !0;
        var d = (b = a("../core-js/is-iterable")) && b.__esModule ? b : {
                "default": b
            },
            f = (a = a("../core-js/get-iterator")) && a.__esModule ? a : {
                "default": a
            };
        c["default"] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (Array.isArray(a)) return a;
                if ((0, d["default"])(Object(a))) {
                    var c = [],
                        k = !0,
                        n = !1,
                        t = void 0;
                    try {
                        for (var u, l = (0, f["default"])(a); !(k = (u = l.next()).done) && (c.push(u.value), !b || c.length !== b); k = !0);
                    } catch (g) {
                        n = !0, t = g
                    } finally {
                        try {
                            !k && l["return"] && l["return"]()
                        } finally {
                            if (n) throw t;
                        }
                    }
                    return c
                }
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
            }
        }()
    }, {
        "../core-js/get-iterator": 20,
        "../core-js/is-iterable": 21
    }],
    41: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            c.__esModule = !0;
            var d = (a = a("../core-js/array/from")) && a.__esModule ? a : {
                "default": a
            };
            c["default"] = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (Array.isArray(a)) {
                    for (var b = 0, c = Array(a.length); b < a.length; b++) c[b] = a[b];
                    return c
                }
                return (0, d["default"])(a)
            }
        },
        {
            "../core-js/array/from": 19
        }
    ],
    42: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.__esModule = !0;
        b = (b = a("../core-js/symbol/iterator")) && b.__esModule ? b : {
            "default": b
        };
        var d = (a = a("../core-js/symbol")) && a.__esModule ? a : {
                "default": a
            },
            f = "function" == typeof d["default"] && "symbol" == typeof b["default"] ? function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return typeof a
            } : function(a) {
                return a && "function" == typeof d["default"] && a.constructor === d["default"] && a !== d["default"].prototype ? "symbol" : typeof a
            };
        c["default"] = "function" == typeof d["default"] && "symbol" === f(b["default"]) ? function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "undefined" ==
                typeof a ? "undefined" : f(a)
        } : function(a) {
            return a && "function" == typeof d["default"] && a.constructor === d["default"] && a !== d["default"].prototype ? "symbol" : "undefined" == typeof a ? "undefined" : f(a)
        }
    }, {
        "../core-js/symbol": 32,
        "../core-js/symbol/iterator": 33
    }],
    43: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = a("regenerator-runtime")
    }, {
        "regenerator-runtime": 163
    }],
    44: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../../modules/es6.string.iterator");
        a("../../modules/es6.array.from");
        b.exports = a("../../modules/_core").Array.from
    }, {
        "../../modules/_core": 73,
        "../../modules/es6.array.from": 141,
        "../../modules/es6.string.iterator": 152
    }],
    45: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../modules/web.dom.iterable");
        a("../modules/es6.string.iterator");
        b.exports = a("../modules/core.get-iterator")
    }, {
        "../modules/core.get-iterator": 139,
        "../modules/es6.string.iterator": 152,
        "../modules/web.dom.iterable": 157
    }],
    46: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../modules/web.dom.iterable");
        a("../modules/es6.string.iterator");
        b.exports = a("../modules/core.is-iterable")
    }, {
        "../modules/core.is-iterable": 140,
        "../modules/es6.string.iterator": 152,
        "../modules/web.dom.iterable": 157
    }],
    47: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a = a("../../modules/_core");
        var d = a.JSON || (a.JSON = {
            stringify: JSON.stringify
        });
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.stringify.apply(d, arguments)
        }
    }, {
        "../../modules/_core": 73
    }],
    48: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../modules/es6.object.to-string");
        a("../modules/es6.string.iterator");
        a("../modules/web.dom.iterable");
        a("../modules/es6.map");
        a("../modules/es7.map.to-json");
        b.exports = a("../modules/_core").Map
    }, {
        "../modules/_core": 73,
        "../modules/es6.map": 143,
        "../modules/es6.object.to-string": 150,
        "../modules/es6.string.iterator": 152,
        "../modules/es7.map.to-json": 154,
        "../modules/web.dom.iterable": 157
    }],
    49: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../../modules/es6.object.assign");
        b.exports = a("../../modules/_core").Object.assign
    }, {
        "../../modules/_core": 73,
        "../../modules/es6.object.assign": 144
    }],
    50: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../../modules/es6.object.create");
        var d = a("../../modules/_core").Object;
        b.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.create(a, b)
        }
    }, {
        "../../modules/_core": 73,
        "../../modules/es6.object.create": 145
    }],
    51: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../../modules/es6.object.define-property");
        var d = a("../../modules/_core").Object;
        b.exports = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.defineProperty(a, b, c)
        }
    }, {
        "../../modules/_core": 73,
        "../../modules/es6.object.define-property": 146
    }],
    52: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../../modules/es6.symbol");
        b.exports = a("../../modules/_core").Object.getOwnPropertySymbols
    }, {
        "../../modules/_core": 73,
        "../../modules/es6.symbol": 153
    }],
    53: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../../modules/es6.object.get-prototype-of");
        b.exports = a("../../modules/_core").Object.getPrototypeOf
    }, {
        "../../modules/_core": 73,
        "../../modules/es6.object.get-prototype-of": 147
    }],
    54: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../../modules/es6.object.keys");
        b.exports = a("../../modules/_core").Object.keys
    }, {
        "../../modules/_core": 73,
        "../../modules/es6.object.keys": 148
    }],
    55: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../../modules/es6.object.set-prototype-of");
        b.exports = a("../../modules/_core").Object.setPrototypeOf
    }, {
        "../../modules/_core": 73,
        "../../modules/es6.object.set-prototype-of": 149
    }],
    56: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../modules/es6.object.to-string");
        a("../modules/es6.string.iterator");
        a("../modules/web.dom.iterable");
        a("../modules/es6.promise");
        b.exports = a("../modules/_core").Promise
    }, {
        "../modules/_core": 73,
        "../modules/es6.object.to-string": 150,
        "../modules/es6.promise": 151,
        "../modules/es6.string.iterator": 152,
        "../modules/web.dom.iterable": 157
    }],
    57: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../../modules/es6.symbol");
        a("../../modules/es6.object.to-string");
        a("../../modules/es7.symbol.async-iterator");
        a("../../modules/es7.symbol.observable");
        b.exports = a("../../modules/_core").Symbol
    }, {
        "../../modules/_core": 73,
        "../../modules/es6.object.to-string": 150,
        "../../modules/es6.symbol": 153,
        "../../modules/es7.symbol.async-iterator": 155,
        "../../modules/es7.symbol.observable": 156
    }],
    58: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("../../modules/es6.string.iterator");
        a("../../modules/web.dom.iterable");
        b.exports = a("../../modules/_wks-ext").f("iterator")
    }, {
        "../../modules/_wks-ext": 136,
        "../../modules/es6.string.iterator": 152,
        "../../modules/web.dom.iterable": 157
    }],
    59: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if ("function" != typeof a) throw TypeError(a + " is not a function!");
            return a
        }
    }, {}],
    60: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            b.exports = function() {}
        },
        {}
    ],
    61: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = function(a, b, c, m) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!(a instanceof b) || void 0 !== m && m in a) throw TypeError(c + ": incorrect invocation!");
            return a
        }
    }, {}],
    62: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_is-object");
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!d(a)) throw TypeError(a + " is not an object!");
            return a
        }
    }, {
        "./_is-object": 93
    }],
    63: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_for-of");
        b.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = [];
            return d(a, !1, c.push, c, b), c
        }
    }, {
        "./_for-of": 83
    }],
    64: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_to-iobject"),
            f = a("./_to-length"),
            k = a("./_to-index");
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(b, c, n) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var e;
                b = d(b);
                var u = f(b.length);
                n = k(n, u);
                if (a && c != c)
                    for (; u > n;) {
                        if (e = b[n++], e != e) return !0
                    } else
                        for (; u > n; n++)
                            if ((a || n in b) && b[n] === c) return a || n || 0;
                return !a && -1
            }
        }
    }, {
        "./_to-index": 128,
        "./_to-iobject": 130,
        "./_to-length": 131
    }],
    65: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_ctx"),
            f = a("./_iobject"),
            k = a("./_to-object"),
            m = a("./_to-length"),
            e = a("./_array-species-create");
        b.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = 1 == a,
                n = 2 == a,
                l = 3 == a,
                g = 4 == a,
                q = 6 == a,
                v = 5 == a || q,
                p = b || e;
            return function(b, e, h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var u,
                    t, y = k(b),
                    r = f(y);
                e = d(e, h, 3);
                h = m(r.length);
                var z = 0;
                for (b = c ? p(b, h) : n ? p(b, 0) : void 0; h > z; z++)
                    if ((v || z in r) && (u = r[z], t = e(u, z, y), a))
                        if (c) b[z] = t;
                        else if (t) switch (a) {
                    case 3:
                        return !0;
                    case 5:
                        return u;
                    case 6:
                        return z;
                    case 2:
                        b.push(u)
                } else if (g) return !1;
                return q ? -1 : l || g ? g : b
            }
        }
    }, {
        "./_array-species-create": 67,
        "./_ctx": 75,
        "./_iobject": 90,
        "./_to-length": 131,
        "./_to-object": 132
    }],
    66: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_is-object"),
            f = a("./_is-array"),
            k = a("./_wks")("species");
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b;
            return f(a) && (b = a.constructor,
                "function" != typeof b || b !== Array && !f(b.prototype) || (b = void 0), d(b) && (b = b[k], null === b && (b = void 0))), void 0 === b ? Array : b
        }
    }, {
        "./_is-array": 92,
        "./_is-object": 93,
        "./_wks": 137
    }],
    67: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_array-species-constructor");
        b.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return new(d(a))(b)
        }
    }, {
        "./_array-species-constructor": 66
    }],
    68: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_cof"),
            f = a("./_wks")("toStringTag"),
            k = "Arguments" == d(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return arguments
            }());
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b;
            if (void 0 === a) var c = "Undefined";
            else {
                if (null ===
                    a) var n = "Null";
                else {
                    a: {
                        var t = a = Object(a);
                        try {
                            n = t[f];
                            break a
                        } catch (u) {}
                        n = void 0
                    }
                    n = "string" == typeof(c = n) ? c : k ? d(a) : "Object" == (b = d(a)) && "function" == typeof a.callee ? "Arguments" : b
                }
                c = n
            }
            return c
        }
    }, {
        "./_cof": 69,
        "./_wks": 137
    }],
    69: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = {}.toString;
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.call(a).slice(8, -1)
        }
    }, {}],
    70: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-dp").f,
            f = a("./_object-create"),
            k = a("./_redefine-all"),
            m = a("./_ctx"),
            e = a("./_an-instance"),
            r = a("./_defined"),
            n = a("./_for-of"),
            t = a("./_iter-define"),
            u = a("./_iter-step"),
            l = a("./_set-species"),
            g = a("./_descriptors"),
            q = a("./_meta").fastKey,
            v = g ? "_s" : "size",
            p = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = q(b);
                if ("F" !== c) return a._i[c];
                for (a = a._f; a; a = a.n)
                    if (a.k == b) return a
            };
        b.exports = {
            getConstructor: function(a, b, c, l) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var h = a(function(a, p) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    e(a, h, b, "_i");
                    a._i = f(null);
                    a._f = void 0;
                    a._l = void 0;
                    a[v] = 0;
                    void 0 != p && n(p, c, a[l], a)
                });
                return k(h.prototype, {
                    clear: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (var a = this._i, b = this._f; b; b = b.n) b.r = !0, b.p && (b.p = b.p.n = void 0), delete a[b.i];
                        this._f = this._l = void 0;
                        this[v] = 0
                    },
                    "delete": function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (a =
                            p(this, a)) {
                            var b = a.n,
                                c = a.p;
                            delete this._i[a.i];
                            a.r = !0;
                            c && (c.n = b);
                            b && (b.p = c);
                            this._f == a && (this._f = b);
                            this._l == a && (this._l = c);
                            this[v]--
                        }
                        return !!a
                    },
                    forEach: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        e(this, h, "forEach");
                        for (var b, c = m(a, 1 < arguments.length ? arguments[1] : void 0, 3); b = b ? b.n : this._f;)
                            for (c(b.v, b.k, this); b && b.r;) b = b.p
                    },
                    has: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return !!p(this, a)
                    }
                }), g && d(h.prototype, "size", {
                    get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return r(this[v])
                    }
                }), h
            },
            def: function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var e, h, d = p(a, b);
                return d ? d.v = c : (a._l = d = {
                        i: h = q(b, !0),
                        k: b,
                        v: c,
                        p: e = a._l,
                        n: void 0,
                        r: !1
                    },
                    a._f || (a._f = d), e && (e.n = d), a[v]++, "F" !== h && (a._i[h] = d)), a
            },
            getEntry: p,
            setStrong: function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                t(a, b, function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._t = a;
                    this._k = b;
                    this._l = void 0
                }, function() {
                    for (var a = this._k, b = this._l; b && b.r;) b = b.p;
                    return this._t && (this._l = b = b ? b.n : this._t._f) ? "keys" == a ? u(0, b.k) : "values" == a ? u(0, b.v) : u(0, [b.k, b.v]) : (this._t = void 0, u(1))
                }, c ? "entries" : "values", !c, !0);
                l(b)
            }
        }
    }, {
        "./_an-instance": 61,
        "./_ctx": 75,
        "./_defined": 76,
        "./_descriptors": 77,
        "./_for-of": 83,
        "./_iter-define": 96,
        "./_iter-step": 98,
        "./_meta": 102,
        "./_object-create": 105,
        "./_object-dp": 106,
        "./_redefine-all": 118,
        "./_set-species": 121
    }],
    71: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_classof"),
            f = a("./_array-from-iterable");
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (d(this) != a) throw TypeError(a + "#toJSON isn't generic");
                return f(this)
            }
        }
    }, {
        "./_array-from-iterable": 63,
        "./_classof": 68
    }],
    72: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_global"),
            f = a("./_export"),
            k = a("./_meta"),
            m = a("./_fails"),
            e = a("./_hide"),
            r = a("./_redefine-all"),
            n = a("./_for-of"),
            t = a("./_an-instance"),
            u = a("./_is-object"),
            l = a("./_set-to-string-tag"),
            g = a("./_object-dp").f,
            q = a("./_array-methods")(0),
            v = a("./_descriptors");
        b.exports = function(a, b, c, h, w, x) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var p = d[a],
                y = p,
                z = w ? "set" : "add",
                A = y && y.prototype,
                D = {};
            return v && "function" == typeof y && (x || A.forEach && !m(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (new y).entries().next()
            })) ? (y = b(function(b, c) {
                t(b, y, a, "_c");
                b._c = new p;
                void 0 != c && n(c, w, b[z], b)
            }), q("add clear delete forEach get has set keys values entries toJSON".split(" "), function(a) {
                var b = "add" == a || "set" == a;
                a in A && (!x || "clear" != a) && e(y.prototype, a, function(c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (t(this, y, a), !b && x && !u(c)) return "get" == a && void 0;
                    c = this._c[a](0 === c ? 0 : c, e);
                    return b ? this : c
                })
            }), "size" in A && g(y.prototype, "size", {
                get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return this._c.size
                }
            })) : (y = h.getConstructor(b, a, w, z), r(y.prototype, c), k.NEED = !0), l(y, a), D[a] = y, f(f.G + f.W + f.F, D), x || h.setStrong(y, a, w), y
        }
    }, {
        "./_an-instance": 61,
        "./_array-methods": 65,
        "./_descriptors": 77,
        "./_export": 81,
        "./_fails": 82,
        "./_for-of": 83,
        "./_global": 84,
        "./_hide": 86,
        "./_is-object": 93,
        "./_meta": 102,
        "./_object-dp": 106,
        "./_redefine-all": 118,
        "./_set-to-string-tag": 122
    }],
    73: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a = b.exports = {
            version: "2.4.0"
        };
        "number" == typeof __e && (__e = a)
    }, {}],
    74: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-dp"),
            f = a("./_property-desc");
        b.exports = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            b in a ? d.f(a, b, f(0, c)) : a[b] = c
        }
    }, {
        "./_object-dp": 106,
        "./_property-desc": 117
    }],
    75: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_a-function");
        b.exports = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (d(a), void 0 === b) return a;
            switch (c) {
                case 1:
                    return function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.call(b, c)
                    };
                case 2:
                    return function(c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.call(b, c, d)
                    };
                case 3:
                    return function(c, d, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.call(b,
                            c, d, f)
                    }
            }
            return function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.apply(b, arguments)
            }
        }
    }, {
        "./_a-function": 59
    }],
    76: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (void 0 == a) throw TypeError("Can't call method on  " + a);
            return a
        }
    }, {}],
    77: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = !a("./_fails")(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return 7 != Object.defineProperty({}, "a", {
                get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return 7
                }
            }).a
        })
    }, {
        "./_fails": 82
    }],
    78: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c = a("./_is-object");
        var d = a("./_global").document,
            f = c(d) && c(d.createElement);
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return f ? d.createElement(a) : {}
        }
    }, {
        "./_global": 84,
        "./_is-object": 93
    }],
    79: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ")
    }, {}],
    80: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-keys"),
            f = a("./_object-gops"),
            k = a("./_object-pie");
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = d(a),
                c = f.f;
            if (c) {
                var n;
                c = c(a);
                for (var t = k.f, u = 0; c.length > u;) t.call(a, n = c[u++]) && b.push(n)
            }
            return b
        }
    }, {
        "./_object-gops": 111,
        "./_object-keys": 114,
        "./_object-pie": 115
    }],
    81: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_global"),
            f = a("./_core"),
            k = a("./_ctx"),
            m = a("./_hide"),
            e = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var n, l, g = a & e.F,
                    q = a & e.G,
                    v = a & e.S,
                    p = a & e.P,
                    t = a & e.B,
                    r = a & e.W,
                    h = q ? f : f[b] || (f[b] = {}),
                    w = h.prototype;
                v = q ? d : v ? d[b] : (d[b] || {}).prototype;
                q && (c = b);
                for (n in c)(b = !g && v && void 0 !== v[n]) && n in h || (l = b ? v[n] : c[n], h[n] = q && "function" != typeof v[n] ? c[n] : t && b ? k(l, d) : r && v[n] == l ? function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = function(b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (this instanceof a) {
                            switch (arguments.length) {
                                case 0:
                                    return new a;
                                case 1:
                                    return new a(b);
                                case 2:
                                    return new a(b, c)
                            }
                            return new a(b, c, e)
                        }
                        return a.apply(this, arguments)
                    };
                    return b.prototype = a.prototype, b
                }(l) : p && "function" == typeof l ? k(Function.call, l) : l, p && ((h.virtual || (h.virtual = {}))[n] = l, a & e.R && w && !w[n] && m(w, n, l)))
            };
        e.F = 1;
        e.G = 2;
        e.S = 4;
        e.P = 8;
        e.B = 16;
        e.W = 32;
        e.U = 64;
        e.R = 128;
        b.exports = e
    }, {
        "./_core": 73,
        "./_ctx": 75,
        "./_global": 84,
        "./_hide": 86
    }],
    82: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            try {
                return !!a()
            } catch (f) {
                return !0
            }
        }
    }, {}],
    83: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_ctx"),
            f = a("./_iter-call"),
            k = a("./_is-array-iter"),
            m = a("./_an-object"),
            e = a("./_to-length"),
            r = a("./core.get-iterator-method"),
            n = {},
            t = {};
        c = b.exports = function(a, b, c, q, v) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var p, l;
            v = v ? function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a
            } : r(a);
            c = d(c, q, b ? 2 : 1);
            q = 0;
            if ("function" != typeof v) throw TypeError(a + " is not iterable!");
            if (k(v))
                for (v = e(a.length); v > q; q++) {
                    if (l = b ? c(m(p = a[q])[0], p[1]) : c(a[q]), l === n || l === t) return l
                } else
                    for (v = v.call(a); !(p = v.next()).done;)
                        if (l = f(v, c, p.value, b), l === n || l === t) return l
        };
        c.BREAK = n;
        c.RETURN = t
    }, {
        "./_an-object": 62,
        "./_ctx": 75,
        "./_is-array-iter": 91,
        "./_iter-call": 94,
        "./_to-length": 131,
        "./core.get-iterator-method": 138
    }],
    84: [function(a,
        b, c) {
        a = b.exports = "undefined" != typeof window && Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
        "number" == typeof __g && (__g = a)
    }, {}],
    85: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = {}.hasOwnProperty;
        b.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.call(a, b)
        }
    }, {}],
    86: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-dp"),
            f = a("./_property-desc");
        b.exports = a("./_descriptors") ? function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.f(a, b, f(1, c))
        } : function(a, b, c) {
            return a[b] = c, a
        }
    }, {
        "./_descriptors": 77,
        "./_object-dp": 106,
        "./_property-desc": 117
    }],
    87: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = a("./_global").document && document.documentElement
    }, {
        "./_global": 84
    }],
    88: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = !a("./_descriptors") && !a("./_fails")(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return 7 != Object.defineProperty(a("./_dom-create")("div"), "a", {
                get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return 7
                }
            }).a
        })
    }, {
        "./_descriptors": 77,
        "./_dom-create": 78,
        "./_fails": 82
    }],
    89: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = void 0 === c;
            switch (b.length) {
                case 0:
                    return d ? a() : a.call(c);
                case 1:
                    return d ? a(b[0]) : a.call(c, b[0]);
                case 2:
                    return d ? a(b[0], b[1]) :
                        a.call(c, b[0], b[1]);
                case 3:
                    return d ? a(b[0], b[1], b[2]) : a.call(c, b[0], b[1], b[2]);
                case 4:
                    return d ? a(b[0], b[1], b[2], b[3]) : a.call(c, b[0], b[1], b[2], b[3])
            }
            return a.apply(c, b)
        }
    }, {}],
    90: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_cof");
        b.exports = Object("z").propertyIsEnumerable(0) ? Object : function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "String" == d(a) ? a.split("") : Object(a)
        }
    }, {
        "./_cof": 69
    }],
    91: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_iterators"),
            f = a("./_wks")("iterator"),
            k = Array.prototype;
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return void 0 !== a && (d.Array === a || k[f] === a)
        }
    }, {
        "./_iterators": 99,
        "./_wks": 137
    }],
    92: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_cof");
        b.exports = Array.isArray || function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "Array" == d(a)
        }
    }, {
        "./_cof": 69
    }],
    93: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "object" == typeof a ? null !== a : "function" == typeof a
        }
    }, {}],
    94: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_an-object");
        b.exports = function(a, b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            try {
                return e ? b(d(c)[0], c[1]) : b(c)
            } catch (r) {
                throw b = a["return"], void 0 !== b && d(b.call(a)), r;
            }
        }
    }, {
        "./_an-object": 62
    }],
    95: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-create"),
            f = a("./_property-desc"),
            k = a("./_set-to-string-tag"),
            m = {};
        a("./_hide")(m, a("./_wks")("iterator"), function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this
        });
        b.exports = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.prototype = d(m, {
                next: f(1, c)
            });
            k(a, b + " Iterator")
        }
    }, {
        "./_hide": 86,
        "./_object-create": 105,
        "./_property-desc": 117,
        "./_set-to-string-tag": 122,
        "./_wks": 137
    }],
    96: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_library"),
            f = a("./_export"),
            k = a("./_redefine"),
            m = a("./_hide"),
            e = a("./_has"),
            r = a("./_iterators"),
            n = a("./_iter-create"),
            t = a("./_set-to-string-tag"),
            u = a("./_object-gpo"),
            l = a("./_wks")("iterator"),
            g = !([].keys && "next" in [].keys()),
            q = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return this
            };
        b.exports = function(a, b, c, z, h, w, x) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            n(c, b, z);
            var p, v, y;
            z = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return !g && a in L ? L[a] : function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return new c(this, a)
                }
            };
            var A = b + " Iterator",
                D = "values" == h,
                J = !1,
                L = a.prototype,
                M = L[l] || L["@@iterator"] || h && L[h],
                H = M || z(h),
                O = h ? D ? z("entries") : H : void 0,
                K = "Array" == b ? L.entries || M : M;
            if (K && (y = u(K.call(new a)), y !== Object.prototype && (t(y, A, !0), d || e(y, l) || m(y, l, q))), D && M && "values" !== M.name && (J = !0, H = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return M.call(this)
                }), d && !x || !g && !J && L[l] || m(L, l, H), r[b] = H, r[A] = q, h)
                if (p = {
                        values: D ?
                            H : z("values"),
                        keys: w ? H : z("keys"),
                        entries: O
                    }, x)
                    for (v in p) v in L || k(L, v, p[v]);
                else f(f.P + f.F * (g || J), b, p);
            return p
        }
    }, {
        "./_export": 81,
        "./_has": 85,
        "./_hide": 86,
        "./_iter-create": 95,
        "./_iterators": 99,
        "./_library": 101,
        "./_object-gpo": 112,
        "./_redefine": 119,
        "./_set-to-string-tag": 122,
        "./_wks": 137
    }],
    97: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_wks")("iterator"),
            f = !1;
        try {
            var k = [7][d]();
            k["return"] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                f = !0
            };
            Array.from(k, function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                throw 2;
            })
        } catch (m) {}
        b.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!b && !f) return !1;
            var c = !1;
            try {
                b = [7];
                var e = b[d]();
                e.next = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return {
                        done: c = !0
                    }
                };
                b[d] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return e
                };
                a(b)
            } catch (t) {}
            return c
        }
    }, {
        "./_wks": 137
    }],
    98: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                value: b,
                done: !!a
            }
        }
    }, {}],
    99: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = {}
    }, {}],
    100: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-keys"),
            f = a("./_to-iobject");
        b.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var c = f(a), k = d(c), n = k.length, t = 0; n > t;)
                if (c[a = k[t++]] === b) return a
        }
    }, {
        "./_object-keys": 114,
        "./_to-iobject": 130
    }],
    101: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = !0
    }, {}],
    102: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d =
            a("./_uid")("meta"),
            f = a("./_is-object"),
            k = a("./_has"),
            m = a("./_object-dp").f,
            e = 0,
            r = Object.isExtensible || function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return !0
            },
            n = !a("./_fails")(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return r(Object.preventExtensions({}))
            }),
            t = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                m(a, d, {
                    value: {
                        i: "O" + ++e,
                        w: {}
                    }
                })
            },
            u = b.exports = {
                KEY: d,
                NEED: !1,
                fastKey: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (!f(a)) return "symbol" == typeof a ? a : ("string" == typeof a ? "S" : "P") + a;
                    if (!k(a, d)) {
                        if (!r(a)) return "F";
                        if (!b) return "E";
                        t(a)
                    }
                    return a[d].i
                },
                getWeak: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (!k(a, d)) {
                        if (!r(a)) return !0;
                        if (!b) return !1;
                        t(a)
                    }
                    return a[d].w
                },
                onFreeze: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return n && u.NEED && r(a) && !k(a, d) && t(a), a
                }
            }
    }, {
        "./_fails": 82,
        "./_has": 85,
        "./_is-object": 93,
        "./_object-dp": 106,
        "./_uid": 134
    }],
    103: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_global"),
            f = a("./_task").set,
            k = d.MutationObserver || d.WebKitMutationObserver,
            m = d.process,
            e = d.Promise,
            r = "process" == a("./_cof")(m);
        b.exports = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a, b, c = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c;
                for (r && (c = m.domain) && c.exit(); a;) {
                    var e = a.fn;
                    a = a.next;
                    try {
                        e()
                    } catch (z) {
                        throw a ? l() : b = void 0, z;
                    }
                }
                b = void 0;
                c && c.enter()
            };
            if (r) var l = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                m.nextTick(c)
            };
            else if (k) {
                var g = !0,
                    q = document.createTextNode("");
                (new k(c)).observe(q, {
                    characterData: !0
                });
                l = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    q.data = g = !g
                }
            } else if (e && e.resolve) {
                var v = e.resolve();
                l = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    v.then(c)
                }
            } else l = function() {
                f.call(d, c)
            };
            return function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                c = {
                    fn: c,
                    next: void 0
                };
                b && (b.next = c);
                a || (a = c, l());
                b = c
            }
        }
    }, {
        "./_cof": 69,
        "./_global": 84,
        "./_task": 127
    }],
    104: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-keys"),
            f = a("./_object-gops"),
            k = a("./_object-pie"),
            m = a("./_to-object"),
            e = a("./_iobject"),
            r = Object.assign;
        b.exports = !r || a("./_fails")(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = {},
                b = {},
                c = Symbol();
            return a[c] = 7, "abcdefghijklmnopqrst".split("").forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b[a] = a
            }), 7 != r({}, a)[c] || "abcdefghijklmnopqrst" != Object.keys(r({}, b)).join("")
        }) ? function(a, b) {
            for (var c = m(a), l = arguments.length, g = 1, n = f.f, v = k.f; l > g;)
                for (var p, t = e(arguments[g++]), r = n ? d(t).concat(n(t)) : d(t), h = r.length, w = 0; h > w;) v.call(t, p = r[w++]) && (c[p] = t[p]);
            return c
        } : r
    }, {
        "./_fails": 82,
        "./_iobject": 90,
        "./_object-gops": 111,
        "./_object-keys": 114,
        "./_object-pie": 115,
        "./_to-object": 132
    }],
    105: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_an-object"),
            f = a("./_object-dps"),
            k = a("./_enum-bug-keys"),
            m = a("./_shared-key")("IE_PROTO"),
            e = function() {},
            r = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = a("./_dom-create")("iframe");
                var c = k.length;
                b.style.display = "none";
                a("./_html").appendChild(b);
                b.src = "javascript:";
                b = b.contentWindow.document;
                b.open();
                b.write("<script>document.F=Object\x3c/script>");
                b.close();
                for (r = b.F; c--;) delete r.prototype[k[c]];
                return r()
            };
        b.exports = Object.create || function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c;
            return null !== a ? (e.prototype = d(a), c = new e, e.prototype = null, c[m] = a) : c = r(), void 0 ===
                b ? c : f(c, b)
        }
    }, {
        "./_an-object": 62,
        "./_dom-create": 78,
        "./_enum-bug-keys": 79,
        "./_html": 87,
        "./_object-dps": 107,
        "./_shared-key": 123
    }],
    106: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_an-object"),
            f = a("./_ie8-dom-define"),
            k = a("./_to-primitive"),
            m = Object.defineProperty;
        c.f = a("./_descriptors") ? Object.defineProperty : function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (d(a), b = k(b, !0), d(c), f) try {
                return m(a, b, c)
            } catch (t) {}
            if ("get" in c || "set" in c) throw TypeError("Accessors not supported!");
            return "value" in c && (a[b] = c.value), a
        }
    }, {
        "./_an-object": 62,
        "./_descriptors": 77,
        "./_ie8-dom-define": 88,
        "./_to-primitive": 133
    }],
    107: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-dp"),
            f = a("./_an-object"),
            k = a("./_object-keys");
        b.exports = a("./_descriptors") ? Object.defineProperties : function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            f(a);
            for (var c, e = k(b), t = e.length, u = 0; t > u;) d.f(a, c = e[u++], b[c]);
            return a
        }
    }, {
        "./_an-object": 62,
        "./_descriptors": 77,
        "./_object-dp": 106,
        "./_object-keys": 114
    }],
    108: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-pie"),
            f = a("./_property-desc"),
            k = a("./_to-iobject"),
            m = a("./_to-primitive"),
            e = a("./_has"),
            r = a("./_ie8-dom-define"),
            n = Object.getOwnPropertyDescriptor;
        c.f = a("./_descriptors") ? n : function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a = k(a), b = m(b, !0), r) try {
                return n(a, b)
            } catch (l) {}
            if (e(a, b)) return f(!d.f.call(a, b), a[b])
        }
    }, {
        "./_descriptors": 77,
        "./_has": 85,
        "./_ie8-dom-define": 88,
        "./_object-pie": 115,
        "./_property-desc": 117,
        "./_to-iobject": 130,
        "./_to-primitive": 133
    }],
    109: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_to-iobject"),
            f = a("./_object-gopn").f,
            k = {}.toString,
            m = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
        b.exports.f =
            function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (m && "[object Window]" == k.call(a)) try {
                    var b = f(a)
                } catch (n) {
                    b = m.slice()
                } else b = f(d(a));
                return b
            }
    }, {
        "./_object-gopn": 110,
        "./_to-iobject": 130
    }],
    110: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-keys-internal"),
            f = a("./_enum-bug-keys").concat("length", "prototype");
        c.f = Object.getOwnPropertyNames || function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d(a, f)
        }
    }, {
        "./_enum-bug-keys": 79,
        "./_object-keys-internal": 113
    }],
    111: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.f = Object.getOwnPropertySymbols
    }, {}],
    112: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_has"),
            f = a("./_to-object"),
            k = a("./_shared-key")("IE_PROTO"),
            m = Object.prototype;
        b.exports = Object.getPrototypeOf || function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a = f(a), d(a, k) ? a[k] : "function" == typeof a.constructor && a instanceof a.constructor ? a.constructor.prototype : a instanceof Object ? m : null
        }
    }, {
        "./_has": 85,
        "./_shared-key": 123,
        "./_to-object": 132
    }],
    113: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_has"),
            f = a("./_to-iobject"),
            k = a("./_array-includes")(!1),
            m = a("./_shared-key")("IE_PROTO");
        b.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c;
            a = f(a);
            var e = 0,
                u = [];
            for (c in a) c != m && d(a, c) && u.push(c);
            for (; b.length > e;) d(a, c = b[e++]) && (~k(u,
                c) || u.push(c));
            return u
        }
    }, {
        "./_array-includes": 64,
        "./_has": 85,
        "./_shared-key": 123,
        "./_to-iobject": 130
    }],
    114: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-keys-internal"),
            f = a("./_enum-bug-keys");
        b.exports = Object.keys || function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d(a, f)
        }
    }, {
        "./_enum-bug-keys": 79,
        "./_object-keys-internal": 113
    }],
    115: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.f = {}.propertyIsEnumerable
    }, {}],
    116: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_export"),
            f = a("./_core"),
            k = a("./_fails");
        b.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = (f.Object || {})[a] || Object[a],
                e = {};
            e[a] = b(c);
            d(d.S + d.F *
                k(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    c(1)
                }), "Object", e)
        }
    }, {
        "./_core": 73,
        "./_export": 81,
        "./_fails": 82
    }],
    117: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                enumerable: !(1 & a),
                configurable: !(2 & a),
                writable: !(4 & a),
                value: b
            }
        }
    }, {}],
    118: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_hide");
        b.exports = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var e in b) c && a[e] ? a[e] = b[e] : d(a, e, b[e]);
            return a
        }
    }, {
        "./_hide": 86
    }],
    119: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = a("./_hide")
    }, {
        "./_hide": 86
    }],
    120: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_is-object"),
            f = a("./_an-object"),
            k = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (f(a), !d(b) && null !==
                    b) throw TypeError(b + ": can't set as prototype!");
            };
        b.exports = {
            set: Object.setPrototypeOf || ("__proto__" in {} ? function(b, c, d) {
                try {
                    d = a("./_ctx")(Function.call, a("./_object-gopd").f(Object.prototype, "__proto__").set, 2), d(b, []), c = !(b instanceof Array)
                } catch (n) {
                    c = !0
                }
                return function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return k(a, b), c ? a.__proto__ = b : d(a, b), a
                }
            }({}, !1) : void 0),
            check: k
        }
    }, {
        "./_an-object": 62,
        "./_ctx": 75,
        "./_is-object": 93,
        "./_object-gopd": 108
    }],
    121: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_global"),
            f = a("./_core"),
            k = a("./_object-dp"),
            m = a("./_descriptors"),
            e = a("./_wks")("species");
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = "function" == typeof f[a] ? f[a] : d[a];
            m && a && !a[e] && k.f(a, e, {
                configurable: !0,
                get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return this
                }
            })
        }
    }, {
        "./_core": 73,
        "./_descriptors": 77,
        "./_global": 84,
        "./_object-dp": 106,
        "./_wks": 137
    }],
    122: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_object-dp").f,
            f = a("./_has"),
            k = a("./_wks")("toStringTag");
        b.exports = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a && !f(a = c ? a : a.prototype, k) && d(a, k, {
                configurable: !0,
                value: b
            })
        }
    }, {
        "./_has": 85,
        "./_object-dp": 106,
        "./_wks": 137
    }],
    123: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_shared")("keys"),
            f = a("./_uid");
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d[a] || (d[a] = f(a))
        }
    }, {
        "./_shared": 124,
        "./_uid": 134
    }],
    124: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a = a("./_global");
        var d = a["__core-js_shared__"] || (a["__core-js_shared__"] = {});
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d[a] || (d[a] = {})
        }
    }, {
        "./_global": 84
    }],
    125: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_an-object"),
            f = a("./_a-function"),
            k = a("./_wks")("species");
        b.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c;
            a = d(a).constructor;
            return void 0 === a || void 0 == (c = d(a)[k]) ? b : f(c)
        }
    }, {
        "./_a-function": 59,
        "./_an-object": 62,
        "./_wks": 137
    }],
    126: [function(a,
        b, c) {
        var d = a("./_to-integer"),
            f = a("./_defined");
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var e, n;
                b = String(f(b));
                c = d(c);
                var t = b.length;
                return 0 > c || c >= t ? a ? "" : void 0 : (e = b.charCodeAt(c), 55296 > e || 56319 < e || c + 1 === t || 56320 > (n = b.charCodeAt(c + 1)) || 57343 < n ? a ? b.charAt(c) : e : a ? b.slice(c, c + 2) : (e - 55296 << 10) + (n - 56320) + 65536)
            }
        }
    }, {
        "./_defined": 76,
        "./_to-integer": 129
    }],
    127: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d, f, k, m = a("./_ctx"),
            e = a("./_invoke"),
            r = a("./_html"),
            n = a("./_dom-create"),
            t = a("./_global"),
            u = t.process;
        c = t.setImmediate;
        var l =
            t.clearImmediate,
            g = t.MessageChannel,
            q = 0,
            v = {},
            p = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = +this;
                if (v.hasOwnProperty(a)) {
                    var b = v[a];
                    delete v[a];
                    b()
                }
            },
            y = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                p.call(a.data)
            };
        c && l || (c = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var b = [], c = 1; arguments.length > c;) b.push(arguments[c++]);
                return v[++q] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    e("function" == typeof a ? a : Function(a), b)
                }, d(q), q
            }, l = function(a) {
                delete v[a]
            }, "process" == a("./_cof")(u) ? d = function(a) {
                u.nextTick(m(p, a, 1))
            } : g ? (f = new g, k = f.port2, f.port1.onmessage = y, d = m(k.postMessage, k, 1)) : t.addEventListener && "function" == typeof postMessage &&
            !t.importScripts ? (d = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                t.postMessage(a + "", "*")
            }, t.addEventListener("message", y, !1)) : d = "onreadystatechange" in n("script") ? function(a) {
                r.appendChild(n("script")).onreadystatechange = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    r.removeChild(this);
                    p.call(a)
                }
            } : function(a) {
                setTimeout(m(p, a, 1), 0)
            });
        b.exports = {
            set: c,
            clear: l
        }
    }, {
        "./_cof": 69,
        "./_ctx": 75,
        "./_dom-create": 78,
        "./_global": 84,
        "./_html": 87,
        "./_invoke": 89
    }],
    128: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_to-integer"),
            f = Math.max,
            k = Math.min;
        b.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a = d(a), 0 > a ? f(a + b, 0) :
                k(a, b)
        }
    }, {
        "./_to-integer": 129
    }],
    129: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = Math.ceil,
            f = Math.floor;
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return isNaN(a = +a) ? 0 : (0 < a ? f : d)(a)
        }
    }, {}],
    130: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_iobject"),
            f = a("./_defined");
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d(f(a))
        }
    }, {
        "./_defined": 76,
        "./_iobject": 90
    }],
    131: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_to-integer"),
            f = Math.min;
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return 0 < a ? f(d(a), 9007199254740991) : 0
        }
    }, {
        "./_to-integer": 129
    }],
    132: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = a("./_defined");
            b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return Object(d(a))
            }
        },
        {
            "./_defined": 76
        }
    ],
    133: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_is-object");
        b.exports = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!d(a)) return a;
            var c, e;
            if (b && "function" == typeof(c = a.toString) && !d(e = c.call(a)) || "function" == typeof(c = a.valueOf) && !d(e = c.call(a)) || !b && "function" == typeof(c = a.toString) && !d(e = c.call(a))) return e;
            throw TypeError("Can't convert object to primitive value");
        }
    }, {
        "./_is-object": 93
    }],
    134: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = 0,
                f = Math.random();
            b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "Symbol(".concat(void 0 === a ? "" : a, ")_", (++d + f).toString(36))
            }
        },
        {}
    ],
    135: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_global"),
            f = a("./_core"),
            k = a("./_library"),
            m = a("./_wks-ext"),
            e = a("./_object-dp").f;
        b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = f.Symbol || (f.Symbol = k ? {} : d.Symbol || {});
            "_" == a.charAt(0) || a in b || e(b, a, {
                value: m.f(a)
            })
        }
    }, {
        "./_core": 73,
        "./_global": 84,
        "./_library": 101,
        "./_object-dp": 106,
        "./_wks-ext": 136
    }],
    136: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.f = a("./_wks")
    }, {
        "./_wks": 137
    }],
    137: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_shared")("wks"),
            f = a("./_uid"),
            k = a("./_global").Symbol,
            m = "function" == typeof k;
        (b.exports = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d[a] ||
                (d[a] = m && k[a] || (m ? k : f)("Symbol." + a))
        }).store = d
    }, {
        "./_global": 84,
        "./_shared": 124,
        "./_uid": 134
    }],
    138: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_classof"),
            f = a("./_wks")("iterator"),
            k = a("./_iterators");
        b.exports = a("./_core").getIteratorMethod = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (void 0 != a) return a[f] || a["@@iterator"] || k[d(a)]
        }
    }, {
        "./_classof": 68,
        "./_core": 73,
        "./_iterators": 99,
        "./_wks": 137
    }],
    139: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_an-object"),
            f = a("./core.get-iterator-method");
        b.exports = a("./_core").getIterator = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = f(a);
            if ("function" !=
                typeof b) throw TypeError(a + " is not iterable!");
            return d(b.call(a))
        }
    }, {
        "./_an-object": 62,
        "./_core": 73,
        "./core.get-iterator-method": 138
    }],
    140: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_classof"),
            f = a("./_wks")("iterator"),
            k = a("./_iterators");
        b.exports = a("./_core").isIterable = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = Object(a);
            return void 0 !== a[f] || "@@iterator" in a || k.hasOwnProperty(d(a))
        }
    }, {
        "./_classof": 68,
        "./_core": 73,
        "./_iterators": 99,
        "./_wks": 137
    }],
    141: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_ctx");
        b = a("./_export");
        var f = a("./_to-object"),
            k = a("./_iter-call"),
            m = a("./_is-array-iter"),
            e = a("./_to-length"),
            r = a("./_create-property"),
            n = a("./core.get-iterator-method");
        b(b.S + b.F * !a("./_iter-detect")(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            Array.from(a)
        }), "Array", {
            from: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = f(a);
                var c = "function" == typeof this ? this : Array;
                var g = arguments.length;
                var q = 1 < g ? arguments[1] : void 0,
                    v = void 0 !== q,
                    p = 0,
                    t = n(b);
                if (v && (q = d(q, 2 < g ? arguments[2] : void 0, 2)), void 0 == t || c == Array && m(t))
                    for (g = e(b.length), c = new c(g); g > p; p++) r(c, p, v ? q(b[p], p) : b[p]);
                else
                    for (b = t.call(b), c = new c; !(g = b.next()).done; p++) r(c,
                        p, v ? k(b, q, [g.value, p], !0) : g.value);
                return c.length = p, c
            }
        })
    }, {
        "./_create-property": 74,
        "./_ctx": 75,
        "./_export": 81,
        "./_is-array-iter": 91,
        "./_iter-call": 94,
        "./_iter-detect": 97,
        "./_to-length": 131,
        "./_to-object": 132,
        "./core.get-iterator-method": 138
    }],
    142: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c = a("./_add-to-unscopables");
        var d = a("./_iter-step"),
            f = a("./_iterators"),
            k = a("./_to-iobject");
        b.exports = a("./_iter-define")(Array, "Array", function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            this._t = k(a);
            this._i = 0;
            this._k = b
        }, function() {
            var a = this._t,
                b = this._k,
                c = this._i++;
            return !a ||
                c >= a.length ? (this._t = void 0, d(1)) : "keys" == b ? d(0, c) : "values" == b ? d(0, a[c]) : d(0, [c, a[c]])
        }, "values");
        f.Arguments = f.Array;
        c("keys");
        c("values");
        c("entries")
    }, {
        "./_add-to-unscopables": 60,
        "./_iter-define": 96,
        "./_iter-step": 98,
        "./_iterators": 99,
        "./_to-iobject": 130
    }],
    143: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_collection-strong");
        b.exports = a("./_collection")("Map", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a(this, 0 < arguments.length ? arguments[0] : void 0)
            }
        }, {
            get: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (a = d.getEntry(this, a)) && a.v
            },
            set: function(a,
                b) {
                return d.def(this, 0 === a ? 0 : a, b)
            }
        }, d, !0)
    }, {
        "./_collection": 72,
        "./_collection-strong": 70
    }],
    144: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b = a("./_export");
        b(b.S + b.F, "Object", {
            assign: a("./_object-assign")
        })
    }, {
        "./_export": 81,
        "./_object-assign": 104
    }],
    145: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b = a("./_export");
        b(b.S, "Object", {
            create: a("./_object-create")
        })
    }, {
        "./_export": 81,
        "./_object-create": 105
    }],
    146: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b = a("./_export");
        b(b.S + b.F * !a("./_descriptors"), "Object", {
            defineProperty: a("./_object-dp").f
        })
    }, {
        "./_descriptors": 77,
        "./_export": 81,
        "./_object-dp": 106
    }],
    147: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_to-object"),
            f = a("./_object-gpo");
        a("./_object-sap")("getPrototypeOf", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return f(d(a))
            }
        })
    }, {
        "./_object-gpo": 112,
        "./_object-sap": 116,
        "./_to-object": 132
    }],
    148: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_to-object"),
            f = a("./_object-keys");
        a("./_object-sap")("keys", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return f(d(a))
            }
        })
    }, {
        "./_object-keys": 114,
        "./_object-sap": 116,
        "./_to-object": 132
    }],
    149: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            b = a("./_export");
            b(b.S, "Object", {
                setPrototypeOf: a("./_set-proto").set
            })
        },
        {
            "./_export": 81,
            "./_set-proto": 120
        }
    ],
    150: [function(a, b, c) {}, {}],
    151: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d, f;
        b = a("./_library");
        var k = a("./_global"),
            m = a("./_ctx"),
            e = a("./_classof");
        c = a("./_export");
        var r = a("./_is-object"),
            n = a("./_a-function"),
            t = a("./_an-instance"),
            u = a("./_for-of"),
            l = a("./_species-constructor"),
            g = a("./_task").set,
            q = a("./_microtask")(),
            v = k.TypeError,
            p = k.process,
            y = k.Promise;
        p = k.process;
        var z = "process" == e(p),
            h = function() {};
        e = !! function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            try {
                var b = y.resolve(1),
                    c = (b.constructor = {})[a("./_wks")("species")] =
                    function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a(h, h)
                    };
                return (z || "function" == typeof PromiseRejectionEvent) && b.then(h) instanceof c
            } catch (R) {}
        }();
        var w = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b;
                return !(!r(a) || "function" != typeof(b = a.then)) && b
            },
            x = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return y === a || y === y && a === H ? new B(a) : new f(a)
            },
            B = f = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b, c;
                this.promise = new a(function(a, h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (void 0 !== b || void 0 !== c) throw v("Bad Promise constructor");
                    b = a;
                    c = h
                });
                this.resolve = n(b);
                this.reject = n(c)
            },
            C = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                try {
                    a()
                } catch (K) {
                    return {
                        error: K
                    }
                }
            },
            G = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (!a._n) {
                    a._n = !0;
                    var c = a._c;
                    q(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (var h =
                                a._v, p = 1 == a._s, e = 0; c.length > e;) {
                            var d = void 0,
                                g = void 0,
                                f = c[e++],
                                l = p ? f.ok : f.fail,
                                q = f.resolve,
                                n = f.reject,
                                u = f.domain;
                            try {
                                l ? (p || (2 == a._h && J(a), a._h = 1), !0 === l ? g = h : (u && u.enter(), g = l(h), u && u.exit()), g === f.promise ? n(v("Promise-chain cycle")) : (d = w(g)) ? d.call(g, q, n) : q(g)) : n(h)
                            } catch (ea) {
                                n(ea)
                            }
                        }
                        a._c = [];
                        a._n = !1;
                        b && !a._h && A(a)
                    })
                }
            },
            A = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                g.call(k, function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b, c, h, e = a._v;
                    if (D(a) && (b = C(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            z ? p.emit("unhandledRejection", e, a) : (c = k.onunhandledrejection) ? c({
                                    promise: a,
                                    reason: e
                                }) : (h = k.console) && h.error &&
                                h.error("Unhandled promise rejection", e)
                        }), a._h = z || D(a) ? 2 : 1), a._a = void 0, b) throw b.error;
                })
            },
            D = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (1 == a._h) return !1;
                var b;
                a = a._a || a._c;
                for (var c = 0; a.length > c;)
                    if (b = a[c++], b.fail || !D(b.promise)) return !1;
                return !0
            },
            J = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                g.call(k, function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b;
                    z ? p.emit("rejectionHandled", a) : (b = k.onrejectionhandled) && b({
                        promise: a,
                        reason: a._v
                    })
                })
            },
            L = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = this;
                b._d || (b._d = !0, b = b._w || b, b._v = a, b._s = 2, b._a || (b._a = b._c.slice()), G(b, !0))
            },
            M = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b, c = this;
                if (!c._d) {
                    c._d = !0;
                    c = c._w ||
                        c;
                    try {
                        if (c === a) throw v("Promise can't be resolved itself");
                        (b = w(a)) ? q(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var h = {
                                _w: c,
                                _d: !1
                            };
                            try {
                                b.call(a, m(M, h, 1), m(L, h, 1))
                            } catch (aa) {
                                L.call(h, aa)
                            }
                        }): (c._v = a, c._s = 1, G(c, !1))
                    } catch (P) {
                        L.call({
                            _w: c,
                            _d: !1
                        }, P)
                    }
                }
            };
        e || (y = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            t(this, y, "Promise", "_h");
            n(a);
            d.call(this);
            try {
                a(m(M, this, 1), m(L, this, 1))
            } catch (K) {
                L.call(this, K)
            }
        }, d = function(a) {
            this._c = [];
            this._a = void 0;
            this._s = 0;
            this._d = !1;
            this._v = void 0;
            this._h = 0;
            this._n = !1
        }, d.prototype = a("./_redefine-all")(y.prototype, {
            then: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c =
                    x(l(this, y));
                return c.ok = "function" != typeof a || a, c.fail = "function" == typeof b && b, c.domain = z ? p.domain : void 0, this._c.push(c), this._a && this._a.push(c), this._s && G(this, !1), c.promise
            },
            "catch": function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return this.then(void 0, a)
            }
        }), B = function() {
            var a = new d;
            this.promise = a;
            this.resolve = m(M, a, 1);
            this.reject = m(L, a, 1)
        });
        c(c.G + c.W + c.F * !e, {
            Promise: y
        });
        a("./_set-to-string-tag")(y, "Promise");
        a("./_set-species")("Promise");
        var H = a("./_core").Promise;
        c(c.S + c.F * !e, "Promise", {
            reject: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = x(this),
                    c = b.reject;
                return c(a), b.promise
            }
        });
        c(c.S + c.F * (b || !e), "Promise", {
            resolve: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b;
                if (b = a instanceof y) b = a.constructor, b = b === this || b === y && this === H;
                if (b) return a;
                b = x(this);
                var c = b.resolve;
                return c(a), b.promise
            }
        });
        c(c.S + c.F * !(e && a("./_iter-detect")(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            y.all(a)["catch"](h)
        })), "Promise", {
            all: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = this,
                    c = x(b),
                    h = c.resolve,
                    p = c.reject,
                    e = C(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var c = [],
                            e = 0,
                            d = 1;
                        u(a, !1, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var g = e++,
                                f = !1;
                            c.push(void 0);
                            d++;
                            b.resolve(a).then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                f || (f = !0, c[g] = a, --d || h(c))
                            }, p)
                        });
                        --d ||
                            h(c)
                    });
                return e && p(e.error), c.promise
            },
            race: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = this,
                    c = x(b),
                    h = c.reject,
                    e = C(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        u(a, !1, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b.resolve(a).then(c.resolve, h)
                        })
                    });
                return e && h(e.error), c.promise
            }
        })
    }, {
        "./_a-function": 59,
        "./_an-instance": 61,
        "./_classof": 68,
        "./_core": 73,
        "./_ctx": 75,
        "./_export": 81,
        "./_for-of": 83,
        "./_global": 84,
        "./_is-object": 93,
        "./_iter-detect": 97,
        "./_library": 101,
        "./_microtask": 103,
        "./_redefine-all": 118,
        "./_set-species": 121,
        "./_set-to-string-tag": 122,
        "./_species-constructor": 125,
        "./_task": 127,
        "./_wks": 137
    }],
    152: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = a("./_string-at")(!0);
        a("./_iter-define")(String, "String", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            this._t = String(a);
            this._i = 0
        }, function() {
            var a, b = this._t,
                c = this._i;
            return c >= b.length ? {
                value: void 0,
                done: !0
            } : (a = d(b, c), this._i += a.length, {
                value: a,
                done: !1
            })
        })
    }, {
        "./_iter-define": 96,
        "./_string-at": 126
    }],
    153: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b = a("./_global");
        var d = a("./_has"),
            f = a("./_descriptors");
        c = a("./_export");
        var k = a("./_redefine"),
            m = a("./_meta").KEY,
            e = a("./_fails"),
            r = a("./_shared"),
            n = a("./_set-to-string-tag"),
            t = a("./_uid"),
            u = a("./_wks"),
            l = a("./_wks-ext"),
            g = a("./_wks-define"),
            q = a("./_keyof"),
            v = a("./_enum-keys"),
            p = a("./_is-array"),
            y = a("./_an-object"),
            z = a("./_to-iobject"),
            h = a("./_to-primitive"),
            w = a("./_property-desc"),
            x = a("./_object-create"),
            B = a("./_object-gopn-ext"),
            C = a("./_object-gopd"),
            G = a("./_object-dp"),
            A = a("./_object-keys"),
            D = C.f,
            J = G.f,
            L = B.f,
            M = b.Symbol,
            H = b.JSON,
            O = H && H.stringify,
            K = u("_hidden"),
            R = u("toPrimitive"),
            P = {}.propertyIsEnumerable,
            aa = r("symbol-registry"),
            U = r("symbols"),
            F = r("op-symbols"),
            Y = Object.prototype;
        r = "function" == typeof M;
        var da = b.QObject,
            V = !da || !da.prototype || !da.prototype.findChild,
            T = f && e(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return 7 != x(J({}, "a", {
                    get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return J(this, "a", {
                            value: 7
                        }).a
                    }
                })).a
            }) ? function(a, b, c) {
                var h = D(Y, b);
                h && delete Y[b];
                J(a, b, c);
                h && a !== Y && J(Y, b, h)
            } : J,
            E = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = U[a] = x(M.prototype);
                return b._k = a, b
            },
            W = r && "symbol" == typeof M.iterator ? function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "symbol" == typeof a
            } : function(a) {
                return a instanceof M
            },
            ea = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a === Y && ea(F, b, c), y(a), b = h(b, !0), y(c), d(U, b) ? (c.enumerable ?
                    (d(a, K) && a[K][b] && (a[K][b] = !1), c = x(c, {
                        enumerable: w(0, !1)
                    })) : (d(a, K) || J(a, K, w(1, {})), a[K][b] = !0), T(a, b, c)) : J(a, b, c)
            },
            S = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                y(a);
                for (var c, h = v(b = z(b)), e = 0, p = h.length; p > e;) ea(a, c = h[e++], b[c]);
                return a
            },
            X = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = P.call(this, a = h(a, !0));
                return !(this === Y && d(U, a) && !d(F, a)) && (!(b || !d(this, a) || !d(U, a) || d(this, K) && this[K][a]) || b)
            };
        da = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a = z(a), b = h(b, !0), a !== Y || !d(U, b) || d(F, b)) {
                var c = D(a, b);
                return !c || !d(U, b) || d(a, K) && a[K][b] || (c.enumerable = !0), c
            }
        };
        var fa = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b;
                a =
                    L(z(a));
                for (var c = [], h = 0; a.length > h;) d(U, b = a[h++]) || b == K || b == m || c.push(b);
                return c
            },
            N = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b, c = a === Y;
                a = L(c ? F : z(a));
                for (var h = [], e = 0; a.length > e;) !d(U, b = a[e++]) || c && !d(Y, b) || h.push(U[b]);
                return h
            };
        r || (M = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (this instanceof M) throw TypeError("Symbol is not a constructor!");
            var a = t(0 < arguments.length ? arguments[0] : void 0),
                b = function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this === Y && b.call(F, c);
                    d(this, K) && d(this[K], a) && (this[K][a] = !1);
                    T(this, a, w(1, c))
                };
            return f && V && T(Y, a, {
                configurable: !0,
                set: b
            }), E(a)
        }, k(M.prototype, "toString",
            function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return this._k
            }), C.f = da, G.f = ea, a("./_object-gopn").f = B.f = fa, a("./_object-pie").f = X, a("./_object-gops").f = N, f && !a("./_library") && k(Y, "propertyIsEnumerable", X, !0), l.f = function(a) {
            return E(u(a))
        });
        c(c.G + c.W + c.F * !r, {
            Symbol: M
        });
        k = "hasInstance isConcatSpreadable iterator match replace search species split toPrimitive toStringTag unscopables".split(" ");
        for (l = 0; k.length > l;) u(k[l++]);
        k = A(u.store);
        for (l = 0; k.length > l;) g(k[l++]);
        c(c.S + c.F * !r, "Symbol", {
            "for": function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return d(aa, a += "") ? aa[a] : aa[a] =
                    M(a)
            },
            keyFor: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (W(a)) return q(aa, a);
                throw TypeError(a + " is not a symbol!");
            },
            useSetter: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                V = !0
            },
            useSimple: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                V = !1
            }
        });
        c(c.S + c.F * !r, "Object", {
            create: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return void 0 === b ? x(a) : S(x(a), b)
            },
            defineProperty: ea,
            defineProperties: S,
            getOwnPropertyDescriptor: da,
            getOwnPropertyNames: fa,
            getOwnPropertySymbols: N
        });
        H && c(c.S + c.F * (!r || e(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = M();
            return "[null]" != O([a]) || "{}" != O({
                a: a
            }) || "{}" != O(Object(a))
        })), "JSON", {
            stringify: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (void 0 !== a && !W(a)) {
                    for (var b,
                            c, h = [a], e = 1; arguments.length > e;) h.push(arguments[e++]);
                    return b = h[1], "function" == typeof b && (c = b), !c && p(b) || (b = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (c && (b = c.call(this, a, b)), !W(b)) return b
                    }), h[1] = b, O.apply(H, h)
                }
            }
        });
        M.prototype[R] || a("./_hide")(M.prototype, R, M.prototype.valueOf);
        n(M, "Symbol");
        n(Math, "Math", !0);
        n(b.JSON, "JSON", !0)
    }, {
        "./_an-object": 62,
        "./_descriptors": 77,
        "./_enum-keys": 80,
        "./_export": 81,
        "./_fails": 82,
        "./_global": 84,
        "./_has": 85,
        "./_hide": 86,
        "./_is-array": 92,
        "./_keyof": 100,
        "./_library": 101,
        "./_meta": 102,
        "./_object-create": 105,
        "./_object-dp": 106,
        "./_object-gopd": 108,
        "./_object-gopn": 110,
        "./_object-gopn-ext": 109,
        "./_object-gops": 111,
        "./_object-keys": 114,
        "./_object-pie": 115,
        "./_property-desc": 117,
        "./_redefine": 119,
        "./_set-to-string-tag": 122,
        "./_shared": 124,
        "./_to-iobject": 130,
        "./_to-primitive": 133,
        "./_uid": 134,
        "./_wks": 137,
        "./_wks-define": 135,
        "./_wks-ext": 136
    }],
    154: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b = a("./_export");
        b(b.P + b.R, "Map", {
            toJSON: a("./_collection-to-json")("Map")
        })
    }, {
        "./_collection-to-json": 71,
        "./_export": 81
    }],
    155: [function(a, b,
        c) {
        a("./_wks-define")("asyncIterator")
    }, {
        "./_wks-define": 135
    }],
    156: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("./_wks-define")("observable")
    }, {
        "./_wks-define": 135
    }],
    157: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("./es6.array.iterator");
        b = a("./_global");
        c = a("./_hide");
        var d = a("./_iterators");
        a = a("./_wks")("toStringTag");
        for (var f = ["NodeList", "DOMTokenList", "MediaList", "StyleSheetList", "CSSRuleList"], k = 0; 5 > k; k++) {
            var m = f[k],
                e = b[m];
            (e = e && e.prototype) && !e[a] && c(e, a, m);
            d[m] = d.Array
        }
    }, {
        "./_global": 84,
        "./_hide": 86,
        "./_iterators": 99,
        "./_wks": 137,
        "./es6.array.iterator": 142
    }],
    158: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            throw Error("setTimeout has not been defined");
        }

        function f() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            throw Error("clearTimeout has not been defined");
        }

        function k(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (u === setTimeout) return setTimeout(a, 0);
            if ((u === d || !u) && setTimeout) return u = setTimeout, setTimeout(a, 0);
            try {
                return u(a, 0)
            } catch (z) {
                try {
                    return u.call(null, a, 0)
                } catch (h) {
                    return u.call(this, a, 0)
                }
            }
        }

        function m(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (l === clearTimeout) return clearTimeout(a);
            if ((l === f || !l) && clearTimeout) return l = clearTimeout, clearTimeout(a);
            try {
                return l(a)
            } catch (z) {
                try {
                    return l.call(null,
                        a)
                } catch (h) {
                    return l.call(this, a)
                }
            }
        }

        function e() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            v && g && (v = !1, g.length ? q = g.concat(q) : p = -1, q.length && r())
        }

        function r() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!v) {
                var a = k(e);
                v = !0;
                for (var b = q.length; b;) {
                    g = q;
                    for (q = []; ++p < b;) g && g[p].run();
                    p = -1;
                    b = q.length
                }
                g = null;
                v = !1;
                m(a)
            }
        }

        function n(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            this.fun = a;
            this.array = b
        }

        function t() {}
        a = b.exports = {};
        try {
            var u = "function" == typeof setTimeout ? setTimeout : d
        } catch (y) {
            u = d
        }
        try {
            var l = "function" == typeof clearTimeout ? clearTimeout : f
        } catch (y) {
            l = f
        }!0;
        var g, q = [],
            v = !1,
            p = -1;
        a.nextTick = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = Array(arguments.length -
                1);
            if (1 < arguments.length)
                for (var c = 1; c < arguments.length; c++) b[c - 1] = arguments[c];
            q.push(new n(a, b));
            1 !== q.length || v || k(r)
        };
        n.prototype.run = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            this.fun.apply(null, this.array)
        };
        a.title = "browser";
        a.browser = !0;
        a.env = {};
        a.argv = [];
        a.version = "";
        a.versions = {};
        a.on = t;
        a.addListener = t;
        a.once = t;
        a.off = t;
        a.removeListener = t;
        a.removeAllListeners = t;
        a.emit = t;
        a.binding = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            throw Error("process.binding is not supported");
        };
        a.cwd = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "/"
        };
        a.chdir = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            throw Error("process.chdir is not supported");
        };
        a.umask = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return 0
        }
    }, {}],
    159: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b.exports = a("./lib/effects")
    }, {
        "./lib/effects": 160
    }],
    160: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.select = c.cancel = c.join = c.fork = c.cps = c.apply = c.call = c.race = c.put = c.take = void 0;
        a = a("./internal/io");
        c.take = a.take;
        c.put = a.put;
        c.race = a.race;
        c.call = a.call;
        c.apply = a.apply;
        c.cps = a.cps;
        c.fork = a.fork;
        c.join = a.join;
        c.cancel = a.cancel;
        c.select = a.select
    }, {
        "./internal/io": 161
    }],
    161: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return b in
                a ? Object.defineProperty(a, b, {
                    value: c,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : a[b] = c, a
        }

        function f(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            (0, m.check)(a, m.is.notUndef, e);
            var c = null;
            m.is.array(a) ? (a = k(a, 2), c = a[0], a = a[1]) : a.fn && (c = a.context, a = a.fn);
            return (0, m.check)(a, m.is.func, e), {
                context: c,
                fn: a,
                args: b
            }
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.asEffect = c.SELECT_ARG_ERROR = c.INVALID_PATTERN = c.CANCEL_ARG_ERROR = c.JOIN_ARG_ERROR = c.FORK_ARG_ERROR = c.CALL_FUNCTION_ARG_ERROR = void 0;
        var k = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (Array.isArray(a)) return a;
                if (Symbol.iterator in Object(a)) {
                    var c = [],
                        h = !0,
                        e = !1,
                        p = void 0;
                    try {
                        for (var d, g = a[Symbol.iterator](); !(h = (d = g.next()).done) && (c.push(d.value), !b || c.length !== b); h = !0);
                    } catch (K) {
                        e = !0, p = K
                    } finally {
                        try {
                            !h && g["return"] && g["return"]()
                        } finally {
                            if (e) throw p;
                        }
                    }
                    return c
                }
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
            }
        }();
        c.matcher = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return ("*" === a ? C.wildcard : m.is.array(a) ? C.array : m.is.func(a) ? C.predicate : C["default"])(a)
        };
        c.take = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (0 < arguments.length && m.is.undef(a)) throw Error(t);
            return B(g, m.is.undef(a) ? "*" : a)
        };
        c.put = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return B(q, a)
        };
        c.race = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return B(v, a)
        };
        c.call = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b = arguments.length, c = Array(1 < b ? b - 1 : 0), h = 1; h < b; h++) c[h - 1] = arguments[h];
            return B(p, f(a, c))
        };
        c.apply = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return B(p, f({
                context: a,
                fn: b
            }, 2 >= arguments.length || void 0 === arguments[2] ? [] : arguments[2]))
        };
        c.cps = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b = arguments.length, c = Array(1 < b ? b - 1 : 0), h = 1; h < b; h++) c[h - 1] = arguments[h];
            return B(y, f(a, c))
        };
        c.fork = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b = arguments.length, c = Array(1 <
                    b ? b - 1 : 0), h = 1; h < b; h++) c[h - 1] = arguments[h];
            return B(z, f(a, c))
        };
        c.join = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a[m.TASK]) throw Error(r);
            return B(h, a)
        };
        c.cancel = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a[m.TASK]) throw Error(n);
            return B(w, a)
        };
        c.select = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b = arguments.length, c = Array(1 < b ? b - 1 : 0), h = 1; h < b; h++) c[h - 1] = arguments[h];
            return 0 === arguments.length ? a = m.ident : (0, m.check)(a, m.is.func, u), B(x, {
                selector: a,
                args: c
            })
        };
        var m = a("./utils"),
            e = c.CALL_FUNCTION_ARG_ERROR = "call/cps/fork first argument must be a function, an array [context, function] or an object {context, fn}",
            r = (c.FORK_ARG_ERROR = "fork first argument must be a generator function or an iterator", c.JOIN_ARG_ERROR = "join argument must be a valid task (a result of a fork)"),
            n = c.CANCEL_ARG_ERROR = "cancel argument must be a valid task (a result of a fork)",
            t = c.INVALID_PATTERN = "Invalid pattern passed to `take` (HINT: check if you didn't mispell a constant)",
            u = c.SELECT_ARG_ERROR = "select first argument must be a function",
            l = (0, m.sym)("IO"),
            g = "TAKE",
            q = "PUT",
            v = "RACE",
            p = "CALL",
            y = "CPS",
            z = "FORK",
            h = "JOIN",
            w = "CANCEL",
            x =
            "SELECT",
            B = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c;
                return c = {}, d(c, l, !0), d(c, a, b), c
            },
            C = {
                wildcard: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return m.kTrue
                },
                "default": function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return b.type === a
                    }
                },
                array: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.some(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a === b.type
                        })
                    }
                },
                predicate: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a(b)
                    }
                }
            };
        c.asEffect = {
            take: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && a[l] && a[g]
            },
            put: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && a[l] && a[q]
            },
            race: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && a[l] && a[v]
            },
            call: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && a[l] && a[p]
            },
            cps: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && a[l] &&
                    a[y]
            },
            fork: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && a[l] && a[z]
            },
            join: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && a[l] && a[h]
            },
            cancel: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && a[l] && a[w]
            },
            select: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && a[l] && a[x]
            }
        }
    }, {
        "./utils": 162
    }],
    162: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        (function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = d({}, 0 >= arguments.length || void 0 === arguments[0] ? {} : arguments[0]),
                    b = new Promise(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.resolve = b;
                        a.reject = c
                    });
                return a.promise = b, a
            }
            Object.defineProperty(c, "__esModule", {
                value: !0
            });
            var d = Object.assign || function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var b = 1; b < arguments.length; b++) {
                    var c =
                        arguments[b],
                        e;
                    for (e in c) Object.prototype.hasOwnProperty.call(c, e) && (a[e] = c[e])
                }
                return a
            };
            c.ident = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a
            };
            c.check = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (!b(a)) throw Error(c);
            };
            c.remove = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b = a.indexOf(b);
                0 <= b && a.splice(b, 1)
            };
            c.deferred = b;
            c.arrayOfDeffered = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var c = [], e = 0; e < a; e++) c.push(b());
                return c
            };
            c.autoInc = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = 0 >= arguments.length || void 0 === arguments[0] ? 0 : arguments[0];
                return function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return ++a
                }
            };
            c.asap = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return Promise.resolve(1).then(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a()
                })
            };
            c.warnDeprecated = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                r && console.warn("DEPRECATION WARNING", a)
            };
            var m = c.sym = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return "@@redux-saga/" + a
                },
                e = c.TASK = m("TASK"),
                r = (c.kTrue = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !0
                }, c.noop = function() {}, c.isDev = "undefined" != typeof a && a.env && "development" === a.env.NODE_ENV),
                n = c.is = {
                    undef: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return null === a || void 0 === a
                    },
                    notUndef: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return null !== a && void 0 !== a
                    },
                    func: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return "function" == typeof a
                    },
                    array: Array.isArray,
                    promise: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a && n.func(a.then)
                    },
                    iterator: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a &&
                            n.func(a.next) && n.func(a["throw"])
                    },
                    task: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a && a[e]
                    }
                }
        }).call(this, a("_process"))
    }, {
        _process: 158
    }],
    163: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c = "undefined" != typeof window ? window : {};
        c = "object" == typeof c ? c : "object" == typeof window ? window : "object" == typeof self ? self : this;
        var d = c.regeneratorRuntime && 0 <= Object.getOwnPropertyNames(c).indexOf("regeneratorRuntime"),
            f = d && c.regeneratorRuntime;
        if (c.regeneratorRuntime = void 0, b.exports = a("./runtime"), d) c.regeneratorRuntime = f;
        else try {
            delete c.regeneratorRuntime
        } catch (k) {
            c.regeneratorRuntime =
                void 0
        }
    }, {
        "./runtime": 164
    }],
    164: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        (function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            ! function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function d(a, b, c, h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b = Object.create((b && b.prototype instanceof f ? b : f).prototype);
                    h = new y(h || []);
                    return b._invoke = g(a, c, h), b
                }

                function e(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    try {
                        return {
                            type: "normal",
                            arg: a.call(b, c)
                        }
                    } catch (U) {
                        return {
                            type: "throw",
                            arg: U
                        }
                    }
                }

                function f() {}

                function n() {}

                function t() {}

                function u(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    ["next", "throw", "return"].forEach(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a[b] = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return this._invoke(b, a)
                        }
                    })
                }

                function l(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function c(a, h, p, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a = e(b[a], b, h);
                        if ("throw" !==
                            a.type) {
                            var g = a.arg;
                            return (a = g.value) && "object" == typeof a && B.call(a, "__await") ? Promise.resolve(a.__await).then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                c("next", a, p, d)
                            }, function(a) {
                                c("throw", a, p, d)
                            }) : Promise.resolve(a).then(function(a) {
                                g.value = a;
                                p(g)
                            }, d)
                        }
                        d(a.arg)
                    }
                    "object" == typeof a && a.domain && (c = a.domain.bind(c));
                    var h;
                    this._invoke = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        function e() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return new Promise(function(h, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                c(a, b, h, e)
                            })
                        }
                        return h = h ? h.then(e, e) : e()
                    }
                }

                function g(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var p = J;
                    return function(d, g) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (p === M) throw Error("Generator is already running");
                        if (p === H) {
                            if ("throw" === d) throw g;
                            return h()
                        }
                        c.method = d;
                        for (c.arg = g;;) {
                            if (d = c.delegate)
                                if (d = q(d, c)) {
                                    if (d === O) continue;
                                    return d
                                }
                            if ("next" === c.method) c.sent = c._sent = c.arg;
                            else if ("throw" === c.method) {
                                if (p === J) throw p = H, c.arg;
                                c.dispatchException(c.arg)
                            } else "return" === c.method && c.abrupt("return", c.arg);
                            p = M;
                            d = e(a, b, c);
                            if ("normal" === d.type) {
                                if (p = c.done ? H : L, d.arg === O) continue;
                                return {
                                    value: d.arg,
                                    done: c.done
                                }
                            }
                            "throw" === d.type && (p = H, c.method = "throw", c.arg = d.arg)
                        }
                    }
                }

                function q(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var c = a.iterator[b.method];
                    if (c ===
                        w) {
                        if (b.delegate = null, "throw" === b.method) {
                            if (a.iterator["return"] && (b.method = "return", b.arg = w, q(a, b), "throw" === b.method)) return O;
                            b.method = "throw";
                            b.arg = new TypeError("The iterator does not provide a 'throw' method")
                        }
                        return O
                    }
                    c = e(c, a.iterator, b.arg);
                    return "throw" === c.type ? (b.method = "throw", b.arg = c.arg, b.delegate = null, O) : (c = c.arg) ? c.done ? (b[a.resultName] = c.value, b.next = a.nextLoc, "return" !== b.method && (b.method = "next", b.arg = w), b.delegate = null, O) : c : (b.method = "throw", b.arg = new TypeError("iterator result is not an object"),
                        b.delegate = null, O)
                }

                function v(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = {
                        tryLoc: a[0]
                    };
                    1 in a && (b.catchLoc = a[1]);
                    2 in a && (b.finallyLoc = a[2], b.afterLoc = a[3]);
                    this.tryEntries.push(b)
                }

                function p(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = a.completion || {};
                    b.type = "normal";
                    delete b.arg;
                    a.completion = b
                }

                function y(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this.tryEntries = [{
                        tryLoc: "root"
                    }];
                    a.forEach(v, this);
                    this.reset(!0)
                }

                function k(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (a) {
                        var b = a[G];
                        if (b) return b.call(a);
                        if ("function" == typeof a.next) return a;
                        if (!isNaN(a.length)) {
                            var c = -1;
                            b = function F() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                for (; ++c < a.length;)
                                    if (B.call(a, c)) return F.value = a[c], F.done = !1, F;
                                return F.value = w, F.done = !0, F
                            };
                            return b.next = b
                        }
                    }
                    return {
                        next: h
                    }
                }

                function h() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return {
                        value: w,
                        done: !0
                    }
                }
                var w, x = Object.prototype,
                    B = x.hasOwnProperty,
                    C = "function" == typeof Symbol ? Symbol : {},
                    G = C.iterator || "@@iterator",
                    A = C.toStringTag || "@@toStringTag";
                C = "object" == typeof b;
                var D = c.regeneratorRuntime;
                if (D) return void(C && (b.exports = D));
                D = c.regeneratorRuntime = C ? b.exports : {};
                D.wrap = d;
                var J = "suspendedStart",
                    L = "suspendedYield",
                    M = "executing",
                    H = "completed",
                    O = {};
                c = {};
                c[G] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return this
                };
                (C = (C = Object.getPrototypeOf) &&
                    C(C(k([])))) && C !== x && B.call(C, G) && (c = C);
                var K = t.prototype = f.prototype = Object.create(c);
                n.prototype = K.constructor = t;
                t.constructor = n;
                t[A] = n.displayName = "GeneratorFunction";
                D.isGeneratorFunction = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a = "function" == typeof a && a.constructor;
                    return !!a && (a === n || "GeneratorFunction" === (a.displayName || a.name))
                };
                D.mark = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return Object.setPrototypeOf ? Object.setPrototypeOf(a, t) : (a.__proto__ = t, A in a || (a[A] = "GeneratorFunction")), a.prototype = Object.create(K), a
                };
                D.awrap = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return {
                        __await: a
                    }
                };
                u(l.prototype);
                D.AsyncIterator = l;
                D.async = function(a, b, c, h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var e = new l(d(a, b, c, h));
                    return D.isGeneratorFunction(b) ? e : e.next().then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.done ? a.value : e.next()
                    })
                };
                u(K);
                K[A] = "Generator";
                K.toString = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return "[object Generator]"
                };
                D.keys = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = [],
                        c;
                    for (c in a) b.push(c);
                    return b.reverse(),
                        function F() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (; b.length;) {
                                var c = b.pop();
                                if (c in a) return F.value = c, F.done = !1, F
                            }
                            return F.done = !0, F
                        }
                };
                D.values = k;
                y.prototype = {
                    constructor: y,
                    reset: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (this.prev = 0, this.next =
                            0, this.sent = this._sent = w, this.done = !1, this.delegate = null, this.method = "next", this.arg = w, this.tryEntries.forEach(p), !a)
                            for (var b in this) "t" === b.charAt(0) && B.call(this, b) && !isNaN(+b.slice(1)) && (this[b] = w)
                    },
                    stop: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this.done = !0;
                        var a = this.tryEntries[0].completion;
                        if ("throw" === a.type) throw a.arg;
                        return this.rval
                    },
                    dispatchException: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        function b(b, h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return p.type = "throw", p.arg = a, c.next = b, h && (c.method = "next", c.arg = w), !!h
                        }
                        if (this.done) throw a;
                        for (var c = this, h = this.tryEntries.length - 1; 0 <=
                            h; --h) {
                            var e = this.tryEntries[h];
                            var p = e.completion;
                            if ("root" === e.tryLoc) return b("end");
                            if (e.tryLoc <= this.prev) {
                                var d = B.call(e, "catchLoc"),
                                    g = B.call(e, "finallyLoc");
                                if (d && g) {
                                    if (this.prev < e.catchLoc) return b(e.catchLoc, !0);
                                    if (this.prev < e.finallyLoc) return b(e.finallyLoc)
                                } else if (d) {
                                    if (this.prev < e.catchLoc) return b(e.catchLoc, !0)
                                } else {
                                    if (!g) throw Error("try statement without catch or finally");
                                    if (this.prev < e.finallyLoc) return b(e.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (var c, h = this.tryEntries.length -
                                1; 0 <= h; --h) {
                            var e = this.tryEntries[h];
                            if (e.tryLoc <= this.prev && B.call(e, "finallyLoc") && this.prev < e.finallyLoc) {
                                c = e;
                                break
                            }
                        }
                        c && ("break" === a || "continue" === a) && c.tryLoc <= b && b <= c.finallyLoc && (c = null);
                        h = c ? c.completion : {};
                        return h.type = a, h.arg = b, c ? (this.method = "next", this.next = c.finallyLoc, O) : this.complete(h)
                    },
                    complete: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if ("throw" === a.type) throw a.arg;
                        return "break" === a.type || "continue" === a.type ? this.next = a.arg : "return" === a.type ? (this.rval = this.arg = a.arg, this.method = "return", this.next = "end") : "normal" ===
                            a.type && b && (this.next = b), O
                    },
                    finish: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (var b = this.tryEntries.length - 1; 0 <= b; --b) {
                            var c = this.tryEntries[b];
                            if (c.finallyLoc === a) return this.complete(c.completion, c.afterLoc), p(c), O
                        }
                    },
                    "catch": function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (var b, c = this.tryEntries.length - 1; 0 <= c; --c) {
                            var h = this.tryEntries[c];
                            if (h.tryLoc === a) return a = h.completion, "throw" === a.type && (b = a.arg, p(h)), b
                        }
                        throw Error("illegal catch attempt");
                    },
                    delegateYield: function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return this.delegate = {
                                iterator: k(a),
                                resultName: b,
                                nextLoc: c
                            }, "next" === this.method &&
                            (this.arg = w), O
                    }
                }
            }("object" == typeof c ? c : "object" == typeof window ? window : "object" == typeof self ? self : this)
        }).call(this, a("_process"), "undefined" != typeof window ? window : {})
    }, {
        _process: 158
    }],
    165: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        a("extension-api/globals");
        a("config").initGlobal("chrome", "cs");
        b = a("extension-api/chrome");
        c = a("extension-api");
        a("extension-api/web-extensions").hacksForCompatibility();
        c.initGlobalExtensionApi(b.createApi());
        a("universal/cs")
    }, {
        config: 169,
        "extension-api": 177,
        "extension-api/chrome": 175,
        "extension-api/globals": 176,
        "extension-api/web-extensions": 184,
        "universal/cs": 342
    }],
    166: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("stdlib"),
            f = a("./url"),
            k = a("./services");
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.create = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var e = "prod" === b ? "https://f-log-extension.grammarly.io" : "qa" === b || "dev" === b ? "https://127.0.0.1:8000" : d.assertNever(b);
                b = "prod" === b ? "grammarly.com" : "qa" === b || "dev" === b ? "qagr.io" : d.assertNever(b);
                return {
                    url: f.UrlConfig.create("grammarly.com",
                        e, c),
                    gnar: k.GnarConfig.create(a, b),
                    felog: k.FelogConfig.create(a),
                    extensionId: "87677a2c52b84ad3a151a4a72f5bd3c4"
                }
            }
        }(c.AppConfig || (c.AppConfig = {}))
    }, {
        "./services": 171,
        "./url": 173,
        stdlib: 328
    }],
    167: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("stdlib");
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.create = function(a, b, c, d, f, t, u) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var e = void 0 !== t && void 0 !== u ? t : "UNVERSIONED";
                a = a + "." + b + "." + c;
                f = ["prod" !== f ? f : null, e !== d ? e : null].filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !!a
                }).join(".");
                return {
                    version: a,
                    fullVersion: a + "-" + [d, f].filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return "" !==
                            a
                    }).join("/"),
                    commitHash: u,
                    gitBranch: t
                }
            };
            a.getManifestVersion = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                try {
                    switch (a) {
                        case "safari":
                            switch (b) {
                                case "bg":
                                case "popup":
                                    return c.safari.extension.displayVersion;
                                default:
                                    return
                            }
                        case "chrome":
                            return c.chrome.runtime.getManifest().version;
                        case "firefox":
                            return c.firefox.runtime.getManifest().version;
                        case "edge":
                            return c.edge.runtime.getManifest().version;
                        default:
                            return d.assertNever(a)
                    }
                } catch (r) {
                    return void console.error("Could not get extension version from manifest", r)
                }
            }
        }(c.BuildInfo ||
            (c.BuildInfo = {}))
    }, {
        stdlib: 328
    }],
    168: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("stdlib");
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.create = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return d.optionalStringUnion(["chrome", "safari", "firefox", "edge"], a)
            };
            a.detect = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.chrome && /google/i.test(a.navigator.vendor) ? "chrome" : -1 !== a.navigator.userAgent.indexOf("Firefox") ? "firefox" : /^((?!chrome).)*safari/i.test(a.navigator.userAgent) ? "safari" : "Netscape" === a.navigator.appName && -1 < a.navigator.appVersion.indexOf("Edge") ?
                    "edge" : void 0
            }
        }(c.TargetBrowser || (c.TargetBrowser = {}));
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.create = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return d.optionalStringUnion(["dev", "prod", "qa"], a)
            }
        }(c.TargetEnv || (c.TargetEnv = {}));
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.create = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return d.optionalStringUnion(["bg", "cs", "popup"], a)
            };
            a.detect = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = !!a.IS_BG;
                if ("safari" === b) try {
                    var d = a.safari.extension.globalPage.contentWindow !== a
                } catch (n) {
                    d = !1
                } else d = !!a.IS_POPUP;
                return c ? "bg" : d ? "popup" : "cs"
            }
        }(c.TargetContext || (c.TargetContext = {}));
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.create = function(a,
                b, c) {
                return {
                    browser: a,
                    env: b,
                    context: c
                }
            }
        }(c.BundleInfo || (c.BundleInfo = {}))
    }, {
        stdlib: 328
    }],
    169: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b in a) c.hasOwnProperty(b) || (c[b] = a[b])
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        d(a("./app"));
        d(a("./build"));
        d(a("./bundle"));
        d(a("./services"));
        d(a("./system"));
        d(a("./url"));
        d(a("./mainConfig"));
        var f = a("./mainConfig"),
            k = a("./bundle"),
            m = a("stdlib"),
            e = new m.Global(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                console.warn("Global config not initialized -- using fall back value.");
                var a = m.assertNonNull(k.TargetBrowser.detect(window),
                    "runtime-detected browser type");
                a = f.MainConfig.create(a, k.TargetContext.detect(window, a), f.ProcessEnv.fromBrowserify());
                return window.GR_CFG = a, a
            });
        c.getGlobal = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return e.get()
        };
        c.initGlobal = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            e.init(f.MainConfig.create(a, b, c || f.ProcessEnv.fromBrowserify()));
            window.GR_CFG = e.get()
        }
    }, {
        "./app": 166,
        "./build": 167,
        "./bundle": 168,
        "./mainConfig": 170,
        "./services": 171,
        "./system": 172,
        "./url": 173,
        stdlib: 328
    }],
    170: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        (function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = a("babel-runtime/helpers/slicedToArray"),
                k = d && d.__esModule ? d : {
                    "default": d
                };
            Object.defineProperty(c, "__esModule", {
                value: !0
            });
            var m = a("./app"),
                e = a("./build"),
                r = a("./system"),
                n = a("./bundle"),
                t = a("stdlib");
            ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function c(a, b, c, e, d, f, h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return {
                        env: a,
                        major_number: b,
                        build_number: c,
                        release_number: e,
                        git_branch: d,
                        git_commit: f,
                        edge_popup_url: h
                    }
                }
                a.create = c;
                a.fromBrowserify = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return c("prod", 14, "798", "1133", b.env.GIT_BRANCH, "bd5d43593488c0ca3f63a383a7ce0b09264146a8", "https://grammarly_neweditor.s3.amazonaws.com/popup-editor-static/d571e8cf4b45110649b1ed823d8d9d12e54cca04a4c4d230d419b911b829da99/popup-edge.html")
                }
            }(c.ProcessEnv ||
                (c.ProcessEnv = {}));
            ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.create = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var d = void 0;
                    if (c.env) {
                        var p = n.TargetEnv.create(c.env);
                        void 0 !== p ? d = p : (console.warn("*** process.env.ENV is invalid ('" + c.env + "'), assuming 'prod' env"), d = "prod")
                    } else console.warn("*** process.env.ENV is not defined, assuming 'prod' env"), d = "prod";
                    d = t.assertNonNull(d, "ENV env var OR a fallback value");
                    p = [c.major_number, c.build_number, c.release_number].map(t.optionalIntString);
                    var g = void 0;
                    3 === p.length && p.every(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return void 0 !== a
                        }) ?
                        g = p : (p = (e.BuildInfo.getManifestVersion(a, b, window) || "").split(".").map(t.optionalIntString), g = 3 === p.length && p.every(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return void 0 !== a
                        }) ? p : [0, 0, 0]);
                    p = g;
                    p = (0, k["default"])(p, 3);
                    return {
                        buildInfo: e.BuildInfo.create(p[0], p[1], p[2], a, d, c.git_branch, c.git_commit),
                        bundleInfo: n.BundleInfo.create(a, d, b),
                        appConfig: m.AppConfig.create(a, d, c.edge_popup_url),
                        systemInfo: r.SystemInfo.create(a, window)
                    }
                }
            }(c.MainConfig || (c.MainConfig = {}))
        }).call(this, a("_process"))
    }, {
        "./app": 166,
        "./build": 167,
        "./bundle": 168,
        "./system": 172,
        _process: 158,
        "babel-runtime/helpers/slicedToArray": 40,
        stdlib: 328
    }],
    171: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("stdlib");
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = {
                chrome: "chromeExt",
                firefox: "firefoxExt",
                safari: "safariExt",
                edge: "edgeExt"
            };
            a.create = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return {
                    appName: d.assertNonNull(b[a], "gnar app name"),
                    url: "https://gnar." + c,
                    domain: "." + c
                }
            }
        }(c.GnarConfig || (c.GnarConfig = {}));
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = {
                chrome: "extensionChrome",
                firefox: "extensionFirefox",
                safari: "extensionSafari",
                edge: "extensionEdge"
            };
            a.create = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return {
                    appName: d.assertNonNull(b[a], "felog app name")
                }
            }
        }(c.FelogConfig || (c.FelogConfig = {}))
    }, {
        stdlib: 328
    }],
    172: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d, f = a("./bundle"),
            k = a("stdlib");
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.create = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return {
                    type: f.TargetBrowser.detect(b) || "other",
                    isWE: "firefox" === a ? k.try_(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return !!firefox.runtime
                    }, function(a) {
                        return !1
                    }) : "chrome" === a || "edge" === a
                }
            }
        }(d = c.BrowserInfo || (c.BrowserInfo = {}));
        var m;
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.create =
                function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return {
                        isWindows: -1 !== a.navigator.appVersion.indexOf("Win")
                    }
                }
        }(m = c.OsInfo || (c.OsInfo = {}));
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.create = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return {
                    browser: d.create(a, b),
                    os: m.create(b)
                }
            }
        }(c.SystemInfo || (c.SystemInfo = {}))
    }, {
        "./bundle": 168,
        stdlib: 328
    }],
    173: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.create = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var e = "https://www." + a,
                    d = "https://data." + a,
                    f = "https://app." + a,
                    t = "https://auth." + a + "/v3";
                return {
                    app: f,
                    appPersonalDictionary: f + "/profile/dictionary",
                    capi: "wss://capi." + a + "/freews",
                    dapiMimic: d + "/api/mimic",
                    dapiProps: d + "/api/props",
                    editorDictionary: f + "/profile/dictionary",
                    dictionary: "https://capi." + a + "/api/defs",
                    docs: f + "/docs",
                    docsApi: "https://dox." + a + "/documents",
                    userOrAnonymous: t + "/user/oranonymous",
                    authSignin: t + "/login",
                    authSignup: t + "/signup",
                    signin: e + "/signin",
                    signup: e + "/signup",
                    resetPassword: e + "/resetpassword",
                    saveEmailFeedback: "https://emailfeedback." + a + "/api/feedback/",
                    newFelog: b,
                    referral: e + "/referral?page=extension",
                    welcomeC: e + "/extension-success",
                    afterInstall: e + "/after_install_page",
                    upgrade: e + "/upgrade",
                    uninstall: e + "/extension-uninstall",
                    terms: e + "/terms",
                    policy: e + "/privacy-policy",
                    pageConfigUrl: "https://d3cv4a9a9wh0bt.cloudfront.net/browserplugin/config.json",
                    edgePopupUrl: c,
                    grammarlyDomain: a
                }
            }
        }(c.UrlConfig || (c.UrlConfig = {}))
    }, {}],
    174: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.handleChromeError = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            chrome.runtime.lastError ? b(chrome.runtime.lastError) : a()
        }
    }, {}],
    175: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a &&
                a.__esModule ? a : {
                    "default": a
                }
        }
        b = a("babel-runtime/core-js/promise");
        var f = d(b);
        b = a("babel-runtime/core-js/object/assign");
        var k = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var m = d(b);
        b = a("babel-runtime/helpers/createClass");
        var e = d(b);
        b = a("babel-runtime/helpers/defineProperty");
        b = (d(b), a("babel-runtime/core-js/object/get-own-property-symbols"));
        var r = d(b),
            n = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = {},
                    h;
                for (h in a) Object.prototype.hasOwnProperty.call(a, h) && 0 > b.indexOf(h) && (c[h] = a[h]);
                if (null != a && "function" == typeof r["default"]) {
                    var e =
                        0;
                    for (h = (0, r["default"])(a); e < h.length; e++) 0 > b.indexOf(h[e]) && (c[h[e]] = a[h[e]])
                }
                return c
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var t = a("./message/bg"),
            u = a("./message/content"),
            l = a("./tabs/chrome"),
            g = a("./chrome-util"),
            q = a("./web-extensions"),
            v = a("lib/util"),
            p = a("stdlib"),
            y = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function a(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    (0, m["default"])(this, a);
                    this.port = chrome.runtime.connect({
                        name: b
                    })
                }
                return (0, e["default"])(a, [{
                        key: "onMessage",
                        value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            this.port.onMessage.addListener(a)
                        }
                    }, {
                        key: "onDisconnect",
                        value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            this.port.onDisconnect.addListener(a)
                        }
                    },
                    {
                        key: "postMessage",
                        value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            this.port.postMessage(a)
                        }
                    }
                ]), a
            }(),
            z = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function a(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    (0, m["default"])(this, a);
                    this._port = b;
                    this.sender = {};
                    var c = b.sender;
                    this.name = b.name;
                    c && (this.sender.url = c.url, c.tab && c.tab.url && c.tab.id && (this.sender.tab = {
                        url: c.tab.url,
                        id: c.tab.id,
                        active: c.tab.active
                    }))
                }
                return (0, e["default"])(a, [{
                    key: "onMessage",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this._port.onMessage.addListener(a)
                    }
                }, {
                    key: "onDisconnect",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this._port.onDisconnect.addListener(a)
                    }
                }, {
                    key: "postMessage",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this._port.postMessage(a)
                    }
                }]), a
            }(),
            h = function x() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, m["default"])(this, x);
                this.tabs = new l.ChromeTabsApiImpl;
                this.notification = {
                    kind: "web-extension",
                    create: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return p.SafePromise.create(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var h = a.onClicked,
                                e = a.onButtonClicked,
                                p = n(a, ["onClicked", "onButtonClicked"]),
                                d = chrome.notifications,
                                f = v.guid();
                            d.create(f, (0, k["default"])({
                                type: "basic"
                            }, p), function() {
                                g.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    void 0 !== h && d.onClicked.addListener(h);
                                    void 0 !== e && d.onButtonClicked.addListener(e);
                                    b(f)
                                }, c)
                            })
                        })
                    },
                    clear: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return p.SafePromise.create(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            chrome.notifications.clear(a, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                g.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return b(a)
                                }, c)
                            })
                        })
                    }
                };
                this.cookies = {
                    kind: "web-extension",
                    get: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return p.SafePromise.create(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return chrome.cookies.get(a, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return g.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return b(a)
                                }, c)
                            })
                        })
                    },
                    remove: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return new f["default"](function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return chrome.cookies.remove(a, function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return g.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        return b(null)
                                    },
                                    c)
                            })
                        })
                    },
                    getAll: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return p.SafePromise.create(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return chrome.cookies.getAll(a, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return g.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return b(a)
                                }, c)
                            })
                        })
                    },
                    set: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return p.SafePromise.create(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return chrome.cookies.set(a, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return g.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return b(a)
                                }, c)
                            })
                        })
                    },
                    watch: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        chrome.cookies.onChanged.addListener(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var h = c.cookie;
                            c = c.cause;
                            !h || !h.name || a.path && a.path !== h.path || a.name !== h.name || a.domain && -1 === h.domain.indexOf(a.domain) ||
                                ("explicit" === c && b(h), "expired_overwrite" === c && b())
                        })
                    }
                };
                this.preferences = q.preferencesApi.windowLocalStorage;
                this.button = {
                    kind: "web-extension",
                    setBadge: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        chrome.browserAction.setBadgeText({
                            text: a
                        })
                    },
                    setIconByName: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a = a ? "-" + a : "";
                        chrome.browserAction.setIcon({
                            path: {
                                16: "./src/icon/icon16" + a + ".png",
                                32: "./src/icon/icon32" + a + ".png"
                            }
                        })
                    },
                    setBadgeBackgroundColor: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        chrome.browserAction.setBadgeBackgroundColor({
                            color: a
                        })
                    }
                };
                this.management = {
                    uninstallSelf: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        chrome.management.uninstallSelf()
                    }
                };
                this.message = v.isBg() ? new t.GenericBackgroundMessageApiImpl(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return chrome.runtime.onConnect.addListener(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a(new z(b))
                    })
                }, this.tabs.getActiveTab.bind(this.tabs), this.tabs.getAllTabs.bind(this.tabs)) : new u.GenericContentScriptMessageApiImpl(function(a) {
                    return new y(a)
                })
            };
        c.createApi = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return new h
        }
    }, {
        "./chrome-util": 174,
        "./message/bg": 179,
        "./message/content": 180,
        "./tabs/chrome": 183,
        "./web-extensions": 184,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/core-js/object/get-own-property-symbols": 27,
        "babel-runtime/core-js/promise": 31,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/defineProperty": 36,
        "lib/util": 322,
        stdlib: 328
    }],
    176: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        window.firefox = window.browser;
        try {
            window.firefox = browser
        } catch (d) {}
        window.edge = window.browser;
        window.chrome = window.chrome;
        c["default"] = void 0
    }, {}],
    177: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("stdlib");
        (function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b in a) c.hasOwnProperty(b) ||
                (c[b] = a[b])
        })(a("./interface"));
        c.initGlobalExtensionApi = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            window.extensionApi && console.warn("Extension Api init called more than once");
            window.extensionApi = window.extensionApi || a
        };
        c.getGlobalExtensionApi = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.assertNonNull(window.extensionApi, "extension api was not initialized")
        }
    }, {
        "./interface": 178,
        stdlib: 328
    }],
    178: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.ports = {
            bridge: "bridge",
            background: "message:to-priv",
            broadcast: "message:to-non-priv"
        }
    }, {}],
    179: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a) return !1;
            var b = r.getGlobal().bundleInfo.browser;
            b = "firefox" === b ? /^moz-extension:\/\/.*\/src\/popup.html$/ : "edge" === b ? /^ms-browser-extension:\/\/.*\/src\/popup.html$/ : "chrome" === b ? chrome && chrome.runtime && chrome.runtime.id ? new RegExp(chrome.runtime.id + "/src/popup.html") : void 0 : n.assertNever(b);
            return void 0 !== b && b.test(a)
        }
        var f = (b = a("babel-runtime/helpers/classCallCheck")) && b.__esModule ? b : {
                "default": b
            },
            k = (b = a("babel-runtime/helpers/createClass")) && b.__esModule ?
            b : {
                "default": b
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var m = a("./helpers"),
            e = a("lib/util"),
            r = a("config"),
            n = a("stdlib"),
            t = a("../interface");
        c.SETTINGS_TAB_ID = "popup";
        c.bgPreload = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = (e.isChrome() || e.isFF()) && (!chrome.extension || !chrome.tabs || !chrome.runtime || !chrome.runtime.onConnect),
                b = e.isEdge() && (!edge.extension || !edge.tabs || !edge.runtime || !edge.runtime.onConnect);
            if (a || b) a = window.localStorage.getItem("bgInitFail") || "0", a = parseInt(a, 10), 4 < a ? console.error("too many bgInitFail",
                a) : (window.localStorage.setItem("bgInitFail", (a + 1).toString()), document.location.reload())
        };
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(b, g, q) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var l = this;
                (0, f["default"])(this, a);
                this._getActiveTab = g;
                this._getAllTabs = q;
                this.kind = "background-message-api";
                this._callbacks = {};
                this._tabPorts = {
                    popup: []
                };
                this._messageHelper = new m.MessageHelperImpl;
                this._sendMessageToPorts = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    (a = l._tabPorts[a]) && a.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.postMessage(b)
                    })
                };
                this.toFocused = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return l._getActiveTab().then(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var h =
                            c.id;
                        c = c.url;
                        if (h) return d(c) ? console.warn("toFocussed not allowed for popup when it open like regular tab", a, b) : void l._sendMessageToPorts(h.toString(), {
                            type: a,
                            content: b,
                            callid: e.guid()
                        })
                    })
                };
                this.broadcast = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (b) {
                        var d = function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var h = c.id;
                            c = c.url;
                            h && c && -1 === c.indexOf("chrome-extension:") && l._sendMessageToPorts(h.toString(), {
                                type: a,
                                callid: e.guid(),
                                content: b
                            })
                        };
                        l._getAllTabs().then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.forEach(d)
                        });
                        l._tabPorts.popup && l._tabPorts.popup.length && l._getActiveTab().then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            d({
                                id: c.SETTINGS_TAB_ID,
                                url: a.url,
                                active: a.active
                            })
                        })
                    }
                };
                this._initPortListener = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (a.name === t.ports.bridge) a.onMessage(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        "message.toFocussed" === a.method && l.toFocused(a.params && a.params.type, a.params && a.params.content)
                    });
                    else if (a.name === t.ports.broadcast) a.onMessage(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return l.broadcast(a.type, a.content)
                    });
                    else if (a.name === t.ports.background) {
                        var b = a.sender;
                        if (b) {
                            if (b.tab) {
                                var e = b.tab,
                                    h = e.id;
                                e = e.url;
                                if (h) {
                                    var p = l._tabPorts[h];
                                    void 0 === p && (p = l._tabPorts[h] = []);
                                    p.push(a)
                                }
                                e && 0 === e.indexOf("http") &&
                                    l._messageHelper.fire("tab-connected", {
                                        tab: h,
                                        url: e
                                    });
                                a.onDisconnect(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    if (h) {
                                        var b = l._tabPorts[h];
                                        b && b.splice(b.indexOf(a), 1)
                                    }
                                })
                            }
                            if ((e = b.url ? b.url : b.tab ? b.tab.url : "") && d(e)) {
                                var g = c.SETTINGS_TAB_ID;
                                l._tabPorts[g] = l._tabPorts[g] || [];
                                l._tabPorts[g].push(a);
                                a.onDisconnect(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    var b = l._tabPorts[g];
                                    b.splice(b.indexOf(a), 1)
                                })
                            }
                        }
                        a.onMessage(function(h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var e = function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                var h = c.callid,
                                    e = c.content;
                                c = c.type;
                                l._callbacks[h] && (l._callbacks[h](e), delete l._callbacks[h]);
                                l._messageHelper.fire(c,
                                    e,
                                    function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        return a.postMessage({
                                            content: b,
                                            callid: h
                                        })
                                    }, b && b.tab ? b.tab.id : -1)
                            };
                            "tab-connected" === h.type ? l._getActiveTab().then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                h.content = {
                                    tab: c.SETTINGS_TAB_ID,
                                    url: a.url
                                };
                                e(h)
                            }) : e(h)
                        })
                    }
                };
                b(this._initPortListener)
            }
            return (0, k["default"])(a, [{
                    key: "sendTo",
                    value: function(a, b, c, d, p) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a = this._tabPorts[a];
                        if (!a || !a.length) return void(p && p({
                            message: "no ports on specified tabId"
                        }));
                        var g = {
                            type: b,
                            content: c
                        };
                        d && "function" == typeof d && (g.callid = e.guid(), this._callbacks[g.callid] = d);
                        a.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.postMessage(g)
                        })
                    }
                },
                {
                    key: "listen",
                    value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this._messageHelper.listen(a, b)
                    }
                }
            ]), a
        }();
        c.GenericBackgroundMessageApiImpl = a
    }, {
        "../interface": 178,
        "./helpers": 181,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        config: 169,
        "lib/util": 322,
        stdlib: 328
    }],
    180: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/helpers/classCallCheck")) && b.__esModule ? b : {
                "default": b
            },
            f = (b = a("babel-runtime/helpers/createClass")) && b.__esModule ? b : {
                "default": b
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var k =
            a("stdlib"),
            m = a("./helpers"),
            e = a("lib/util"),
            r = a("../interface");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = this;
                (0, d["default"])(this, a);
                this.kind = "content-script-message-api";
                this._callbacks = {};
                this._messageHelper = new m.MessageHelperImpl;
                this._proxyPortsStorage = {};
                this.broadcastBackground = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (var a = arguments.length, b = Array(a), e = 0; e < a; e++) b[e] = arguments[e];
                    return c._emit(c.backgroundPort, "bg").apply(null, b)
                };
                this.broadcast = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (var a = arguments.length, b = Array(a), e = 0; e < a; e++) b[e] = arguments[e];
                    return c._emit(c.broadcastPort, "tabs").apply(null, b)
                };
                this._onPortMessage = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    console.log("[Messaging] extension api", "portMessage", a)
                };
                this._checkHealth = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function a() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        document.removeEventListener("grammarly:pong", p);
                        e && (clearTimeout(e), e = null);
                        b && (clearInterval(b), b = null)
                    }
                    var b = null,
                        e = null,
                        d = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return document.dispatchEvent(new CustomEvent("grammarly:ping"))
                        },
                        p = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            a()
                        },
                        f = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            [c.port, c.backgroundPort, c.broadcastPort].forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                a && a.removeMessageListeners &&
                                    a.removeMessageListeners()
                            });
                            c.port = c.backgroundPort = c.broadcastPort = null;
                            a();
                            document.addEventListener("grammarly:proxyports", c._onGrammarlyResetAfterTimeout);
                            document.dispatchEvent(new CustomEvent("grammarly:offline"))
                        };
                    return function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a();
                        document.addEventListener("grammarly:pong", p);
                        b = window.setInterval(d, 500);
                        e = window.setTimeout(f, 5E3)
                    }
                }();
                this._onGrammarlyResetAfterTimeout = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    document.removeEventListener("grammarly:proxyports", c._onGrammarlyResetAfterTimeout);
                    c.port = c._initProxyPort(r.ports.bridge,
                        c._onPortMessage, c._checkHealth, !0);
                    c.backgroundPort = c._initProxyPort(r.ports.background, c._onBgPortMessage, c._checkHealth);
                    c.broadcastPort = c._initProxyPort(r.ports.broadcast, null, c._checkHealth)
                };
                this._onBgPortMessage = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = a.callid,
                        e = a.content;
                    a = a.type;
                    c._callbacks[b] ? (c._callbacks[b](e), delete c._callbacks[b]) : c._messageHelper.fire(a, e, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (!c.backgroundPort) throw Error("fail reply to bg page - connection lost");
                        c.backgroundPort.postMessage({
                            content: a,
                            callid: b
                        })
                    })
                };
                this._initProxyPort =
                    function(a, b, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var d = 3 < arguments.length && void 0 !== arguments[3] && arguments[3],
                            p = c._proxyPort(a);
                        return d && c._checkHealth(), b && p.onMessage(b), e && p.onDisconnect(e), p
                    };
                this._emit = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return function(d, g, p, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var l = e.guid();
                        p && "function" == typeof p && (c._callbacks[l] = p);
                        try {
                            if (!a) throw Error("lost connection to " + b + " port");
                            a.postMessage({
                                type: d,
                                callid: l,
                                content: g
                            })
                        } catch (h) {
                            if (!f) throw h;
                            f(h)
                        }
                    }
                };
                this._proxyPort = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    c._proxyPortsStorage[a] = {};
                    var b = function(b, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            e = e.detail;
                            e.name === a &&
                                (b = c._proxyPortsStorage[a][b]) && b(e.msg)
                        },
                        e = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return b("success", a)
                        },
                        d = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return b("error", a)
                        };
                    return document.addEventListener("grammarly:message", e), document.addEventListener("grammarly:error", d), {
                        postMessage: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return document.dispatchEvent(new CustomEvent("grammarly:action", {
                                detail: {
                                    data: 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
                                    name: a
                                }
                            }))
                        },
                        onMessage: function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            c._proxyPortsStorage[a].success = b
                        },
                        onDisconnect: function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            c._proxyPortsStorage[a].error =
                                b
                        },
                        removeMessageListeners: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            document.removeEventListener("grammarly:message", e);
                            document.removeEventListener("grammarly:error", d)
                        }
                    }
                };
                this.port = b(r.ports.bridge);
                this.port.onMessage(this._onPortMessage);
                this.port.onDisconnect(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    c.port = null;
                    c.port = c._initProxyPort(r.ports.bridge, c._onPortMessage, c._checkHealth, !0)
                });
                this.backgroundPort = b(r.ports.background);
                this.backgroundPort.onMessage(this._onBgPortMessage);
                this.backgroundPort.onDisconnect(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    c.backgroundPort = null;
                    c.backgroundPort =
                        c._initProxyPort(r.ports.background, c._onBgPortMessage, c._checkHealth)
                });
                this.broadcastPort = b(r.ports.broadcast);
                this.broadcastPort.onDisconnect(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    c.broadcastPort = null;
                    c.broadcastPort = c._initProxyPort(r.ports.broadcast, null, c._checkHealth)
                })
            }
            return (0, f["default"])(a, [{
                key: "listen",
                value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._messageHelper.listen(a, b)
                }
            }, {
                key: "toFocused",
                value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var c = this;
                    return k.SafePromise.create(function(e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (!c.port) throw Error("lost connection to bg page");
                        c.port.postMessage({
                            method: "message.toFocussed",
                            params: {
                                type: a,
                                content: b
                            }
                        });
                        e()
                    })
                }
            }]), a
        }();
        c.GenericContentScriptMessageApiImpl = a;
        c.hacksForCompatibility = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            window.addEventListener("update-window-size-gr", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    document.body.appendChild(c);
                    setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        c.parentNode && c.parentNode.removeChild(c)
                    }, 10)
                }
                var c = document.createElement("div");
                if (c.style.height = "1px", a.detail && a.detail.force) {
                    var e = setInterval(b, 100);
                    setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return clearInterval(e)
                    }, 405)
                }
            }, !1);
            window.addEventListener("close-popup-gr", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                -1 !==
                    window.navigator.userAgent.indexOf("Firefox") && window.close()
            }, !1)
        }
    }, {
        "../interface": 178,
        "./helpers": 181,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "lib/util": 322,
        stdlib: 328
    }],
    181: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return safari.application.activeBrowserWindow && safari.application.activeBrowserWindow.activeTab
        }
        var f = (b = a("babel-runtime/core-js/get-iterator")) && b.__esModule ? b : {
                "default": b
            },
            k = (b = a("babel-runtime/helpers/classCallCheck")) && b.__esModule ? b : {
                "default": b
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        a = a("lib/config");
        var m = function() {};
        c.MessageHelperImpl = function r() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = this;
            (0, k["default"])(this, r);
            this._listeners = {};
            this._queue = {};
            this.fire = function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : m,
                    g = arguments[3],
                    f = a._listeners[b] || [];
                f.length ? f.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a(c, d, g)
                }) : (a._queue[b] = a._queue[b] || [], a._queue[b].push({
                    content: c,
                    callback: d,
                    sender: g
                }))
            };
            this.unlisten = function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = a._listeners[b] || [];
                c = d.indexOf(c); -
                1 !== c && (1 === d.length ? delete a._listeners[b] : d.splice(c, 1))
            };
            this.listenOnce = function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.listen(b, function g(d, f, p) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a.unlisten(b, g);
                    c && c(d, f, p)
                })
            };
            this.listen = function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a._listeners[b] = a._listeners[b] || []; - 1 === a._listeners[b].indexOf(c) && a._listeners[b].push(c);
                var d = a._queue[b] || [];
                if (d.length) {
                    var g = !0,
                        n = !1,
                        v = void 0;
                    try {
                        for (var p, u = (0, f["default"])(d); !(g = (p = u.next()).done); g = !0) {
                            var t = p.value;
                            try {
                                c(t.content, t.callback, t.sender)
                            } catch (h) {
                                console.error("exception during proccesing buffered messages",
                                    h)
                            }
                        }
                    } catch (h) {
                        n = !0, v = h
                    } finally {
                        try {
                            !g && u["return"] && u["return"]()
                        } finally {
                            if (n) throw v;
                        }
                    }
                    delete a._queue[b]
                }
            }
        };
        c.safariBridgeId = "forge-bridge" + a.getUuid();
        c.getSafariActiveTab = d;
        c.getSafariActiveTabUrl = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = d();
            return a && a.url || "http://newtab"
        };
        c.emitter = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = {},
                b = {};
            return {
                emit: function(c, d, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var g = a[c];
                    g ? g.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a(d, f)
                    }) : (b[c] || (b[c] = []), b[c].push({
                        data: d,
                        callback: f
                    }))
                },
                on: function(c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a[c] || (a[c] = []);
                    a[c].push(d);
                    b[c] && b[c].forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return d(a.data,
                            a.callback)
                    })
                }
            }
        }
    }, {
        "babel-runtime/core-js/get-iterator": 20,
        "babel-runtime/helpers/classCallCheck": 34,
        "lib/config": 211
    }],
    182: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }

        function f(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                get: a.get.bind(a),
                set: a.set.bind(a),
                getAll: a.getAll.bind(a),
                remove: a.remove.bind(a),
                removeAll: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return t(this, void 0, void 0, e["default"].mark(function z() {
                        var c;
                        return e["default"].wrap(function(h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (h.prev = h.next) {
                                case 0:
                                    return h.next = 2, a.getAll();
                                case 2:
                                    return c =
                                        h.sent, h.next = 5, a.removeAll();
                                case 5:
                                    return h.next = 7, n["default"].all((0, r["default"])(c).filter(b).map(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        return a.set(b, c[b])
                                    }));
                                case 7:
                                case "end":
                                    return h.stop()
                            }
                        }, z, this)
                    }))
                }
            }
        }
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        b = a("babel-runtime/regenerator");
        var e = d(b);
        b = a("babel-runtime/core-js/object/keys");
        var r = d(b);
        b = a("babel-runtime/core-js/promise");
        var n = d(b),
            t = function(a, b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c || (c = n["default"]))(function(h,
                    d) {
                    function p(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            f(e.next(a))
                        } catch (A) {
                            d(A)
                        }
                    }

                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            f(e["throw"](a))
                        } catch (A) {
                            d(A)
                        }
                    }

                    function f(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? h(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(p, g)
                    }
                    f((e = e.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var u, l = a("stdlib"),
            g = a("lodash");
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a[a.success = 0] = "success";
            a[a.successWithEmpty = 1] = "successWithEmpty";
            a[a.alreadyMigrated = 2] = "alreadyMigrated"
        }(u = c.StorageMigrationResult || (c.StorageMigrationResult = {}));
        var q;
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a[a.nonEmptyMigration =
                0] = "nonEmptyMigration";
            a[a.emptyMigration = 1] = "emptyMigration"
        }(q || (q = {}));
        c.createMigrationAwareApi = f;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var h = this,
                    d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : [];
                (0, k["default"])(this, a);
                this._name = b;
                this._source = c;
                this._destination = e;
                this._destValuesToKeep = d;
                this._migrationFlagSuccessfulValue = "ok";
                this._migrationFlagUniqueKey = "104ccd8c-9919-9ae4-931f-782fb197486c";
                this._migrationFlagKey = "__migration-" + this._migrationFlagUniqueKey + ":(" + this._name + ")";
                this._migrationInProgress = !1;
                this.migrationAwareDestination = f(this._destination, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a === h._migrationFlagKey
                })
            }
            return (0, m["default"])(a, [{
                key: "_getMigrated",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this;
                    return this._destination.get(this._migrationFlagKey).then(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return b === a._migrationFlagSuccessfulValue
                    })
                }
            }, {
                key: "_setMigrated",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return t(this, void 0, void 0, e["default"].mark(function y() {
                        var a;
                        return e["default"].wrap(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (b.prev = b.next) {
                                case 0:
                                    return b.next = 2, this._destination.set(this._migrationFlagKey,
                                        this._migrationFlagSuccessfulValue);
                                case 2:
                                    return b.next = 4, this._destination.get(this._migrationFlagKey);
                                case 4:
                                    if (a = b.sent, a === this._migrationFlagSuccessfulValue) {
                                        b.next = 7;
                                        break
                                    }
                                    throw Error("Could not verify status write, actual value: " + a);
                                case 7:
                                case "end":
                                    return b.stop()
                            }
                        }, y, this)
                    }))
                }
            }, {
                key: "_runMigration",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return t(this, void 0, void 0, e["default"].mark(function y() {
                        var a, b, c = this;
                        return e["default"].wrap(function(h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (h.prev = h.next) {
                                case 0:
                                    return l.assert(!this._migrationInProgress,
                                        "migration already in progress"), this._migrationInProgress = !0, h.prev = 2, h.next = 5, this._source.getAll();
                                case 5:
                                    return a = h.sent, b = 0 === (0, r["default"])(a).length, h.next = 9, n["default"].all(this._destValuesToKeep.map(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        return c._destination.get(b).then(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                            null != c && (a[b] = c)
                                        })
                                    }));
                                case 9:
                                    return h.next = 11, this._destination.removeAll();
                                case 11:
                                    return h.next = 13, n["default"].all((0, r["default"])(a).filter(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        return null != a[b]
                                    }).map(function(b) {
                                        return c._destination.set(b, a[b])
                                    }));
                                case 13:
                                    return h.t0 =
                                        g, h.t1 = a, h.next = 17, this._destination.getAll();
                                case 17:
                                    if (h.t2 = h.sent, h.t0.isEqual.call(h.t0, h.t1, h.t2)) {
                                        h.next = 20;
                                        break
                                    }
                                    throw Error("Could not verify write");
                                case 20:
                                    return this._migrationInProgress = !1, h.abrupt("return", b ? q.emptyMigration : q.nonEmptyMigration);
                                case 24:
                                    throw h.prev = 24, h.t3 = h["catch"](2), this._migrationInProgress = !1, h.t3;
                                case 28:
                                case "end":
                                    return h.stop()
                            }
                        }, y, this, [
                            [2, 24]
                        ])
                    }))
                }
            }, {
                key: "ensureMigrationCompleted",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return t(this, void 0, void 0, e["default"].mark(function y() {
                        var a;
                        return e["default"].wrap(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (b.prev = b.next) {
                                case 0:
                                    return b.next = 2, this._getMigrated();
                                case 2:
                                    if (!b.sent) {
                                        b.next = 6;
                                        break
                                    }
                                    return b.abrupt("return", u.alreadyMigrated);
                                case 6:
                                    return b.next = 8, this._runMigration();
                                case 8:
                                    return a = b.sent, b.next = 11, this._setMigrated();
                                case 11:
                                    b.t0 = a;
                                    b.next = b.t0 === q.nonEmptyMigration ? 14 : b.t0 === q.emptyMigration ? 15 : 16;
                                    break;
                                case 14:
                                    return b.abrupt("return", u.success);
                                case 15:
                                    return b.abrupt("return", u.successWithEmpty);
                                case 16:
                                    throw Error("Match not exhaustive: " +
                                        a);
                                case 18:
                                case "end":
                                    return b.stop()
                            }
                        }, y, this)
                    }))
                }
            }]), a
        }();
        c.StorageMigration = a
    }, {
        "babel-runtime/core-js/object/keys": 29,
        "babel-runtime/core-js/promise": 31,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/regenerator": 43,
        lodash: "lodash",
        stdlib: 328
    }],
    183: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/helpers/classCallCheck")) && b.__esModule ? b : {
                "default": b
            },
            f = (b = a("babel-runtime/helpers/createClass")) && b.__esModule ? b : {
                "default": b
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var k = a("../chrome-util"),
            m = a("stdlib");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, d["default"])(this, a);
                this.kind = "web-extension"
            }
            return (0, f["default"])(a, [{
                    key: "open",
                    value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return m.SafePromise.create(function(c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            chrome.tabs.create({
                                url: a,
                                active: b
                            }, function(a) {
                                k.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return c(a)
                                }, e)
                            })
                        })
                    }
                }, {
                    key: "updateCurrent",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return m.SafePromise.create(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            chrome.tabs.update({
                                url: a
                            }, function(a) {
                                k.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return b(a)
                                }, c)
                            })
                        })
                    }
                },
                {
                    key: "getActiveTab",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return m.SafePromise.create(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var c = chrome.tabs;
                            c.query({
                                active: !0,
                                lastFocusedWindow: !0
                            }, function(e) {
                                k.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    e && e.length ? a(e[0]) : c.query({
                                        active: !0
                                    }, function(c) {
                                        k.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                            a(c[0])
                                        }, b)
                                    })
                                }, b)
                            })
                        })
                    }
                }, {
                    key: "getAllTabs",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return m.SafePromise.create(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return chrome.tabs.query({}, function(c) {
                                return k.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return a(c)
                                }, b)
                            })
                        })
                    }
                }, {
                    key: "getActiveTabUrl",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a =
                            this;
                        return m.SafePromise.create(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.getActiveTab().then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return k.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return b(a && a.url)
                                }, c)
                            })
                        })
                    }
                }, {
                    key: "onActiveTabChange",
                    value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var c = this,
                            e = function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                k.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    c && a(c)
                                }, b)
                            };
                        chrome.tabs.onActivated.addListener(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return chrome.tabs.get(a.tabId, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return e(a)
                            })
                        });
                        chrome.tabs.onUpdated.addListener(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            c.getActiveTab().then(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                c && c.id === a && (b.url || b.favIconUrl || "complete" ===
                                    b.status) && chrome.tabs.get(a, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return e(a)
                                })
                            })
                        });
                        chrome.windows.onFocusChanged.addListener(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return chrome.tabs.query({
                                active: !0,
                                windowId: a,
                                lastFocusedWindow: !0
                            }, function(a) {
                                return e(a[0])
                            })
                        });
                        this.getActiveTab().then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return e(a)
                        })
                    }
                }, {
                    key: "reload",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return m.SafePromise.create(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var e = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return k.handleChromeError(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return b()
                                }, c)
                            };
                            a ? chrome.tabs.reload(a, {}, e) : chrome.tabs.reload(e)
                        })
                    }
                }
            ]), a
        }();
        c.ChromeTabsApiImpl = a
    }, {
        "../chrome-util": 174,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        stdlib: 328
    }],
    184: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/helpers/defineProperty");
        var f = d(b);
        b = a("babel-runtime/regenerator");
        var k = d(b);
        b = a("babel-runtime/core-js/object/keys");
        var m = d(b);
        b = a("babel-runtime/core-js/promise");
        var e = d(b),
            r = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c || (c = e["default"]))(function(e, p) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function f(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            h(d.next(a))
                        } catch (x) {
                            p(x)
                        }
                    }

                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            h(d["throw"](a))
                        } catch (x) {
                            p(x)
                        }
                    }

                    function h(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? e(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(f, g)
                    }
                    h((d = d.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var n = a("stdlib"),
            t = a("./storage-migration");
        b = a("./message/content");
        c.hacksForCompatibility = b.hacksForCompatibility;
        a = a("./message/bg");
        c.bgPreload = a.bgPreload;
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (var e = arguments.length, p = Array(e), h = 0; h < e; h++) p[h] = arguments[h];
                    return n.assert(!0 === v, "supposed to run data migration before accessing prefs with web-extensions API"),
                        d.then(function(h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            h = h ? c.migrationAwareDestination : a.windowLocalStorage;
                            return h[b].apply(h, p)
                        })
                }
            }
            a.windowLocalStorage = {
                get: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return n.SafePromise.sync(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return window.localStorage.getItem(a)
                    })
                },
                set: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return n.SafePromise.sync(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return window.localStorage.setItem(a, b)
                    })
                },
                getAll: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return n.SafePromise.sync(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = {};
                        return (0, m["default"])(window.localStorage).forEach(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            a[b] = window.localStorage.getItem(b)
                        }), a
                    })
                },
                remove: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return n.SafePromise.sync(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return window.localStorage.removeItem(a)
                    })
                },
                removeAll: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return n.SafePromise.sync(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return window.localStorage.clear()
                    })
                }
            };
            a.browserStorageLocal = {
                get: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return r(this, void 0, void 0, k["default"].mark(function z() {
                        var b;
                        return k["default"].wrap(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (c.prev = c.next) {
                                case 0:
                                    return c.next = 2, firefox.storage.local.get(a);
                                case 2:
                                    return b = c.sent, c.abrupt("return", b.hasOwnProperty(a) ? b[a] : null);
                                case 4:
                                case "end":
                                    return c.stop()
                            }
                        }, z, this)
                    }))
                },
                set: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return firefox.storage.local.set((0, f["default"])({},
                        a, b))
                },
                getAll: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return firefox.storage.local.get(null)
                },
                remove: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return firefox.storage.local.remove(a)
                },
                removeAll: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return r(this, void 0, void 0, k["default"].mark(function y() {
                        return k["default"].wrap(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (a.prev = a.next) {
                                case 0:
                                    return a.next = 2, firefox.storage.local.clear();
                                case 2:
                                case "end":
                                    return a.stop()
                            }
                        }, y, this)
                    }))
                }
            };
            var c = new t.StorageMigration("firefoxLocalStorageToExtApi", a.windowLocalStorage, a.browserStorageLocal, ["version"]),
                d = e["default"].resolve(!1),
                v = !1;
            a.ensureMigrationCompleted = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                v = !0;
                var a = n.SafePromise.createCompletionSource();
                return d = a.promise, c.ensureMigrationCompleted().then(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a.resolve(!0), e["default"].resolve(b)
                }, function(b) {
                    return a.resolve(!1), e["default"].reject(b)
                })
            };
            a.migrationAware = {
                get: b("get"),
                set: b("set"),
                getAll: b("getAll"),
                remove: b("remove"),
                removeAll: b("removeAll")
            }
        }(c.preferencesApi || (c.preferencesApi = {}))
    }, {
        "./message/bg": 179,
        "./message/content": 180,
        "./storage-migration": 182,
        "babel-runtime/core-js/object/keys": 29,
        "babel-runtime/core-js/promise": 31,
        "babel-runtime/helpers/defineProperty": 36,
        "babel-runtime/regenerator": 43,
        stdlib: 328
    }],
    185: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "about:" === document.location.protocol ? f.failover.success("index_load") : (document.body.dataset.grCSLoaded = !0, f.failover.startAppLoadTimer(), void a("./lib/app"))
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        "prod" !== a("config").getGlobal().bundleInfo.env && (b = a("./lib/console").setSeleniumCompatibility, b());
        var f = a("./lib/failover");
        a("./lib/client-script").injectClientScriptIfNeeded();
        f.failover.startPageLoadTimer();
        "loading" === document.readyState ? document.addEventListener("DOMContentLoaded", d, !1) : d()
    }, {
        "./lib/app": 186,
        "./lib/client-script": 205,
        "./lib/console": 212,
        "./lib/failover": 249,
        config: 169
    }],
    186: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a.page.domain !== G) return void v.logger.differentStateDomain(a.page.domain);
            var b = !1 === navigator.cookieEnabled;
            a.connection.cookiesDisabled !== b && K.updateConnection({
                cookiesDisabled: b
            });
            (b = h.timers.stop(C)) && !a.connection.bgNotConnected && v.logger.restoredBgConnection(b);
            H && (clearTimeout(H), H = null);
            M || f(a.page.domain, a.connection);
            a.page.enabled ? (k(a.page, a.user), J ? J.updateState(a) : J = u.Buttons((0, r["default"])({}, a, {
                app: A,
                document: document,
                actions: K
            }), O.createSocket)) : e();
            M || q.failover.success("app_load");
            M || !1 !== a.page.enabled || null != a.page.disabledDate && Date.now() - a.page.disabledDate > B && (D = new w.Notifications({
                actions: K,
                doc: document
            }), D.showReminder(), K.showDisableReminder(G));
            M = !0
        }

        function f(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            b = b.bgNotConnected;
            a.includes(x.GRAMMARLY_DOMAIN) && g.addExternalEventListeners();
            t.isSafari() && m();
            a = l.pageStyles(document);
            a.customizeElements();
            a.addDomainClass();
            q.failover.success("index_load");
            z.one("disable-on-tab", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                e();
                L && L.clear();
                L = null
            });
            b && (h.timers.start(C), v.logger.initWithoutBgConnection())
        }

        function k(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.enabledDefs,
                c = a.cardInspection;
            1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {};
            b && !L ? L = y.dictionary({
                doc: document,
                cardInspection: c
            }) : (L && L.clear(), L = null)
        }

        function m() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                "0.5" !== window.getComputedStyle(b).getPropertyValue("opacity") ?
                    e() : setTimeout(a, 200)
            }
            var b = document.createElement("div");
            document.body.appendChild(b);
            b.classList.add("grammarly-disable-indicator");
            setTimeout(a, 1E3)
        }

        function e() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            J && (J.clear(), J = null)
        }
        var r = (b = a("babel-runtime/core-js/object/assign")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        b = a("lib/console");
        var n = a("./state"),
            t = a("./util"),
            u = a("./buttons"),
            l = a("./sites"),
            g = a("./external"),
            q = a("./failover"),
            v = a("./tracking"),
            p = a("./location"),
            y = a("./dictionary"),
            z = a("./message"),
            h = a("./timers"),
            w = a("./elements/notifications"),
            x = a("lib/config");
        a = a("universal/cs/socket");
        var B = 6048E5,
            C = "init_without_bg_connection",
            G = p.getDomain(),
            A = {},
            D = void 0,
            J = void 0,
            L = void 0,
            M = void 0,
            H = setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                d({
                    connection: {
                        networkOffline: !window.navigator.onLine,
                        online: !1,
                        bgNotConnected: !0,
                        cookiesDisabled: !1 === navigator.cookieEnabled
                    },
                    user: {
                        anonymous: !0,
                        premium: !1,
                        settings: {}
                    },
                    page: {
                        enabled: !0,
                        enabledDefs: !1,
                        domain: G
                    }
                })
            }, 3E4),
            O = new a.ContentScriptSocketManager(v.logger, z),
            K = n.createAndObserve(d).actions;
        b.disableConsoleLog();
        t.isEdge() && z.emitBackground("content-script-inited", {});
        c.update = d
    }, {
        "./buttons": 189,
        "./dictionary": 214,
        "./elements/notifications": 228,
        "./external": 248,
        "./failover": 249,
        "./location": 277,
        "./message": 278,
        "./sites": 294,
        "./state": 296,
        "./test-api": 300,
        "./timers": 301,
        "./tracking": 307,
        "./util": 322,
        "babel-runtime/core-js/object/assign": 24,
        "lib/config": 211,
        "lib/console": 212,
        "universal/cs/socket": 343
    }],
    187: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.benchmark =
            function() {}
    }, {}],
    188: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = q.guid();
            e.setGRAttributes(a, b);
            a.setAttribute("gramm-ifr", "true");
            var c = a.contentDocument;
            return e.addIframeCss(c), e.setGRAttributes(c.body, b), a.style.height = a.style.height || getComputedStyle(a).height, c.body
        }
        var f = (b = a("babel-runtime/core-js/object/assign")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var k = a("react"),
            m = a("react-dom"),
            e = a("../dom"),
            r = a("../sites"),
            n = a("../editor"),
            t = a("../tracking"),
            u = a("../location"),
            l = a("../infinity-checker"),
            g = a("../elements/error-tooltip"),
            q = a("../util"),
            v = a("./pos"),
            p = a("./path"),
            y = a("./menu"),
            z = a("./state"),
            h = a("./view"),
            w = a("./popup"),
            x = a("../editor/field-type-detect");
        c.Button = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                pa = Ga.createElement("grammarly-btn");
                ha = m.findDOMNode(da());
                B();
                ya.initialized = !0;
                qa = new v.Pos({
                    btnEl: ha,
                    fieldEl: ca,
                    custom: Sa,
                    sourceEl: Ha,
                    isTextarea: "textarea" === la,
                    initCondition: ta
                }, P, aa);
                Ta = p.getWithinButtonPath({
                    editorEl: ca,
                    btnEl: ha,
                    padding: 15
                });
                ka = y.createMenu({
                    el: ha,
                    editor: ba,
                    enabled: ta,
                    user: Aa,
                    btn: ya,
                    gButtonPopup: va
                }, function(a) {
                    Ua = a;
                    F()
                });
                ma = g.createErrorTooltip({
                    el: ha,
                    win: window
                });
                ka.bind();
                e.listen(ha, "click", O, !1);
                b.on("hover", V);
                e.listen(ra, "blur", R, !1);
                V({
                    target: ra
                });
                C();
                wa.fieldParentCustomStyle && (Ka = e.setCustomCss(ca.parentNode, wa.fieldParentCustomStyle(ca)));
                wa.stopImmediatePropagationForClick && wa.stopImmediatePropagationForClick(ca) && e.listen(ca, "click", K);
                xa && ya.offline()
            }

            function B() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = {
                        "z-index": (parseInt(e.css(ca, "z-index"), 10) || 1) + 1
                    },
                    b = wa.btnCustomContainer &&
                    wa.btnCustomContainer(ca);
                b && (Sa = !0, Ha = b, (b = wa.btnCustomStyles && wa.btnCustomStyles(!0, ca)) && (0, f["default"])(a, b));
                e.insertAfter(pa, Ha);
                P(a)
            }

            function C() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (La = !0, Da = !0, Ea = !0, !ta) return void N();
                if (!Ia) {
                    Ia = !0;
                    try {
                        ba = n.createGrammarlyEditor({
                            app: ja,
                            doc: Ga,
                            connection: Ma,
                            page: za,
                            user: Aa,
                            type: la,
                            field: ca,
                            actions: sa,
                            createSocket: na
                        }), ua = l.infinityChecker(Y, ya.offline), M("on"), ba.run(), ka.updateEditor(ba), qa.set("minimize", !xa), qa.set("editor", ba)
                    } catch (Va) {
                        console.error(Va), ya.offline()
                    }
                    N();
                    va = new w.Popup({
                        doc: Ga,
                        el: ha,
                        editor: ba,
                        user: ia,
                        actions: sa,
                        notifications: ja.notifications
                    });
                    ka.setGbuttonPopup(va);
                    !ya.getState().offline && za.showOnboarding && qa.max && (va.showOnboarding(), sa.seenOnboarding());
                    if (ba && ba.emailFeedbackEnabled && !1 !== za.emailPerceptionPopupEnabled) {
                        var a = Aa.groups.includes("email_perception"),
                            b = void 0 === za.seenEmailPerceptionPopupDate,
                            c = b || 864E5 < +new Date - za.seenEmailPerceptionPopupDate;
                        (!0 === a && c || za.emailPerceptionPopupEnabled && c || !1 === a && b) && ba.on("input", L)
                    }
                    try {
                        var h = x.getFieldType(ca);
                        t.logger.initSession(u.getDomain(),
                            ia.type, h, !0)
                    } catch (Va) {}
                }
            }

            function J() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                ba.off("input", L);
                clearTimeout(Ba);
                va.showEmailPerception(ba.insertGmailFeedback, void 0 === za.seenEmailPerceptionPopupDate);
                sa.seenEmailPerceptionPopup(+new Date)
            }

            function L() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (clearTimeout(Ba), void 0 !== ba) {
                    if (!0 !== ba.emailFeedbackEnabled) return void ba.off("input", L);
                    300 < ba.getText().length && (Ba = setTimeout(J, 5E3))
                }
            }

            function M() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "on";
                ba[a]("finish", H);
                ba[a]("rendered", N);
                ba[a]("sending", ea);
                ba[a]("show-dialog",
                    S)
            }

            function H() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                S();
                N()
            }

            function O() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                ba && ba.isOffline() && ma.fastShow()
            }

            function K(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.stopImmediatePropagation()
            }

            function R(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                Ca && e.isFocused(ra) && V(a)
            }

            function P(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, f["default"])(Wa, a);
                F()
            }

            function aa() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                Na = !Q();
                Xa = !0;
                t.fire("button-change-state", Na);
                ka && ka.hide()
            }

            function U(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                xa || (ra.focus(), e.hasClass(a.target, "_e725ae-status") && ka.show(!0))
            }

            function F() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                pa || c();
                da()
            }

            function Y() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                ba.reset();
                ba.hardReset()
            }

            function da() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return m.render(k.createElement(h.ButtonComponent, {
                    state: oa(),
                    inlineStyle: Wa,
                    onViewClick: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return U(a)
                    }
                }), pa)
            }

            function V(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (!e.isFocused(ra) && Da) {
                    if (Ta(a)) return void E();
                    Da = !1
                }
                if (a.target !== ra) return W();
                var b = a.target,
                    c = ha,
                    h = ra;
                e.isFocused(h) || b === h || e.isParent(b, h) || b === c || e.isParent(b, c) ? (Da = !0, E()) : (a = a.target, 0 === a.className.indexOf("gr-") || e.resolveEl(a, "_e725ae-textarea_btn") || e.resolveEl(a, "gr__tooltip") || W())
            }

            function T() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                Ea = Ca = !0;
                ha && "0" === ha.style.opacity && (ha.style.opacity = "1");
                N()
            }

            function E() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                Ca || (ta ? T() : Ya = setTimeout(T, 150))
            }

            function W() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (Ca) {
                    if (clearTimeout(Ya),
                        ka && ka.isOpened()) return void(ha.style.opacity = "0");
                    Ea = Ca = !1;
                    N()
                }
            }

            function ea() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                xa || (clearTimeout(Ja), clearTimeout(Ja), ba && !ba.getText().trim() || Fa || (Fa = !0, ua && ua.start(), Ca || V({
                    target: ra
                }), N()))
            }

            function S() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                clearTimeout(Ja);
                ua && ua.finish();
                Ja = setTimeout(X, 200)
            }

            function X() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                Fa = !1;
                N()
            }

            function fa() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                ba && (ua && ua.finish(), Ia = !1, ba.remove(), M("off"))
            }

            function N() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = ba && ba.errorData() || {};
                a.enabled = ta;
                a.checking = Fa;
                a.anonymous = Oa;
                a.premium = Pa;
                a.user = Aa;
                a.fieldWasFocused = La;
                a.emailFeedbackEnabled = ba &&
                    ba.emailFeedbackEnabled;
                ka && ka.update(a);
                qa && qa.set("show", Ea);
                !0 === ya.initialized && F()
            }

            function Q() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return qa.max
            }

            function oa() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = ba && ba.errorData() || {};
                return {
                    offline: xa,
                    checking: Fa,
                    enabled: ta,
                    anonymous: Oa,
                    premium: Pa,
                    experiments: Aa && Aa.experiments || {},
                    show: Ea,
                    visible: Ca,
                    wasMinimized: Xa,
                    minimized: Na,
                    hovered: Ua,
                    isFieldEmpty: ab,
                    isFieldHovered: Da,
                    fieldWasFocused: La,
                    isEditorInited: Ia,
                    errors: a
                }
            }
            var ja = a.app,
                ia = a.user,
                Z = a.page,
                I = a.connection,
                ca = a.field,
                la = a.type,
                sa = a.actions,
                na = a.createSocket,
                pa = void 0,
                ha = void 0,
                ma = void 0,
                ua = void 0,
                va = void 0,
                Ba = void 0,
                Da = void 0,
                qa = void 0,
                ka = void 0,
                ba = void 0,
                Wa = {
                    visibility: "hidden"
                },
                Ga = ca.ownerDocument,
                ra = "iframe" === la ? d(ca) : ca,
                ab = 0 === (ca.value || ca.textContent || "").trim().length,
                Sa = !1,
                Ua = !1,
                Ca = !1,
                Ea = !1,
                Na = !1,
                Xa = !1,
                Ia = !1,
                La = !1,
                Aa = ia,
                za = Z,
                Ma = I,
                Oa = ia.anonymous,
                Pa = ia.premium,
                wa = r.pageStyles(Ga).getFixesForCurrentDomain(),
                bb = z.State(Z.disabledFields, sa.toggleField),
                Ha = ca,
                Fa = !1,
                xa = !Ma.online,
                ta = !0,
                Ja = void 0,
                Ta = void 0,
                Ya = void 0,
                Ka = void 0,
                Qa = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    xa !== !a && (xa = !a,
                        qa && qa.set("minimize", a), N(), ba && ba[xa ? "offline" : "online"](), ta && ma && ma[xa ? "enable" : "disable"]())
                },
                Za = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (ta !== a) {
                        var b = a && !ta;
                        b = q.isSafari() && b;
                        ta = a;
                        bb.changeFieldState(ca, Ha, !a);
                        qa && qa.set("maximize", a);
                        a ? (ka.hide(), C()) : fa();
                        N();
                        b && (ha.style.display = "none", q.asyncCall(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return ha.style.display = ""
                        }))
                    }
                },
                Ra = function $a() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    e.unlisten(ra, "focus", $a);
                    F()
                },
                ya = {
                    online: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return Qa(!0)
                    },
                    offline: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return Qa(!1)
                    },
                    enable: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return Za(!0)
                    },
                    disable: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return Za(!1)
                    },
                    remove: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        fa();
                        qa && qa.remove();
                        ka && ka.remove();
                        ka && ka.unbind();
                        va && va.remove();
                        ba && ba.off("input", L);
                        clearTimeout(Ba);
                        e.unlisten(ha, "click", O);
                        b.off("hover", V);
                        e.unlisten(ra, "focus", Ra);
                        e.unlisten(ra, "blur", R);
                        wa.stopImmediatePropagationForClick && e.unlisten(ca, "click", K);
                        ma && ma.remove();
                        Ka && Ka();
                        pa && pa.parentNode && pa.parentNode.removeChild(pa)
                    },
                    getEl: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return ha
                    },
                    getState: oa,
                    updateState: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var b = a.user,
                            c = a.connection;
                        a = a.page;
                        Oa = b.anonymous;
                        Pa = b.premium;
                        Aa = b;
                        za = a;
                        Ma = c;
                        Qa(c.online);
                        ba && ba.updateState({
                            user: b,
                            connection: c,
                            page: a
                        });
                        N()
                    },
                    getPosState: Q,
                    onViewClick: U,
                    onChangeState: aa,
                    show: E,
                    hide: W,
                    update: N,
                    checking: ea,
                    cancelChecking: S,
                    initialized: !1
                };
            e.isFocused(ra) ? Ra() : e.listen(ra, "focus", Ra, !1);
            return ya
        }
    }, {
        "../dom": 215,
        "../editor": 219,
        "../editor/field-type-detect": 218,
        "../elements/error-tooltip": 223,
        "../infinity-checker": 265,
        "../location": 277,
        "../sites": 294,
        "../tracking": 307,
        "../util": 322,
        "./menu": 191,
        "./path": 194,
        "./popup": 197,
        "./pos": 200,
        "./state": 203,
        "./view": 204,
        "babel-runtime/core-js/object/assign": 24,
        react: "react",
        "react-dom": "react-dom"
    }],
    189: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/core-js/map")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = a("../tracking"),
            k = a("../timers"),
            m = a("../page-fields"),
            e = a("./button"),
            r = a("../editor/field-type-detect"),
            n = a("../location");
        c.Buttons = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function c(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function c(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    C.set(a, e.Button({
                        field: a,
                        app: u,
                        createSocket: b,
                        user: A,
                        page: D,
                        connection: J,
                        type: c,
                        actions: x
                    }, B))
                }
                try {
                    console.log("add", a)
                } catch (H) {
                    console.log("fields added")
                }
                a.textareas.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return c(a,
                        "textarea")
                });
                a.contenteditables.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return c(a, "contenteditable")
                });
                a.iframes.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return c(a, "iframe")
                });
                a.htmlghosts.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return c(a, "htmlghost")
                });
                a.usageTracking.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    "true" !== a.gr__field_checked && (a.addEventListener("focus", p, !1), a.gr__field_checked = "true")
                })
            }

            function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (console.log("remove", a), C) {
                    var b = C.get(a);
                    b && b.remove();
                    C["delete"](a)
                }
            }

            function q() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "on";
                B && ("on" ===
                    a ? (B.on("add", c), B.on("remove", g)) : (B.off("add", c), B.off("remove", g)))
            }

            function v(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (a && G) k.timers.start("life_without_bg_connection"), f.logger.lostBgPageConnection();
                else if (!a && !G) {
                    var b = k.timers.stop("life_without_bg_connection");
                    f.logger.restoreBgPageConnection(b)
                }
                G = !a
            }

            function p(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a = a.target;
                a.removeEventListener("focus", p, !1);
                try {
                    f.logger.initSession(n.getDomain(), h.type, r.getFieldType(a), !1)
                } catch (M) {}
            }
            var u = a.app,
                t = a.connection,
                h = a.user,
                w = a.page,
                x = a.actions,
                B = m.PageFields({
                    doc: a.doc,
                    page: w
                }),
                C = new d["default"],
                G = !0,
                A = h,
                D = w,
                J = t;
            return v(t.bgNotConnected), q("on"), c(B.get()), {
                add: c,
                updateState: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    A = a.user;
                    J = a.connection;
                    D = a.page;
                    v(a.connection.bgNotConnected);
                    u.elements && u.elements.updateState(a);
                    C && C.forEach(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return b.updateState(a)
                    })
                },
                remove: g,
                clear: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    q("off");
                    C && (C.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.remove()
                    }), C.clear());
                    C = null;
                    u.elements && u.elements.clear();
                    u.elements = null;
                    B && (B.reset(), B.stop());
                    B = null
                }
            }
        }
    }, {
        "../editor/field-type-detect": 218,
        "../location": 277,
        "../page-fields": 288,
        "../timers": 301,
        "../tracking": 307,
        "./button": 188,
        "babel-runtime/core-js/map": 23
    }],
    190: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/helpers/defineProperty");
        var f = d(b);
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var k = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var m = d(b);
        b = a("babel-runtime/helpers/createClass");
        var e = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var r = d(b);
        b = a("babel-runtime/helpers/inherits");
        var n = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var t = a("react"),
            u = a("react-dom"),
            l = a("../../dom"),
            g = {
                hoverMenu: "_970ef1-hoverMenu",
                opened: "_970ef1-opened",
                btn: "_970ef1-btn",
                line: "_970ef1-line",
                panel: "_970ef1-panel",
                premium: "_970ef1-premium",
                btn_premium: "_970ef1-btn_premium",
                btn_grammarly: "_970ef1-btn_grammarly",
                anonymous: "_970ef1-anonymous",
                panelText: "_970ef1-panelText",
                critical: "_970ef1-critical",
                disabled: "_970ef1-disabled",
                referralArea: "_970ef1-referralArea",
                btn_disable: "_970ef1-btn_disable",
                initial: "_970ef1-initial",
                checking: "_970ef1-checking",
                counter: "_970ef1-counter",
                counter100: "_970ef1-counter100",
                buttonArea: "_970ef1-buttonArea",
                referralText: "_970ef1-referralText",
                feedback: "_970ef1-feedback",
                tooltip: "_970ef1-tooltip",
                tooltip_grammarly: "_970ef1-tooltip_grammarly",
                tooltip_premium: "_970ef1-tooltip_premium",
                tooltip_disable: "_970ef1-tooltip_disable",
                plus: "_970ef1-plus",
                tooltip_referral: "_970ef1-tooltip_referral",
                referral: "_970ef1-referral",
                tooltip_visible: "_970ef1-tooltip_visible",
                tooltip_hidden: "_970ef1-tooltip_hidden"
            };
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, m["default"])(this, b);
                var a = (0, r["default"])(this, (b.__proto__ || (0, k["default"])(b)).call(this));
                return a.onMouseEnterHandler = a.onMouseEnterHandler.bind(a), a.onMouseLeaveHandler = a.onMouseLeaveHandler.bind(a), a.onMouseClick = a.onMouseClick.bind(a), a
            }
            return (0, n["default"])(b, a), (0, e["default"])(b, [{
                key: "onMouseEnterHandler",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this;
                    this.tooltipTimeout = setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            a.props.data.onTooltip({
                                active: !0,
                                el: u.findDOMNode(a),
                                text: a.props.data.text,
                                cls: a.props.data.type
                            })
                        },
                        1350)
                }
            }, {
                key: "onMouseLeaveHandler",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    clearTimeout(this.tooltipTimeout);
                    this.props.data.onTooltip({
                        active: !1,
                        text: this.props.data.text,
                        cls: this.props.data.type
                    })
                }
            }, {
                key: "onMouseClick",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this.props.data.click && this.props.data.click(a);
                    "disable" === this.props.data.type && this.onMouseLeaveHandler()
                }
            }, {
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a, b = this.props.data,
                        c = l.cs((a = {}, (0, f["default"])(a, g.btn, !0), (0, f["default"])(a, g["btn_" + b.type], !0), (0, f["default"])(a, g.counter, null != b.count &&
                            0 < b.count), (0, f["default"])(a, g.counter100, null != b.count && 99 < b.count), a));
                    return t.createElement("div", {
                        className: g.buttonArea
                    }, t.createElement("div", {
                        className: c,
                        onClick: this.onMouseClick,
                        onMouseEnter: this.onMouseEnterHandler,
                        onMouseLeave: this.onMouseLeaveHandler,
                        "data-action": b.actionType,
                        tabIndex: -1
                    }, b.count && 0 < b.count ? b.count : null))
                }
            }]), b
        }(t.Component);
        c.MenuBtn = a
    }, {
        "../../dom": 215,
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/defineProperty": 36,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        react: "react",
        "react-dom": "react-dom"
    }],
    191: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/helpers/defineProperty")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = a("react"),
            k = a("react-dom"),
            m = a("lib/grammarly-editor"),
            e = a("../../dom"),
            r = a("../../position"),
            n = a("../../config"),
            t = a("lib/url"),
            u = a("../../message"),
            l = a("../../timers"),
            g =
            a("./view"),
            q = a("../../tracking"),
            v = a("../../sites");
        c.createMenu = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function c(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    F.showDialog({
                        caller: "button_hover"
                    });
                    q.fire("correct-btn-clicked");
                    l.timers.start("open_editor")
                }

                function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = m.getUpgradeUrlFromMatches({
                        baseUrl: n.URLS.upgrade,
                        returnUrl: "",
                        appType: "popup",
                        matches: F.getMatches()
                    });
                    a = t.addParamsToUpgradeURL(a, !0 === U.anonymous ? "signupHook" : "upHook", !0 === U.anonymous ? "extensionPremiumCta" : "buttonHover");
                    u.emitBackground("open-url", a)
                }
                F.isOffline() || (a = a.target,
                    e.hasClass(a, "_970ef1-btn_premium") ? T.premium ? b() : (q.fire("hook-clicked", "button_hover"), c()) : e.hasClass(a, "_970ef1-btn_grammarly") && b(), setTimeout(D, 200))
            }

            function h() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                Y.showDisable();
                D();
                x();
                q.fire("disable-button-click")
            }

            function p(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = r.getAbsRect(J),
                    c = b.top;
                b = b.left;
                var h = !L.getPosState() && T.enabled;
                return a && (b -= a.clientWidth, c -= a.clientHeight / 2), c += h ? X : ea, b -= h ? S : W, !h && O.menuPosLeft && (b = O.menuPosLeft(F, b, T)), (0, d["default"])({}, aa, "translate(" + b + "px, " + c + "px)")
            }

            function x() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = y(T, p(),
                    R);
                a = k.findDOMNode(a);
                return y(T, p(a), K)
            }

            function y(a, b, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return k.render(f.createElement(g.HoverMenuView, {
                    style: b,
                    click: c,
                    disableClick: h,
                    state: a,
                    opened: V,
                    el: P,
                    insertGmailFeedback: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        void 0 !== F && (F.insertGmailFeedback(a), L.update())
                    },
                    hide: D
                }), e)
            }

            function C() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = 0 < arguments.length && void 0 !== arguments[0] && arguments[0];
                V && !a || (e.unlisten(H.documentElement, "mousemove", G), F && F.off("iframe-mousemove", G))
            }

            function G(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = e.resolveEl(a.target, "_e725ae-textarea_btn");
                if (b && b !== J || e.hasClass(J,
                        "_e725ae-offline")) return D();
                var c = e.resolveEl(a.target, "_970ef1-hoverMenu");
                return b || c === E ? a.target.classList.contains("_e725ae-btn_text") ? D() : void A() : D()
            }

            function A() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = 0 < arguments.length && void 0 !== arguments[0] && arguments[0];
                Y && Y.isActive && "onboarding" === Y.type || (da && !T.offline && T.fieldWasFocused || a) && (V || (V = !0, b(!0), !0 === T.emailFeedbackEnabled && q.fire("email-perception-button-hover"), x()))
            }

            function D() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                V && (V = !1, b(!1), x())
            }
            var J = a.el,
                L = a.btn,
                M = a.gButtonPopup,
                H = J.ownerDocument,
                O = v.pageStyles(H).getFixesForCurrentDomain(),
                K = H.createElement("div"),
                R = H.createElement("div"),
                P = H.createElement("div"),
                aa = e.transformProp(H),
                U = a.user,
                F = a.editor,
                Y = M,
                da = !0,
                V = !1,
                T = {
                    critical: 0,
                    plus: 0,
                    offline: !1,
                    enabled: a.enabled,
                    initial: !1,
                    checking: !1,
                    fieldWasFocused: !!a.fieldWasFocused
                },
                E = k.findDOMNode(x()),
                W = -26,
                ea = 11,
                S = -13,
                X = 2;
            return e.addClass(K, "gr-top-z-index"), e.addClass(K, "gr-top-zero"), K.setAttribute("tabindex", "-1"), R.style.cssText = "visibility: hidden;top: -9999px;position: absolute;opacity: 0", P.style.cssText = "visibility: hidden;top: -9999px;position: absolute;opacity: 0",
                H.documentElement.insertBefore(K, H.body), H.documentElement.insertBefore(R, H.body), H.documentElement.insertBefore(P, H.body), {
                    show: A,
                    hide: D,
                    bind: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        e.listen(H.documentElement, "mousemove", G);
                        F && F.on("iframe-mousemove", G)
                    },
                    unbind: C,
                    remove: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        C();
                        K.parentNode && K.parentNode.removeChild(K);
                        R.parentNode && R.parentNode.removeChild(R);
                        P.parentNode && P.parentNode.removeChild(P)
                    },
                    render: x,
                    menuEl: E,
                    update: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        T = a;
                        U = a.user;
                        x()
                    },
                    onclick: c,
                    updateEditor: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        F = a
                    },
                    isOpened: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return V
                    },
                    isEnabled: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return da
                    },
                    disable: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        da = !1
                    },
                    enable: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        da = !0
                    },
                    getState: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return T
                    },
                    setGbuttonPopup: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        Y = a
                    }
                }
        }
    }, {
        "../../config": 211,
        "../../dom": 215,
        "../../message": 278,
        "../../position": 289,
        "../../sites": 294,
        "../../timers": 301,
        "../../tracking": 307,
        "./view": 193,
        "babel-runtime/helpers/defineProperty": 36,
        "lib/grammarly-editor": 258,
        "lib/url": 321,
        react: "react",
        "react-dom": "react-dom"
    }],
    192: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/helpers/defineProperty");
        var f = d(b);
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var k = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var m = d(b);
        b = a("babel-runtime/helpers/createClass");
        var e = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var r = d(b);
        b = a("babel-runtime/helpers/inherits");
        var n = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var t = a("react"),
            u = a("../../dom"),
            l = {
                hoverMenu: "_970ef1-hoverMenu",
                opened: "_970ef1-opened",
                btn: "_970ef1-btn",
                line: "_970ef1-line",
                panel: "_970ef1-panel",
                premium: "_970ef1-premium",
                btn_premium: "_970ef1-btn_premium",
                btn_grammarly: "_970ef1-btn_grammarly",
                anonymous: "_970ef1-anonymous",
                panelText: "_970ef1-panelText",
                critical: "_970ef1-critical",
                disabled: "_970ef1-disabled",
                referralArea: "_970ef1-referralArea",
                btn_disable: "_970ef1-btn_disable",
                initial: "_970ef1-initial",
                checking: "_970ef1-checking",
                counter: "_970ef1-counter",
                counter100: "_970ef1-counter100",
                buttonArea: "_970ef1-buttonArea",
                referralText: "_970ef1-referralText",
                feedback: "_970ef1-feedback",
                tooltip: "_970ef1-tooltip",
                tooltip_grammarly: "_970ef1-tooltip_grammarly",
                tooltip_premium: "_970ef1-tooltip_premium",
                tooltip_disable: "_970ef1-tooltip_disable",
                plus: "_970ef1-plus",
                tooltip_referral: "_970ef1-tooltip_referral",
                referral: "_970ef1-referral",
                tooltip_visible: "_970ef1-tooltip_visible",
                tooltip_hidden: "_970ef1-tooltip_hidden"
            };
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (0, m["default"])(this, b), (0, r["default"])(this, (b.__proto__ || (0, k["default"])(b)).apply(this, arguments))
            }
            return (0, n["default"])(b, a), (0, e["default"])(b, [{
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a, b = this.props.data || {},
                        c = this.props.measure,
                        e = u.cs((a = {}, (0, f["default"])(a, l.tooltip, !0), (0, f["default"])(a, l.tooltip_visible, b.active && !c), (0, f["default"])(a, l.tooltip_hidden, !b.active && !c), (0, f["default"])(a, l["tooltip_" + b.cls], !0), a));
                    a = void 0;
                    return b.active && !c && (a = {
                        right: 0
                    }), t.createElement("div", {
                        style: a,
                        className: e,
                        ref: "tooltip",
                        dangerouslySetInnerHTML: {
                            __html: b.text
                        }
                    })
                }
            }]), b
        }(t.Component);
        c.Tooltip = a
    }, {
        "../../dom": 215,
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/defineProperty": 36,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        react: "react"
    }],
    193: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/helpers/defineProperty");
        var f = d(b);
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var k = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var m = d(b);
        b = a("babel-runtime/helpers/createClass");
        var e = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var r = d(b);
        b = a("babel-runtime/helpers/inherits");
        var n = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var t = a("react"),
            u = a("react-dom"),
            l = a("./action"),
            g = a("./tooltip"),
            q = a("../../dom");
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, m["default"])(this, b);
                var a = (0, r["default"])(this, (b.__proto__ || (0, k["default"])(b)).apply(this, arguments));
                return a.state = {
                    tooltip: {
                        active: !1,
                        text: "",
                        cls: ""
                    }
                }, a.onTooltip = function(b) {
                    var c = u.render(t.createElement(g.Tooltip, {
                        data: b,
                        measure: !0
                    }), a.props.el);
                    setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        b.width =
                            u.findDOMNode(c).clientWidth;
                        a.setState({
                            tooltip: b
                        })
                    }, 10)
                }, a
            }
            return (0, n["default"])(b, a), (0, e["default"])(b, [{
                key: "getTooltipText",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a.enabled ? "Disable on this website" : "Enable Grammarly here"
                }
            }, {
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a, b = this,
                        c = this.props,
                        e = c.state,
                        d = e.critical,
                        p = e.plus,
                        n = q.cs((a = {}, (0, f["default"])(a, "_970ef1-hoverMenu", !0), (0, f["default"])(a, "_970ef1-initial", e.initial), (0, f["default"])(a, "_970ef1-premium", e.premium), (0, f["default"])(a, "_970ef1-anonymous", e.anonymous),
                            (0, f["default"])(a, "_970ef1-checking", e.checking), (0, f["default"])(a, "_970ef1-disabled", !1 === e.enabled), (0, f["default"])(a, "_970ef1-critical", !!d), (0, f["default"])(a, "_970ef1-plus", !!p), (0, f["default"])(a, "_970ef1-opened", c.opened), a));
                    a = e.anonymous ? "Log in to enable personalized<br/>checks and other features" : "Edit in Grammarly";
                    var v = e.premium ? "See advanced corrections" : "Upgrade to make advanced corrections",
                        u = this.getTooltipText(e);
                    return t.createElement("div", {
                        className: n,
                        style: c.style
                    }, t.createElement("div", {
                        className: "_970ef1-panel"
                    }, t.createElement(g.Tooltip, {
                        data: this.state.tooltip
                    }), t.createElement(l.MenuBtn, {
                        data: {
                            type: "disable",
                            size: "small",
                            text: u,
                            click: c.disableClick,
                            onTooltip: this.onTooltip
                        }
                    }), t.createElement("div", {
                        className: "_970ef1-line"
                    }), !0 === e.enabled && e.emailFeedbackEnabled && t.createElement("span", {
                        onClick: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b.props.insertGmailFeedback && (b.props.insertGmailFeedback(a.altKey, !1), b.props.hide())
                        },
                        className: "_970ef1-feedback"
                    }, "Ask for feedback"), p ? t.createElement(l.MenuBtn, {
                        data: {
                            type: "premium",
                            size: "small",
                            text: v,
                            count: p,
                            click: c.click,
                            onTooltip: this.onTooltip
                        }
                    }) : null, t.createElement(l.MenuBtn, {
                        data: {
                            type: "grammarly",
                            actionType: "editor",
                            size: "small",
                            text: a,
                            click: c.click,
                            count: d,
                            onTooltip: this.onTooltip
                        }
                    })))
                }
            }]), b
        }(t.Component);
        c.HoverMenuView = a
    }, {
        "../../dom": 215,
        "./action": 190,
        "./tooltip": 192,
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/defineProperty": 36,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        react: "react",
        "react-dom": "react-dom"
    }],
    194: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.getWithinButtonPath = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a = a.getBoundingClientRect();
                return {
                    height: a.height,
                    width: a.width,
                    top: a.top,
                    left: a.left
                }
            }
            var c = a.editorEl,
                d = a.btnEl,
                e = a.padding;
            return function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var f = b(c),
                    t = b(d),
                    u = t.left >= f.left && t.top >= f.top ? "se" : t.left >= f.left && t.top <= f.top ? "ne" : t.left <= f.left && t.top <= f.top ? "nw" : t.left <= f.left && t.top >=
                    f.top ? "sw" : void 0,
                    l = t.left + t.width + e,
                    g = t.left - e,
                    q = t.top + t.height + e;
                t = t.top - e;
                var v = f.left - e,
                    p = f.left + f.width + e,
                    k = f.top - e;
                f = f.top + f.height + e;
                l = p > l ? p : l;
                return "se" === u && a.x >= v && a.x <= l && a.y >= k && a.y <= q || "ne" === u && a.x >= v && a.x <= l && a.y >= t && a.y <= f || "nw" === u && a.x >= g && a.x <= p && a.y >= t && a.y <= f || "sw" === u && a.x >= g && a.x <= p && a.y >= k && a.y <= q
            }
        }
    }, {}],
    195: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/assign");
        var f = d(b);
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var k = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var m = d(b);
        b = a("babel-runtime/helpers/createClass");
        var e = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var r = d(b);
        b = a("babel-runtime/helpers/inherits");
        var n = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var t = a("react"),
            u = a("react-dom"),
            l = a("lib/dom"),
            g = a("lib/elements/signin/button");
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, m["default"])(this, b);
                var a = (0, r["default"])(this, (b.__proto__ || (0, k["default"])(b)).call(this));
                return a.cancel =
                    function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a._node ? (a._node.style.opacity = "0", a._node.addEventListener("transitionend", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            a.props.remove()
                        }, !1)) : a.props.remove()
                    }, a.state = {
                        styles: {}
                    }, a
            }
            return (0, n["default"])(b, a), (0, e["default"])(b, [{
                key: "componentDidMount",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this,
                        b = u.findDOMNode(this.refs.gButtonPopup);
                    this._requestAnimationFrame = requestAnimationFrame(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        requestAnimationFrame(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            if (b.style.setProperty("transition", "opacity 0.18s cubic-bezier(0.255,0.89,0.25,1.135),transform 0.18s cubic-bezier(0.255,0.89,0.25,1.135)",
                                    "important"), b.style.opacity = "1", b.style.transform) {
                                var a = b.style.transform.split(" ");
                                a[2] = "scale(1)";
                                b.style.transform = a.join(" ")
                            }
                        })
                    });
                    this._node = b;
                    this.setState(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return {
                            styles: a.props.styles
                        }
                    })
                }
            }, {
                key: "componentWillUnmount",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    cancelAnimationFrame(this._requestAnimationFrame)
                }
            }, {
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this,
                        b = (0, f["default"])({}, this.props.styles, {
                            transition: "none !important"
                        });
                    return t.createElement("div", {
                        ref: "gButtonPopup",
                        className: l.cs("_9d9f60-gButtonPopup",
                            "_9d9f60-disable"),
                        style: b
                    }, t.createElement("p", {
                        className: "_9d9f60-text"
                    }, "Disable Grammarly ", t.createElement("br", null), " on ", t.createElement("span", {
                        className: "_9d9f60-bold"
                    }, this.props.domain), "?"), t.createElement(g.Button, {
                        onClick: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.props.disableOnTab()
                        },
                        cls: "disable",
                        styles: {
                            width: 208
                        },
                        text: "Disable until next visit"
                    }), t.createElement(g.Button, {
                        onClick: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.props.disableSite()
                        },
                        cls: "disable",
                        styles: {
                            width: 208
                        },
                        text: "Disable Forever"
                    }), t.createElement("button", {
                        className: "_9d9f60-close",
                        onClick: this.cancel
                    }), t.createElement("button", {
                        className: "_9d9f60-link",
                        onClick: this.cancel
                    }, "keep it working"))
                }
            }]), b
        }(t.Component);
        c.DisablePopup = a
    }, {
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        "lib/dom": 215,
        "lib/elements/signin/button": 240,
        react: "react",
        "react-dom": "react-dom"
    }],
    196: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var e = d(b);
        b = a("babel-runtime/helpers/inherits");
        var r = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var n = a("react"),
            t = a("react-dom"),
            u = a("lib/dom"),
            l = a("lib/elements/signin/button"),
            g = a("lib/tracking"),
            q = {
                gButtonPopup: "_9d9f60-gButtonPopup",
                emailPerception: "_9d9f60-emailPerception",
                text: "_9d9f60-text",
                title: "_9d9f60-title",
                popupFooter: "_9d9f60-popupFooter",
                onboarding: "_9d9f60-onboarding",
                emailPerceptionFlipped: "_9d9f60-emailPerceptionFlipped",
                isFliped: "_9d9f60-isFliped",
                secondary: "_9d9f60-secondary",
                firstTime: "_9d9f60-firstTime",
                disable: "_9d9f60-disable",
                link: "_9d9f60-link",
                bold: "_9d9f60-bold",
                close: "_9d9f60-close"
            };
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, k["default"])(this, b);
                var a = (0,
                    e["default"])(this, (b.__proto__ || (0, f["default"])(b)).call(this));
                return a.cancel = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a.props.remove();
                    g.fire("email-perception-popup-cancel", a.props.isFirstShown)
                }, a.disable = function() {
                    a.props.disableEmailPerceptionPopup();
                    a.cancel();
                    g.fire("email-perception-disable-click", a.props.isFirstShown)
                }, a.learnMore = function() {
                    a.props.remove();
                    g.fire("email-perception-learn-more-click")
                }, a.state = {
                    styles: {}
                }, a
            }
            return (0, r["default"])(b, a), (0, m["default"])(b, [{
                key: "componentDidMount",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a =
                        this,
                        b = t.findDOMNode(this.refs.gButtonPopup);
                    this._requestAnimationFrame = requestAnimationFrame(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (b.style.opacity = "1", b.style.transform) {
                            var a = b.style.transform.split(" ");
                            a[2] = "scale(1)";
                            b.style.transform = a.join(" ")
                        }
                    });
                    this.setState(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return {
                            styles: a.props.styles
                        }
                    });
                    g.fire("email-perception-popup-show", this.props.isFirstShown)
                }
            }, {
                key: "componentWillUnmount",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    cancelAnimationFrame(this._requestAnimationFrame)
                }
            }, {
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this,
                        b = u.cs(q.gButtonPopup,
                            q[this.props.type]),
                        c = "emailPerception" === this.props.type ? "Don\u2019t show this again" : "Don\u2019t show again";
                    return n.createElement("div", {
                        ref: "gButtonPopup",
                        className: b,
                        style: this.state.styles
                    }, n.createElement("p", {
                        className: q.title
                    }, "What do your readers think?"), n.createElement("p", {
                        className: q.text
                    }, "Ask the recipients if your message is concise and easy to read."), n.createElement(l.Button, {
                        onClick: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            a.props.isFirstShown && a.props.enableEmailPerceptionPopup();
                            a.props.insertGmailFeedback(!1,
                                a.props.isFirstShown)
                        },
                        cls: "onboarding",
                        styles: {
                            width: "180px"
                        },
                        text: "Ask for feedback"
                    }), !0 === this.props.isFirstShown ? n.createElement("a", {
                        className: u.cs(q.secondary, q.firstTime),
                        href: "https://www.grammarly.com/email-perception",
                        target: "_blank",
                        onClick: this.learnMore
                    }, "Learn more") : n.createElement("button", {
                        className: u.cs(q.secondary),
                        onClick: this.disable
                    }, c), n.createElement("button", {
                        className: q.close,
                        onClick: this.cancel
                    }), n.createElement("div", {
                        className: u.cs(q.popupFooter, this.props.isFlipped &&
                            q.isFliped)
                    }, "\u25b2"))
                }
            }]), b
        }(n.Component);
        c.EmailPerceptionPopup = a
    }, {
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        "lib/dom": 215,
        "lib/elements/signin/button": 240,
        "lib/tracking": 307,
        react: "react",
        "react-dom": "react-dom"
    }],
    197: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/helpers/defineProperty");
        var f = d(b);
        b = a("babel-runtime/core-js/object/assign");
        var k = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var m = d(b);
        b = a("babel-runtime/helpers/createClass");
        var e = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var r = a("react"),
            n = a("react-dom"),
            t = a("./onboarding"),
            u = a("./email-perception"),
            l = a("./disable"),
            g = a("lib/position"),
            q = a("lib/location"),
            v = a("lib/dom"),
            p = a("../../tracking"),
            y = a("lib/message"),
            z = {
                onboarding: {
                    height: 170,
                    left: 329,
                    top: 162,
                    topFlip: 35
                },
                emailPerception: {
                    height: 292,
                    left: -45,
                    top: 250,
                    topFlip: 0
                },
                emailPerceptionFlipped: {
                    height: 170,
                    left: 329,
                    top: 162,
                    topFlip: 35
                },
                disable: {
                    height: 232,
                    left: 248,
                    top: 209,
                    topFlip: -1
                }
            };
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = this,
                    h = b.doc,
                    e = b.el,
                    d = b.editor,
                    p = b.user,
                    l = b.actions;
                b = b.notifications;
                (0, m["default"])(this, a);
                this._getStyles = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = g.getAbsRect(c.el),
                        h = b.top,
                        e = b.left;
                    b = v.transformProp(c._doc);
                    e -= c._offsets.left;
                    h = c._isFlipped ? h + c._offsets.topFlip : h - c._offsets.top;
                    a = a ? "scale(.7)" : "scale(1)";
                    return (0, k["default"])({}, (0, f["default"])({},
                        b, "translate(" + e + "px, " + h + "px) " + a))
                };
                this._windowResize = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = c._getStyles();
                    c._component.setState(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return {
                            styles: a
                        }
                    })
                };
                this._doc = h;
                this.el = e;
                this.editorId = d.id;
                this.editor = d;
                this.user = p;
                this.actions = l;
                null !== b && (this._notifications = b)
            }
            return (0, e["default"])(a, [{
                    key: "_openDialog",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this.hide();
                        y.emitFocusedTab("show-dialog", {
                            data: {},
                            editorId: this.editorId,
                            user: this.user,
                            isOnboarding: !0
                        })
                    }
                }, {
                    key: "_checkContainer",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this._container || (this._container =
                            this._doc.createElement("gbutton-popup"), this._doc.documentElement.appendChild(this._container))
                    }
                }, {
                    key: "showOnboarding",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this._show("onboarding")
                    }
                }, {
                    key: "showEmailPerception",
                    value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this._show("emailPerception");
                        this._insertEmailFeedback = a;
                        this._showFirstTime = b
                    }
                }, {
                    key: "showDisable",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this._show("disable")
                    }
                }, {
                    key: "_show",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var b = this,
                            c = this.el.getBoundingClientRect();
                        (this.type = a, this._offsets = z[a], "emailPerception" === a) && 250 > window.outerWidth -
                            this.el.getBoundingClientRect().right && (this.type = "emailPerceptionFlipped", this._offsets = z[this.type]);
                        "emailPerception" !== a && (this._isFlipped = c.top < this._offsets.height);
                        "disable" === a ? this._render() : this._showTimeout = setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return b._render()
                        }, 700);
                        this.isActive = !0;
                        v.listen(window, "resize", this._windowResize, !1)
                    }
                }, {
                    key: "hide",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this.isActive = !1;
                        this._container && n.unmountComponentAtNode(this._container);
                        v.unlisten(window, "resize", this._windowResize, !1);
                        clearTimeout(this._showTimeout)
                    }
                },
                {
                    key: "_render",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = this,
                            b = void 0;
                        this._checkContainer();
                        b = this._getStyles(!0);
                        var c = q.getDomain();
                        switch (this.type) {
                            case "onboarding":
                                b = r.createElement(t.OnboardingPopup, {
                                    isFlipped: this._isFlipped,
                                    styles: b,
                                    openOnboardingDialog: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        return a._openDialog()
                                    },
                                    remove: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        return a.hide()
                                    }
                                });
                                break;
                            case "disable":
                                b = r.createElement(l.DisablePopup, {
                                    domain: c,
                                    styles: b,
                                    remove: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        return a.hide()
                                    },
                                    disableOnTab: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        a.actions.disableOnTab();
                                        p.fire("disable-until-next-visit");
                                        a.remove();
                                        a._notifications.showDisableOnTab()
                                    },
                                    disableSite: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        a.actions.toggleSite(!1, c);
                                        p.fire("checking-toggled", {
                                            enabled: !1,
                                            placement: "gButton"
                                        });
                                        a.remove();
                                        a._notifications.showDisable()
                                    }
                                });
                                break;
                            case "emailPerception":
                            case "emailPerceptionFlipped":
                                b = r.createElement(u.EmailPerceptionPopup, {
                                    isFlipped: this._isFlipped,
                                    type: this.type,
                                    styles: b,
                                    remove: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        return a.hide()
                                    },
                                    insertGmailFeedback: function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        a.remove();
                                        a._insertEmailFeedback(b, c)
                                    },
                                    disableEmailPerceptionPopup: this.actions.disableEmailPerceptionPopup,
                                    enableEmailPerceptionPopup: this.actions.enableEmailPerceptionPopup,
                                    isFirstShown: this._showFirstTime
                                });
                                break;
                            default:
                                return void console.error("Error: unsupported type of gButton popup")
                        }
                        this._component = n.render(b, this._container)
                    }
                }, {
                    key: "remove",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        this.hide();
                        this._container && n.unmountComponentAtNode(this._container);
                        this._container && this._container.parentNode && this._container.parentNode.removeChild(this._container)
                    }
                }
            ]), a
        }();
        c.Popup = a
    }, {
        "../../tracking": 307,
        "./disable": 195,
        "./email-perception": 196,
        "./onboarding": 198,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/defineProperty": 36,
        "lib/dom": 215,
        "lib/location": 277,
        "lib/message": 278,
        "lib/position": 289,
        react: "react",
        "react-dom": "react-dom"
    }],
    198: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var e = d(b);
        b = a("babel-runtime/helpers/inherits");
        var r = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var n = a("react"),
            t = a("react-dom"),
            u = a("lib/dom"),
            l = a("lib/elements/signin/button"),
            g = a("lib/tracking");
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, k["default"])(this, b);
                var a = (0, e["default"])(this, (b.__proto__ || (0, f["default"])(b)).call(this));
                return a.cancel = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.props.remove();
                        g.fire("onboarding-popup-cancel")
                    }, a.state = {
                        styles: {}
                    },
                    a
            }
            return (0, r["default"])(b, a), (0, m["default"])(b, [{
                    key: "componentDidMount",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = this,
                            b = t.findDOMNode(this.refs.gButtonPopup);
                        this._requestAnimationFrame = requestAnimationFrame(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            if (b.style.opacity = "1", b.style.transform) {
                                var a = b.style.transform.split(" ");
                                a[2] = "scale(1)";
                                b.style.transform = a.join(" ")
                            }
                        });
                        this.setState(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return {
                                styles: a.props.styles
                            }
                        });
                        g.fire("onboarding-popup-show")
                    }
                }, {
                    key: "componentWillUnmount",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        cancelAnimationFrame(this._requestAnimationFrame)
                    }
                },
                {
                    key: "render",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = this;
                        return n.createElement("div", {
                            ref: "gButtonPopup",
                            className: u.cs("_9d9f60-gButtonPopup", "_9d9f60-onboarding"),
                            style: this.state.styles
                        }, n.createElement("p", {
                            className: "_9d9f60-title"
                        }, "Grammarly is Now Active"), n.createElement("p", {
                            className: "_9d9f60-text"
                        }, "Want to see how it works?"), n.createElement(l.Button, {
                            onClick: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return a.props.openOnboardingDialog()
                            },
                            cls: "onboarding",
                            styles: {
                                width: "180px"
                            },
                            text: "take a quick tour"
                        }), n.createElement("button", {
                            className: "_9d9f60-link",
                            onClick: this.cancel
                        }, "No, thanks"), n.createElement("div", {
                            className: u.cs("_9d9f60-popupFooter", this.props.isFlipped && "_9d9f60-isFliped")
                        }, "\u25b2"))
                    }
                }
            ]), b
        }(n.Component);
        c.OnboardingPopup = a
    }, {
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        "lib/dom": 215,
        "lib/elements/signin/button": 240,
        "lib/tracking": 307,
        react: "react",
        "react-dom": "react-dom"
    }],
    199: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/helpers/classCallCheck")) && b.__esModule ? b : {
                "default": b
            },
            f = (b = a("babel-runtime/helpers/createClass")) && b.__esModule ? b : {
                "default": b
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var k = a("lib/sites"),
            m = a("./intersect");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, d["default"])(this, a);
                this._check = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return b && a !== b ? b : void 0
                }
            }
            return (0, f["default"])(a, [{
                key: "getStateIfChanged",
                value: function(a, b, c, e, d, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var g = a.minimize;
                    a = a.maximize;
                    d = d || 0;
                    var l = k.pageStyles(b.ownerDocument).getFixesForCurrentDomain();
                    f = f ? "maximize" : "minimize";
                    if (g || a) {
                        if (l.forceMinimize && l.forceMinimize(e) || g && !a) return this._check(f, "minimize");
                        if (!c || !g && a) return this._check(f, "maximize");
                        e = void 0;
                        m.getIntersect(b, c) && d && 0 < d && (this.textLengthWhenMinimized = d, e = "minimize");
                        b = this.textLengthWhenMinimized && 200 < this.textLengthWhenMinimized - d;
                        return e = !this.textLengthWhenMinimized || b || 0 === d ? "maximize" : "minimize", this._check(f, e)
                    }
                }
            }]), a
        }();
        c.Minimizer =
            a
    }, {
        "./intersect": 201,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "lib/sites": 294
    }],
    200: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/helpers/classCallCheck")) && b.__esModule ? b : {
                "default": b
            },
            f = (b = a("babel-runtime/helpers/createClass")) && b.__esModule ? b : {
                "default": b
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var k = a("lodash"),
            m = a("lib/window-events"),
            e = a("lib/util"),
            r = a("lib/dom"),
            n = a("./position"),
            t = a("./condition");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(b, c, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var g = b.btnEl,
                    p = b.fieldEl,
                    l = b.sourceEl,
                    q = b.custom,
                    h = b.isTextarea;
                b = b.initCondition;
                var w = this;
                (0, d["default"])(this, a);
                this._onPosUpdate = c;
                this._onStateChange = f;
                this.state = {
                    minimize: !1,
                    maximize: !0,
                    editor: null,
                    show: !1
                };
                this.max = !0;
                this.windowEvents = {
                    paste: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return w.debouncedUpdate()
                    },
                    resize: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return w.update()
                    },
                    keyup: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        r.isFocused(w.fieldEl) && w.debouncedUpdate()
                    }
                };
                this.checkResize = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    try {
                        w.position && w.position.resize() && w.debouncedUpdate()
                    } catch (x) {
                        console.error(x), e.cancelInterval(w.checkResize)
                    }
                };
                this.debouncedUpdate = k.debounce(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return w.update()
                }, 50);
                this.update = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (w.state.show && w.position) {
                        w._onPosUpdate({
                            visibility: "hidden"
                        });
                        w._onPosUpdate(w.position.get(w.max));
                        var a = w.state.editor;
                        if (a) {
                            var b = a.ghostarea ? a.ghostarea.gh.clone.firstChild : w.fieldEl;
                            a = a.getText().trim().length;
                            b = w.minimizer && w.minimizer.getStateIfChanged(w.state, w.btnEl, b, w.fieldEl, a, w.max);
                            "undefined" != typeof b && (w.max = "maximize" === b, w._onStateChange(), w.update())
                        }
                    }
                };
                this.remove = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    w.listeners("off");
                    w.minimizer = null;
                    w.position && w.position.remove();
                    w.position = null
                };
                this.fieldEl = p;
                this.btnEl = g;
                this.max = b;
                this.state.minimize = !b;
                this.state.maximize = b;
                this.position = n.createPositioner(g, l, q, h);
                this.minimizer = new t.Minimizer;
                this.listeners()
            }
            return (0, f["default"])(a, [{
                key: "set",
                value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this.state[a] = b;
                    this.update()
                }
            }, {
                key: "listeners",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    "on" === (0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "on") ? (m.on(this.windowEvents, null, !0), r.on.call(this.fieldEl, "scroll", this.debouncedUpdate),
                        e.interval(this.checkResize, 200)) : (m.off(this.windowEvents, null, !0), r.off.call(this.fieldEl, "scroll", this.debouncedUpdate), e.cancelInterval(this.checkResize))
                }
            }]), a
        }();
        c.Pos = a
    }, {
        "./condition": 199,
        "./position": 202,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "lib/dom": 215,
        "lib/util": 322,
        "lib/window-events": 323,
        lodash: "lodash"
    }],
    201: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = document.body.scrollTop;
            return k && (0, f["default"])(document.querySelectorAll(".gr-evade")).forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.parentElement &&
                    a.parentElement.removeChild(a)
            }), a.map(function(a) {
                return {
                    top: a.top + c,
                    bottom: a.bottom + c,
                    left: a.left,
                    width: a.width,
                    height: a.height
                }
            }).some(function(a) {
                if (k) {
                    var c = document.createElement("div");
                    c.className = "gr-evade";
                    c.style.top = a.top + "px";
                    c.style.left = a.left + "px";
                    c.style.height = a.height + "px";
                    c.style.width = a.width + "px";
                    c.style.position = "absolute";
                    c.style.border = "1px dashed red";
                    c.style.zIndex = "1000000";
                    c.style.pointerEvents = "none";
                    document.body.appendChild(c)
                }
                return a.left + a.width > b.left && (a.bottom >
                    b.top && a.bottom < b.bottom || a.top < b.bottom && a.top > b.top)
            })
        }
        var f = (a = a("babel-runtime/core-js/array/from")) && a.__esModule ? a : {
            "default": a
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var k = !1;
        c.getIntersect = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 0,
                e = a.getBoundingClientRect();
            if (!e) return !1;
            e = {
                top: e.top + document.body.scrollTop - 2 + c,
                bottom: e.bottom + document.body.scrollTop + 2 + c,
                left: e.left - 2 + c,
                width: e.width,
                height: e.height
            };
            c = document.createRange();
            c.selectNodeContents(b);
            var t = b.clientWidth;
            c = (0, f["default"])(c.getClientRects()).filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.width < t
            });
            return d(c, e)
        }
    }, {
        "babel-runtime/core-js/array/from": 19
    }],
    202: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/helpers/defineProperty");
        var f = d(b);
        b = a("babel-runtime/helpers/slicedToArray");
        var k = d(b);
        b = a("babel-runtime/core-js/object/assign");
        var m = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = a("lib/sites"),
            r = a("lib/position"),
            n = a("lib/dom");
        c.createPositioner =
            function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (!h) {
                        x = (0, m["default"])({
                            offsetHeight: b.offsetHeight,
                            clientWidth: b.clientWidth,
                            clientHeight: b.clientHeight
                        }, n.compStyle(b, "border-bottom-width", "border-right-width", "resize", "padding-top", "padding-bottom", "overflowX", "overflow", "padding-right"), r.getAbsRect(b));
                        x.canBeResized = ["both", "horizontal", "vertical"].includes(x.resize);
                        var c = r.getAbsRect(a),
                            e = c.top;
                        x.left += B - c.left;
                        x.top += C - e;
                        q || "scroll" === x.overflowX || "scroll" === x.overflow || (x.height = Math.max(x.height, x.offsetHeight))
                    }
                }
                var d = 2 < arguments.length && void 0 !== arguments[2] && arguments[2],
                    q = 3 < arguments.length && void 0 !== arguments[3] && arguments[3],
                    v = n.transitionEndEventName(),
                    p = a.ownerDocument,
                    u = n.transformProp(p),
                    t = e.pageStyles(p).getFixesForCurrentDomain(),
                    h = !1,
                    w = r.getPos(b, void 0),
                    x = void 0,
                    B = 0,
                    C = 0,
                    G = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        h = !1;
                        c()
                    };
                return n.on.call(a, v, G), c(), {
                    get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0],
                            e = {
                                visibility: ""
                            };
                        if (d) return (0, m["default"])(e, t.btnCustomStyles ? t.btnCustomStyles(a, b) : {});
                        c();
                        var p = !a && x.canBeResized ? -10 : 0,
                            g = 25 > x.clientHeight;
                        var l = a ? g ? ((a ? 22 : 8) - x.height) / 2 : -8 : 0;
                        if (a) var q = 0;
                        else q = parseInt(x["padding-right"], 10), q = 0 < q ? -q / 2 + 2 : -5;
                        l += q;
                        g = a || g ? 0 : -7;
                        a = a ? 22 : 8;
                        q = t.btnDiff ? t.btnDiff(b) : [0, 0];
                        var v = (0, k["default"])(q, 2);
                        q = v[0];
                        v = v[1];
                        q = x.left + x.width - parseInt(x["border-right-width"], 10) - a + l + q;
                        p = x.top + x.height - parseInt(x["border-bottom-width"], 10) - a + l + g + v + p;
                        return q === B && p === C ? e : ((0, m["default"])(e, u ? (0, f["default"])({}, u, "translate(" + q + "px, " + p + "px)") : {}), h = !0, B = q, C = p, e)
                    },
                    resize: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = r.getPos(b, void 0),
                            c = a.x !== w.x || a.y !== w.y;
                        return !(x.clientWidth === b.clientWidth && x.clientHeight === b.clientHeight && !c) && (w = a, !0)
                    },
                    remove: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        n.off.call(a, v, G)
                    }
                }
            }
    }, {
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/helpers/defineProperty": 36,
        "babel-runtime/helpers/slicedToArray": 40,
        "lib/dom": 215,
        "lib/position": 289,
        "lib/sites": 294
    }],
    203: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/helpers/defineProperty")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = a("../sites");
        c.State = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var e = f.pageStyles(a.ownerDocument).getFixesForCurrentDomain();
                if (e = e.fieldStateForDomain && e.fieldStateForDomain(a)) return e;
                a = (e = c && "IFRAME" === c.tagName) ? c : a;
                var d = [a.getAttribute("id") || "", a.getAttribute("name") || ""].filter(Boolean);
                return d.length || d.push(a && a.id ? '//*[@id="' + a.id + '"]' : b(a)), e && d.push(c.ownerDocument.location.host || ""), d.join(":")
            }

            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var b = []; a && 1 === a.nodeType; a = a.parentNode) {
                    for (var c = 0, e = a.previousSibling; e; e =
                        e.previousSibling) e.nodeType !== Node.DOCUMENT_TYPE_NODE && e.nodeName === a.nodeName && ++c;
                    e = a.nodeName.toLowerCase();
                    b.splice(0, 0, e + (c ? "[" + (c + 1) + "]" : ""))
                }
                return b.length ? "/" + b.join("/") : null
            }
            var c = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
                r = arguments[1];
            return {
                getSelector: a,
                isFieldDisabled: function(b, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b = a(b, e);
                    return c[b]
                },
                changeFieldState: function(b, e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b = a(b, e);
                    c[b] !== f && r((0, d["default"])({}, b, f))
                }
            }
        }
    }, {
        "../sites": 294,
        "babel-runtime/helpers/defineProperty": 36
    }],
    204: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a &&
                a.__esModule ? a : {
                    "default": a
                }
        }
        b = a("babel-runtime/helpers/defineProperty");
        var f = d(b);
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var k = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var m = d(b);
        b = a("babel-runtime/helpers/createClass");
        var e = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var r = d(b);
        b = a("babel-runtime/helpers/inherits");
        var n = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var t = a("lodash"),
            u = a("react"),
            l = a("../dom"),
            g = a("../util");
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (0,
                    m["default"])(this, b), (0, r["default"])(this, (b.__proto__ || (0, k["default"])(b)).apply(this, arguments))
            }
            return (0, n["default"])(b, a), (0, e["default"])(b, [{
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a, b = this,
                        c = this.props.state,
                        e = c.anonymous,
                        d = c.premium,
                        q = c.errors.critical,
                        v = 0 < q && !c.checking,
                        n = !c.enabled,
                        k = c.offline;
                    c = t(["_e725ae-textarea_btn"]).push(l.cs((a = {}, (0, f["default"])(a, "_e725ae-show", c.show), (0, f["default"])(a, "_e725ae-minimized", c.minimized), (0, f["default"])(a, "_e725ae-minimize_transition", c.wasMinimized),
                        (0, f["default"])(a, "_e725ae-errors", v), (0, f["default"])(a, "_e725ae-has_errors", 0 < q), (0, f["default"])(a, "_e725ae-errors_100", 99 < q), (0, f["default"])(a, "_e725ae-offline", k), (0, f["default"])(a, "_e725ae-checking", c.checking && !k && !n), (0, f["default"])(a, "_e725ae-disabled", n), (0, f["default"])(a, "_e725ae-plus_only", d && !v && 0 < c.errors.plus), (0, f["default"])(a, "_e725ae-anonymous", e), (0, f["default"])(a, "_e725ae-hovered", c.hovered), (0, f["default"])(a, "_e725ae-field_hovered", c.isFieldHovered), (0, f["default"])(a,
                            "_e725ae-not_focused", !c.fieldWasFocused), a))).join(" ");
                    a = l.camelizeAttrs(this.props.inlineStyle);
                    v = v && q ? q : "\u00a0";
                    e = "Found " + q + " " + g.declension(q, ["error", "errors"]) + " in text";
                    return q || (e = "Protected by Grammarly"), u.createElement("div", {
                        onClick: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return b.props.onViewClick(a)
                        },
                        style: a,
                        className: c
                    }, u.createElement("div", {
                        className: "_e725ae-transform_wrap"
                    }, u.createElement("div", {
                        title: e,
                        className: "_e725ae-status"
                    }, v)))
                }
            }]), b
        }(u.Component);
        c.ButtonComponent = a
    }, {
        "../dom": 215,
        "../util": 322,
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/defineProperty": 36,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        lodash: "lodash",
        react: "react"
    }],
    205: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return k.isFacebookSite() ? m.facebookRewriteFunction : k.isJiraSite() ? e.jiraRewriteFunction : k.isBlackboardSite() ? r.blackboardRewriteFunction : null
        }

        function f(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var e = a.createElement("script");
            c = c || [];
            b = b.toString();
            c = c.join(",");
            return e.innerHTML = "(function(){(" + b + ")(" + c + ") })()", a.documentElement.appendChild(e), e
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var k = a("lib/location"),
            m = a("./scripts/facebook"),
            e = a("./scripts/jira"),
            r = a("./scripts/blackboard");
        c.getClientScriptFunction = d;
        c.injectClientScriptIfNeeded = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = d();
            a && f(document, a, [])
        };
        c.addScript = f
    }, {
        "./scripts/blackboard": 207,
        "./scripts/facebook": 208,
        "./scripts/jira": 210,
        "lib/location": 277
    }],
    206: [function(a, b,
        c) {
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("dompurify"),
            f = a("./index"),
            k = a("./scripts/inner-html");
        c.rewriteInnerHTML = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if ("TEXTAREA" !== a.tagName) try {
                var b = a.ownerDocument,
                    c = d.sanitize(a.getAttribute("data-gramm_id"));
                return f.addScript(b, k.rewriteInnerHTML, ["document.querySelector(\"[data-gramm_id='" + c + "']\")"])
            } catch (n) {
                return void console.log("error rewrite " + n)
            }
        }
    }, {
        "./index": 205,
        "./scripts/inner-html": 209,
        dompurify: "dompurify"
    }],
    207: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c,
            "__esModule", {
                value: !0
            });
        c.blackboardRewriteFunction = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 10;
                if (a) {
                    for (; a && a !== document.body && !b(a) && 0 < c;) a = a.parentElement, c--;
                    return a && b(a)
                }
            }

            function b(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a(b, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a.classList && a.classList.contains("editor-element")
                })
            }
            var c = 0,
                m = 0;
            document.addEventListener("blur", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var e = a.target,
                    d = a.relatedTarget || a.explicitOriginalTarget || document.elementFromPoint(c, m);
                d && e && b(e) && "function" == typeof d.matches &&
                    d.matches("grammarly-card, grammarly-card *, .gr-top-zero, .gr-top-zero *") && (a.stopImmediatePropagation(), a = d && d.getAttribute("data-action"), "editor" !== a && "login" !== a && e.focus())
            }, !0);
            document.addEventListener("DOMContentLoaded", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                document.addEventListener("mousemove", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    c = a.clientX;
                    m = a.clientY
                }, !0)
            })
        }
    }, {}],
    208: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.facebookRewriteFunction = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = {
                        target: document.activeElement,
                        _inherits_from_prototype: !0,
                        defaultPrevented: !1,
                        preventDefault: function() {}
                    },
                    c;
                for (c in a) b[c] = a[c];
                return b
            }

            function b(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (a = c[a]) && a.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a(b)
                })
            }
            var c = {};
            document.addEventListener("document-paste-activeElement-gr", function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b("paste", a({
                    clipboardData: {
                        getData: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return c.detail || ""
                        },
                        items: ["text/plain"]
                    }
                }))
            });
            document.addEventListener("document-mousedown-mouseup-activeElement-gr", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b("mousedown", a({
                    type: "mousedown"
                }));
                b("mouseup", a({
                    type: "mouseup"
                }))
            });
            document.addEventListener("document-backspace-activeElement-gr",
                function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b("keydown", a({
                        keyCode: 8,
                        which: 8,
                        charCode: 0,
                        type: "keydown"
                    }))
                });
            var m = document.addEventListener.bind(document);
            document.addEventListener = function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var e = c[a] || [];
                e.push(b);
                c[a] = e;
                m(a, b, d)
            }
        }
    }, {}],
    209: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.rewriteInnerHTML = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (a) try {
                    var b = a.querySelectorAll(".gr_"),
                        c = b.length;
                    for (a = 0; a < c; a++) {
                        var e = b[a];
                        if (e.parentNode)
                            if (1 < e.childNodes.length) {
                                for (var d = document.createDocumentFragment(); 0 < e.childNodes.length;) d.appendChild(e.childNodes[0]);
                                e.parentNode.replaceChild(d, e)
                            } else e.firstChild ? e.parentNode.replaceChild(e.firstChild, e) : e.parentNode.removeChild(e)
                    }
                } catch (l) {}
            }

            function c(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                try {
                    Object.defineProperty(a, "innerHTML", {
                        get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            try {
                                var c = a.ownerDocument.createRange();
                                c.selectNodeContents(a);
                                var e = c.cloneContents(),
                                    d = document.createElement("div");
                                return d.appendChild(e), b(d), d.innerHTML
                            } catch (u) {
                                return ""
                            }
                        },
                        set: function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            try {
                                var c = a.ownerDocument.createRange();
                                c.selectNodeContents(a);
                                c.deleteContents();
                                var e = c.createContextualFragment(b);
                                a.appendChild(e)
                            } catch (u) {}
                        }
                    })
                } catch (r) {}
            }
            if (a) {
                var d = a.cloneNode;
                a.cloneNode = function(e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    e = d.call(a, e);
                    if (a.classList.contains("mceContentBody")) e.innerHTML = a.innerHTML, b(e);
                    else try {
                        c(e)
                    } catch (r) {}
                    return e
                };
                c(a)
            }
        }
    }, {}],
    210: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.jiraRewriteFunction = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {},
                    c = document.createEvent("CustomEvent");
                c.initCustomEvent(a + "-gr", !0, !0, b);
                document.dispatchEvent(c)
            }

            function b(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 10;
                if (a) {
                    for (; a && a !== document.body && !b(a) && 0 < c;) a = a.parentElement, c--;
                    return a && b(a)
                }
            }

            function c(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b(a, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a.classList && (a.classList.contains("inline-edit-fields") || a.classList.contains("editable-field"))
                })
            }

            function m(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = a.target,
                    d = a.relatedTarget || a.explicitOriginalTarget || document.elementFromPoint(e, r);
                d && b && c(b) && "function" == typeof d.matches && d.matches("grammarly-card, grammarly-card *,.gr-top-zero, .gr-top-zero *,[class*=-gButtonPopup], [class*=-gButtonPopup] *,[class*=-onboardingDialog], [class*=-onboardingDialog] *") &&
                    (a.stopImmediatePropagation(), a = d && d.getAttribute("data-action"), "editor" !== a && "login" !== a && b.focus())
            }
            var e = 0,
                r = 0;
            document.addEventListener("blur", m, !0);
            document.addEventListener("DOMContentLoaded", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                "jira" === document.body.id && document.body.getAttribute("data-version") || document.querySelector("input[type=hidden][title=JiraVersion]") ? (a("jira-inline-support", {
                    activated: !0
                }), document.addEventListener("mousemove", function(a) {
                    e = a.clientX;
                    r = a.clientY
                }, !0)) : (a("jira-inline-support", {
                        activated: !1
                    }),
                    document.removeEventListener("blur", m, !0))
            })
        }
    }, {}],
    211: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b = (b = a("babel-runtime/helpers/toConsumableArray")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("spark-md5"),
            f = a("config");
        a = a("./newConfig");
        c.isTestsMode = a.isTestsMode;
        c.getVersion = a.getVersion;
        c.getUuid = a.getUuid;
        c.ENV = a.ENV;
        c.URLS = a.URLS;
        c.GRAMMARLY_DOMAIN = a.GRAMMARLY_DOMAIN;
        c.appName = a.appName;
        c.gnarAppName = a.gnarAppName;
        c.GNAR = f.getGlobal().appConfig.gnar;
        c.news = ["The G logo gets out of the way when you're typing",
            "Switch between American and British English", "Quickly disable checking in certain types of text fields", "A fully redesigned and improved interface"
        ];
        c.newsId = c.news.length && d.hash(c.news.join("\n"));
        c.userFields = "id email firstName anonymous type subscriptionFree experiments isTest premium settings registrationDate mimic groups extensionInstallDate fixed_errors referral".split(" ");
        c.userFields.push("token");
        c.nextVerClass = "gr_ver_2";
        c.grammarlyAttrs = ["data-gramm_editor", "data-gramm", "data-gramm_id",
            "gramm_editor"
        ];
        c.restrictedAttrs = [].concat((0, b["default"])(c.grammarlyAttrs), ["readonly", "disabled"]);
        c.customFieldsRestrictedAttrs = ["pm-container", ["class", "ProseMirror"], "data-synchrony", ["data-gramm", "false"],
            ["class", "redactor-layer"],
            ["class", "redactor-editor"],
            ["class", "ck-editor__editable"],
            ["class", "redactor_box"],
            ["aria-label", "Search Facebook"]
        ];
        c.allRestrictedAttrs = [].concat((0, b["default"])(c.restrictedAttrs), (0, b["default"])(c.customFieldsRestrictedAttrs));
        c.restrictedParentAttrs = "[data-reactid]";
        c.externalEvents = "changed-user changed-plan changed-dialect cleanup editor-fix enable-email-perception".split(" ");
        c.development = "127.0.0.1:3117" === document.location.host
    }, {
        "./newConfig": 279,
        "babel-runtime/helpers/toConsumableArray": 41,
        config: 169,
        "spark-md5": "spark-md5"
    }],
    212: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            e.on("bg-log", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b;
                (b = console)[a.method].apply(b, ["BG LOG"].concat((0, k["default"])(a.args)))
            })
        }
        var f = (b = a("babel-runtime/core-js/json/stringify")) && b.__esModule ? b : {
                "default": b
            },
            k = (b =
                a("babel-runtime/helpers/toConsumableArray")) && b.__esModule ? b : {
                "default": b
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var m = a("./util"),
            e = a("./message"),
            r = "info warn error time timeEnd debug".split(" "),
            n = window,
            t = console;
        c.disableConsoleLog = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (m.isEdge()) n.console.log = m._f, n.__BROWSERTOOLS_CONSOLE_SAFEFUNC = m._f;
            else {
                var a = {
                    log: m._f
                };
                r.forEach(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a[b] = t[b]
                });
                n.console = a
            }
        };
        var u = [];
        c.setSeleniumCompatibility = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            d();
            var a = {};
            r.concat("log").forEach(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a[b] =
                    function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (var a = arguments.length, c = Array(a), e = 0; e < a; e++) c[e] = arguments[e];
                        try {
                            u.push({
                                method: b,
                                args: c
                            }), t[b]((0, f["default"])(c))
                        } catch (y) {}
                    }
            });
            n.console = a
        };
        c.flushLog = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = u.concat();
            return u.length = 0, a
        }
    }, {
        "./message": 278,
        "./util": 322,
        "babel-runtime/core-js/json/stringify": 22,
        "babel-runtime/helpers/toConsumableArray": 41
    }],
    213: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/core-js/symbol")) && b.__esModule ? b : {
            "default": b
        };
        b = (b = a("babel-runtime/core-js/object/assign")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = a("./dom"),
            k = a("./util"),
            m = a("./position"),
            e = a("emitter"),
            r = a("react"),
            n = a("./tracking"),
            t = a("react-dom"),
            u = a("dompurify"),
            l = a("./window-events"),
            g = a("./elements/tooltip"),
            q = a("./inline-cards/icons"),
            v = {
                container: "_c4f153-container",
                flip: "_c4f153-flip",
                flipSyn: "_c4f153-flipSyn",
                card: "_c4f153-card",
                bigTitle: "_c4f153-bigTitle",
                unknownWordTitle: "_c4f153-unknownWordTitle",
                btnDictLabelWithIcon: "_c4f153-btnDictLabelWithIcon",
                explanation: "_c4f153-explanation",
                replacement: "_c4f153-replacement",
                maxWidthReached: "_c4f153-maxWidthReached",
                item: "_c4f153-item",
                logoIcon: "_c4f153-logoIcon",
                ignoreIcon: "_c4f153-ignoreIcon",
                undoIcon: "_c4f153-undoIcon",
                dictionaryIcon: "_c4f153-dictionaryIcon",
                wikiIcon: "_c4f153-wikiIcon",
                footer: "_c4f153-footer",
                footerButton: "_c4f153-footerButton",
                btnIgnore: "_c4f153-btnIgnore",
                icon: "_c4f153-icon",
                btnLogo: "_c4f153-btnLogo",
                btnPersonalize: "_c4f153-btnPersonalize",
                personalizeMessage: "_c4f153-personalizeMessage",
                attn: "_c4f153-attn",
                cardAddedToDict: "_c4f153-cardAddedToDict",
                addedToDictTitle: "_c4f153-addedToDictTitle",
                dictionaryDescription: "_c4f153-dictionaryDescription",
                undo: "_c4f153-undo",
                dictLink: "_c4f153-dictLink",
                dictionaryAddedIcon: "_c4f153-dictionaryAddedIcon",
                synTitle: "_c4f153-synTitle",
                synList: "_c4f153-synList",
                synListSingle: "_c4f153-synListSingle",
                synListTitle: "_c4f153-synListTitle",
                synListNumber: "_c4f153-synListNumber",
                synSubitems: "_c4f153-synSubitems",
                synItem: "_c4f153-synItem",
                dict: "_c4f153-dict",
                dictContent: "_c4f153-dictContent",
                dictItemCounter: "_c4f153-dictItemCounter",
                dictItem: "_c4f153-dictItem",
                qualifier: "_c4f153-qualifier",
                dictFooterItem: "_c4f153-dictFooterItem",
                wikiLink: "_c4f153-wikiLink",
                wiki: "_c4f153-wiki",
                gr__tooltip_empty: "gr__tooltip_empty",
                gr__tooltip: "gr__tooltip",
                "gr-notfound-tooltip": "gr-notfound-tooltip",
                "gr__tooltip-content": "gr__tooltip-content",
                "gr__tooltip-logo": "gr__tooltip-logo",
                gr__flipped: "gr__flipped"
            };
        c.DictionaryCard = r.createClass({
            displayName: "DictionaryCard",
            getDefaultProps: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return {
                    pos: {
                        rect: {
                            top: 0,
                            left: 0,
                            width: 0
                        },
                        sourceRect: {
                            width: 0
                        },
                        delta: {
                            right: 0
                        },
                        className: "",
                        visible: !1
                    },
                    data: void 0,
                    visible: !1
                }
            },
            render: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = {},
                    b = this.props.pos;
                a.top = b.rect.top;
                a.left = b.rect.left;
                a.visibility = this.props.visible ? "" : "hidden";
                var c = this.props.data;
                return r.createElement("div", {
                    className: v.container,
                    style: a
                }, r.createElement("div", {
                    tabIndex: -1,
                    className: f.cs(v.card, v.dict, b.rect.flip && v.flip)
                }, r.createElement("div", {
                    className: v.dictContent
                }, c.defs.map(function(a, b) {
                    a = a.replace(/^([:,]\s)/, "");
                    return a = a[0].toUpperCase() + a.substring(1,
                        a.length), r.createElement("div", {
                        key: b,
                        className: f.cs(1 === c.defs.length ? v.dictSingle : v.dictItem)
                    }, 1 < c.defs.length && r.createElement("span", {
                        className: v.dictItemCounter
                    }, b + 1, ". "), r.createElement("span", {
                        dangerouslySetInnerHTML: {
                            __html: u.sanitize(a)
                        }
                    }))
                })), r.createElement("div", {
                    className: v.footer
                }, c.url && "wiki" === c.origin && r.createElement("div", {
                    className: f.cs(v.item, v.wiki)
                }, r.createElement("a", {
                    href: encodeURI(c.url),
                    target: "_blank",
                    className: v.wikiLink
                }, r.createElement(q.WikiIcon, {
                    className: f.cs(v.icon,
                        v.wikiIcon)
                }), " More on Wikipedia")), r.createElement("div", {
                    className: f.cs(v.item, v.dictFooterItem)
                }, r.createElement(q.LogoIcon, {
                    className: f.cs(v.icon, v.logoIcon)
                }), " Definitions by Grammarly"))))
            }
        });
        a = (0, b["default"])(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                x.innerHTML = u.sanitize(a);
                var b = x.querySelector("span.qualifier");
                return b ? (b.innerHTML = b.innerHTML.replace("(", "").replace(")", ""), b.className = v.qualifier, x.innerHTML) : a
            }

            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.replace(/&lt;(sup|sub)&gt;(.*?)&lt;(\/sup|\/sub)&gt;/, "<$1>$2<$3>").replace(/&amp;(?=\w{1,8};)/,
                    "&")
            }

            function q() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return f.renderReactWithParent(r.createElement(c.DictionaryCard, {
                    pos: J,
                    data: D,
                    visible: !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0]
                }), w.documentElement, B, "grammarly-card")
            }

            function h() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                G && G.remove();
                l.off(L, null, !0);
                M.emit("hide");
                C.disable();
                C.hide();
                G = null;
                n.logger.dictCardHideAction()
            }
            var w = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : document,
                x = w.createElement("div"),
                B = (0, d["default"])("DictionaryCard"),
                C = g.createTooltip({
                    cls: f.cs("gr-notfound-tooltip",
                        v.gr__tooltip_empty),
                    enabled: !1,
                    doc: w
                }),
                G = void 0,
                A = void 0,
                D = void 0,
                J = void 0,
                L = {
                    click: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        "dictionary-card" !== document.body.className && (f.inEl(a.target, A) || h())
                    },
                    keydown: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        27 === k.keyCode(a) && h()
                    },
                    scroll: h,
                    resize: h
                },
                M = e({
                    show: function(c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var h = {
                            ownerDocument: w,
                            getBoundingClientRect: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return e.pos
                            },
                            getClientRects: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return [e.pos]
                            }
                        };
                        (D = c, D.defs && D.defs.length) ? (c = m.getAbsRect(h), D.title = e.el.toString(), D.defs = D.defs.splice(0, 3).map(a).map(b), G = q(!1), A = t.findDOMNode(G.component),
                            J = m.posToRect(A, c), q()) : (C.enable(), C.show({
                            posEl: e.el,
                            text: "No definition found"
                        }));
                        l.on(L, null, !0);
                        n.logger.dictCardShowAction()
                    },
                    hide: h,
                    unescapeSuperscript: b
                });
            return M
        }, {
            component: c.DictionaryCard
        });
        c.Card = a
    }, {
        "./dom": 215,
        "./elements/tooltip": 247,
        "./inline-cards/icons": 266,
        "./position": 289,
        "./tracking": 307,
        "./util": 322,
        "./window-events": 323,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/core-js/symbol": 32,
        dompurify: "dompurify",
        emitter: "emitter",
        react: "react",
        "react-dom": "react-dom"
    }],
    214: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/regenerator");
        var f = d(b);
        b = a("babel-runtime/core-js/object/assign");
        var k = d(b);
        b = a("babel-runtime/core-js/promise");
        var m = d(b),
            e = function(a, b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c || (c = m["default"]))(function(h, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function p(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            g(e.next(a))
                        } catch (D) {
                            d(D)
                        }
                    }

                    function f(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            g(e["throw"](a))
                        } catch (D) {
                            d(D)
                        }
                    }

                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? h(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(p, f)
                    }
                    g((e = e.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(c,
            "__esModule", {
                value: !0
            });
        var r = a("emitter"),
            n = a("./tracking"),
            t = a("./request"),
            u = a("./selection"),
            l = a("./dom"),
            g = a("./config"),
            q = a("./dictionary-card"),
            v = a("./selection-animator");
        c.dictionary = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.doc,
                c = a.cardInspection,
                h = new v.SelectionAnimator(b),
                d = q.Card(b),
                p = void 0,
                m = new u.SelectionElement(b, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return e(this, void 0, void 0, f["default"].mark(function D() {
                        var b, e;
                        return f["default"].wrap(function(f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (f.prev = f.next) {
                                case 0:
                                    if (b = !!a.el.startContainer && l.matchesSelector(a.el.startContainer.parentNode,
                                            ".gr-grammar-card, .gr-grammar-card *, .gr-dictionary-card, .gr-dictionary-card *"), !b || c) {
                                        f.next = 3;
                                        break
                                    }
                                    return f.abrupt("return");
                                case 3:
                                    return C = "gr-selection-anim-dict " + g.nextVerClass, h.animate(a.el, C), p = a, e = {}, f.prev = 7, f.next = 10, t.fetch(g.URLS.dictionary, {
                                        data: (0, k["default"])({}, a.data)
                                    });
                                case 10:
                                    if (e = f.sent, p === a) {
                                        f.next = 13;
                                        break
                                    }
                                    return f.abrupt("return");
                                case 13:
                                    f.next = 18;
                                    break;
                                case 15:
                                    f.prev = 15, f.t0 = f["catch"](7), n.logger.fetchDefinitionsFail();
                                case 18:
                                    h.complete(), d.show(e, a), b && h.remove();
                                case 21:
                                case "end":
                                    return f.stop()
                            }
                        }, D, this, [
                            [7, 15]
                        ])
                    }))
                }, h.remove),
                C = void 0;
            return d.on("hide", h.remove), r({
                clear: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    m && m.release();
                    p = m = null
                }
            })
        }
    }, {
        "./config": 211,
        "./dictionary-card": 213,
        "./dom": 215,
        "./request": 291,
        "./selection": 293,
        "./selection-animator": 292,
        "./tracking": 307,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/core-js/promise": 31,
        "babel-runtime/regenerator": 43,
        emitter: "emitter"
    }],
    215: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }

        function f(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return !(!a ||
                void 0 === a.className) && a.classList.contains(b)
        }

        function k(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a && a.classList) return a.classList.remove(b)
        }

        function m(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a) {
                if (-1 === b.indexOf(" ")) return a.classList.add(b);
                b = b.split(" ");
                for (var c = 0; c < b.length; c++) a.classList.add(b[c])
            }
        }

        function e(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "true" === a.contentEditable || "plaintext-only" === a.contentEditable
        }

        function r(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a) return !1;
            var c = a.matches || a.msMatchesSelector || a.matchesSelector || a.webkitMatchesSelector || a.mozMatchesSelector;
            return !!c && c.apply(a, [b])
        }

        function n(a,
            b, c, e) {
            var h = 4 < arguments.length && void 0 !== arguments[4] && arguments[4];
            if (null != a) {
                if ("string" != typeof b) return D.each(b, function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    n(a, c, b, e)
                });
                if (c) {
                    var d = a[M] || [];
                    return a[M] = d, e ? (a[M] = d.filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return !(a.event === b && a.cb === c)
                    }), a.removeEventListener(b, c, h)) : (d.push({
                        event: b,
                        cb: c
                    }), a.addEventListener(b, c, h)), {
                        el: a,
                        event: b,
                        cb: c,
                        bubble: h
                    }
                }
            }
        }

        function t(a, b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            b || null == a[M] ? n(a, b, c, !0, e) : a[M].forEach(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return t(a, b.event, b.cb, b.bubble)
            })
        }

        function u(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var e = this;
            return this.addEventListener(a,
                b, c), {
                off: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return l.apply(e, [a, b, c])
                }
            }
        }

        function l(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            this.removeEventListener(a, b, c)
        }

        function g(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "number" != typeof b || H[v(a)] ? b : b + "px"
        }

        function q(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.replace(/-+(.)?/g, function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b ? b.toUpperCase() : ""
            })
        }

        function v(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.replace(/::/g, "/").replace(/([A-Z]+)([A-Z][a-z])/g, "$1_$2").replace(/([a-z\d])([A-Z])/g, "$1_$2").replace(/_/g, "-").toLowerCase()
        }

        function p(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (3 > arguments.length) {
                if (!a) return;
                var e = getComputedStyle(a, "");
                if ("string" == typeof b) return a.style[q(b)] ||
                    e.getPropertyValue(b);
                if (D.isArray(b)) {
                    var h = {};
                    return D.each(b, function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        h[q(b)] = a.style[q(b)] || e.getPropertyValue(b)
                    }), h
                }
            }
            var d = "";
            if (D.isString(b)) c || 0 === c ? d = v(b) + ":" + g(b, c) : a.style.removeProperty(v(b));
            else
                for (var f in b) b[f] || 0 === b[f] ? d += v(f) + ":" + g(f, b[f]) + ";" : a.style.removeProperty(v(f));
            return a.style.cssText += ";" + d
        }

        function y(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (a = a.parentNode; null !== a;) {
                if (f(a, b)) return a;
                a = a.parentNode
            }
            return !1
        }

        function z() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 1;
            return a ?
                z.call(this.parentNode, --a) : this
        }

        function h(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b = arguments.length, c = Array(1 < b ? b - 1 : 0), e = 1; e < b; e++) c[e - 1] = arguments[e];
            if (0 < c.length) {
                var d = [];
                return d.push(h(a)), c.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return d.push(h(a))
                }), d.join(", ")
            }
            return a = a.split(", ").map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "." !== a[0] ? "." + a : a
            }).join(", ").trim(), a + ", " + a + " *"
        }

        function w(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a.getSelection();
            a.removeAllRanges();
            a.addRange(b)
        }

        function x(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return null === a ? null : r(a, b) ? a : a.querySelector(b) || x(a.parentElement, b)
        }
        b = a("babel-runtime/helpers/defineProperty");
        var B = d(b);
        b = a("babel-runtime/core-js/object/assign");
        var C = d(b);
        b = a("babel-runtime/core-js/object/keys");
        var G = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var A = a("react-dom"),
            D = a("lodash");
        b = a("./util");
        var J = a("stdlib"),
            L = a("dompurify");
        c.createEl = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            b = (b || document).createElement("div");
            return b.innerHTML = L.sanitize(a.trim()), b.firstElementChild
        };
        c.renderReactWithParent = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var e = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : "div",
                h = b[c] = b[c] || {};
            h.el ||
                (h.el = b.ownerDocument.createElement(e), b.appendChild(h.el));
            e = A.render(a, h.el);
            return null == h.remove && (h.remove = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                delete b[c];
                b.removeChild(h.el);
                A.unmountComponentAtNode(h.el)
            }), {
                component: e,
                remove: h.remove.bind(h),
                el: h.el
            }
        };
        c.inEl = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 1E3, e = a; e.parentNode && 0 < c;) {
                if ("string" != typeof b && b === e || e.id === b || e === b) return !0;
                e = e.parentNode
            }
            return !1
        };
        c.hasClass = f;
        c.removeClass = k;
        c.addClass = m;
        c.toggleClass = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            b ?
                m(a, c) : k(a, c)
        };
        c.getParentBySel = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (a = a.parentNode; null !== a;) {
                if (r(a, b)) return a;
                a = a.parentNode
            }
            return !1
        };
        c.parentIsContentEditable = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (a = a.parentNode; null !== a;) {
                if (e(a)) return a;
                a = a.parentNode
            }
            return !1
        };
        c.isContentEditable = e;
        c.matchesSelector = r;
        c.isFocused = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return document.activeElement && "IFRAME" === document.activeElement.tagName ? a === a.ownerDocument.activeElement : a === document.activeElement
        };
        var M = b.guid();
        c.listen = n;
        c.unlisten = t;
        c.on = u;
        c.off = l;
        c.once = function(a,
            b) {
            var c = this;
            u.call(this, a, function aa(e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b(e);
                c.removeEventListener(a, aa, void 0)
            })
        };
        c.emit = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = document.createEvent("CustomEvent");
            c.initCustomEvent(a, !0, !0, b);
            this.dispatchEvent(c)
        };
        c.isVisible = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = getComputedStyle(a, void 0);
            return "none" !== b.getPropertyValue("display") && "hidden" !== b.getPropertyValue("visibility") && 0 < a.clientHeight
        };
        c.cs = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var a = arguments.length, b = Array(a), c = 0; c < a; c++) b[c] = arguments[c];
            return b.reduce(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.concat(D.isObject(b) ?
                    (0, G["default"])(b).filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return b[a]
                    }) : b)
            }, []).filter(function(a) {
                return !!a
            }).join(" ")
        };
        var H = {
            "column-count": 1,
            columns: 1,
            "font-weight": 1,
            "line-height": 1,
            opacity: 1,
            "z-index": 1,
            zoom: 1
        };
        c.maybeAddPx = g;
        c.camelize = q;
        c.camelizeAttrs = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return D.transform(a, function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a[q(c)] = b
            })
        };
        c.dasherize = v;
        c.css = p;
        c.setCustomCss = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (b && a) {
                var c = p(a, (0, G["default"])(b));
                return p(a, b),
                    function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return p(a, c)
                    }
            }
        };
        c.getParentByTag = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (a = a.parentNode; null !==
                a;) {
                if (a.tagName === b) return a;
                a = a.parentNode
            }
            return null
        };
        c.getParentByData = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (a = a.parentNode; null !== a;) {
                if (a.dataset && a.dataset[b] && a.dataset[b] == c) return a;
                a = a.parentNode
            }
        };
        c.resolveEl = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return f(a, b) ? a : y(a, b)
        };
        c.getParent = y;
        c.parentHasClass = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a) return !1;
            for (; a.parentNode;) {
                if (f(a, b)) return a;
                a = a.parentNode
            }
            return !1
        };
        c.getParentByDepth = z;
        c.isParent = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a) return !1;
            for (; a.parentNode;) {
                if (b === a.parentNode) return a;
                a = a.parentNode
            }
            return !1
        };
        c.insertAfter = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = b.parentNode;
            if (null === c) throw new J.AssertionError("Expected non-null parent");
            c.lastChild === b ? c.appendChild(a) : c.insertBefore(a, b.nextSibling)
        };
        c.insertBefore = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            J.assertNonNull(b.parentNode, "parent node").insertBefore(a, b)
        };
        c.elementInDocument = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (b = b || document; a;) {
                if (a === b) return !0;
                a = a.parentNode
            }
            return !1
        };
        c.runKeyEvent = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = void 0,
                c = void 0;
            a = D.extend({
                ctrl: !1,
                meta: !1,
                shift: !1,
                alt: !1
            }, a);
            try {
                b = a.el.ownerDocument.createEvent("KeyEvents"),
                    c = a.el.ownerDocument.defaultView, b.initKeyEvent(a.type, !0, !0, c, a.ctrl, a.alt, a.shift, a.meta, 0, 0)
            } catch (P) {
                b = a.el.ownerDocument.createEvent("UIEvents"), b.initUIEvent.bind(b)(void 0, !0, !0, window, 1), b.keyCode = 0, b.which = 0, b.charCode = 0, b.ctrlKey = a.ctrl, b.altKey = a.alt, b.shiftKey = a.shift, b.metaKey = a.meta
            }
            a.el.dispatchEvent(b)
        };
        c.docHidden = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "undefined" != typeof a.hidden ? a.hidden : "undefined" != typeof a.mozHidden ? a.mozHidden : "undefined" != typeof a.webkitHidden ? a.webkitHidden : "undefined" != typeof a.msHidden &&
                a.msHidden
        };
        c.visibilityEvent = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "undefined" != typeof a.hidden ? "visibilitychange" : "undefined" != typeof a.mozHidden ? "mozvisibilitychange" : "undefined" != typeof a.webkitHidden ? "webkitvisibilitychange" : "undefined" != typeof a.msHidden && "msvisibilitychange"
        };
        c.transformProp = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : document;
            return "undefined" != typeof a.body.style.transform ? "transform" : "undefined" != typeof a.body.style.WebkitTransform ? "WebkitTransform" : "undefined" !=
                typeof a.body.style.MozTransform ? "MozTransform" : void 0
        };
        c.getDocSelection = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.getSelection() || {}
        };
        c.compStyle = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a) {
                var b = a.ownerDocument;
                if (b && (b = b.defaultView || window)) {
                    var c = b.getComputedStyle(a, void 0);
                    if (c) {
                        b = arguments.length;
                        for (var e = Array(1 < b ? b - 1 : 0), h = 1; h < b; h++) e[h - 1] = arguments[h];
                        return 1 === e.length ? c.getPropertyValue(e[0]) : e.reduce(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return (0, C["default"])({}, a, (0, B["default"])({}, b, c.getPropertyValue(b)))
                        }, {})
                    }
                }
            }
        };
        c.classSelector = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.split(" ").map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "." !==
                    a[0] ? "." + a : a
            }).join("").trim()
        };
        c.selectorAll = h;
        c.whichAnimationEndEvent = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = document.createElement("fakeelement"),
                b = {
                    animation: "animationend",
                    MozAnimation: "animationend",
                    WebkitAnimation: "webkitAnimationEnd"
                },
                c;
            for (c in b)
                if (void 0 !== a.style[c]) return b[c]
        };
        c.transitionEndEventName = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = document.createElement("fakeelement"),
                b = {
                    transition: "transitionend",
                    MozTransition: "transitionend",
                    WebkitTransition: "webkitTransitionEnd"
                },
                c;
            for (c in b)
                if (b.hasOwnProperty(c) && void 0 !== a.style[c]) return b[c]
        };
        c.addIframeCss = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if ("undefined" != typeof window.GR_INLINE_STYLES) {
                var b = a.createElement("style");
                b.innerHTML = window.GR_INLINE_STYLES;
                try {
                    a.querySelector("head").appendChild(b)
                } catch (R) {
                    console.log("can't append style", R)
                }
            }
        };
        c.setGRAttributes = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.setAttribute("data-gramm_id", b);
            a.setAttribute("data-gramm", "true")
        };
        c.emitDomEvent = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {},
                c = document.createEvent("CustomEvent");
            c.initCustomEvent(a + "-gr", !0, !0, b);
            document.dispatchEvent(c)
        };
        c.addRange = w;
        c.setDomRange = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = a.createRange();
            c.setStart(b.anchorNode, b.anchorOffset);
            c.setEnd(b.focusNode, b.focusOffset);
            w(a, c)
        };
        c.closestEl = x
    }, {
        "./util": 322,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/core-js/object/keys": 29,
        "babel-runtime/helpers/defineProperty": 36,
        dompurify: "dompurify",
        lodash: "lodash",
        "react-dom": "react-dom",
        stdlib: 328
    }],
    216: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/core-js/promise")) && b.__esModule ? b : {
                "default": b
            },
            f = (b = a("babel-runtime/core-js/object/assign")) &&
            b.__esModule ? b : {
                "default": b
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var k = a("lib/grammarly-editor"),
            m = a("lib/grammarly-editor/capi"),
            e = a("../timers"),
            r = a("../message"),
            n = a("../util"),
            t = a("../tracking"),
            u = (a("../benchmark"), a("lib/ghost/html-ghost-locator")),
            l = a("../position"),
            g = a("../client-script/inner-html"),
            q = a("../window-events"),
            v = a("../config"),
            p = a("../dom"),
            y = a("../ghost/html-ghost"),
            z = a("./track"),
            h = a("./email-feedback");
        c.createEditor = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = 0 < arguments.length &&
                    void 0 !== arguments[0] ? arguments[0] : "on",
                    b = p.visibilityEvent(na);
                "on" === a ? (q.on("beforeunload", ea), r.on("editor-set-state", P), r.on("dialog-closed", aa), r.on("focus-editor", U), r.on("after-refresh-dialog", Y), I.on("track", z.track), I.on("fix", Q), I.on("serviceState", R), I.on("addedSynonym", H), I.on("afterReplace", w), I.dom && (I.dom.on("badCursorPositionRetryFail", t.logger.cursorJump), I.dom.on("badCursorPosition", t.logger.badCursorPosition)), I.on("iframe-mousemove", O), b && p.listen(na, b, E), p.listen(na, "grammarly:reset",
                    K), la && p.listen(na.documentElement, "mousemove", x), X.card && (X.card.on("show", D), X.card.on("hide", J), X.card.on("toeditor", L), X.card.on("addtodict", M))) : (q.off("beforeunload", ea), r.off("editor-set-state", P), r.off("dialog-closed", aa), r.off("focus-editor", U), r.off("after-refresh-dialog", Y), I.off("track", z.track), I.off("fix", Q), I.off("serviceState", R), I.off("addedSynonym", H), I.off("afterReplace", w), I.dom && (I.dom.off("badCursorPositionRetryFail", t.logger.cursorJump), I.dom.off("badCursorPosition", t.logger.badCursorPosition)),
                    I.off("iframe-mousemove", O), b && p.unlisten(na, b, E), p.unlisten(na, "grammarly:reset", K), la && p.unlisten(na.documentElement, "mousemove", x), X.card && (X.card.off("show", D), X.card.off("hide", J), X.card.off("toeditor", L), X.card.off("addtodict", M)))
            }

            function w(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                Array.isArray(N.afterReplaceEvents) && N.afterReplaceEvents.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return p.emit.call(ca, a)
                });
                try {
                    var b = document.createEvent("HTMLEvents");
                    b.initEvent("input", !1, !0);
                    I.el.dispatchEvent(b)
                } catch (ka) {}
                return a && a.remove()
            }

            function x(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                I.emit("iframe-mousemove",
                    a)
            }

            function A(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a && I.setState(a);
                I.api.ws.reconnect()
            }

            function D(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (a = I.matches.byId(a)) && (I.emit("context", void 0), a.editorId = I.id, a.select(), X.card && X.card.setData(a, I.editorType))
            }

            function J() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                F()
            }

            function L(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a === I.id && (I.showDialog({
                    caller: "card"
                }), e.timers.start("open_editor"))
            }

            function M(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.match && a.match.editorId !== I.id || (ia ? (a.hide(), I.showDialog({
                    caller: "card"
                })) : a.match && a.match.addToDict())
            }

            function H(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.editorId = I.id;
                X.card && X.card.showSynonyms(a)
            }

            function O() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                X.card && X.card.setOuterIframe(sa)
            }

            function K() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                console.log("reseting capi session...");
                A()
            }

            function R(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if ("capi" === a.type) return a.available ? void(ma && V()) : da()
            }

            function P(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.editorId === I.id && (n.isEdge() && a.matches.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a.renderedOnce = !0;
                    a.cls += Ba
                }), I.setState(a), ua && (ua = !1, ea()))
            }

            function aa(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a === I.id && (F(), I.isHtmlGhost || I.srcEl && I.srcEl.focus())
            }

            function U(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a === I.id && I.srcEl && I.srcEl.focus()
            }

            function F() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                I.selectedMatch && (X.card && X.card.removeLoading(I.selectedMatch.getEl()), I.selectedMatch.deselect())
            }

            function Y(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.editorId ===
                    I.id && A(a)
            }

            function da() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                ma = !0;
                I.clearData();
                I.api.close();
                I.render()
            }

            function V() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                ma = !1;
                A()
            }

            function T() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = ca.ownerDocument.createRange();
                a.selectNodeContents(ca);
                var b = a.cloneContents();
                a = document.createElement("div");
                a.appendChild(b);
                b = a.querySelectorAll("img");
                for (var c = b.length, e = 0; e < c; e++) b[e].src = b[e].src;
                return a.innerHTML
            }

            function E() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return p.docHidden(na), void 0
            }

            function W(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                I.enabledSynonyms !== a && (I.enabledSynonyms = a, a ? I.synonyms.fieldEnable() : I.synonyms.disable())
            }

            function ea(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (!ha ||
                    a) ha = !0, a = I.dom, (a && a.cleanHTML && a.cleanHTML(), c("off"), I.api.ws.emit("cleanup-socket-on-editor-remove"), I.exit(), console.log("exit"), ca.removeAttribute && v.restrictedAttrs.forEach(ca.removeAttribute.bind(ca)), la && v.restrictedAttrs.forEach(I.srcEl.removeAttribute.bind(I.srcEl)), Z && Z.parentNode && Z.parentNode.removeChild(Z), ca.setAttribute("spellcheck", "true"), u.isHtmlGhostSite()) && (a = ca.parentElement && ca.parentElement.parentElement) && a.removeAttribute("spellcheck"), I.emit("exit", void 0)
            }
            var S = (a.el ||
                    a.srcEl).getAttribute("gramm_id") || n.guid(),
                X = a.app,
                fa = a.actions,
                N = a.page,
                Q = fa.incFixed,
                oa = fa.saveFeedbackData;
            fa = a.editorType.htmlghost;
            var ja = N.dialectStrong,
                ia = a.user.anonymous,
                Z = void 0;
            (0, f["default"])(a, {
                capiUrl: v.URLS.capi,
                createWs: b,
                docid: S,
                textareaWrapSelector: '[gramm_id="' + S + '"]',
                animatorContainer: a.el.ownerDocument.documentElement,
                getAnimatorElPos: l.getAbsRect,
                dialect: ja,
                exposeRawMatch: !0,
                canRemoveSynonym: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !!p.matchesSelector(a, ".b-card.Synonyms .btn-close") || !p.matchesSelector(a,
                        ".b-card.Synonyms, .b-card.Synonyms *")
                },
                filter: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return ma ? [] : a.filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.free && !a.hidden
                    })
                },
                getContainerId: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return r.promiseBackground("get-containerIdOrUndefined").then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a && "string" == typeof a ? a : d["default"].reject(void 0)
                    })
                }
            });
            b = "extension_" + n.getBrowser();
            (0, f["default"])(m.capi, {
                CLIENT_NAME: b,
                clientVersion: v.getVersion(),
                extDomain: N.domain
            });
            fa && (a.dom = y.HtmlGhostDom);
            k.MatchPositions = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return {
                    generateMatchPositions: n._f
                }
            };
            a.matchPrefix =
                v.nextVerClass;
            var I = k.GrammarlyEditor(a),
                ca = I.el,
                la = a.posSourceEl && "IFRAME" === a.posSourceEl.tagName,
                sa = a.srcEl || ca,
                na = ca.ownerDocument,
                pa = I.run,
                ha = !1,
                ma = !a.connection.online,
                ua = !1;
            b = new h.EmailFeedback(I, S, oa);
            (0, f["default"])(I, {
                id: S,
                srcEl: sa,
                camouflage: n._f,
                isHtmlGhost: fa,
                run: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    e.timers.start(S + "run");
                    c("on");
                    pa();
                    Z = g.rewriteInnerHTML(ca);
                    I.getText() && I.emit("sending", void 0);
                    W(N.enabledDefs);
                    ma && da()
                },
                errorData: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = I.getMatches();
                    return {
                        critical: a.filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.free &&
                                a.inDom
                        }).length,
                        plus: a.filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return !a.free
                        }).length
                    }
                },
                showDialog: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = (0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}).caller;
                    a = {
                        data: I.getState(),
                        caller: a
                    };
                    X.dialog && X.dialog.preActivate();
                    I.emit("show-dialog", void 0);
                    p.emitDomEvent("show-dialog");
                    r.emitFocusedTab("show-dialog", a)
                },
                isOffline: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return ma
                },
                offline: da,
                online: V,
                updateState: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = a.user;
                    a = a.page;
                    var c = ja;
                    ja = a.dialectStrong;
                    ia = b.anonymous;
                    W(a.enabledDefs);
                    c !== ja && I.hardReset()
                },
                outerIframe: a.outerIframe,
                cleanupText: n._f,
                activate: n._f,
                toggleBtn: n._f,
                remove: ea,
                reset: A,
                insertGmailFeedback: b.insertGmailFeedback.bind(b),
                emailFeedbackEnabled: N.emailFeedbackEnabled,
                editorType: a.editorType.value
            });
            var va = I.getMatchClass,
                Ba = " gr_disable_anim_appear";
            return I.getMatchClass = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b = va(a, b);
                return b += " gr_inline_cards", b += a.renderedOnce || n.isSafari() ? Ba : " gr_run_anim", a.renderedOnce = !0, b
            }, I.dom && (I.dom.changeSelection = n._f), I.current = I.getFiltered, I.started = !1, I.el.setAttribute("data-gramm_editor",
                "true"), I.getHtml && (I.getHtml = T), I
        }
    }, {
        "../benchmark": 187,
        "../client-script/inner-html": 206,
        "../config": 211,
        "../dom": 215,
        "../ghost/html-ghost": 254,
        "../message": 278,
        "../position": 289,
        "../timers": 301,
        "../tracking": 307,
        "../util": 322,
        "../window-events": 323,
        "./email-feedback": 217,
        "./track": 220,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/core-js/promise": 31,
        "lib/ghost/html-ghost-locator": 253,
        "lib/grammarly-editor": 258,
        "lib/grammarly-editor/capi": 255
    }],
    217: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a &&
                a.__esModule ? a : {
                    "default": a
                }
        }
        b = a("babel-runtime/core-js/array/from");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = a("../dom"),
            r = a("../tracking");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, k["default"])(this, a);
                this.editor = b;
                this.id = c;
                this.saveFeedbackData = e;
                this._generateFeedbackElement = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var e = document.createElement("div"),
                        d = document.createElement("div");
                    d.classList.add("feedback-signature");
                    b = b + "?docId=" + encodeURIComponent(c);
                    c = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return '<a style="color: #1255CC; text-decoration: none;" href="' + (b + "&canBeBetter=" + encodeURIComponent(c ? "false" : "true")) + '">' + a + "</a>"
                    };
                    return d.style.display = "inline-block", d.style.background = "#F3F5F8", d.style.padding = "12px 17px", d.style.borderRadius = "5px", d.style.border = "1px solid #E2E5EB", d.innerHTML = '<span style="margin-right: 15px;">' + a + "</span> " + c("Yes", b, !0) + ' <span style="color: #E4E6F2; margin: 0 6px;"> | </span> ' + c("Can be better",
                        b, !1), e.appendChild(document.createElement("div").appendChild(document.createElement("br"))), e.appendChild(d), e.appendChild(document.createElement("div").appendChild(document.createElement("br"))), e
                };
                this._generateFeedbackElementVer2 = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var e = document.createElement("div"),
                        d = document.createElement("div");
                    d.classList.add("feedback-signature");
                    b = b + "?docId=" + encodeURIComponent(c);
                    c = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        b = b + "&canBeBetter=" + encodeURIComponent(c ? "false" : "true");
                        return '<a style="' + (c ? "border-right: 1px solid #E4E6F2;\n  letter-spacing: 0.5px;\n  color: #1FB8A1;\n  text-decoration: none;\n  font-weight: bold;\n  display: inline-block;\n  font-size: 13px;\n  width: 49.6%;\n  text-align: center;\n  padding: 13px 0 15px;" :
                            "\n  letter-spacing: 0.5px;\n  color: #1FB8A1;\n  text-decoration: none;\n  font-weight: bold;\n  display: inline-block;\n  font-size: 13px;\n  width: 49.6%;\n  text-align: center;\n  padding: 13px 0 15px;") + '" href="' + b + '">' + a + "</a>"
                    };
                    return d.style.display = "inline-block", d.style.borderRadius = "3px 3px 0 0", d.style.border = "1px solid #E2E5EB", d.innerHTML = '<span style="\n  width: 335px;\n  letter-spacing: 0.2px;\n  text-align: center;\n  background: #F9FAFF;\n  border-bottom: 1px solid #E4E6F2;\n  border-radius:3px 3px 0 0;\n  font-family: HelveticaNeue-Bold;\n  font-size: 13px;\n  color: #222;\n  line-height: 16px;\n  padding: 14px 0 14px 0;\n  display: inline-block;">\n      <img style="\n  width: 25px;\n  height: 19px;\n  margin-right: 10px;\n  vertical-align: middle;" src="https://s3.amazonaws.com/features-team-extension/email-feedback/email-feedback-signature.png" alt="smp"/>' +
                        a + "</span><br/>\n      " + c("Yes", b, !0) + c("Can be better", b, !1), e.appendChild(document.createElement("div").appendChild(document.createElement("br"))), e.appendChild(d), e.appendChild(document.createElement("div").appendChild(document.createElement("br"))), e
                }
            }
            return (0, m["default"])(a, [{
                key: "insertGmailFeedback",
                value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a = a ? this._generateFeedbackElement("Was my message clear?", "https://grammarly.com/email-feedback", this.id) : this._generateFeedbackElementVer2("Was my message clear?", "https://grammarly.com/email-feedback",
                        this.id);
                    var c = this.editor.el,
                        d = c.querySelector(".gmail_extra") || c.querySelector(".gmail_quote");
                    null === d ? c.appendChild(a) : c.insertBefore(a, d);
                    var q = new MutationObserver(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            "childList" === a.type && 0 < a.removedNodes.length && -1 < (0, f["default"])(a.removedNodes).findIndex(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return a.classList && a.classList.contains("feedback-signature")
                            }) && 0 === c.querySelectorAll(".feedback-signature").length && (r.call("gnar.track", "askForFeedbackSignature-removed"), q.disconnect())
                        })
                    });
                    q.observe(a, {
                        attributes: !0,
                        childList: !0,
                        characterData: !0
                    });
                    a = new KeyboardEvent("keydown", {
                        bubbles: !0,
                        cancelable: !0,
                        key: " ",
                        shiftKey: !0
                    });
                    c.dispatchEvent(a);
                    this.editor.emailFeedbackEnabled = !1;
                    focus();
                    a = e.closestEl(c, 'input[name="subjectbox"]') || e.closestEl(c, 'input[placeholder="Subject"]');
                    this.saveFeedbackData(null !== a ? a.value : "", this.id);
                    r.call("gnar.track", "askForFeedback-button-click", {
                        textSize: this.editor.getText().length,
                        isFirstShown: b
                    })
                }
            }]), a
        }();
        c.EmailFeedback = a
    }, {
        "../dom": 215,
        "../tracking": 307,
        "babel-runtime/core-js/array/from": 19,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35
    }],
    218: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.hasAttribute("contenteditable") && a.querySelector('[data-contents="true"] > [data-editor], [data-block]')
        }

        function f(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.classList.contains("ql-editor") || a.classList.contains("ql-container")
        }

        function k(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return -1 < a.className.indexOf("redactor")
        }

        function m(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return -1 < a.className.indexOf("scribe")
        }

        function e(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return -1 < a.className.indexOf("trix")
        }

        function r(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "IFRAME" !== a.tagName ? !1 : -1 < a.id.indexOf("mce") || 0 < a.contentDocument.querySelectorAll("#tinymce, .mce-content-body").length
        }

        function n(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return -1 < a.className.indexOf("cke")
        }

        function t(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.hasAttribute("pm-container") || a.classList.contains("ProseMirror")
        }

        function u(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return -1 < a.className.indexOf("medium-editor")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.isDraftJsField = d;
        c.isQuillField = f;
        c.isRedactorField = k;
        c.isScribeField = m;
        c.isTrixField = e;
        c.isTinyMCEField = r;
        c.isCKEditorField =
            n;
        c.isProseMirrorField = t;
        c.isMediumEditorField = u;
        c.getFieldType = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            try {
                return d(a) ? "draftJs" : f(a) ? "quill" : k(a) ? "redactor" : t(a) ? "prosemirror" : m(a) ? "scribe" : e(a) ? "trix" : u(a) ? "medium-editor" : r(a) ? "tinymce" : n(a) ? "ckeditor" : a.hasAttribute("contenteditable") ? "contenteditable" : "TEXTAREA" === a.tagName ? "textarea" : "IFRAME" === a.tagName ? "iframe" : "unknown"
            } catch (g) {}
        }
    }, {}],
    219: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            (e.setGRAttributes(a, b), a.setAttribute("spellcheck", "false"), n.isHtmlGhostSite()) && (a = a.parentElement &&
                a.parentElement.parentElement) && a.setAttribute("spellcheck", "false")
        }

        function f(a, b, c, e, f, n, h, w) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function p(b, p) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return d(b, p), t.createEditor({
                    id: p,
                    el: b,
                    app: a,
                    connection: e,
                    page: f,
                    user: n,
                    actions: h,
                    editorType: c,
                    silentLogs: l
                }, w)
            }
            var g = m.guid();
            return "contenteditable" === c.value ? p(b, g) : u.createGhostArea(p, b, g)
        }
        var k = (b = a("babel-runtime/helpers/defineProperty")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var m = a("../util"),
            e = a("../dom"),
            r = a("../elements"),
            n = a("lib/ghost/html-ghost-locator"),
            t = a("./editor"),
            u = a("../ghost/ghostarea"),
            l = "prod" === a("config").getGlobal().bundleInfo.env;
        c.createGrammarlyEditor = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.app,
                c = a.type,
                p = a.doc,
                g = a.field,
                l = a.connection,
                h = a.page,
                w = a.user,
                n = a.actions;
            a = a.createSocket;
            b.elements = b.elements || r.initElements({
                app: b,
                doc: p,
                user: w,
                actions: n,
                page: h
            });
            if ("iframe" === c) {
                var u = m.guid();
                c = g.contentDocument;
                p = c.body;
                b = (d(g, u), g.setAttribute("gramm-ifr", "true"), e.addIframeCss(c), d(p, u), g.style.height = g.style.height || getComputedStyle(g).height, t.createEditor({
                    el: p,
                    app: b,
                    connection: l,
                    page: h,
                    user: w,
                    actions: n,
                    srcEl: g,
                    posSourceEl: g,
                    editorType: {
                        contenteditable: !0,
                        value: "contenteditable"
                    }
                }, a))
            } else b = f(b, g, (u = {}, (0, k["default"])(u, c, !0), (0, k["default"])(u, "value", c), u), l, h, w, n, a);
            return b
        }
    }, {
        "../dom": 215,
        "../elements": 226,
        "../ghost/ghostarea": 252,
        "../util": 322,
        "./editor": 216,
        "babel-runtime/helpers/defineProperty": 36,
        config: 169,
        "lib/ghost/html-ghost-locator": 253
    }],
    220: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.track = function() {}
    }, {}],
    221: [function(a,
        b, c) {
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }

        function f(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a) {
                if (!a.length) return a;
                if (1 === a.length || !b) return a[0];
                var c = b.pageX || b.clientX,
                    e = b.pageY || b.clientY,
                    h = void 0;
                return a.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = a.top,
                        d = a.left,
                        f = a.width,
                        p = a.height;
                    e >= b && e <= b + p && c >= d && c <= d + f && (h = a)
                }), h || a[0]
            }
        }
        b = a("babel-runtime/core-js/object/assign");
        var k = d(b);
        b = a("babel-runtime/core-js/symbol");
        var m = d(b);
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var e = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var r = d(b);
        b = a("babel-runtime/helpers/createClass");
        var n = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var t = d(b);
        b = a("babel-runtime/helpers/inherits");
        var u = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var l = a("react"),
            g = a("react-dom");
        b = a("emitter");
        var q = a("../timers"),
            v = a("../util"),
            p = a("../window-events"),
            y = a("../tracking"),
            z = a("../position"),
            h = a("../dom"),
            w = a("./hint"),
            x = a("./tooltip"),
            B = a("../inline-cards"),
            C = {};
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = 0 < arguments.length && void 0 !==
                    arguments[0] ? arguments[0] : {},
                    c = a.doc;
                c = void 0 === c ? document : c;
                var d = a.domCls;
                d = void 0 === d ? "" : d;
                a = a.user;
                (0, r["default"])(this, b);
                var f = (0, t["default"])(this, (b.__proto__ || (0, e["default"])(b)).call(this));
                f._isAnonymous = !1;
                f.show = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return f.emit("show", a.id), f.updatePos(a, b), q.timers.start(C.id), y.logger.cardShowAction(), f
                };
                f.hide = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (C.hint.visible) {
                        C.container.el.style.display = "none";
                        f.setState({
                            animate: !1,
                            visible: !1,
                            match: {}
                        });
                        var a = C.notfound && C.notfound.isEnabled();
                        if (C.notfound.disable(),
                            C.notfound.hide(), f.emit("hide", f.match || void 0), C.hint.currentEl && f.removeLoading(C.hint.currentEl), q.timers.stop(C.id), f.match) f.match.syn ? y.logger.synonymCardHideAction(a) : y.logger.cardHideAction();
                        return a && y.logger.synonymCardHideAction(a), f.match = null, C.container.el.style.display = "", f
                    }
                };
                f.animHide = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return f.setState({
                        animate: !0
                    }), h.once.call(C.el, h.whichAnimationEndEvent(), f.hide), f
                };
                f.openEditor = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    C.hint.currentEl && f.removeLoading(C.hint.currentEl);
                    f.emit("toeditor", f.match ?
                        f.match.editorId : void 0);
                    f.hide()
                };
                f.animateReplacement = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    f.emit("animateReplacement", {
                        matchId: a,
                        replacement: b,
                        visibleReplacement: c
                    })
                };
                f.addToDict = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    f.setState({
                        addedToDict: !0
                    });
                    f.emit("addtodict", {
                        match: f.match,
                        hide: f.hide,
                        animHide: f.animHide
                    })
                };
                f.inTarget = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = a.target,
                        c = a.clientX,
                        e = a.clientY;
                    a = a.detail;
                    var d = C.hint.currentEl,
                        p = (h.parentHasClass(b, C.cls) || h.hasClass(b, C.cls)) && (!d || !h.hasClass(d, "g-selection-anim"));
                    return !(!f.elementsFromPoint(c, e).some(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return h.hasClass(a,
                            C.cls)
                    }) || !C.hint.visible || 1 !== a) || (p ? d && d !== b ? (C.hint.fastHide(), void f.removeLoading(d)) : (f.addLoading(b), !0) : void(!C.hint.visible && d && f.removeLoading(d)))
                };
                f.addLoading = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !h.hasClass(a, C.pCls) && h.addClass(a, C.pCls)
                };
                f.removeLoading = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h.hasClass(a, C.pCls) && h.removeClass(a, C.pCls);
                    h.hasClass(a, "g-selection-anim") && a.parentNode && a.parentNode.removeChild(a)
                };
                f.showSynonyms = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a.animEl && 0 !== a.animEl.getClientRects().length ? (C.hint.currentEl && f.hide(), C.hint.currentEl =
                        a.animEl, a.synonyms && 0 === a.synonyms.meanings.length ? (C.notfound.enable(), C.notfound.show({
                            posEl: a.animEl,
                            text: "No synonyms found",
                            outerIframe: C.iframe
                        }), y.logger.synonymCardShowAction(!0)) : (f.setData(a), f.updatePos(a.animEl), f.setState({
                            visible: !0
                        }), y.logger.synonymCardShowAction(!1)), C.hint.setVisible(!0), q.timers.start(C.id), f) : f
                };
                f.setOuterIframe = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = a.contentDocument;
                    !a || b && a === C.iframe || (C.iframe = a, C.hint.setDocs(C.doc, b))
                };
                f._isAnonymous = a.anonymous;
                f._userType = a.type;
                a = (0, m["default"])("GrammarCard");
                var l = f.render(a, c),
                    v = g.findDOMNode(l.component),
                    n = (new w.HintImpl({
                        doc: c,
                        hint: v,
                        hideDelay: 500,
                        inTarget: f.inTarget,
                        cls: C.cls,
                        delay: 400,
                        onshow: f.show,
                        onhide: f.hide
                    })).bind();
                return C = {
                    id: a,
                    notfound: x.createTooltip({
                        cls: h.cs("gr-notfound-tooltip", "gr__tooltip_empty"),
                        enabled: !1,
                        doc: c
                    }),
                    windowEvents: {
                        keydown: f.hide,
                        scroll: f.hide,
                        resize: f.hide
                    },
                    doc: c,
                    domCls: d,
                    cls: "gr_",
                    pCls: "gr-progress",
                    container: l,
                    el: v,
                    hint: n
                }, f.hint = n, p.on(C.windowEvents, null, !0), f
            }
            return (0, u["default"])(b, a), (0, n["default"])(b, [{
                key: "updateState",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._isAnonymous = a.anonymous;
                    this._userType = a.type
                }
            }, {
                key: "elementsFromPoint",
                value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a && b ? C.doc.elementsFromPoint ? C.doc.elementsFromPoint(a, b) : [C.doc.elementFromPoint(a, b)] : []
                }
            }, {
                key: "setState",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    C.container.component.setState(a)
                }
            }, {
                key: "setData",
                value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a ? (this.setState({
                        match: a,
                        visible: !0,
                        addedToDict: !1
                    }), this.match = a, this._editorType = b, this) : this
                }
            }, {
                key: "updatePos",
                value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (null == a.parentNode) {
                        if (!a.id) return void this.hide();
                        a = C.doc.querySelector(".gr_" + a.id);
                        if (!a) return void this.hide();
                        C.hint.currentEl = a
                    }
                    a = z.getAllAbsRects(a, C.iframe);
                    b = (0, k["default"])(z.posToRect(C.el, f(a, b)), {
                        width: C.el.clientWidth,
                        height: C.el.clientHeight
                    });
                    b.rect.flip && (b.rect.top += C.el.clientHeight);
                    y.call("gnar.track", "cardOpened", {
                        direction: b.rect.flip ? "top" : "bottom",
                        pixelsToBottom: Math.round(b.height + b.delta.bottom),
                        cardHeight: b.height,
                        ratio: 1 + Math.round(10 * b.delta.bottom / b.height) / 10
                    });
                    this.setState({
                        pos: b
                    })
                }
            }, {
                key: "render",
                value: function(a,
                    b) {
                    var c = this;
                    return h.renderReactWithParent(l.createElement(B.PositionedCard, {
                        isAnonymous: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return c._isAnonymous
                        },
                        getUserType: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return c._userType
                        },
                        getEditorType: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return c._editorType
                        },
                        hide: this.hide,
                        openEditor: this.openEditor,
                        animateReplacement: this.animateReplacement,
                        addToDict: this.addToDict
                    }), b.documentElement, a, "grammarly-card")
                }
            }, {
                key: "remove",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    C.hint.unbind();
                    p.off(C.windowEvents, null, !0);
                    C.container.remove()
                }
            }]), b
        }(v.createClass(b));
        c.Card = a
    }, {
        "../dom": 215,
        "../inline-cards": 267,
        "../position": 289,
        "../timers": 301,
        "../tracking": 307,
        "../util": 322,
        "../window-events": 323,
        "./hint": 224,
        "./tooltip": 247,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/core-js/symbol": 32,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        emitter: "emitter",
        react: "react",
        "react-dom": "react-dom"
    }],
    222: [function(a,
        b, c) {
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var e = d(b);
        b = a("babel-runtime/helpers/inherits");
        var r = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var n = a("lodash"),
            t = a("react"),
            u = a("react-dom"),
            l = a("./iframe"),
            g = a("./signin-dialog"),
            q = a("./onboarding-dialog"),
            v = a("../util"),
            p = a("../message"),
            y = a("../timers"),
            z = a("../tracking"),
            h = a("../location"),
            w = a("../dom"),
            x = a("universal/shared/socket"),
            B = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return (0, k["default"])(this, b), (0, e["default"])(this, (b.__proto__ || (0, f["default"])(b)).apply(this, arguments))
                }
                return (0, r["default"])(b, a), (0, m["default"])(b, [{
                    key: "render",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return t.createElement("div", {
                                className: "gr_-editor gr-iframe-first-load",
                                style: {
                                    display: "none"
                                }
                            }, t.createElement("div", {
                                className: "gr_-editor_back"
                            }),
                            t.createElement(l.IframeComponent, null))
                    }
                }]), b
            }(t.Component);
        c.DialogComponent = B;
        c.Dialog = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a = "off" === a;
                w.toggleClass(V.body, a, "gr-disable-scroll");
                w.toggleClass(V.documentElement, a, "gr-disable-scroll")
            }

            function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                ia && !E.anonymous && m()
            }

            function e(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new g.SigninDialog({
                    doc: V,
                    user: a,
                    placement: b
                })
            }

            function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b("off");
                I = new q.OnboardingDialog({
                    doc: V,
                    user: E,
                    saveAnonymousProps: X
                });
                I.one("hide", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b("on");
                    p.emitFocusedTab("focus-editor", a)
                })
            }

            function f(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b("off");
                Z = e(c, a);
                Z.one("hide", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b("on");
                    p.emitFocusedTab("focus-editor", ia.editorId);
                    z.logger.signinClose(y.timers.stop(fa))
                });
                z.logger.signinOpen();
                z.fire("login-attempt", a)
            }

            function l() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                ja = !0;
                (Q = V.querySelector(".gr_-editor")) || (Q = u.findDOMNode(w.renderReactWithParent(t.createElement(B, null), V.documentElement, v.guid()).component));
                oa = Q.querySelector(".gr_-editor_back")
            }

            function k() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = {
                        "mail.google.com": "Gmail",
                        "facebook.com": "Facebook",
                        "twitter.com": "Twitter"
                    },
                    b = h.getDomain();
                return "Back to " +
                    (b && a[b] || document.title)
            }

            function r(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.stopPropagation();
                Y()
            }

            function m() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (N) {
                    T.el.style.background = "";
                    var a = la;
                    return la = function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        la = a;
                        T.refresh();
                        p.emitFocusedTab("after-refresh-dialog", b)
                    }, void Y()
                }
                T.refresh()
            }

            function C(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                p.emitBackground(x.MessageTypes.iframeMode, {
                    iframeMode: a,
                    id: ia.socketId
                })
            }

            function P(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = a.data,
                    c = a.caller,
                    e = a.isOnboarding;
                a = a.editorId;
                return y.timers.start(fa), ia = b, e ? d(a) : E.anonymous ? f(c, E) : (T.activate(), void aa(b))
            }

            function aa(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                ja || l();
                Q.style.opacity = "0";
                w.addClass(Q, "gr-_show");
                a = n.extend({
                    favicon: h.getFavicon(),
                    page: k()
                }, a);
                T.send(a);
                C(!0);
                setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return Q.style.opacity = "1"
                }, 100);
                b("off");
                w.listen(V.body, "keydown", da, !1);
                w.listen(oa, "click", r, !1);
                w.listen(Q, "click", r, !1);
                N = !0
            }

            function U(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = a.action;
                "edit" === b && la(a);
                "close" === b && Y();
                "initialized" === b && (V.documentElement.setAttribute("data-type", "Premium" === a.userType ? "freemium-plus" : "freemium"), setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return T.el.style.background = "transparent"
                }, 300));
                "socket" ===
                b && p.emitBackground(x.MessageTypes.client, a);
                "setSettings" === b && ea(a.data);
                "tracking" === b && a.method && z.call(a.method, a.param, a.props);
                "popup-editor-fix" === b && S();
                "open-url" === b && (z.fire("hook-clicked", a.placement), p.emitBackground("open-url", a.url))
            }

            function F(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                ia && a.socketId === ia.socketId && (b("ok"), a.action = "socket", T.send(a))
            }

            function Y() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                N && (N = !1, b("on"), Q.style.opacity = "0", w.removeClass(Q, "gr-_show"), w.removeClass(Q, "gr-iframe-first-load"), w.unlisten(V.body, "keydown", da, !1), w.unlisten(oa,
                    "click", r, !1), w.unlisten(Q, "click", r, !1), T.send({
                    action: "hide"
                }), C(!1), p.emitFocusedTab("dialog-closed", ia.editorId))
            }

            function da(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (v.keyCode(a) === v.ESC_KEY && N) return a.stopPropagation(), a.preventDefault(), Y()
            }
            var V = a.doc,
                T = a.iframe,
                E = a.user,
                W = a.page;
            a = a.actions;
            var ea = a.updateSettings,
                S = a.incFixed,
                X = a.saveAnonymousProps,
                fa = "Dialog",
                N = !1,
                Q = void 0,
                oa = void 0,
                ja = void 0,
                ia = void 0,
                Z = void 0,
                I = void 0,
                ca = W && W.dialectStrong;
            W = {
                show: P,
                hide: Y,
                updateState: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var c = !1 === E.anonymous && !1 === a.anonymous &&
                        E.premium !== a.premium,
                        e = ca !== b.dialectStrong;
                    E = a;
                    ca = b.dialectStrong;
                    Z && Z.updateUser(a);
                    c && T.refresh();
                    e && T.send({
                        action: "hard-reset"
                    })
                },
                preActivate: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    E.anonymous || T.activate()
                },
                render: l,
                getSignin: e,
                remove: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    window === window.top && (p.off("show-dialog", P), p.off("hide-dialog", Y), p.off("reset", c), p.off(x.MessageTypes.serverIframe, F));
                    T.deactivate();
                    T.off("message", U);
                    var a = Q && Q.parentNode;
                    a && a.parentNode && a.parentNode.removeChild(a)
                },
                refresh: m
            };
            T && T.on("message", U);
            window === window.top &&
                (p.on("show-dialog", P), p.on("hide-dialog", Y), p.on("reset", c), p.on(x.MessageTypes.serverIframe, F));
            var la = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                p.emitFocusedTab("editor-set-state", a)
            };
            return W
        }
    }, {
        "../dom": 215,
        "../location": 277,
        "../message": 278,
        "../timers": 301,
        "../tracking": 307,
        "../util": 322,
        "./iframe": 225,
        "./onboarding-dialog": 229,
        "./signin-dialog": 238,
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        lodash: "lodash",
        react: "react",
        "react-dom": "react-dom",
        "universal/shared/socket": 345
    }],
    223: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("./tooltip"),
            f = a("../dom"),
            k = a("../tracking");
        c.createErrorTooltip = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                f.hasClass(a.target, "fr-reload-tab") && (k.logger.tabReloadClick(), setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return window.location.reload(!0)
                }, 200))
            }
            var c = a.el,
                n = a.win;
            a = d.createTooltip({
                posEl: c,
                html: "<span class='fr-tooltip-title'>Cannot connect to Grammarly.</span> Please <span class='fr-reload-tab'>reload</span> the browser tab and check your internet connection. <span class='fr-dialog-br'></span>Don't lose your work! Copy any unsaved text before you reload the tab.",
                doc: c.ownerDocument,
                cls: "fr-btn-offline-tooltip",
                outerIframe: a.outerIframe,
                enabled: !1
            });
            f.listen(n, "click", b);
            var t = a.remove;
            return a.remove = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                t();
                f.unlisten(n, "click", b)
            }, a
        }
    }, {
        "../dom": 215,
        "../tracking": 307,
        "./tooltip": 247
    }],
    224: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/assign");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = a("../util"),
            r = a("../dom");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = this;
                (0, k["default"])(this, a);
                this.hideDelay = 10;
                this.onshow = function(a, b) {};
                this.onhide = e._f;
                this.onmousemove = function(a, b) {};
                this.onInnerMouseMove = function(a) {};
                this.inTarget = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a = a.target;
                    if (r.parentHasClass(a, c.cls) || r.hasClass(a, c.cls)) return !c.currentEl || c.currentEl === a || void c.fastHide()
                };
                this.bind = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : c.doc;
                    return c.doc2 && c.doc2 !== b && c.bind(a,
                        c.doc2), r.listen(b.body, "resize", c.fastHide, a), r.listen(b, {
                        gramMouse: c.mousemove,
                        mousemove: c.mousemove,
                        scroll: c.fastHide
                    }, e._f, a), r.listen(b, "click", c.click, a, !0), r.listen(c.hint, "mousemove", c.innerMouseMove, a), c
                };
                this.setDocs = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    c.unbind();
                    (0, f["default"])(c, {
                        doc: a,
                        doc2: b
                    });
                    c.bind()
                };
                this.unbind = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return c.bind(!0, a)
                };
                this.fastHide = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    c.onhide();
                    c.cancelTimeout("show");
                    c.cancelTimeout("hide");
                    c.visible = !1;
                    c.currentEl = null
                };
                this.innerMouseMove = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    c.onInnerMouseMove(a);
                    a.preventDefault();
                    a.stopPropagation();
                    c.cancelTimeout("hide")
                };
                this.click = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !c.elInHint(a.target) && !c.inTarget(a) && c.fastHide()
                };
                this.elInHint = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a && (r.inEl(a, c.hint) || a === c.hint)
                };
                this.mousemove = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = a.target;
                    if ("IFRAME" !== b.tagName) {
                        if (a.detail && a.detail.id) {
                            var d = document.querySelector("[data-gr-id='" + a.detail.id + "']");
                            d && (b = d, a = {
                                target: b,
                                clientX: a.detail.e.clientX,
                                clientY: a.detail.e.clientY
                            })
                        }
                        if (e.isSafari() && "mousemove" === a.type) {
                            if (a.ctrlKey || a.altKey ||
                                a.shiftKey || a.metaKey) return c.mouseMoveCoordinates = a.x + "-" + a.y;
                            if (c.mouseMoveCoordinates === a.x + "-" + a.y) return
                        }
                        if (c.elInHint(b)) return c.onmousemove(a, !0), c.cancelTimeout("show"), void c.cancelTimeout("hide");
                        if (!c.inTarget(a)) return c.onmousemove(a, !1), void(c.visible ? c.hide() : c.cancelTimeout("show"));
                        c.onmousemove(a, !0);
                        c.visible || (c.show(a, b), c.cancelTimeout("hide"), c.currentEl = b)
                    }
                };
                this.show = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return c.showTimeout ? c : (c.cancelTimeout("hide"), c.showTimeout = setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        c.cancelTimeout("show");
                        (c.elInHint(b) || c.inTarget(a)) && (c.visible = !0, c.onshow(b, {
                            pageX: a.pageX,
                            pageY: a.pageY,
                            clientX: a.clientX,
                            clientY: a.clientY
                        }))
                    }, c.delay), c)
                };
                this.hide = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return c.hideTimeout ? c : (c.hideTimeout = setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        c.onhide();
                        c.visible = !1;
                        c.currentEl = null
                    }, c.hideDelay), c)
                };
                (0, f["default"])(this, b)
            }
            return (0, m["default"])(a, [{
                key: "cancelTimeout",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    "show" === a && this.showTimeout ? (clearTimeout(this.showTimeout), this.showTimeout = null) : "hide" === a && this.hideTimeout && (clearTimeout(this.hideTimeout),
                        this.hideTimeout = null)
                }
            }, {
                key: "setVisible",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this.visible = a;
                    this.cancelTimeout("hide")
                }
            }]), a
        }();
        c.HintImpl = a
    }, {
        "../dom": 215,
        "../util": 322,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35
    }],
    225: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("react"),
            f = a("emitter"),
            k = a("dompurify"),
            m = a("../util"),
            e = a("../timers"),
            r = a("../tracking"),
            n = a("../dom"),
            t = a("lib/config");
        c.baseCls = "gr_-ifr";
        c.selector =
            "." + c.baseCls;
        c.IframeComponent = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.createElement("iframe", {
                className: c.baseCls + " gr-_dialog-content"
            })
        };
        c.iFrame = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : m._f;
                x || (w || (w = z.querySelector(c.selector), G.el = w, w)) && (n.listen(window.top, "message", p, !1), m.isEdge() ? w.src || d(a) : w.srcdoc || q(a), n.addClass(w, "gr-freemium-ifr"), x = !0, G.activated = x)
            }

            function d() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : m._f;
                w.setAttribute("src", t.URLS.edgePopupUrl);
                n.once.call(w, "load", a)
            }

            function q() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : m._f;
                w.setAttribute("srcdoc", window.GR_INLINE_POPUP || "");
                n.once.call(w, "load", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    try {
                        window.ACTIVATE_GR_POPUP && window.ACTIVATE_GR_POPUP(w.contentWindow, w.contentDocument, k), a()
                    } catch (D) {
                        console.error("Cannot activate popup", D), r.logger.popupLoadError(D && D.message, D && D.name)
                    }
                })
            }

            function v(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.grammarly = !0;
                try {
                    w.contentWindow.postMessage(a, "*")
                } catch (D) {
                    console.error("iframe send error", D)
                }
            }

            function p(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if ((a =
                        a.data) && a.grammarly) {
                    var b = a.action;
                    if ("user" === b) return u();
                    if (C = !0, "initialized" === b && B) e.timers.stop("open_editor"), B.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return G.send(a)
                    });
                    e.timers.stop("open_editor");
                    "accepted" === b && (B = []);
                    G.emit("message", a)
                }
            }

            function u() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                v({
                    action: "user",
                    user: h
                })
            }
            var z = a.doc,
                h = a.user,
                w = void 0,
                x = void 0,
                B = [],
                C = !1,
                G = f({
                    activate: b,
                    refresh: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : m._f;
                        w ? u() : b(a)
                    },
                    send: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return C || b ? void v(a) : B.push(a)
                    },
                    selector: c.selector,
                    baseCls: c.baseCls,
                    updateState: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        h = a
                    },
                    deactivate: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        n.unlisten(window.top, "message", p, !1)
                    }
                });
            return G
        }
    }, {
        "../dom": 215,
        "../timers": 301,
        "../tracking": 307,
        "../util": 322,
        dompurify: "dompurify",
        emitter: "emitter",
        "lib/config": 211,
        react: "react"
    }],
    226: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            Object.defineProperty(c, "__esModule", {
                value: !0
            });
            var d = a("./iframe"),
                f = a("./dialog"),
                k = a("./card"),
                m = a("./notifications");
            c.initElements = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = a.app,
                    c = a.doc;
                c = void 0 === c ? document : c;
                var e = a.user,
                    u = a.page;
                a = a.actions;
                var l = b.iframe = d.iFrame({
                    doc: c,
                    user: e
                });
                return b.dialog = f.Dialog({
                    doc: c,
                    iframe: l,
                    user: e,
                    actions: a,
                    page: u
                }), b.dialog.render(), b.card = new k.Card({
                    doc: c,
                    user: e
                }), b.notifications = new m.Notifications({
                    doc: c,
                    actions: a
                }), {
                    clear: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        b.iframe && b.iframe.deactivate();
                        b.dialog && b.dialog.remove();
                        b.card && b.card.remove();
                        b.iframe = null;
                        b.dialog = null;
                        b.card = null
                    },
                    updateState: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var c = a.user;
                        a = a.page;
                        b.iframe && b.iframe.updateState(c);
                        b.dialog && b.dialog.updateState(c, a);
                        b.card && b.card.updateState(c)
                    }
                }
            }
        },
        {
            "./card": 221,
            "./dialog": 222,
            "./iframe": 225,
            "./notifications": 228
        }
    ],
    227: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var e = d(b);
        b = a("babel-runtime/helpers/inherits");
        var r = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var n = a("react"),
            t = a("react-dom"),
            u = a("lib/dom"),
            l = a("lib/tracking"),
            g = {
                notification: "_988ad5-notification",
                title: "_988ad5-title",
                reminder: "_988ad5-reminder",
                text: "_988ad5-text",
                disableOnTab: "_988ad5-disableOnTab",
                disable: "_988ad5-disable",
                bold: "_988ad5-bold",
                action: "_988ad5-action",
                secondary: "_988ad5-secondary",
                close: "_988ad5-close"
            },
            q = {
                disable: {
                    title: "Grammarly is now turned off on ",
                    text: "The extension will remain disabled on this website until you enable it from the toolbar icon."
                },
                disableOnTab: {
                    title: "Grammarly is temporarily disabled on ",
                    text: "We will be here next time you visit this website. You can enable it from the toolbar icon."
                },
                reminder: {
                    title: "Your writing is still not being checked on ",
                    text: "Are you communicating at your best? Switch the extension back on and be confident about your writing."
                }
            };
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, k["default"])(this, b);
                var a = (0, e["default"])(this, (b.__proto__ || (0, f["default"])(b)).call(this));
                return a.onMouseEnter = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    clearTimeout(a._hideTimeout)
                }, a.onMouseLeave = function() {
                    a._hideTimeout =
                        setTimeout(a.cancel, 500)
                }, a.cancel = function() {
                    a._node ? (a._node.style.opacity = "0", a._node.addEventListener("transitionend", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.props.remove()
                    }, !1)) : a.props.remove()
                }, a.state = {
                    styles: {}
                }, a
            }
            return (0, r["default"])(b, a), (0, m["default"])(b, [{
                key: "componentDidMount",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this,
                        b = t.findDOMNode(this.refs.gNotification);
                    b.style.setProperty("transition", "none", "important");
                    this._requestAnimationFrame = requestAnimationFrame(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        b.style.setProperty("transition", "opacity 0.35s cubic-bezier(0.255,0.89,0.25,1.135),transform 0.35s cubic-bezier(0.255,0.89,0.25,1.135)",
                            "important");
                        requestAnimationFrame(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            if (b.style.opacity = "1", b.style.transform) {
                                var a = b.style.transform.split("(")[1].split(")")[0].split(","),
                                    c = parseInt(a[0], 10);
                                a = parseInt(a[1], 10);
                                b.style.transform = "translate(" + c + "px, " + (a + b.clientHeight) + "px)"
                            }
                        })
                    });
                    this._node = b;
                    this.setState(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return {
                            styles: a.props.styles
                        }
                    });
                    this._hideTimeout = setTimeout(this.cancel, 3E3)
                }
            }, {
                key: "componentWillUnmount",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    cancelAnimationFrame(this._requestAnimationFrame)
                }
            }, {
                key: "renderButtons",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a =
                        this;
                    switch (this.props.type) {
                        case "disable":
                            return n.createElement("div", null, n.createElement("button", {
                                className: g.action,
                                onClick: this.cancel
                            }, "Got it"), n.createElement("button", {
                                className: u.cs(g.action, g.secondary),
                                onClick: this.props.enableOnDomain
                            }, "Enable now"));
                        case "disableOnTab":
                            return n.createElement("button", {
                                className: g.action,
                                onClick: this.cancel
                            }, "Got it");
                        case "reminder":
                            return n.createElement("div", null, n.createElement("button", {
                                    className: g.action,
                                    onClick: this.props.enableOnDomain
                                }, "Enable Grammarly"),
                                n.createElement("button", {
                                    className: u.cs(g.action, g.secondary),
                                    onClick: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        l.call("gnar.track", "disableReminderDismiss");
                                        a.cancel()
                                    }
                                }, "Keep disabled"))
                    }
                }
            }, {
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = q[this.props.type],
                        b = a.text;
                    a = a.title;
                    return n.createElement("div", {
                        ref: "gNotification",
                        className: u.cs(g.notification, g[this.props.type]),
                        style: this.state.styles,
                        onMouseEnter: this.onMouseEnter,
                        onMouseLeave: this.onMouseLeave
                    }, n.createElement("p", {
                        className: g.title
                    }, a + this.props.domain), n.createElement("p", {
                        className: g.text
                    }, b), this.renderButtons(), n.createElement("button", {
                        className: g.close,
                        onClick: this.cancel
                    }))
                }
            }]), b
        }(n.Component);
        c.NotificationComponent = a
    }, {
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        "lib/dom": 215,
        "lib/tracking": 307,
        react: "react",
        "react-dom": "react-dom"
    }],
    228: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ?
                a : {
                    "default": a
                }
        }
        b = a("babel-runtime/helpers/defineProperty");
        var f = d(b);
        b = a("babel-runtime/core-js/object/assign");
        var k = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var m = d(b);
        b = a("babel-runtime/helpers/createClass");
        var e = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var r = a("react"),
            n = a("react-dom"),
            t = a("lib/location"),
            u = a("lib/dom"),
            l = a("./components"),
            g = a("../../tracking");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = this,
                    e = b.doc;
                b = b.actions;
                (0, m["default"])(this, a);
                this._getStyles = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a =
                        u.transformProp(c._doc);
                    return (0, k["default"])({}, (0, f["default"])({}, a, "translate(-10px, -145px)"))
                };
                this._windowResize = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = c._getStyles();
                    c._component.setState(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return {
                            styles: a
                        }
                    })
                };
                this._doc = e;
                this.actions = b
            }
            return (0, e["default"])(a, [{
                key: "_checkContainer",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._container || (this._container = this._doc.createElement("g-notifications"), this._doc.documentElement.appendChild(this._container))
                }
            }, {
                key: "showDisable",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._show("disable")
                }
            }, {
                key: "showDisableOnTab",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._show("disableOnTab")
                }
            }, {
                key: "showReminder",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._show("reminder");
                    g.call("gnar.track", "disableReminderShown")
                }
            }, {
                key: "_show",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._render(a);
                    this.isActive = !0;
                    u.listen(window, "resize", this._windowResize, !1);
                    g.logger.notificationShown(a)
                }
            }, {
                key: "hide",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this.isActive = !1;
                    this._container && n.unmountComponentAtNode(this._container);
                    u.unlisten(window, "resize", this._windowResize, !1);
                    void 0 !== a && g.logger.notificationHide(a)
                }
            }, {
                key: "_render",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = this;
                    this._checkContainer();
                    var c = this._getStyles(),
                        e = t.getDomain();
                    c = r.createElement(l.NotificationComponent, {
                        enableOnDomain: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b.actions.toggleSite(!0, e);
                            b.remove(a);
                            g.fire("checking-toggled", {
                                enabled: !0,
                                placement: "reminder" === a ? "reminder" : "notification"
                            })
                        },
                        styles: c,
                        remove: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return b.remove(a)
                        },
                        type: a,
                        domain: e
                    });
                    this._component = n.render(c, this._container)
                }
            }, {
                key: "remove",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this.hide(a);
                    this._container && n.unmountComponentAtNode(this._container);
                    this._container && this._container.parentNode && this._container.parentNode.removeChild(this._container)
                }
            }]), a
        }();
        c.Notifications = a
    }, {
        "../../tracking": 307,
        "./components": 227,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/defineProperty": 36,
        "lib/dom": 215,
        "lib/location": 277,
        react: "react",
        "react-dom": "react-dom"
    }],
    229: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var e = d(b);
        b = a("babel-runtime/helpers/inherits");
        var r = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var n = a("react"),
            t = a("react-dom"),
            u = a("lib/util"),
            l = a("lib/dom"),
            g = a("./onboarding-dialog");
        a = a("emitter");
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = a.doc,
                    d = a.container,
                    h = a.user;
                a = a.saveAnonymousProps;
                (0, k["default"])(this, b);
                var p =
                    (0, e["default"])(this, (b.__proto__ || (0, f["default"])(b)).call(this));
                return p.updateUser = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    p.user = a;
                    p.render()
                }, p.onKey = function(a) {
                    u.keyCode(a) === u.ESC_KEY && p.dialogComponent && p.dialogComponent.onClose()
                }, p.onClose = function() {
                    p.emit("hide");
                    p.remove()
                }, p.doc = c, p.user = h, p.saveAnonymousProps = a, d && (p.container = d), p.render(), p
            }
            return (0, r["default"])(b, a), (0, m["default"])(b, [{
                key: "checkContainer",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this.container || (this.container = this.doc.createElement("onboarding_dialog"), this.doc.documentElement.appendChild(this.container),
                        l.listen(this.doc.defaultView, "keydown", this.onKey, !1))
                }
            }, {
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this.user;
                    this.checkContainer();
                    this.dialogComponent = t.render(n.createElement(g.OnboardingDialogComponent, {
                        username: a && a.firstName || "",
                        isAnonymous: !a || a.anonymous,
                        saveAnonymousProps: this.saveAnonymousProps,
                        onClose: this.onClose
                    }), this.container)
                }
            }, {
                key: "remove",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    l.unlisten(this.doc.defaultView, "keydown", this.onKey, !1);
                    this.container && t.unmountComponentAtNode(this.container);
                    this.container.parentNode &&
                        this.container.parentNode.removeChild(this.container)
                }
            }]), b
        }(u.createClass(a));
        c.OnboardingDialog = a
    }, {
        "./onboarding-dialog": 230,
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        emitter: "emitter",
        "lib/dom": 215,
        "lib/util": 322,
        react: "react",
        "react-dom": "react-dom"
    }],
    230: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/helpers/defineProperty");
        var f = d(b);
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var k = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var m = d(b);
        b = a("babel-runtime/helpers/createClass");
        var e = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var r = d(b);
        b = a("babel-runtime/helpers/inherits");
        var n = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var t = a("react"),
            u = a("react-dom"),
            l = a("lib/util"),
            g = a("lib/dom"),
            q = a("../onboarding"),
            v = a("lib/tracking");
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0,
                    m["default"])(this, b);
                var a = (0, r["default"])(this, (b.__proto__ || (0, k["default"])(b)).apply(this, arguments));
                return a.state = {
                    hide: !1
                }, a.onClose = function(b) {
                    b && b.stopPropagation();
                    a.setState({
                        hide: !0
                    });
                    b = u.findDOMNode(a.refs["onboarding-dialog-el"]);
                    var c = a.refs.onboarding;
                    void 0 !== c && c.state.stepIndex === c.steps.length - 1 && v.fire("onboardingTutorialLetsWrite-button-click");
                    b && b.addEventListener("animationend", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.props.onClose()
                    })
                }, a
            }
            return (0, n["default"])(b, a), (0, e["default"])(b, [{
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a, b = g.cs((a = {}, (0, f["default"])(a, "_9375ba-onboardingDialog", !0), (0, f["default"])(a, "_9375ba-hide", this.state.hide), (0, f["default"])(a, "_9375ba-windows", l.isWindows()), a));
                    return t.createElement("div", {
                            ref: "onboarding-dialog-el",
                            className: b
                        }, t.createElement("div", {
                            className: "_9375ba-content"
                        }, t.createElement("div", {
                            className: "_9375ba-viewContainer"
                        }, t.createElement(q.Onboarding, {
                            ref: "onboarding",
                            isAnonymous: this.props.isAnonymous,
                            onClose: this.onClose,
                            saveAnonymousProps: this.props.saveAnonymousProps
                        }))),
                        t.createElement("div", {
                            className: "_9375ba-btnClose",
                            onClick: this.onClose
                        }))
                }
            }]), b
        }(t.Component);
        c.OnboardingDialogComponent = a
    }, {
        "../onboarding": 232,
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/defineProperty": 36,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        "lib/dom": 215,
        "lib/tracking": 307,
        "lib/util": 322,
        react: "react",
        "react-dom": "react-dom"
    }],
    231: [function(a,
        b, c) {
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("react");
        c.FinishStep = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.onClose;
            return d.createElement("div", {
                className: "_2333f7-step"
            }, d.createElement("div", {
                className: "_2333f7-content"
            }, d.createElement("div", {
                className: "_2333f7-title"
            }, "You\u2019re fully protected!"), d.createElement("div", {
                className: "_2333f7-text"
            }, "Now, whenever you see the green Grammarly logo, it means that Grammarly has not found any mistakes. Happy writing!"), d.createElement("button", {
                "data-name": "lets-write-btn",
                className: "_2333f7-button",
                onClick: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return b()
                }
            }, "let's write")))
        }
    }, {
        react: "react"
    }],
    232: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var e = d(b);
        b = a("babel-runtime/helpers/inherits");
        var r = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var n = a("react"),
            t = a("./start"),
            u = a("./info"),
            l = a("./finish"),
            g = a("./personalize"),
            q = a("./registration"),
            v = a("lib/tracking"),
            p = a("lib/dom"),
            y = {
                start: "_2333f7-start",
                info: "_2333f7-info",
                finish: "_2333f7-finish",
                startVideo: "_2333f7-startVideo",
                infoVideo: "_2333f7-infoVideo",
                finishVideo: "_2333f7-finishVideo",
                step: "_2333f7-step",
                content: "_2333f7-content",
                title: "_2333f7-title",
                text: "_2333f7-text",
                button: "_2333f7-button",
                inactive: "_2333f7-inactive",
                link: "_2333f7-link",
                personalize: "_2333f7-personalize",
                registration: "_2333f7-registration",
                progress: "_2333f7-progress",
                bar: "_2333f7-bar",
                progressValue: "_2333f7-progressValue",
                barValue: "_2333f7-barValue",
                grid: "_2333f7-grid",
                item: "_2333f7-item",
                name: "_2333f7-name",
                description: "_2333f7-description",
                footer: "_2333f7-footer",
                skipSettings: "_2333f7-skipSettings",
                slider: "_2333f7-slider",
                sliderItem: "_2333f7-sliderItem",
                sliderActive: "_2333f7-sliderActive",
                placeholder: "_2333f7-placeholder"
            };
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, k["default"])(this, b);
                var a = (0, e["default"])(this, (b.__proto__ || (0, f["default"])(b)).call(this));
                return a.transforms = ["0", "18px", "36px", "36px", "54px"], a.classes = ["start", "info", "personolize", "registration", "finish"], a.nextStep = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a.setState({
                        stepIndex: a.state.stepIndex + 1
                    })
                }, a.lastStep = function() {
                    a.setState({
                        stepIndex: a.steps.length - 1
                    })
                }, a.videoLoaded = function() {
                    clearTimeout(a.placeholderTimeout);
                    v.logger.onboardingVideoLoaded()
                }, a.state = {
                    stepIndex: 0,
                    placeholder: !1
                }, a
            }
            return (0, r["default"])(b, a), (0, m["default"])(b, [{
                key: "componentWillMount",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this;
                    this.steps = [n.createElement(t.StartStep, {
                        nextStep: this.nextStep
                    }), n.createElement(u.InfoStep, {
                        nextStep: this.nextStep,
                        lastStep: this.lastStep
                    }), n.createElement(g.PersonalizeStep, {
                        nextStep: this.props.isAnonymous ? this.nextStep : this.lastStep,
                        lastStep: this.lastStep,
                        saveAnonymousProps: this.props.saveAnonymousProps
                    }), n.createElement(q.RegistrationStep, {
                        nextStep: this.nextStep,
                        lastStep: this.lastStep
                    }), n.createElement(l.FinishStep, {
                        nextStep: this.nextStep,
                        onClose: this.props.onClose
                    })];
                    this.placeholderTimeout = setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.setState({
                            stepIndex: a.state.stepIndex,
                            placeholder: !0
                        })
                    }, 1500)
                }
            }, {
                key: "componentWillUnmount",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    clearTimeout(this.placeholderTimeout)
                }
            }, {
                key: "componentDidMount",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    v.fire("onboardingTutorial-popup-show")
                }
            }, {
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = {
                            transform: "translateX(" + this.transforms[this.state.stepIndex] + ")"
                        },
                        b = p.cs(y[this.classes[this.state.stepIndex]], this.state.placeholder && y.placeholder);
                    return n.createElement("div", {
                        className: b
                    }, n.createElement("video", {
                        className: y.startVideo,
                        autoPlay: !0,
                        loop: !0,
                        preload: "auto",
                        onLoadedData: this.videoLoaded
                    }, n.createElement("source", {
                        src: "https://s3.amazonaws.com/features-team-extension/onboarding/1cards.mp4",
                        type: "video/mp4"
                    })), n.createElement("video", {
                        className: y.infoVideo,
                        autoPlay: !0,
                        loop: !0,
                        preload: "auto"
                    }, n.createElement("source", {
                        src: "https://s3.amazonaws.com/features-team-extension/onboarding/2personalization.mp4",
                        type: "video/mp4"
                    })), n.createElement("video", {
                        className: y.finishVideo,
                        autoPlay: !0,
                        loop: !0,
                        preload: "auto"
                    }, n.createElement("source", {
                        src: "https://s3.amazonaws.com/features-team-extension/onboarding/3gbutton.mp4",
                        type: "video/mp4"
                    })), this.steps[this.state.stepIndex] || null, n.createElement("div", {
                        className: y.slider
                    }, n.createElement("div", {
                        className: y.sliderActive,
                        style: a
                    }), n.createElement("div", {
                        className: y.sliderItem
                    }), n.createElement("div", {
                        className: y.sliderItem
                    }), n.createElement("div", {
                        className: y.sliderItem
                    }), n.createElement("div", {
                        className: y.sliderItem
                    })))
                }
            }]), b
        }(n.Component);
        c.Onboarding = a
    }, {
        "./finish": 231,
        "./info": 233,
        "./personalize": 234,
        "./registration": 235,
        "./start": 237,
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        "lib/dom": 215,
        "lib/tracking": 307,
        react: "react"
    }],
    233: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("react"),
            f = a("lib/tracking");
        c.InfoStep = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.nextStep,
                c = a.lastStep;
            return d.createElement("div", {
                className: "_2333f7-step"
            }, d.createElement("div", {
                className: "_2333f7-content"
            }, d.createElement("div", {
                className: "_2333f7-title"
            }, "Personalize Grammarly ", d.createElement("br", null), " for More Relevant Checking"), d.createElement("div", {
                className: "_2333f7-text"
            }, "Write more effectively by letting Grammarly", d.createElement("br", null), " know a little bit about your preferences."), d.createElement("button", {
                "data-name": "personalize-btn",
                className: "_2333f7-button",
                onClick: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b();
                    f.fire("onboardingTutorialPersonalize-button-click")
                }
            }, "personalize"), d.createElement("button", {
                "data-name": "skip-btn",
                className: "_2333f7-link",
                onClick: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return c()
                }
            }, "skip")))
        }
    }, {
        "lib/tracking": 307,
        react: "react"
    }],
    234: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/keys");
        var f = d(b);
        b = a("babel-runtime/helpers/defineProperty");
        var k = d(b);
        b = a("babel-runtime/core-js/object/assign");
        var m = d(b);
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var e = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var r = d(b);
        b = a("babel-runtime/helpers/createClass");
        var n =
            d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var t = d(b);
        b = a("babel-runtime/helpers/inherits");
        var u = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var l = a("react"),
            g = a("./select"),
            q = a("lib/dom"),
            v = a("lib/tracking"),
            p = [{
                val: "work",
                title: "WORK"
            }, {
                val: "school",
                title: "SCHOOL"
            }, {
                val: "otherProjects",
                title: "OTHER PROJECTS"
            }],
            y = [{
                val: "american",
                title: "AMERICAN ENGLISH"
            }, {
                val: "british",
                title: "BRITISH ENGLISH"
            }],
            z = [{
                val: "english",
                title: "ENGLISH"
            }, {
                val: "notEnglish",
                title: "NOT ENGLISH"
            }],
            h = [{
                val: "beginner",
                title: "BEGINNER"
            }, {
                val: "intermediate",
                title: "INTERMEDIATE"
            }, {
                val: "advanced",
                title: "ADVANCED"
            }];
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, r["default"])(this, b);
                var a = (0, t["default"])(this, (b.__proto__ || (0, e["default"])(b)).call(this));
                return a.change = function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a.setState({
                        isSaveActive: !0,
                        values: (0, m["default"])({}, a.state.values, (0, k["default"])({}, b, c))
                    })
                }, a.onSaveClick = function() {
                    var b = a.state,
                        c = b.values;
                    !1 !== b.isSaveActive && (b = (0, f["default"])(c).reduce(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return c[b] !== g.DEFAULT_SELECT_VALUE &&
                            (a[b] = c[b]), a
                    }, {}), a.props.saveAnonymousProps(b), a.props.nextStep(), v.fire("onboardingTutorialSave-button-click"), v.fire("login-attempt", "onboarding_personalization"))
                }, a.state = {
                    values: {
                        writingType: g.DEFAULT_SELECT_VALUE,
                        dialectStrong: g.DEFAULT_SELECT_VALUE,
                        primaryLanguage: g.DEFAULT_SELECT_VALUE,
                        grammarSkills: g.DEFAULT_SELECT_VALUE
                    },
                    isSaveActive: !1
                }, a
            }
            return (0, u["default"])(b, a), (0, n["default"])(b, [{
                key: "getProgressInPercents",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this,
                        b = (0, f["default"])(this.state.values),
                        c = b.filter(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.state.values[b] !==
                                g.DEFAULT_SELECT_VALUE
                        }).length;
                    return Math.round(c / b.length * 100)
                }
            }, {
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this,
                        b = this.getProgressInPercents(),
                        c = {
                            transform: "scaleX(" + b / 100 + ")"
                        };
                    return l.createElement("div", {
                            className: q.cs("_2333f7-step", "_2333f7-personalize")
                        }, l.createElement("div", {
                            className: "_2333f7-content"
                        }, l.createElement("div", {
                            className: "_2333f7-title"
                        }, "Personalize"), l.createElement("div", {
                            className: "_2333f7-progress"
                        }, "Your preferences are ", l.createElement("span", {
                                className: "_2333f7-progressValue"
                            },
                            b, "%"), " custom", l.createElement("div", {
                            className: "_2333f7-bar"
                        }, l.createElement("div", {
                            className: "_2333f7-barValue",
                            style: c
                        }))), l.createElement("div", {
                                className: "_2333f7-grid"
                            }, l.createElement("div", {
                                "data-name": "writingType",
                                className: "_2333f7-item"
                            }, l.createElement("div", {
                                className: "_2333f7-name"
                            }, "Most of my writing is for"), l.createElement(g.Select, {
                                id: "writingType",
                                options: p,
                                change: this.change
                            }), l.createElement("div", {
                                className: "_2333f7-description"
                            }, "Our algorithms will show corrections relevant to your writing style")),
                            l.createElement("div", {
                                "data-name": "dialectStrong",
                                className: "_2333f7-item"
                            }, l.createElement("div", {
                                className: "_2333f7-name"
                            }, "I prefer to write in"), l.createElement(g.Select, {
                                id: "dialectStrong",
                                options: y,
                                change: this.change
                            }), l.createElement("div", {
                                className: "_2333f7-description"
                            }, "Select which dialectical conventions we should follow")), l.createElement("div", {
                                "data-name": "primaryLanguage",
                                className: "_2333f7-item"
                            }, l.createElement("div", {
                                className: "_2333f7-name"
                            }, "My primary language is"), l.createElement(g.Select, {
                                id: "primaryLanguage",
                                options: z,
                                change: this.change
                            }), l.createElement("div", {
                                className: "_2333f7-description"
                            }, "This setting helps us understand your needs better")), l.createElement("div", {
                                "data-name": "grammarSkills",
                                className: "_2333f7-item"
                            }, l.createElement("div", {
                                className: "_2333f7-name"
                            }, "My grammar skills are"), l.createElement(g.Select, {
                                id: "grammarSkills",
                                options: h,
                                change: this.change
                            }), l.createElement("div", {
                                className: "_2333f7-description"
                            }, "Our algorithms will show corrections relevant to your writing level")))),
                        l.createElement("footer", {
                            className: "_2333f7-footer"
                        }, l.createElement("button", {
                            "data-name": "save-btn",
                            className: q.cs("_2333f7-button", !1 === this.state.isSaveActive && "_2333f7-inactive"),
                            onClick: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return a.onSaveClick()
                            }
                        }, "save"), l.createElement("button", {
                            "data-name": "later-btn",
                            className: "_2333f7-link",
                            onClick: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return a.props.lastStep()
                            }
                        }, "later")))
                }
            }]), b
        }(l.Component);
        c.PersonalizeStep = a
    }, {
        "./select": 236,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/core-js/object/keys": 29,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/defineProperty": 36,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        "lib/dom": 215,
        "lib/tracking": 307,
        react: "react"
    }],
    235: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var e = d(b);
        b = a("babel-runtime/helpers/inherits");
        var r = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var n = a("react"),
            t = a("../signin/form"),
            u = a("lib/dom");
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (0, k["default"])(this, b), (0, e["default"])(this, (b.__proto__ || (0, f["default"])(b)).apply(this, arguments))
            }
            return (0, r["default"])(b, a), (0, m["default"])(b, [{
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this;
                    return n.createElement("div", {
                        className: u.cs("_2333f7-step",
                            "_2333f7-registration")
                    }, n.createElement(t.Form, {
                        ref: "login",
                        showOnboardingVersion: !0,
                        username: "",
                        placement: "onboarding_personalization",
                        onSuccess: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.props.lastStep()
                        }
                    }), n.createElement("button", {
                        "data-name": "dont-save-my-settings-btn",
                        className: u.cs("_2333f7-link", "_2333f7-skipSettings"),
                        onClick: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.props.lastStep()
                        }
                    }, "Don\u2019t save my settings"))
                }
            }]), b
        }(n.Component);
        c.RegistrationStep = a
    }, {
        "../signin/form": 243,
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        "lib/dom": 215,
        react: "react"
    }],
    236: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var e =
            d(b);
        b = a("babel-runtime/helpers/inherits");
        var r = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var n = a("react"),
            t = a("lib/util");
        c.DEFAULT_SELECT_VALUE = "";
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, k["default"])(this, b);
                var a = (0, e["default"])(this, (b.__proto__ || (0, f["default"])(b)).call(this));
                return a.selectOnChange = function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var c = a.props,
                        e = c.id;
                    c = c.change;
                    b = b.target;
                    var d = b.value;
                    b.style.color = "#00B281";
                    c(e, d)
                }, a.state = {
                    val: c.DEFAULT_SELECT_VALUE
                }, a
            }
            return (0, r["default"])(b, a), (0, m["default"])(b, [{
                key: "componentDidMount",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    !1 !== t.isEdge() && this.refs["select-" + this.props.id].addEventListener("change", this.selectOnChange)
                }
            }, {
                key: "componentWillUnmount",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    !1 !== t.isEdge() && this.refs["select-" + this.props.id].removeEventListener("change", this.selectOnChange)
                }
            }, {
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this,
                        b = this.props,
                        e = b.id;
                    b = b.options;
                    return n.createElement("div", {
                        className: "_ca9ab0-selectWrap"
                    }, n.createElement("select", {
                        ref: "select-" + e,
                        key: "select-" + e,
                        onChange: function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.selectOnChange(b)
                        },
                        style: {
                            color: "#9399A7"
                        }
                    }, this.state.val === c.DEFAULT_SELECT_VALUE && n.createElement("option", {
                        key: e + "_default}",
                        value: c.DEFAULT_SELECT_VALUE
                    }, "SELECT"), b.map(function(a) {
                        var b = a.val;
                        return n.createElement("option", {
                            key: e + "_" + b,
                            value: b
                        }, a.title)
                    })))
                }
            }]), b
        }(n.Component);
        c.Select = a
    }, {
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        "lib/util": 322,
        react: "react"
    }],
    237: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("react"),
            f = a("lib/tracking");
        c.StartStep = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.nextStep;
            return d.createElement("div", {
                className: "_2333f7-step"
            }, d.createElement("div", {
                    className: "_2333f7-content"
                }, d.createElement("div", {
                    className: "_2333f7-title"
                }, "Defeat Tricky Mistakes", d.createElement("br", null), " With One Click"), d.createElement("div", {
                    className: "_2333f7-text"
                }, "Simply hover your mouse over underlined words and click once on your preferred correction."),
                d.createElement("button", {
                    "data-name": "next-btn",
                    className: "_2333f7-button",
                    onClick: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        b();
                        f.fire("onboardingTutorialNext-button-click")
                    }
                }, "next")))
        }
    }, {
        "lib/tracking": 307,
        react: "react"
    }],
    238: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var e =
            d(b);
        b = a("babel-runtime/helpers/inherits");
        var r = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var n = a("react"),
            t = a("react-dom");
        b = a("lib/util");
        var u = a("lib/dom"),
            l = a("./signin-dialog");
        a = a("emitter");
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = a.doc,
                    d = a.container,
                    g = a.user;
                a = a.placement;
                (0, k["default"])(this, b);
                var h = (0, e["default"])(this, (b.__proto__ || (0, f["default"])(b)).call(this));
                return h.updateUser = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h.user = a;
                    h.render()
                }, h.onKey = function(a) {
                    h.dialogComponent && h.dialogComponent.refs &&
                        h.dialogComponent.refs.form.onKey(a)
                }, h.onClose = function() {
                    h.emit("hide");
                    h.remove()
                }, h.doc = c, h.user = g, h.placement = a, d && (h.container = d), h.render(), h
            }
            return (0, r["default"])(b, a), (0, m["default"])(b, [{
                key: "checkContainer",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this.container || (this.container = this.doc.createElement("signin_dialog"), this.doc.documentElement.appendChild(this.container), u.listen(this.doc.defaultView, "keydown", this.onKey, !1))
                }
            }, {
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this.user;
                    this.checkContainer();
                    this.dialogComponent =
                        t.render(n.createElement(l.SigninDialogComponent, {
                            username: a && a.firstName || "",
                            onClose: this.onClose,
                            placement: this.placement
                        }), this.container)
                }
            }, {
                key: "remove",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    u.unlisten(this.doc.defaultView, "keydown", this.onKey, !1);
                    this.container && t.unmountComponentAtNode(this.container);
                    this.container.parentNode && this.container.parentNode.removeChild(this.container)
                }
            }]), b
        }(b.createClass(a));
        c.SigninDialog = a
    }, {
        "./signin-dialog": 239,
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        emitter: "emitter",
        "lib/dom": 215,
        "lib/util": 322,
        react: "react",
        "react-dom": "react-dom"
    }],
    239: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var e = d(b);
        b = a("babel-runtime/helpers/inherits");
        var r = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var n = a("react"),
            t = a("react-dom"),
            u = a("lib/util"),
            l = a("lib/dom"),
            g = a("../signin/form");
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, k["default"])(this, b);
                var a = (0, e["default"])(this, (b.__proto__ || (0, f["default"])(b)).apply(this, arguments));
                return a.onClick = function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    l.matchesSelector(b.target, "._4c65eb-content, ._4c65eb-content *") || a.onClose(b)
                }, a.onClose = function(b) {
                    b && b.stopPropagation();
                    b = t.findDOMNode(a.refs["signin-dialog-el"]);
                    var c = t.findDOMNode(a.refs["signin-content"]);
                    c && b && (c.style.opacity = "0", b.style.opacity = "0");
                    a._closeTimeout = setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.props.onClose()
                    }, 500)
                }, a
            }
            return (0, r["default"])(b, a), (0, m["default"])(b, [{
                key: "componentDidMount",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = t.findDOMNode(this.refs["signin-dialog-el"]),
                        b = t.findDOMNode(this.refs["signin-content"]);
                    this._requestAnimationFrame = requestAnimationFrame(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        b.style.opacity = "0";
                        a.style.opacity = "0";
                        requestAnimationFrame(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            a.style.opacity =
                                "1";
                            b.style.opacity = "1"
                        })
                    })
                }
            }, {
                key: "componentWillUnmount",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    clearTimeout(this._closeTimeout);
                    cancelAnimationFrame(this._requestAnimationFrame)
                }
            }, {
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = l.cs("_4c65eb-signinDialog", u.isWindows() && "_4c65eb-windows");
                    return n.createElement("div", {
                        ref: "signin-dialog-el",
                        onClick: this.onClick,
                        className: a,
                        style: {
                            opacity: 0
                        }
                    }, n.createElement("div", {
                        ref: "signin-content",
                        className: "_4c65eb-content",
                        style: {
                            opacity: 0
                        }
                    }, n.createElement("div", {
                            className: "_4c65eb-viewContainer"
                        },
                        n.createElement(g.Form, {
                            ref: "form",
                            placement: this.props.placement,
                            username: this.props.username,
                            onClose: this.onClose
                        }))), n.createElement("div", {
                        className: "_4c65eb-btnClose",
                        onClick: this.onClose
                    }))
                }
            }]), b
        }(n.Component);
        c.SigninDialogComponent = a
    }, {
        "../signin/form": 243,
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        "lib/dom": 215,
        "lib/util": 322,
        react: "react",
        "react-dom": "react-dom"
    }],
    240: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/helpers/defineProperty");
        var f = d(b);
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var k = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var m = d(b);
        b = a("babel-runtime/helpers/createClass");
        var e = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var r = d(b);
        b = a("babel-runtime/helpers/inherits");
        var n = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var t = a("react"),
            u = a("lib/dom"),
            l = {
                buttonContainer: "_9a2bae-buttonContainer",
                buttonSpinner: "_9a2bae-buttonSpinner",
                button: "_9a2bae-button",
                loading: "_9a2bae-loading",
                onboarding: "_9a2bae-onboarding",
                disable: "_9a2bae-disable"
            },
            g = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return t.createElement("div", {
                    className: "gr_-spinner " + a.className
                }, t.createElement("div", {
                    className: "gr_-bounce1"
                }), t.createElement("div", {
                    className: "gr_-bounce2"
                }), t.createElement("div", {
                    className: "gr_-bounce3"
                }))
            };
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, m["default"])(this,
                    b);
                var a = (0, r["default"])(this, (b.__proto__ || (0, k["default"])(b)).apply(this, arguments));
                return a.onClick = function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b.preventDefault();
                    a.props.loading || a.props.onClick(b)
                }, a
            }
            return (0, n["default"])(b, a), (0, e["default"])(b, [{
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a, b = this.props,
                        c = b.loading,
                        e = b.cls;
                    b = c ? "" : this.props.text;
                    var d = this.props.styles || {
                        width: 290
                    };
                    e = u.cs((a = {}, (0, f["default"])(a, l.buttonContainer, !0), (0, f["default"])(a, l[e], void 0 !== e), (0, f["default"])(a, l.loading, c), a));
                    return t.createElement("div", {
                        className: e,
                        style: d
                    }, c && t.createElement(g, {
                        className: l.buttonSpinner
                    }), t.createElement("button", {
                        type: "button",
                        style: d,
                        className: l.button,
                        onClick: this.onClick
                    }, b))
                }
            }]), b
        }(t.Component);
        c.Button = a
    }, {
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/defineProperty": 36,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        "lib/dom": 215,
        react: "react"
    }],
    241: [function(a,
        b, c) {
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/helpers/extends");
        var f = d(b);
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var k = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var m = d(b);
        b = a("babel-runtime/helpers/createClass");
        var e = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var r = d(b);
        b = a("babel-runtime/helpers/inherits");
        var n = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var t = a("react"),
            u = a("./input"),
            l = [{
                label: "Name",
                name: "name",
                type: "text"
            }, {
                label: "Email",
                name: "email",
                type: "text"
            }, {
                label: "Password",
                name: "password",
                type: "password"
            }];
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (0, m["default"])(this, b), (0, r["default"])(this, (b.__proto__ || (0, k["default"])(b)).apply(this, arguments))
            }
            return (0, n["default"])(b, a), (0, e["default"])(b, [{
                key: "setFocus",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this.refs[0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : this.props.fields[0]].refs.input;
                    if (a.focus(), a.value) {
                        var b = a.value.length;
                        a.setSelectionRange(b, b)
                    }
                }
            }, {
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this;
                    return t.createElement("fieldset", {
                        className: "_194465-inputs"
                    }, t.createElement("input", {
                        className: "_194465-hidden",
                        type: "text",
                        name: "fakeusernameremembered"
                    }), t.createElement("input", {
                        className: "_194465-hidden",
                        type: "password",
                        name: "fakepasswordremembered"
                    }), l.filter(function(b) {
                        return -1 < a.props.fields.indexOf(b.name)
                    }).map(function(b, c) {
                        return t.createElement(u.Input, (0, f["default"])({}, b, {
                            ref: b.name,
                            onSet: a.props.onSet(b.name),
                            value: a.props.formData[b.name],
                            validation: a.props.validation[b.name],
                            onValidate: a.props.onValidate(b.name),
                            forceValidation: a.props.forceValidation,
                            key: c
                        }))
                    }))
                }
            }]), b
        }(t.Component);
        c.Fieldset = a
    }, {
        "./input": 244,
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/extends": 37,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        react: "react"
    }],
    242: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("react"),
            f = a("lib/url");
        c.Footer = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.createElement("div", {
                className: "_4ea68c-footer"
            }, "By signing up, you agree to our\u00a0", d.createElement("a", {
                tabIndex: -1,
                target: "__blank",
                href: f.getTermsURL()
            }, "Terms and Conditions"), " and ", d.createElement("a", {
                tabIndex: -1,
                target: "__blank",
                href: f.getPrivatePolicyURL()
            }, "Privacy Policy"), ".\u00a0 You also agree to receive product-related emails from Grammarly, which you can unsubscribe from at any time.")
        }
    }, {
        "lib/url": 321,
        react: "react"
    }],
    243: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a &&
                a.__esModule ? a : {
                    "default": a
                }
        }
        b = a("babel-runtime/regenerator");
        var f = d(b);
        b = a("babel-runtime/helpers/defineProperty");
        var k = d(b);
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var m = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var e = d(b);
        b = a("babel-runtime/helpers/createClass");
        var r = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var n = d(b);
        b = a("babel-runtime/helpers/inherits");
        var t = d(b);
        b = a("babel-runtime/core-js/object/assign");
        var u = d(b);
        b = a("babel-runtime/core-js/object/keys");
        var l = d(b);
        b = a("babel-runtime/core-js/promise");
        var g = d(b),
            q = function(a, b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c || (c = g["default"]))(function(d, h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function f(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            g(e.next(a))
                        } catch (F) {
                            h(F)
                        }
                    }

                    function p(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            g(e["throw"](a))
                        } catch (F) {
                            h(F)
                        }
                    }

                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? d(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(f, p)
                    }
                    g((e = e.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var v = a("react"),
            p = a("./button"),
            y = a("./footer"),
            z = a("../signin/fieldset"),
            h = a("lib/dom"),
            w = a("lib/tracking"),
            x = a("lib/util"),
            B = a("./welcome"),
            C = a("./login-success"),
            G = a("lib/message"),
            A = a("lib/url"),
            D = {
                form: "_2a5207-form",
                login: "_2a5207-login",
                register: "_2a5207-register",
                loginSuccess: "_2a5207-loginSuccess",
                welcome: "_2a5207-welcome",
                title: "_2a5207-title",
                subTitle: "_2a5207-subTitle",
                wrapper: "_2a5207-wrapper",
                personalizedTitle: "_2a5207-personalizedTitle",
                titleContainer: "_2a5207-titleContainer",
                personalizedTitleSub: "_2a5207-personalizedTitleSub",
                hidden: "_2a5207-hidden",
                validation: "_2a5207-validation",
                fakefield: "_2a5207-fakefield",
                navigation: "_2a5207-navigation",
                loading: "_2a5207-loading",
                navigationItem: "_2a5207-navigationItem",
                loginNav: "_2a5207-loginNav",
                toLogin: "_2a5207-toLogin",
                forgotLink: "_2a5207-forgotLink",
                onboardingVersion: "_2a5207-onboardingVersion",
                freeLabel: "_2a5207-freeLabel"
            };
        c.validationMessages = {
            fail: "Something went wrong. Please try again later.",
            invalidUser: "Invalid email address/password combination.",
            required: "Required",
            shortPassword: "Use 6 characters or more",
            incorrectEmail: "Incorrect",
            emailExists: 'Already in use. Do you need to <a data-view="login">Log in</a>?'
        };
        c.validate = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var e = (0, l["default"])(a).reduce(function(e, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var h = a[d];
                return h && "" !== h ? ("password" === d && "register" === b && 6 > h.length && (e[d] = c.validationMessages.shortPassword), "email" !== d || x.isValidEmail(h) || (e[d] = c.validationMessages.incorrectEmail), e) : (e[d] = c.validationMessages.required, e)
            }, {});
            return e._valid = 0 === (0, l["default"])(e).length, e
        };
        c.extendWithServerValidation = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!b.error) return (0, u["default"])({}, a, {
                _valid: !0
            });
            var e = void 0,
                d = void 0,
                h = {};
            try {
                h = JSON.parse(b.error)
            } catch (K) {}
            return "Conflict" ===
                b.error || "already_exists" === h.error ? d = c.validationMessages.emailExists : e = "Unauthorized" === b.error || "user_not_authorized" === h.error ? c.validationMessages.invalidUser : c.validationMessages.fail, (0, u["default"])({}, a, {
                    error: e,
                    email: d,
                    _valid: !1
                })
        };
        c.getResetPassLink = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return A.getResetPasswordURL() + (a ? "&email=" + encodeURIComponent(a) : "")
        };
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, e["default"])(this, b);
                var a = (0, n["default"])(this, (b.__proto__ || (0, m["default"])(b)).call(this));
                return a.forceValidation = !1, a.onClick =
                    function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        "login" === b.target.dataset.view && a.changeView("login")
                    }, a.changeView = function(b) {
                        var c = a.state.data;
                        "login" !== b && "register" !== b || (c.password = "");
                        a.setState((0, u["default"])({}, a.state, {
                            view: b,
                            data: c,
                            validation: {
                                _valid: !0
                            }
                        }));
                        a.forceValidation = !1
                    }, a.onValidate = function(b) {
                        return function(e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var d = a.state,
                                h = d.validation;
                            d = d.view;
                            h[b] = c.validate((0, k["default"])({}, b, e), d)[b];
                            delete h.error;
                            a.setState((0, u["default"])({}, a.state, {
                                validation: h
                            }))
                        }
                    }, a.onSet = function(b) {
                        return function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var e =
                                a.state.data;
                            e[b] = c;
                            a.setState((0, u["default"])({}, a.state, {
                                data: e
                            }))
                        }
                    }, a.getFormData = function(b) {
                        var c = (0, u["default"])({}, a.state.data);
                        return b && c.hasOwnProperty(b) && delete c[b], c
                    }, a.onKey = function(b) {
                        if ((x.keyCode(b) === x.ESC_KEY && a.props.onClose && a.props.onClose(), x.keyCode(b) === x.ENTER_KEY) && "A" !== b.target.tagName) a.onSubmit()
                    }, a.onGoPremium = function() {
                        w.fire("upgrade-after-register");
                        G.emitBackground("open-url", A.getUpgradeURL("upHook", "anonPopupCard"))
                    }, a.onSubmit = function() {
                        if (!a.state.loading) {
                            var b =
                                a.state.view;
                            "login" === b && a.onAuth("signin", a.getFormData("name"));
                            "register" === b && a.onAuth("signup", a.getFormData())
                        }
                    }, a.focusForm = function(b, c) {
                        "start" === b && a.setFocus("login" === c ? "email" : "name");
                        "end" === b && a.refs.end.focus()
                    }, a.state = {
                        view: "register",
                        validation: {
                            _valid: !0
                        },
                        loading: !1,
                        data: {
                            name: "",
                            email: "",
                            password: ""
                        }
                    }, a
            }
            return (0, t["default"])(b, a), (0, r["default"])(b, [{
                key: "componentDidMount",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this,
                        b = "login" === this.state.view ? "email" : "name";
                    setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            a.setFocus(b)
                        },
                        350)
                }
            }, {
                key: "componentDidUpdate",
                value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a = this.state.view;
                    "login" !== a && "register" !== a || b.view === a || this.setFocus("login" === a ? "email" : "name")
                }
            }, {
                key: "onAuth",
                value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return q(this, void 0, void 0, f["default"].mark(function K() {
                        var e, d, h;
                        return f["default"].wrap(function(f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (f.prev = f.next) {
                                case 0:
                                    if (e = c.validate(b, this.state.view), this.forceValidation = !0, !e._valid) {
                                        f.next = 18;
                                        break
                                    }
                                    return this.setState((0, u["default"])({}, this.state, {
                                            loading: !0
                                        })), d = void 0, f.prev =
                                        5, f.next = 8, G.promiseBackground(a, {
                                            form: b,
                                            placement: this.props.placement
                                        });
                                case 8:
                                    d = f.sent;
                                    f.next = 15;
                                    break;
                                case 11:
                                    f.prev = 11, f.t0 = f["catch"](5), f.t0.message && f.t0.message.includes("rejected by timeout") && w.logger.loginNoBgPageConnection(f.t0.message), d = {
                                        error: !0
                                    };
                                case 15:
                                    e = c.extendWithServerValidation(e, d);
                                    f.next = 20;
                                    break;
                                case 18:
                                    return this.setState((0, u["default"])({}, this.state, {
                                        validation: e,
                                        loading: !1
                                    })), f.abrupt("return");
                                case 20:
                                    if (!e._valid) {
                                        f.next = 23;
                                        break
                                    }
                                    return h = "signup" === a ? "welcome" : "loginSuccess",
                                        f.abrupt("return", this.props.onSuccess ? this.props.onSuccess() : this.changeView(h));
                                case 23:
                                    this.setState((0, u["default"])({}, this.state, {
                                        validation: e,
                                        loading: !1
                                    }));
                                case 24:
                                case "end":
                                    return f.stop()
                            }
                        }, K, this, [
                            [5, 11]
                        ])
                    }))
                }
            }, {
                key: "setFocus",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this.refs.fieldset.setFocus(a)
                }
            }, {
                key: "loginView",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this;
                    return v.createElement("div", {
                        className: D.wrapper
                    }, this.state.validation.error && v.createElement("div", {
                        className: D.validation
                    }, this.state.validation.error), v.createElement("input", {
                        className: D.fakefield,
                        type: "text",
                        name: "fakeformstart",
                        onFocus: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.focusForm("end")
                        }
                    }), v.createElement(z.Fieldset, {
                        forceValidation: this.forceValidation,
                        validation: this.state.validation,
                        onValidate: this.onValidate,
                        onSet: this.onSet,
                        ref: "fieldset",
                        formData: this.state.data,
                        fields: ["email", "password"]
                    }), v.createElement("div", {
                        className: D.loginNav
                    }, v.createElement(p.Button, {
                        loading: this.state.loading,
                        onClick: this.onSubmit,
                        styles: {
                            width: 120
                        },
                        text: "Log In"
                    }), v.createElement("a", {
                        target: "__blank",
                        href: c.getResetPassLink(this.state.data.email),
                        ref: "end",
                        className: h.cs(D.navigationItem, D.forgotLink)
                    }, "Forgot password?")), v.createElement("input", {
                        className: D.fakefield,
                        type: "text",
                        name: "fakeformend",
                        onFocus: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.focusForm("start", "login")
                        }
                    }))
                }
            }, {
                key: "registerView",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this;
                    return v.createElement("div", {
                            className: D.wrapper
                        }, v.createElement("input", {
                            className: D.fakefield,
                            type: "text",
                            name: "fakeformstart",
                            onFocus: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return a.focusForm("end")
                            }
                        }), v.createElement("div", {
                            className: D.navigation
                        }, "Already have an account?\u00a0", v.createElement("span", {
                            tabIndex: 0,
                            ref: "end",
                            onClick: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return a.changeView("login")
                            },
                            className: D.navigationItem
                        }, "Log In")), v.createElement(z.Fieldset, {
                            ref: "fieldset",
                            forceValidation: this.forceValidation,
                            validation: this.state.validation,
                            onValidate: this.onValidate,
                            onSet: this.onSet,
                            formData: this.state.data,
                            fields: ["name", "email", "password"]
                        }), v.createElement(p.Button, {
                            loading: this.state.loading,
                            onClick: this.onSubmit,
                            text: "personalize grammarly"
                        }),
                        v.createElement(y.Footer, null), v.createElement("input", {
                            className: D.fakefield,
                            type: "text",
                            name: "fakeformend",
                            onFocus: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return a.focusForm("start", "register")
                            }
                        }))
                }
            }, {
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this,
                        b = "login" === this.state.view,
                        c = h.cs(D.form, this.state.loading && D.loading, D[this.state.view], this.props.showOnboardingVersion && D.onboardingVersion);
                    if ("welcome" === this.state.view) return v.createElement(B.Welcome, {
                        isShow: !0,
                        onClose: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.props.onClose && a.props.onClose()
                        },
                        onGoPremium: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.onGoPremium()
                        }
                    });
                    if ("loginSuccess" === this.state.view) return v.createElement(C.LoginSuccess, {
                        username: this.props.username,
                        onClose: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.props.onClose && a.props.onClose()
                        }
                    });
                    var e = b ? this.props.showOnboardingVersion ? v.createElement("div", null, v.createElement("div", {
                            className: D.title
                        }, "Member Login"), v.createElement("div", {
                            className: D.subTitle
                        }, "to save your personalization settings")) : v.createElement("div", null, v.createElement("div", {
                            className: D.title
                        }, "Grammarly Member Login")) : this.props.showOnboardingVersion ?
                        v.createElement("div", null, v.createElement("div", {
                            className: D.title
                        }, "Create an account"), v.createElement("div", {
                            className: D.subTitle
                        }, "to save your personalization settings"), v.createElement("div", {
                            className: D.freeLabel
                        }, "It\u2019s free")) : v.createElement("div", {
                            className: D.personalizedTitle
                        }, "Personalize Grammarly", v.createElement("div", {
                            className: D.personalizedTitleSub
                        }, "to your writing needs"));
                    return v.createElement("div", {
                        className: c,
                        onClick: this.onClick
                    }, v.createElement("div", {
                            className: D.titleContainer
                        },
                        e), b ? this.loginView() : this.registerView(), b && v.createElement("div", {
                        className: D.toLogin
                    }, "New to Grammarly?", v.createElement("span", {
                        tabIndex: 0,
                        onClick: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.changeView("register")
                        },
                        className: D.navigationItem
                    }, "Create a free account")))
                }
            }]), b
        }(v.Component);
        c.Form = a
    }, {
        "../signin/fieldset": 241,
        "./button": 240,
        "./footer": 242,
        "./login-success": 245,
        "./welcome": 246,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/core-js/object/keys": 29,
        "babel-runtime/core-js/promise": 31,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/defineProperty": 36,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        "babel-runtime/regenerator": 43,
        "lib/dom": 215,
        "lib/message": 278,
        "lib/tracking": 307,
        "lib/url": 321,
        "lib/util": 322,
        react: "react"
    }],
    244: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var e = d(b);
        b = a("babel-runtime/helpers/inherits");
        var r = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var n = a("react"),
            t = a("lib/util"),
            u = a("lib/util"),
            l = a("lib/dom");
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, k["default"])(this, b);
                var a = (0, e["default"])(this, (b.__proto__ || (0, f["default"])(b)).apply(this, arguments));
                return a.id = t.guid(),
                    a.state = {
                        cancelValidation: !0,
                        dirty: !1
                    }, a.onBlur = function() {
                        a.setState({
                            cancelValidation: !1
                        });
                        a.props.onValidate(a.value)
                    }, a.onChange = function() {
                        a.setState({
                            cancelValidation: !0,
                            dirty: !0
                        });
                        a.props.onSet(a.value)
                    }, a
            }
            return (0, r["default"])(b, a), (0, m["default"])(b, [{
                        key: "getValidation",
                        value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return (this.props.validation && !this.state.cancelValidation && this.state.dirty || this.props.forceValidation) && n.createElement("div", {
                                className: "_d80b1b-validation",
                                dangerouslySetInnerHTML: {
                                    __html: this.props.validation
                                }
                            })
                        }
                    },
                    {
                        key: "render",
                        value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var a = this.props,
                                b = a.label;
                            a = {
                                name: a.name,
                                type: a.type,
                                value: a.value,
                                id: this.id,
                                ref: "input",
                                required: !0,
                                spellCheck: !1,
                                onBlur: this.onBlur,
                                onChange: this.onChange,
                                className: "_d80b1b-inputElement"
                            };
                            return n.createElement("div", {
                                className: l.cs("_d80b1b-input", u.isWindows() && "_d80b1b-windows")
                            }, this.getValidation(), n.createElement("input", a), n.createElement("label", {
                                htmlFor: this.id,
                                className: "_d80b1b-label"
                            }, b))
                        }
                    }, {
                        key: "value",
                        get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return this.refs.input.value
                        }
                    }
                ]),
                b
        }(n.Component);
        c.Input = a
    }, {
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        "lib/dom": 215,
        "lib/util": 322,
        react: "react"
    }],
    245: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var e = d(b);
        b = a("babel-runtime/helpers/inherits");
        var r = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var n = a("react");
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (0, k["default"])(this, b), (0, e["default"])(this, (b.__proto__ || (0, f["default"])(b)).apply(this, arguments))
            }
            return (0, r["default"])(b, a), (0, m["default"])(b, [{
                key: "componentDidMount",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this.props.onClose && setTimeout(this.props.onClose, 1500)
                }
            }, {
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return n.createElement("div", {
                        className: "_5f9912-loginSuccess"
                    }, this.props.username ? n.createElement("div", {
                        className: "_5f9912-label"
                    }, "Welcome back, ", n.createElement("span", {
                        className: "_5f9912-name"
                    }, this.props.username), "!") : n.createElement("div", {
                        className: "_5f9912-label"
                    }, "Welcome back!"))
                }
            }]), b
        }(n.Component);
        c.LoginSuccess = a
    }, {
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        react: "react"
    }],
    246: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/helpers/defineProperty")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = a("react"),
            k = {
                welcome: "_66b3a6-welcome",
                windows: "_66b3a6-windows",
                image: "_66b3a6-image",
                content: "_66b3a6-content",
                show: "_66b3a6-show",
                title: "_66b3a6-title",
                text: "_66b3a6-text",
                close: "_66b3a6-close",
                learnMore: "_66b3a6-learnMore",
                goPremium: "_66b3a6-goPremium"
            },
            m = a("lib/dom"),
            e = a("lib/util"),
            r = a("./button");
        c.Welcome = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b,
                c = a.isShow,
                l = a.onClose;
            a = a.onGoPremium;
            c = m.cs((b = {}, (0, d["default"])(b, k.welcome, !0), (0, d["default"])(b, k.show, c), (0, d["default"])(b, k.windows, e.isWindows()), b));
            return f.createElement("div", {
                className: c
            }, f.createElement("div", {
                className: k.image
            }), f.createElement("div", {
                className: k.content
            }, f.createElement("div", {
                className: k.title
            }, "Welcome to Grammarly"), f.createElement("div", {
                className: k.text
            }, "Wave good-bye to the most frequent and pesky ", f.createElement("br", null), "writing mistakes."), f.createElement("div", {
                className: k.goPremium
            }, f.createElement("span", {
                className: k.checks
            }, "Go Premium and get 150+ additional", f.createElement("br", null), " advanced checks."), " ", f.createElement("a", {
                onClick: a,
                className: k.learnMore
            }, "Learn more")), f.createElement("div", {
                className: k.close
            }, f.createElement(r.Button, {
                onClick: l,
                text: "Continue to Your Text"
            }))))
        }
    }, {
        "./button": 240,
        "babel-runtime/helpers/defineProperty": 36,
        "lib/dom": 215,
        "lib/util": 322,
        react: "react"
    }],
    247: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = document.querySelector(".gr__tooltip");
            return a || (a = e.createEl('<span class="gr__tooltip"><span class="gr__tooltip-content"></span><i class="gr__tooltip-logo"></i><span class="gr__triangle"></span></span>'), document.documentElement.appendChild(a)), a
        }
        var f = (b = a("babel-runtime/core-js/object/assign")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var k = a("./hint"),
            m = a("../position"),
            e = a("../dom");
        c.createTooltip = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                v.fastHide()
            }

            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return e.inEl(a.target, l.posEl)
            }

            function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                p &&
                    (p = !1, g && (g.style.opacity = "0", g.style.top = "-9999px", v && v.setVisible(!1), g.className = g.className.replace(l.cls, "")))
            }

            function u() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : l,
                    b = a.posEl;
                b = void 0 === b ? l.posEl : b;
                var c = a.html;
                c = void 0 === c ? l.html : c;
                var d = a.text;
                d = void 0 === d ? l.text : d;
                var n = a.cls;
                n = void 0 === n ? l.cls : n;
                var k = a.doc;
                k = void 0 === k ? l.doc : k;
                a = a.outerIframe;
                a = void 0 === a ? l.outerIframe : a;
                if ((0, f["default"])(l, {
                        posEl: b,
                        html: c,
                        text: d,
                        cls: n,
                        doc: k,
                        outerIframe: a
                    }), y) p = !0, v && v.setVisible(!0),
                    d && g.setAttribute("data-content", d), c && (q.innerHTML = c), g.className = "gr__tooltip", n && e.addClass(g, n), e.removeClass(g, "gr__flipped"), a = m.getAbsRect(b, a), b = m.posToRect(g, a), c = b.rect, e.css(g, {
                        top: c.top,
                        left: c.left
                    }), b && b.rect && !b.rect.flip && e.addClass(g, "gr__flipped"), c = g.clientWidth, d = g.querySelector(".gr__triangle"), a = a.width / 2, a > c && (a = 0), 0 >= b.delta.right && (a -= b.delta.right), a -= parseInt(getComputedStyle(g).getPropertyValue("margin-left"), 10), d && (d.style.marginLeft = a + "px"), g.style.opacity = "1"
            }
            var l =
                0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
                g = d(),
                q = void 0,
                v = void 0,
                p = void 0,
                y = void 0 === l.enabled || l.enabled;
            q = g.querySelector(".gr__tooltip-content");
            l.posEl && (l.moveListenerDoc = l.outerIframe ? l.outerIframe.contentDocument : l.doc, v = new k.HintImpl({
                doc: l.moveListenerDoc,
                doc2: l.doc,
                hint: g,
                hideDelay: 500,
                delay: 0,
                onshow: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return u()
                },
                onhide: c,
                inTarget: b
            }), e.listen(l.doc, "scroll", a), e.listen(l.moveListenerDoc, "scroll", a), v.bind());
            return {
                show: u,
                fastShow: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    l.cls += " gr-no-transition";
                    u();
                    setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        l.cls = l.cls.replace(" gr-no-transition", "");
                        e.removeClass(g, "gr-no-transition")
                    }, 100)
                },
                hide: c,
                remove: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    l.posEl && (g && g.parentNode && g.parentNode.removeChild(g), e.unlisten(l.doc, "scroll", a), l.moveListenerDoc && e.unlisten(l.moveListenerDoc, "scroll", a))
                },
                el: g,
                enable: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    y = !0
                },
                disable: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    y = !1
                },
                isEnabled: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return y
                }
            }
        }
    }, {
        "../dom": 215,
        "../position": 289,
        "./hint": 224,
        "babel-runtime/core-js/object/assign": 24
    }],
    248: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b =
                document.createElement("script");
            b.innerHTML = a;
            document.head.appendChild(b);
            b.parentNode && b.parentNode.removeChild(b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = a("./message"),
            k = a("./dom"),
            m = a("./config"),
            e = a("./tracking");
        c.addExternalEventListeners = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            e.initContentScript();
            d("window.GR_EXTENSION_ID='" + m.getUuid() + "'");
            d("\n    window.GR_EXTENSION_SEND = function(key, data) {\n      if (!key) throw new TypeError('cant be called without message')\n      var e = document.createEvent('CustomEvent')\n      e.initCustomEvent('external:' + key, true, true, data)\n      document.dispatchEvent(e)\n    }\n  ");
            m.externalEvents.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "external:" + a
            }).forEach(function(a) {
                return k.on.call(document, a, function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b = b.detail;
                    console.log("external event", a, b);
                    f.emitBackground(a, b)
                })
            })
        }
    }, {
        "./config": 211,
        "./dom": 215,
        "./message": 278,
        "./tracking": 307
    }],
    249: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        b = a("lib/tracking/felogPixel");
        var d = {},
            f = new(a("lib/tracking/telemetry").Telemetry)(b.sendEventPixel, function() {}, function() {}, function() {});
        c.failover = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                d.index_load ||
                    f.pageLoadTimeout()
            }

            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                d.app_load || f.appLoadTimeout()
            }
            var c = 12E4,
                r = 12E4;
            return {
                startPageLoadTimer: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    setTimeout(a, c);
                    d.index_load = !1
                },
                startAppLoadTimer: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    setTimeout(b, r);
                    d.app_load = !1
                },
                success: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    d[a] = !0
                },
                setPageLoadTimeout: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return c = a
                },
                setAppLoadTimeout: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return r = a
                }
            }
        }()
    }, {
        "lib/tracking/felogPixel": 306,
        "lib/tracking/telemetry": 310
    }],
    250: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("lib/wrap"),
            f = a("lib/dom"),
            k = a("lib/util");
        c.extendDom = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            b.setDomSelection = function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = d.getNodeByTextPos(a, b.begin),
                    e = d.getNodeByTextPos(a, b.end);
                f.setDomRange(a.ownerDocument, {
                    anchorNode: c.node,
                    anchorOffset: b.begin - c.pos,
                    focusNode: e.node,
                    focusOffset: b.end - e.pos
                })
            };
            b.setCursor = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b.cursor = a
            };
            b.fireDomEvent = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                k.isFF() && f.emitDomEvent("document-mousedown-mouseup-activeElement");
                var b = " " === a || a.trim() ? "paste" : "backspace";
                f.emitDomEvent("document-" + b + "-activeElement", a)
            };
            b.doReplace = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b.safeFocus();
                b.setDomSelection(a);
                k.asyncCall(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return b.fireDomEvent(c)
                })
            };
            b.setTextareaValue = function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b.safeFocus();
                a.ownerDocument.getSelection().selectAllChildren(a);
                k.asyncCall(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b.fireDomEvent(c.trimRight());
                    k.asyncCall(b._setCursor, 100)
                }, k.isSafari() ? 100 : 10)
            }
        }
    }, {
        "lib/dom": 215,
        "lib/util": 322,
        "lib/wrap": 324
    }],
    251: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/helpers/extends")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = a("emitter"),
            k = a("react"),
            m = a("react-dom"),
            e = a("lodash"),
            r = a("../util"),
            n = a("lib/location"),
            t = a("../position"),
            u = a("../dom"),
            l = a("../sites"),
            g = {
                style: {
                    child: {
                        display: "inline-block",
                        "line-height": "initial",
                        color: "transparent",
                        overflow: "hidden",
                        "text-align": "left",
                        "float": "initial",
                        clear: "none",
                        "box-sizing": "border-box",
                        "vertical-align": "baseline",
                        "white-space": "pre-wrap",
                        width: "100%",
                        margin: 0,
                        padding: 0,
                        border: 0
                    },
                    parent: {
                        position: "absolute",
                        color: "transparent",
                        "border-color": "transparent !important",
                        overflow: "hidden",
                        "white-space": "pre-wrap"
                    },
                    src: {}
                },
                attrs: {},
                val: ""
            },
            q = k.createClass({
                displayName: "GhostComponent",
                getDefaultProps: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return g
                },
                render: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = e.merge(g.style, this.props.style),
                        b = this.props.attrs,
                        c = u.camelizeAttrs(a.parent);
                    a = u.camelizeAttrs(a.child);
                    var f = this.props.val;
                    return b.gramm = !0, k.createElement("div", (0, d["default"])({
                        style: c
                    }, b), k.createElement("span", {
                        style: a,
                        dangerouslySetInnerHTML: {
                            __html: f
                        }
                    }), k.createElement("br", null))
                }
            });
        c.createGhost = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a ? a.toString().split(" ").map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return isNaN(parseFloat(a)) &&
                        -1 === a.indexOf("px") ? a : Math.floor(parseFloat(a)) + "px"
                }).join(" ") : a + ""
            }

            function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = L.getComputedStyle(A);
                if (!a) return {};
                var c = function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.getPropertyValue(b)
                    },
                    d = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var b = {};
                        return a.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b[a] = c(a);
                            "z-index" === a && "auto" === b[a] && A.style.zIndex && (b[a] = A.style.zIndex)
                        }), b
                    },
                    h = {
                        parent: d("border border-radius box-sizing height width margin padding z-index border-top-width border-right-width border-left-width border-bottom-width border-top-style border-right-style border-left-style border-bottom-style padding-top padding-left padding-bottom padding-right margin-top margin-left margin-bottom margin-right".split(" ")),
                        child: d("font font-size font-family text-align line-height letter-spacing text-shadow".split(" ")),
                        src: d("position margin-top line-height font-size font-family z-index".split(" "))
                    },
                    f = h.parent["z-index"];
                if (h.parent["z-index"] = f && "auto" !== f ? (parseInt(f, 10) - 1).toString() : "0", h.parent.marginTop = b(h.parent.marginTop), h.src.marginTop = b(h.src.marginTop), h.parent.margin = b(h.parent.margin), h.parent.padding = b(h.parent.padding), (h.parent["border-top-width"] || h.parent["border-left-width"]) && (h.parent["border-style"] =
                        "solid"), h.parent.border) f = h.parent.border.split(" "), h.parent["border-width"] = f[0], 1 < f.length && (h.parent["border-style"] = f[1]), delete h.parent.border;
                if (h.parent["border-color"] = "transparent !important", "absolute" === h.src.position || "relative" === h.src.position ? h.parent = e.extend(h.parent, d(["top", "left"])) : h.src.position = "relative", V = W.customDefaultBg && W.customDefaultBg(A) || V || c("background"), r.isFF() && !V && (V = ["background-color", "background-image", "background-repeat", "background-attachment", "background-position"].map(c).join(" ")),
                    h.parent.background = V, r.isFF()) d = parseInt(c("border-right-width"), 10) - parseInt(c("border-left-width"), 10), h.child["padding-right"] = A.offsetWidth - A.clientWidth - d - 1 + "px";
                return "start" === c("text-align") && (h.child["text-align"] = "ltr" === c("direction") ? "left" : "right"), h
            }

            function d() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = c();
                if (!U) {
                    var f = a.src,
                        p = {
                            background: "transparent !important",
                            "z-index": f["z-index"] || 1,
                            position: f.position,
                            "line-height": f["line-height"],
                            "font-size": f["font-size"],
                            "-webkit-transition": "none",
                            transition: "none"
                        };
                    W.removeContainerFontSize &&
                        W.removeContainerFontSize(A) && delete p["font-size"];
                    0 < parseInt(f["margin-top"], 10) && u.css(A.parentNode, {
                        width: "auto",
                        overflow: "hidden"
                    });
                    1 < L.devicePixelRatio && (f = f["font-family"], 0 === f.indexOf("Consolas") && (f = f.replace("Consolas,", "Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, serif"), O.child["font-family"] = f, p["font-family"] = f));
                    r.isEdge() && "auto" === O.parent.top && (O.parent.top = "0px");
                    u.css(A, p);
                    da = !!A.previousElementSibling &&
                        "left" === u.css(A.previousElementSibling, "float");
                    r.interval(d, 500);
                    F || (F = !0, u.listen(A, X));
                    U = !0
                }
                O.parent.marginTop = b(O.parent.marginTop);
                a = e.merge(a, O);
                a.child.height = A.scrollHeight;
                W.fieldRestoreInlineStyles && W.fieldRestoreInlineStyles(A, a);
                W.ghostHeight && (a.child.height = W.ghostHeight(a.child.height));
                W.setContainerLineHeight && W.setContainerLineHeight(A, a.child["font-size"]);
                W.getContainerTextAlign && (a.child.textAlign = W.getContainerTextAlign(A));
                p = e.merge(K, {
                    "data-id": H,
                    "data-gramm_id": H,
                    "data-gramm": "gramm",
                    "data-gramm_editor": !0,
                    dir: A.getAttribute("dir")
                });
                R || (R = J.createElement("grammarly-ghost"), R.setAttribute("spellcheck", "false"), u.insertBefore(R, D));
                M.matchPrefix && (p.className = M.matchPrefix);
                W.ghostHeight && (a.parent.height = W.ghostHeight(a.parent.height));
                a = m.render(k.createElement(q, {
                    style: a,
                    attrs: p,
                    val: Y
                }), R);
                P = m.findDOMNode(a);
                aa = P.firstElementChild;
                P.contentEditable = "true";
                ea.clone = P;
                ea.cloneVal = aa;
                da && (A.getBoundingClientRect().left === P.getBoundingClientRect().left && A.getBoundingClientRect().top ===
                    P.getBoundingClientRect().top ? da = !1 : (a = A.getBoundingClientRect(), p = A.parentNode.getBoundingClientRect(), a = "translate(" + (a.left - p.left) + "px, " + (a.top - p.top) + "px)", O.parent["-webkit-transform"] = a, O.parent.transform = a));
                h();
                g();
                0 === A.offsetHeight ? C() : G();
                ea.emit("render")
            }

            function h() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function a(a, e, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    d = d ? [A, P] : [b, c];
                    O.parent[e] = parseInt((parseInt(P.style[e], 10) + d[0][a] - d[1][a]).toString(), 10) + "px"
                }
                var b = t.getAbsRect(A),
                    c = t.getAbsRect(P);
                if (c.left !== b.left && a("left", "marginLeft", !1), c.top !== b.top &&
                    a("top", "marginTop", !1), P.clientWidth === A.clientWidth || r.isFF() ? c.width !== b.width && (K.width = b.width) : c.width !== b.width ? P.style.width = b.width.toString() : a("clientWidth", "width", !0), r.isFF()) {
                    var e = u.css(A.parentNode, ["margin-left", "margin-top", "position"]);
                    e && (e.marginLeft || e.marginTop) && "static" === e.position && (A.parentNode.style.position = "relative", A.parentNode.style.overflow = "")
                }
                c.height !== b.height && (O.parent.height = b.height)
            }

            function g() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function a(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return n.isFacebookSite() ? a.nextElementSibling &&
                        a.nextElementSibling.childNodes[0] !== b : a.nextElementSibling !== b
                }
                var b = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return J.contains && J.contains(a) || u.elementInDocument(a, J)
                };
                R && b(A) && (!a(R, A) && b(R) || u.insertBefore(R, D))
            }

            function v() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = M.current();
                E = [];
                for (var b = P.scrollTop, c = 0; c < a.length; c++) {
                    var d = a[c],
                        h = P.querySelector(".gr_" + d.id);
                    if (h) {
                        B(h);
                        var f = t.getPos(h, P);
                        d = {
                            match: d,
                            el: h,
                            id: h.id,
                            box: {
                                x1: f.x,
                                x2: f.x + h.offsetWidth,
                                y1: f.y,
                                y2: f.y + h.offsetHeight + 5
                            }
                        };
                        E.push(d);
                        (f = h.textContent) && 1 < f.trim().split(" ").length && (h = h.getClientRects(),
                            2 > h.length || (d.rects = e.map(h, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return {
                                    x1: a.left,
                                    x2: a.right,
                                    y1: a.top + b,
                                    y2: a.bottom + b
                                }
                            })))
                    }
                }
            }

            function B(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (a) {
                    var b = a.parentNode;
                    b && (b = b.getAttribute("style")) && a.setAttribute("style", b);
                    a.classList.contains("gr_disable_anim_appear") || a.addEventListener("animationend", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.classList.add("gr_disable_anim_appear")
                    });
                    u.css(a, {
                        display: "",
                        padding: "",
                        margin: "",
                        width: ""
                    })
                }
            }

            function C() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                R.style.display = "none";
                r.isSafari() && (A.style.background = "", A.style.backgroundColor = "");
                A.style.background =
                    V;
                r.cancelInterval(d);
                setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return ea.emit("render")
                }, 300);
                U = !1;
                R.parentNode && R.parentNode.removeChild(R)
            }

            function G() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                U || (R.style.display = "", R.parentNode || u.insertBefore(R, D), d(), S())
            }
            var A = a.el,
                D = n.isFacebookSite() ? A.parentNode : A,
                J = A.ownerDocument,
                L = J.defaultView,
                M = a.editor || {
                    current: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return []
                    }
                },
                H = a.id,
                O = {
                    parent: {},
                    child: {}
                },
                K = {},
                R = void 0,
                P = void 0,
                aa = void 0,
                U = !1,
                F = void 0,
                Y = "",
                da = !1,
                V = void 0,
                T = void 0,
                E = [],
                W = l.pageStyles(J).getFixesForCurrentDomain(),
                ea = f({
                    render: d,
                    getStyle: c,
                    setText: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        Y = a;
                        d()
                    },
                    generateAlertPositions: v,
                    remove: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        clearTimeout(T);
                        r.cancelInterval(d);
                        u.unlisten(A, X);
                        C()
                    },
                    hide: C,
                    show: G
                }),
                S = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    try {
                        O.child.height = A.scrollHeight, P.scrollTop = A.scrollTop, clearTimeout(T), T = setTimeout(S, 100)
                    } catch (fa) {
                        S = r._f
                    }
                },
                X = {
                    mousemove: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var b = A.getBoundingClientRect();
                        a: {
                            for (var c = a.clientX - b.left, e = a.clientY - b.top, d = P.scrollTop, h = 0; h < E.length; h++) {
                                var f = E[h],
                                    p = f.box;
                                if (c >= p.x1 && c <= p.x2 && e >= p.y1 - d && e <= p.y2 - d) {
                                    b = f;
                                    break a
                                }
                                if (f.rects)
                                    for (p =
                                        0; p < f.rects.length; p++) {
                                        var g = f.rects[p],
                                            q = c + b.left,
                                            l = e + b.top;
                                        if (q >= g.x1 && q <= g.x2 && l >= g.y1 - d && l <= g.y2 - d) {
                                            b = f;
                                            break a
                                        }
                                    }
                            }
                            b = void 0
                        }
                        b && (b.e = {
                            clientX: a.clientX,
                            clientY: a.clientY
                        }, a.stopPropagation(), a = document.createEvent("CustomEvent"), delete b.el, delete b.match, a.initCustomEvent("gramMouse", !0, !0, b), J.dispatchEvent(a))
                    },
                    mouseenter: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        v()
                    },
                    keyup: S,
                    scroll: S
                };
            return ea
        }
    }, {
        "../dom": 215,
        "../position": 289,
        "../sites": 294,
        "../util": 322,
        "babel-runtime/helpers/extends": 37,
        emitter: "emitter",
        "lib/location": 277,
        lodash: "lodash",
        react: "react",
        "react-dom": "react-dom"
    }],
    252: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("../dom"),
            f = a("../util"),
            k = a("lib/location"),
            m = a("./ghost"),
            e = a("@grammarly-npm/textdiff"),
            r = a("emitter"),
            n = a("lib/wrap");
        c.createGhostArea = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function g() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                q("on");
                R = !0;
                U = l();
                F._run();
                K && K.show()
            }

            function q() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "on";
                "on" === a ? (d.listen(b, "input", p), d.listen(b, "keyup", x), d.listen(b, "keydown", B), d.listen(M,
                    "click", u, void 0, !0)) : (d.unlisten(b, "input", p), d.unlisten(b, "keyup", x), d.unlisten(b, "keydown", B), d.unlisten(M, "click", u));
                K && K[a]("render", w);
                F[a]("rendered", A);
                F.isHtmlGhost || (F[a]("beforeReplace", t), F[a]("afterReplace", G))
            }

            function l() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "TEXTAREA" === b.tagName ? b.value : b.parentNode ? n.getText(b) : ""
            }

            function p() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                R && (U = l())
            }

            function t() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                aa = b.scrollTop
            }

            function u(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                k.isFacebookSite() && d.matchesSelector(a.target, Y) && R && (D(), F.clearData())
            }

            function h() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = L.createEvent("TextEvent");
                a.initTextEvent ?
                    F.latestCursor.s === F.latestCursor.e && (a.initTextEvent("textInput", !0, !0, null, String.fromCharCode(8203), 1, "en-US"), setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        F.saveCursor();
                        F.skipInputEvents();
                        b.dispatchEvent(a);
                        setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b.value = l().replace(String.fromCharCode(8203), "");
                            F.restoreCursor();
                            F.skipInputEvents(!1)
                        }, 50)
                    }, 50)) : (d.runKeyEvent({
                        el: b,
                        type: "keydown"
                    }), d.runKeyEvent({
                        el: b,
                        type: "keyup"
                    }));
                b.scrollTop = aa;
                U = l()
            }

            function w() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if ((0 === U.length && 0 < l().length || P) && (U = l(), P = !1), R) {
                    U = U.replace(new RegExp(String.fromCharCode(8203),
                        "g"), "");
                    var a = e.diffPos(U, l()),
                        b = 1 !== U.indexOf("@") && -1 === l().indexOf("@");
                    2 <= a.delta && 0 === a.s && (H || O) && !b && R && (D(), F.clearData())
                }
            }

            function x(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                F.camouflage()
            }

            function B(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                O = 13 === f.keyCode(a)
            }

            function C() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return K.render(), {
                    clone: K.clone,
                    cloneVal: K.cloneVal
                }
            }

            function G() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                setTimeout(h, 50)
            }

            function A() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                K && K.generateAlertPositions()
            }

            function D() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                R && K && K.hide()
            }

            function J() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                q("off");
                F && (F.off("exit", J), F.remove(), F = null);
                da.emit("exit");
                b.removeAttribute("data-gramm");
                b.removeAttribute("data-txt_gramm_id");
                K && (K.remove(), K = null)
            }
            var L = b.ownerDocument,
                M = L.defaultView,
                H = !1,
                O = !1,
                K = void 0,
                R = !1,
                P = void 0,
                aa = void 0,
                U = l(),
                F = void 0;
            b.setAttribute("data-gramm", "");
            b.setAttribute("data-txt_gramm_id", c);
            var Y = "div[role=navigation] li[role=listitem] *",
                da = r({
                    el: b,
                    id: c,
                    hideClone: D,
                    showClone: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        R = !0;
                        K && K.show()
                    },
                    insertGhost: C,
                    remove: J,
                    run: g
                });
            return F = a(da.el, da.id), F.on("exit", J), F.dom.insertGhost = C, K = m.createGhost({
                id: c,
                el: b,
                editor: F
            }), da.gh = K, F.ghostarea = da, F._run = F.run, F.run = g, F
        }
    }, {
        "../dom": 215,
        "../util": 322,
        "./ghost": 251,
        "@grammarly-npm/textdiff": 16,
        emitter: "emitter",
        "lib/location": 277,
        "lib/wrap": 324
    }],
    253: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        b = a("lib/location");
        var d = a("../page-config/defaults"),
            f = b.getDomain();
        c.isHtmlGhostSite = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return f && d.HTML_GHOST_SITES.includes(f)
        };
        c.getHtmlGhostSelector = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "[contenteditable]"
        }
    }, {
        "../page-config/defaults": 283,
        "lib/location": 277
    }],
    254: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("../under/html-dom"),
            f = a("../under/textarea-dom"),
            k = a("lib/wrap"),
            m = a("lib/util"),
            e = a("./facebook-ghost"),
            r = a("lib/location");
        c.HtmlGhostDom = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.editor,
                c = a.el,
                l = c.ownerDocument,
                g = d.createHtmlDom(a),
                q = f.createTextareaDom(a);
            return q.safeFocus = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = l.body.scrollTop;
                    c.focus();
                    l.body.scrollTop = a
                }, q.getCursor = function() {
                    return g.getCursor()
                }, q.setCursor = function(a) {
                    q.cursor = a;
                    q._setCursor()
                }, q._setCursor = function() {
                    k.invalidateNode(c);
                    g.setCursor(q.cursor)
                }, q.getText = function() {
                    return c.parentNode ?
                        (k.invalidateNode(c), delete c.__getText, k.getText(c)) : ""
                }, q.replace = function(a, c, e) {
                    b.inputListener.ignorePaste = !0;
                    q.doReplace(a, c);
                    a.replaced = !e;
                    a.inDom = !e;
                    b.inputListener.ignorePaste = !1
                }, q.doReplace = function(a, b) {
                    var c = q.getText();
                    c = c.substring(0, a.s) + b + c.substr(a.e);
                    q.setTextareaValueSync(c);
                    m.asyncCall(q._setCursor)
                }, q.setTextareaValueSync = function(a) {
                    c.innerText = a;
                    k.invalidateNode(c);
                    q.safeFocus()
                }, q.setTextareaValue = function(a) {
                    q.safeFocus();
                    m.asyncCall(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        c.innerText = a;
                        k.invalidateNode(c)
                    })
                },
                r.isFacebookSite() && e.extendDom(c, q), q
        }
    }, {
        "../under/html-dom": 312,
        "../under/textarea-dom": 319,
        "./facebook-ghost": 250,
        "lib/location": 277,
        "lib/util": 322,
        "lib/wrap": 324
    }],
    255: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("emitter"),
            f = a("lodash"),
            k = a("@grammarly-npm/websocket");
        c.capi = d({
            CLIENT_NAME: "web",
            PROTOCOL_VERSION: "1.0",
            clientVersion: "",
            extDomain: "",
            token: null,
            debug: !1,
            setToken: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                c.capi.token = a;
                c.capi.emit("ready", c.capi.token)
            },
            onReady: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return c.capi.token ?
                    a(c.capi.token) : void c.capi.one("ready", a)
            },
            createClient: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function b(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return b.rev = g.rev++, f.isFunction(c) && g.one(["finished", b.rev.toString()], c), m(a, b), b.rev
                }

                function m(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b = b || {};
                    b.action = a;
                    b.id = g.messageId++;
                    var e = +new Date;
                    return g.one([b.action.toString(), b.id.toString()], function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        f.isFunction(c) && c(b);
                        g.emit("stats:timing", {
                            key: "performance:capi_time",
                            value: +new Date - e,
                            tags: ["op:" + a]
                        })
                    }), g.ws.send(b), b.id
                }
                var n = !a.silentLogs,
                    t = {
                        runtime_error: {
                            maxCount: 10,
                            emitMsg: "frequent_runtime_error"
                        },
                        not_authorized: {
                            maxCount: 5,
                            emitMsg: "frequent_not_authorized_error"
                        }
                    },
                    u = !1,
                    l = 0;
                a = f.extend({
                    connectionTimeout: 1E3,
                    sid: null,
                    useQueue: 30,
                    useStandBy: 9E5,
                    resetQueueOnReconnect: !0
                }, a);
                var g = d({
                        rev: 0,
                        messageId: 0,
                        options: a,
                        genre: null,
                        ws: (a.createWs || k)(a),
                        checkText: function(a, b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return g.check(a, b, c, void 0, e)
                        },
                        submitOt: function(a, c, e, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return g.rev = c, e = e || {}, b("submit_ot", f.extend({
                                ch: a
                            }, e), d)
                        },
                        checkNoSynonymsText: function(a, b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return g.check(a, b, c, "NOSYNONYMS", e)
                        },
                        checkGrammar: function(a, b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return g.check(a,
                                b, c, "GRAMMAR", e)
                        },
                        checkSpell: function(a, b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return g.check(a, b, c, "SPELL", e)
                        },
                        checkStyle: function(a, b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return g.check(a, b, c, "STYLE", e)
                        },
                        checkSynonyms: function(a, b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return g.check(a, b, c, "SYNONYMS", e)
                        },
                        acknowledged: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return g.feedback(a, "acknowledged")
                        },
                        ignore: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return g.feedback(a, "ignore")
                        },
                        ignoreAll: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return g.feedback(a, "ignore_all")
                        },
                        addToDictionary: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return m("add_to_dict", {
                                word: a.value
                            })
                        },
                        feedback: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return m("feedback", {
                                sentenceNo: a.sentence_no,
                                alertId: String(a.sid),
                                text: a.value,
                                type: b
                            })
                        },
                        check: function(a, c, e, d, h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return b("submit", {
                                text: a,
                                begin: c,
                                end: e,
                                checks: d
                            }, h)
                        },
                        start: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var b = {
                                token: c.capi.token,
                                sid: a.sid,
                                docid: a.docid,
                                client: c.capi.CLIENT_NAME,
                                protocolVersion: c.capi.PROTOCOL_VERSION
                            };
                            return a.dialect && (b.dialect = a.dialect), c.capi.clientVersion && (b.clientVersion = c.capi.clientVersion), c.capi.extDomain && (b.extDomain = c.capi.extDomain), m("start", b)
                        },
                        plagiarism: function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return b("plagiarism", {
                                text: a
                            }, c)
                        },
                        undo: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return m("undo", {
                                alertId: a,
                                sentenceId: b
                            })
                        },
                        drop: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return m("drop", {
                                alertId: a,
                                sentenceId: b
                            })
                        },
                        synonyms: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return m("synonyms", {
                                rev: g.rev - 1,
                                begin: a,
                                token: b
                            })
                        },
                        stop: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return m("stop")
                        },
                        logout: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return m("logout")
                        },
                        close: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return g.ws.close()
                        },
                        wsPause: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return g.ws.wsPause()
                        },
                        wsPlay: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return g.ws.wsPlay()
                        },
                        sendContainerId: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return m("option", {
                                name: "gnar_containerId",
                                value: a
                            })
                        }
                    }),
                    q = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = void 0,
                            b = !1;
                        return {
                            setAvailable: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                clearTimeout(a);
                                b && g.emit("serviceState", {
                                    type: "capi",
                                    available: !0
                                });
                                b = !1
                            },
                            checkOnline: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                clearTimeout(a);
                                a = setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    g.ws.isConnected() || (g.emit("serviceState", {
                                        type: "capi",
                                        available: !1
                                    }), b = !0)
                                }, 6E4)
                            }
                        }
                    }();
                return g.ws.on("message", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (a.action) {
                        var b = a.action.toLowerCase();
                        if ("finished" === b && void 0 !== a.rev) return g.emit([b, a.rev.toString()], a), g.emit(b, a);
                        if ("cannot_find_synonym" === a.error) return g.emit("synonyms", {
                            synonyms: {
                                meanings: []
                            },
                            action: "synonyms",
                            id: a.id,
                            type: "syn"
                        });
                        if ("error" ===
                            b) {
                            if (b = t[a.error]) {
                                b.intervals || (b.intervals = [], b.lastErrSent = 0);
                                b.lastErr = Date.now();
                                b.intervals.push(b.lastErr);
                                b.intervals.length < b.maxCount && (g.ws.reconnect(), g.start());
                                var c = 6E4 > b.lastErr - b.intervals[b.intervals.length - (b.maxCount + 1)];
                                b.intervals.length > b.maxCount && c && 6E4 < b.lastErr - b.lastErrSent && (g.emit(b.emitMsg, {
                                    msg: a,
                                    count: b.intervals.length,
                                    intervals: b.intervals
                                }), b.lastErrSent = b.lastErr);
                                "not_authorized" === a.error && b.intervals.length > b.maxCount && (b.intervals = [])
                            }
                            return g.emit("capiError",
                                a)
                        }
                        if ("alert" === b && void 0 !== a.rev) return g.emit([b, a.rev.toString()], a), g.emit(b, a);
                        a.id && g.emit([b, a.id], a);
                        g.emit(b, a)
                    }
                }), g.on("start", function(a) {
                    g.emit("socketStart");
                    n && console.log("Got START with sid %s", a.sid);
                    a.sid && (g.options.sid = a.sid)
                }), g.ws.connect(), g.start(), g.ws.on("connect", function() {
                    g.emit("socketConnect");
                    q.setAvailable()
                }), g.ws.on("error", function(a) {
                    q.checkOnline();
                    "disconnected" !== a && (g.emit("socketError", a), u || (l++, g.emit("socketFailCount", l)), u = !0)
                }), g.ws.on("reconnect", function() {
                    g.start();
                    g.emit("socketReconnect");
                    q.setAvailable();
                    u && (g.emit("socketReconnectAfterError"), u = !1)
                }), g.ws.delegate(g, "disconnect"), g
            }
        })
    }, {
        "@grammarly-npm/websocket": 18,
        emitter: "emitter",
        lodash: "lodash"
    }],
    256: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("@grammarly-npm/textdiff");
        c.differ = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (4 >= a.length) return b;
            var e = d.textdiff(a, b);
            if (!e.from) return b;
            c = '<span class="' + (c || "b") + '">';
            return 1 === e.newFragment.length && 0 < e.from && a[e.from - 1] === e.newFragment && (e.newFragment +=
                e.newFragment, --e.from), 1 !== e.oldFragment.length || e.newFragment.length || b[e.from - 1] !== e.oldFragment || (e.newFragment = e.oldFragment, --e.from), 3 < e.newFragment.length ? b : a.substring(0, e.from) + c + e.newFragment + "</span>" + a.substring(e.to)
        }
    }, {
        "@grammarly-npm/textdiff": 16
    }],
    257: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            b = b || "all";
            var c = [160, 10, 8, 32, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8287, 12288];
            a && (c = c.filter(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return -1 === a.indexOf(b)
            }));
            for (var e = [], d = 0; d < c.length; d++) e[d] = String.fromCharCode(c[d]);
            c = "";
            switch (b) {
                case "single":
                    break;
                default:
                    c = "+"
            }
            return new RegExp("[" + e.join("") + "]" + c, "g")
        }

        function f(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return !a || (a = a.replace(c.QUOTE_RE, ""), -1 !== c.SEPARATORS.indexOf(a) || a.match(c.ALL_SPACE_RE))
        }

        function k(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a || a === b) return {
                x: 0,
                y: 0
            };
            var c = {
                x: a.offsetLeft,
                y: a.offsetTop
            };
            a = k(a.offsetParent, b);
            return c.x += a.x, c.y += a.y, c
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c._f = function() {};
        c.supportsPlaintextEditables = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = document.createElement("div");
            return a.setAttribute("contenteditable",
                "PLAINTEXT-ONLY"), "plaintext-only" === a.contentEditable
        };
        c.getSpaceConstant = d;
        c.ALL_SPACE_RE = d();
        c.SEPARATORS = ',.;:()\u00a7&$%!@#?*~+}{[]|/"`-<>\u2026\u201c\u201d\n';
        c.QUOTE_RE = /["'\u201d\u2019\u201a\u201b\u201f\u201e\u201c]/g;
        c.isSep = f;
        c.wordSeparated = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var e = a.substring(b - 1, b);
            a = a.substring(c, c + 1);
            return f(e) && f(a) || b === c
        };
        c.getNextWord = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a.substring(b, a.length);
            b = 0;
            var e = "";
            if (0 === a.length) return c ? {
                inc: b,
                word: ""
            } : "";
            for (var d = ""; 0 < a.length && f(a[0]);) d += a.substring(0,
                1), a = a.substring(1, a.length), b++;
            for (var l = 0; l < a.length; l++) {
                var g = a[l];
                if (f(g)) break;
                e += g
            }
            return c ? {
                inc: b,
                word: e,
                sep: d
            } : e
        };
        c.getPrevWord = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a.substring(0, b);
            for (var c = ""; f(a[a.length - 1]) && 0 < a.length;) a = a.substring(0, a.length - 1);
            for (b = a.length - 1; 0 <= b;) {
                var e = a[b];
                if (f(e)) break;
                c = e + c;
                b--
            }
            return c
        };
        var m = /[!?.]\s|\n/g;
        c.getSentenceByPos = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = b,
                d = a.substr(c, 2),
                e = a.substr(c - 1, 2);
            for (e && e.match(m) && (b--, c = b, d = a.substr(c, 2)); d && !d.match(m);) c++, d = a.substr(c, 2);
            e = c + 2;
            c = b;
            for (d =
                a.substring(c - 2, c); d && 0 < c - 2 && !d.match(m);) c--, d = a.substring(c - 2, c);
            a = c;
            return 0 >= a - 2 && (a = 0), {
                s: a,
                e: e
            }
        };
        c.getNextSepOffset = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var c = 0; void 0 !== a[b] && !f(a[b]);) b++, c++;
            return c
        };
        c.getPrevSepOffset = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var c = 0; void 0 !== a[b] && !f(a[b]);) b--, c++;
            return c
        };
        c.getPos = k;
        c.wordCount = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a) return 0;
            a = a.replace(/[\W\d]/gi, " ").trim().replace(/\s+/gi, " ").split(" ");
            return 1 === a.length && "" === a[0] ? 0 : a.length
        };
        c.declension = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            2 === b.length && b.push(b[1]);
            var c = 2;
            return 1 === a % 10 && 11 !== a % 100 && (c = 0), 2 <= a % 10 && 4 >= a % 10 && (10 > a % 100 || 20 <= a % 100) && (c = 1), b[c]
        }
    }, {}],
    258: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/helpers/typeof")) && b.__esModule ? b : {
                "default": b
            },
            f = (b = a("babel-runtime/core-js/object/assign")) && b.__esModule ? b : {
                "default": b
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var k = a("lodash"),
            m = a("lib/wrap"),
            e = a("../under"),
            r = a("./match-extensions"),
            n = a("./text-api"),
            t = a("./synonyms"),
            u = a("./track"),
            l = a("./editor-util"),
            g = a("lib/dom");
        c.GrammarlyEditor = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                x.inputListener &&
                    x.inputListener.start();
                x.dom && x.dom.start();
                a.value && x.setText(a.value);
                a.matches && x.addMatches(a.matches);
                x.api.update(x.currentText);
                x.check()
            }

            function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                w.checkPlagiarism(x.currentText)
            }

            function q() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                H()
            }

            function z() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var a = x.el.querySelectorAll(".gr-alert"), b = a.length, c = 0; c < b; c++) {
                    var d = a[c],
                        e = d.nextSibling;
                    e && 3 === e.nodeType && (d.__sentCorruptedUnderline || g.hasClass(d, "Punctuation") || e.textContent && e.textContent[0].match(/\w/) && (x.emit("corruptedUnderline", {
                        text: d.textContent,
                        id: d.id,
                        className: d.className,
                        siblingText: e.textContent.substring(0, 20)
                    }), d.__sentCorruptedUnderline = !0))
                }
                M = setTimeout(z, 5E3)
            }
            var h = !a.silentLogs,
                w = n.createTextApi(a),
                x = e.createEditor((0, f["default"])({}, a, {
                    api: w
                }), {
                    isValidNode: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return !!a.tagName && -1 === L.indexOf(a.tagName.toLowerCase()) && "gmail_quote" !== a.className
                    },
                    isValidMatchForNode: function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return "tmp_id" === c.id.toString() || !!c.syn || b
                    }
                });
            x.matchPrefix = a.matchPrefix;
            var B = a.filter || function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a
                },
                C = a.apps || {
                    plagiarismActive: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return !1
                    }
                },
                G =
                k.throttle(c, a.plagiarismCheckDelay || 2E3),
                A = x.matches,
                D = r.createMatchExtensions({
                    silentLogs: a.silentLogs,
                    exposeRawMatch: a.exposeRawMatch,
                    editor: x,
                    matches: A
                }),
                J = "textarea" === a.editorType.value,
                L = ["pre", "code", "blockquote"];
            m.skipTag(k.union(m.skipTag() || [], L));
            m.skipClass(k.union(m.skipClass() || [], ["gmail_quote"]));
            k.extend(x, {
                checkPlagiarism: c,
                getSynonyms: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    w.synonyms(a, b)
                },
                filter: B,
                apps: C,
                matchFilter: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return B(a)
                },
                synonyms: t.createSynonyms({
                    editor: x,
                    canRemove: a.canRemoveSynonym,
                    textareaWrapSelector: a.textareaWrapSelector,
                    animatorContainer: a.animatorContainer,
                    getAnimatorElPos: a.getAnimatorElPos,
                    exposeSynApi: a.exposeSynApi
                }),
                getState: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = {
                        matches: x.serializeMatches(x.matches.get(), !0),
                        editorId: x.id,
                        cursor: x.latestCursor,
                        socketId: x.api.ws.socketId,
                        api: x.api.getState(),
                        selectedMatchId: x.selectedMatch && x.selectedMatch.id
                    };
                    return x.getHtml && !a ? (0, f["default"])({}, b, {
                        html: x.getHtml(),
                        whiteSpace: x.el.__white_space
                    }) : (0, f["default"])({}, b, {
                        text: x.getText(!0)
                    })
                },
                setState: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    x.clearData();
                    a.html && (x.el.__white_space = x.el.style.whiteSpace = a.whiteSpace || "normal");
                    x.one("afterReplace", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        x.api.setState(a.api);
                        x.addMatches(a.matches);
                        a.cursor || (a.cursor = {
                            s: 0,
                            e: 0
                        });
                        x.isHtmlGhost || x.el.focus();
                        0 < x.getMatches().filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.syn
                        }).length && x.synonyms.registerRemove();
                        x.setCursor(a.cursor);
                        x.latestCursor = a.cursor;
                        x.render()
                    });
                    void 0 !== a.html && x.setHtml ? x.setHtml(a.html) : x.setText(a.text)
                },
                run: b,
                ot_alert_intersection: 0,
                isTextarea: J
            }, D);
            x.on("change", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                C.plagiarismActive() &&
                    G()
            });
            x.on("input", q);
            x.on("keydown", q);
            x.on("exit", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                x.api.close();
                x.synonyms.disable();
                clearTimeout(M)
            });
            x.on("fieldEnable", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                x.synonyms.fieldEnable()
            });
            x.on("startInvalidateNode", w.wsPause);
            x.on("endInvalidateNode", w.wsPlay);
            w.delegate(x, "plagiarismChecked");
            w.delegate(x, "capiError");
            w.delegate(x, "serviceState");
            w.delegate(x, "socketConnect");
            w.delegate(x, "socketStart");
            w.delegate(x, "socketReconnect");
            w.delegate(x, "socketReconnectAfterError");
            w.delegate(x, "socketFailCount");
            w.delegate(x,
                "disconnect");
            w.delegate(x, "socketError");
            w.delegate(x, "frequent_runtime_error");
            w.delegate(x, "too_many_runtime_error");
            w.delegate(x, "frequent_not_authorized_error");
            w.delegate(x, "finished");
            w.on("remove", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = "object" === ("undefined" == typeof a ? "undefined" : (0, d["default"])(a)) && a.id ? a.id : a,
                    c = x.bySid(b);
                if (x._removedByServer.push(b), "object" === ("undefined" == typeof a ? "undefined" : (0, d["default"])(a)) && a.id && A.rmMatchesBufferCache(a), c && (x.emit("serverRemove", c), c.cancelServerRemove)) return void delete c.cancelServerRemove;
                if (c) return A.forceRemove(c);
                (a = x.matches.getRemoved()[b]) && (h && console.log("remove-already-removed-match"), A.forceRemove(a))
            });
            u.track(x);
            m.setOnError(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                x.emit("track", {
                    type: "increment",
                    key: "wrap_error." + a
                })
            });
            var M = void 0;
            J || z();
            var H = k.debounce(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (x.getText) {
                        var a = x.getText(),
                            b = l.wordCount(a),
                            c = 0 < b ? x.getFiltered().length / b : 0;
                        x.emit("track", {
                            type: "timing",
                            data: {
                                "performance:text_stats.error_rate": Math.round(1E3 * c) / 1E3,
                                "performance:text_stats.text_size_chars": a.length,
                                "performance:text_stats.text_size_words": b
                            }
                        })
                    }
                },
                5E3);
            a.autorun && b();
            var O = x.api.feedback;
            return x.api.feedback = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return O(a, b)
            }, x
        };
        c.getUpgradeUrlFromMatches = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return k.filter(a, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a.hidden
                })
            }
            var c = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a = b(a);
                    var c = {};
                    return k.each(a, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var b = a.group;
                        a = a.category.replace("_", "");
                        b = [b, a].join(":");
                        void 0 === c[b] && (c[b] = 0);
                        c[b] += 1
                    }), c
                }(a.matches),
                d = a.returnUrl,
                e = a.queryParams || {},
                h = {},
                f = {};
            return d && (h.return_url = encodeURIComponent(d)), a.appType && (h.app_type = a.appType), f = k.extend(c,
                h, e), a.baseUrl + "?" + function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = "";
                return k.each(a, function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    "" !== b && (b += "&");
                    b += encodeURI(String(c)) + "=" + a
                }), b
            }(f)
        }
    }, {
        "../under": 314,
        "./editor-util": 257,
        "./match-extensions": 259,
        "./synonyms": 262,
        "./text-api": 263,
        "./track": 264,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/helpers/typeof": 42,
        "lib/dom": 215,
        "lib/wrap": 324,
        lodash: "lodash"
    }],
    259: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/core-js/json/stringify")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = a("lodash"),
            k = a("./editor-util"),
            m = a("./match-transformer");
        c.createMatchExtensions = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var a = u.get(), b = 0; b < a.length; b++) a[b].deselect(), a[b].syn && (u.remove(a[b]), b--)
            }

            function c(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.rFirst === b.rFirst && (0, d["default"])(a.r) === (0, d["default"])(b.r)
            }
            var e = !a.silentLogs,
                u = a.matches,
                l = a.editor,
                g = a.exposeRawMatch,
                q = f.map(",.;:", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a + " "
                }),
                v = u.remove;
            return u.remove = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                v(a, b);
                delete a.selected;
                a.serverRemove || u.addRemoved(a)
            }, {
                getMatchClass: function(a,
                    b) {
                    var c = a.syn ? " gr-syn" : " gr-alert";
                    return 1 === a._e - a._s && "a" !== b.substring(a._s, a._e).toLowerCase() && (c += " gr_tiny"), a.selected && (c += " sel"), c += a.gramm ? " gr_gramm" : " gr_spell", a.replaced && (c += " gr_replaced"), a.notClickableTitle && "ContextualSpelling" !== a.group && (c += " gr_hide"), a.free || (c += " gr_premium"), c
                },
                processMatch: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a.skipUpdatePos = "Plagiarism" === a.category || "syn" === a.type, m.processMatch(a, b, {
                        exposeRawMatch: g
                    }), "syn" !== a.type || (l.emit("syn", a), !1)
                },
                beforeReplace: function(a,
                    b, c) {
                    a.syn && (l.latestCursor.s = l.latestCursor.e = l.latestCursor.s - b + c.length)
                },
                processRemove: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return "Plagiarism" === a.category ? {
                        next: !0
                    } : {
                        remove: !1
                    }
                },
                matchRemoved: function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var e = a.value,
                        h = !k.wordSeparated(b, c, d),
                        f = " " === e[0] && " " === e[e.length - 1],
                        g = -1 !== e.indexOf(","),
                        p = -1 !== e.indexOf(";"),
                        l = -1 !== q.indexOf(e),
                        n = a.rFirst === b.substring(c, d + 1);
                    c = k.getPrevWord(b, c) + " " + e;
                    c = c === a.rFirst || c === a.secondArticle;
                    b = "ArticleUse" === a.category && -1 !== a.todo.indexOf("change") && a.next !== k.getNextWord(b,
                        d);
                    d = "Plagiarism" === a.category;
                    a = "ClosingPunctuation" === a.category;
                    return h && !f && !g && !l && !p && !a && !d || n || c || b
                },
                matchesEqual: function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !a.syn && !b.syn && d && a.v.toLowerCase() === b.v.toLowerCase() && a.category === b.category && c(a, b)
                },
                extendMatch: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a.sid = b.id.toString();
                    a.sentence_no = b.sentence_no;
                    a.header = b.header;
                    a.cls = b.cls;
                    a.details = b.details;
                    a.explanation = b.explanation;
                    a.todo = b.todo;
                    a.notClickableTitle = b.notClickableTitle;
                    a.showTitle = b.showTitle;
                    e && console.log("updated match with server id",
                        a)
                },
                canAddRemovedMatch: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !!(a.addedToDict || a.ignored || a.serverRemove)
                },
                canShiftMatchEnd: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !a.syn
                },
                removeSyn: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    l.saveCursor();
                    u.get().forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.syn && l.emit("removeSyn", a)
                    });
                    b();
                    l.dom && l.dom.removeBySelector(".gr-syn");
                    l.restoreCursor()
                },
                tryToAdd: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var d = u.get();
                    a: {
                        var h = u.get();
                        if ("Plagiarism" !== a.category)
                            for (var g = 0; g < h.length; g++) {
                                var l = h[g],
                                    p = l;
                                if (a.s === p.s && a.e === p.e || (a.s === p.s || a.e === p.e) && a.value.replace(/\s+/g, "") === p.value.replace(/\s+/g,
                                        "")) {
                                    if (a.priority < l.priority) {
                                        h = -1;
                                        break a
                                    }
                                    if (a.priority > l.priority) {
                                        h = g;
                                        break a
                                    }
                                }
                            }
                        h = void 0
                    }
                    if (-1 === h) return e && console.log("%c skip adding match with lower priority", "color:rgba(239, 110, 105, 0.8)", a.value, a), !1;
                    h && -1 < h && (e && console.log("%c remove same match with lower priority", "color:rgba(239, 110, 105, 0.8)", d[h].value, d[h]), d.splice(h, 1));
                    a: if (h = u.get(), "Plagiarism" !== a.category) {
                        for (g = 0; g < h.length; g++)
                            if (l = h[g], l.category === a.category && "Plagiarism" !== l.category && u.isIntersected(a, l) && c(a,
                                    l)) {
                                h = l;
                                break a
                            }
                        h = !1
                    } else h = void 0;
                    if (h) return e && console.log("%c remove, match of same category is overlaping with", "color:rgba(239, 110, 105, 0.8)", a.value, h), u.matchUpdater.extendWithoutAdding(d, a), !1;
                    d = -1 !== a.v.indexOf(" ");
                    h = -1 !== a.v.indexOf("'") || -1 !== a.v.indexOf("\u2019");
                    g = ",," === a.v || ".." === a.v;
                    if (!(f.isUndefined(a.rFirst) || k.wordSeparated(b, a.s, a.e) || d || k.isSep(a.v.trim()) || h || g)) return e && console.log("%c match is part of word '%s'", "color:rgba(239, 110, 105, 0.8)", a.value, a), u.emit("match_is_part_of_word"), !1;
                    if ("IgnoredPatterns" === a.category || "IgnoredWords" === a.category) return e && console.log("%c remove ignored", "color:rgba(239, 110, 105, 0.8)", a), !1;
                    d = b.substring(a.s, a.e);
                    if (-1 !== a.todo.indexOf("add a comma") && ("," === b.substring(a.e, a.e + 1) || "," === d[d.length - 1])) return a.removed = !0, e && console.log("%c lost add a comma match, comma is here", "color:rgba(239, 110, 105, 0.8)", a), !1;
                    if (-1 !== a.todo.indexOf("add an article") && (" an" === d || " the" === d || " a" === d)) return e && console.log("%c lost add an article match",
                        "color:rgba(239, 110, 105, 0.8)", a), !1;
                    d = k.getPrevWord(b, a.s) + " " + a.value;
                    if (d === a.rFirst || d === a.secondArticle) return e && console.log("%c lost add an article match, article already fixed", "color:rgba(239, 110, 105, 0.8)", a), !1;
                    a: {
                        d = u.get();
                        for (h = 0; h < d.length; h++)
                            if (g = d[h], a.s === g.s && a.e === g.e && "AccidentallyConfused" === a.category && ("CommonlyConfused" === g.category || "Misspelled" === g.category)) {
                                d = !0;
                                break a
                            }
                        d = !1
                    }
                    return d ? (e && console.log("skip AccidentallyConfused match see https://grammarly.atlassian.net/browse/FT-1172"), !1) : !!u.tryToAdd(a, b)
                },
                serializeMatches: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a = a || u.get(), a = a.filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return !a.replaced
                    }), b || (a = a.filter(function(a) {
                        return !a.syn
                    })), a = a.map(function(a) {
                        var b = {},
                            c;
                        for (c in a)("r" === c || "origReplacements" === c || "rHtml" === c || "examples" === c || "references" === c || "syn" === c || "synonyms" === c || "transforms" === c || "rawMatch" === c || !f.isFunction(a[c]) && !f.isObject(a[c]) && "selected" !== c && "inDom" !== c || f.isArray(a[c]) || "header" === c) && (b[c] = a[c]);
                        return b
                    })
                },
                addSyn: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = l.getText();
                    u.tryToAdd(a, b) && (l.addMethodsToMatch(a), l.saveCursor(), l.render(), l.restoreCursor(), l.emit("addedSynonym", a))
                },
                filterBySpelling: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (var c = [], d = 0; d < a.length; d++) {
                        var e = a[d];
                        "ContextualSpelling" === e.group && c.push(k.getSentenceByPos(b, e.s))
                    }
                    return a.filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if ("ContextualSpelling" === a.group || "Plagiarism" === a.group || a.syn) return !0;
                        for (var b = 0; b < c.length; b++) {
                            var d = c[b];
                            if (a.s > d.s && a.s < d.e) return !1
                        }
                        return !0
                    })
                },
                bySid: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return f.find(u.get(), {
                        sid: a.toString()
                    })
                }
            }
        }
    }, {
        "./editor-util": 257,
        "./match-transformer": 260,
        "babel-runtime/core-js/json/stringify": 22,
        lodash: "lodash"
    }],
    260: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = /^(?:(.*): ){1}(.+)$/,
                c = [];
            if (!a) return [];
            a = p.createEl("<div>" + a + "</div>", document).querySelectorAll("p");
            for (var d = 0; d < a.length; d++) {
                for (var e = a[d].querySelectorAll("span"), h = [], f = 0; f < e.length; f++) {
                    var g = e[f],
                        l = g.innerHTML,
                        q = "Comment";
                    g = g.classList[0] || "grey";
                    var k = l.match(b);
                    k && (l = k[2], q = k[1]);
                    h.push({
                        type: q,
                        color: g,
                        example: l
                    })
                }
                h.length && c.push(h)
            }
            return c
        }

        function f(a,
            b) {
            var c = "",
                d = !1;
            if (a && 0 !== a.length) {
                b.onlyDel = !0;
                for (var e = 0; e < a.length; e++) {
                    var h = a[e],
                        f = a[e + 1] && a[e + 1].ins,
                        g = a[e + 1] && a[e + 1].del;
                    if (q.isUndefined(h.sep)) {
                        if (h.ins) {
                            b.onlyDel = !1;
                            d && (c += "<span class='arr'> \u2192 </span>");
                            var l = ""; - 1 !== ".,:;_".indexOf(h.ins) && (l = "thin");
                            var p = h.ins;
                            d && (p = y.differ(d, h.ins), b.del = d, d = null);
                            c += "<span class='ins " + l + "'>" + p + "</span>"
                        }
                        if (h.del) {
                            if (1 < h.del.length) {
                                p = h.del;
                                f && (p = y.differ(f, h.del));
                                d = "del ";
                                h.del.match(/["'\u201d][.,;]/) && (d += "del-qdot ");
                                h.del.match(/,,/) &&
                                    (d = "red sign double-commas");
                                l = h.del.replace(/,/g, "").split(" ").filter(Boolean) || [];
                                if (h.del.match(/^,(.*?),$/) && 2 < h.del.length && 1 < l.length) {
                                    d = "red";
                                    a = "<span class='sign " + d + "'>,</span>";
                                    c = "<span class='" + d + "'>" + (a + l.shift()) + "..." + (l.pop() + a) + "</span>";
                                    b.onlyDel = !1;
                                    break
                                }
                                c += "<span class='" + d + "'>" + p + "</span>"
                            } else d = h.del.match(/[a-z]/i) ? " del del-letter" : " sign", "\u2019" === h.del && (d += " apostrophe"), c += "<span class='red" + d + "'>" + h.del + "</span>";
                            d = h.del
                        }
                        if (h = h.w) p = "word", g && (p += " del-word"), f && (p +=
                            " ins-word"), h = "<span class='" + p + "'>" + h + "</span>";
                        h && (c += h)
                    } else c += "<span class='arr'> \u2192 </span>", d = null
                }
                return c
            }
        }

        function k(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (b) {
                var c = q.template("<span class='replacement'><span class='btn-r' data-value='<%- r %>'><%= title %></span></span>"),
                    d = "";
                return 2 === b.length && b[0].del && b[1].ins && (d = q.template("<span><span class='ins sec'><%= ins %></span></span>")({
                        ins: b[1].ins
                    })), 3 === b.length && b[0].del && b[2].ins && (d = q.template("<span><span class='ins sec'><%= ins %></span></span>")({
                        ins: b[2].ins
                    })),
                    b[0].w && (d = q.template("<span><%= w %><span class='ins sec'><%= ins %></span></span>")({
                        w: b[0].w,
                        ins: b[1].ins
                    })), b[0].ins && (d = q.template("<span><span class='ins sec'><%= ins %></span><%= w %></span>")({
                        ins: b[0].ins,
                        w: b[1].w
                    })), c({
                        r: a,
                        title: d
                    })
            }
        }

        function m(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = [],
                d = r(a[0]);
            d || (b.cls += " replaceWithoutSep");
            for (var h = 1; h < a.length; h++) {
                var g = e(a[h], d);
                c.push({
                    label: f(g, b) || b.origReplacements[h],
                    value: b.origReplacements[h]
                })
            }
            return c
        }

        function e(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = !1,
                d = !1;
            return a.filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b ?
                    c ? a : (a.del && (d = !0), void((a.sep || d && a.ins) && (c = !0))) : a
            })
        }

        function r(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a) return !1;
            for (var b = !1, c = 0; c < a.length; c++) {
                if (a[c].sep || a[c].ins && b) return !0;
                a[c].del && (b = !0)
            }
            return !1
        }

        function n(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if ((2 < a.length || r(a[0]) || b.longTitle) && "Articles" !== b.category && !b.showTitle) {
                b.cls += " multiReplace";
                r(a[0]) || (b.cls += " replaceWithoutSep");
                b.multiReplace = !0;
                var c = q.template("<span class='replacement replacement-<%= index %>'><span class='btn-r' data-value='<%- r %>'><span><%= parts %></span></span></span>"),
                    d = [],
                    h = [],
                    g = !1,
                    l = !1;
                var p = void 0;
                for (var n = 0; n < a[0].length; n++) {
                    var v = a[0][n];
                    if (h.push(v), v.ins && (l = !0), v.sep || p && v.ins) {
                        g = !0;
                        break
                    }
                    v.del && (p = !0)
                }
                n = 0;
                p = f(h, b) || "";
                g || (n++, p = c({
                    r: b.origReplacements[0],
                    parts: f(h, b),
                    index: 0
                }));
                g && l && n++;
                if ((h = a[0] && a[0][1] && a[0][1].del) && h.match(/^,(.*?),$/) && 2 < h.length) a = p;
                else {
                    for (h = n; h < a.length; h++) l = e(a[h], g), d.push(c({
                        r: b.origReplacements[h],
                        parts: f(l, b) || b.origReplacements[h],
                        index: h
                    }));
                    a = p + d.join("")
                }
                return a
            }
            return 1 === a.length || b.showTitle ? f(a[0], b) : 2 === a.length ||
                "Articles" === b.category || "Determiners" === b.category ? (b.cls += " doubleReplace", b.doubleReplace = !0, (k(b.rFirst, a[0]) || "") + k(b.r[0], a[1])) : ""
        }

        function t(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.notClickableTitle && !a.showTitle || !a.transforms ? [] : a.transforms.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a = a.replace("\u2192", "<span class='sep'></span>");
                a = p.createEl("<div>" + a + "</div>");
                for (var b = [], c = 0; c < a.childNodes.length; c++) {
                    var d = a.childNodes[c];
                    3 !== d.nodeType ? (d.classList.contains("sep") && b.push({
                            sep: !0
                        }), d.classList.contains("gr_grammar_ins") && b.push({
                            ins: d.innerHTML
                        }),
                        d.classList.contains("gr_grammar_del") && b.push({
                            del: d.innerHTML
                        })) : b.push({
                        w: d.nodeValue
                    })
                }
                return b
            })
        }

        function u(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.title,
                c = a.transforms;
            if (c && c[0] && 2 === c[0].length) {
                var d = c[0];
                (d[0].w && d[1].ins || d[1].w && d[0].ins) && (a.cls += " only-ins");
                (d[0].w && d[1].del || d[1].w && d[0].del) && (a.cls += " only-del");
                (d[0].ins && d[1].del || d[1].ins && d[0].del) && (a.cls += " ins-del")
            }
            c && c[0] && 20 < c[0].reduce(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b = b[(0, g["default"])(b).shift()].toString() || "";
                return Math.max(a, b.length)
            }, 0) && (a.notClickableTitle = !0, a.longTitle = !0, a.replacementHint = l("Click to " + a.todo), c = c.map(function(a) {
                return a.filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a.ins
                })
            }));
            return b = n(c, a), c.length && (a.rHtml = m(c, a)), b || (b = a.v), a.replaceInCard && (a.replaceInCard = b), a.notClickableTitle && (b = a.title), b
        }

        function l(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = document.createElement("div");
            return b.innerHTML = a, b.textContent
        }
        var g = (b = a("babel-runtime/core-js/object/keys")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var q = a("lodash"),
            v = a("../util"),
            p = a("../dom"),
            y = a("./differ"),
            z = a("./editor-util");
        c.examples = d;
        c.header = u;
        c.processMatch = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            c && c.exposeRawMatch && (a.rawMatch = q.cloneDeep(a));
            a.id = (a.id || v.guid()).toString();
            a.s = a.begin;
            a.e = a.end;
            a._s = a.s;
            a._e = a.e;
            "Plagiarism" === a.group && (a.highlightBegin = a.s, a.highlightEnd = a.e);
            void 0 !== a.highlightBegin && void 0 !== a.highlightEnd && a.highlightBegin === a.highlightEnd && 0 < a.text.length && (a.highlightBegin = a.s, a.highlightEnd = a.e);
            void 0 !== a.highlightBegin && (a._s = a.highlightBegin);
            void 0 !== a.highlightEnd &&
                (a._e = a.highlightEnd);
            a.sd = a._s - a.s;
            a.ed = a._e - a.e;
            a._value = b.substring(a._s, a._e);
            "Spelling" === a.group && (a.group = "ContextualSpelling");
            b = a.extra_properties && "true" === a.extra_properties.enhancement;
            a.cls = a.group;
            a.origReplacements = (a.replacements || []).concat();
            a.rFirst = a.replacements && !b && a.replacements.splice(0, 1)[0];
            a.rFirst = a.rFirst && a.rFirst.replace(/\s+/g, " ");
            a.noReplacments = !1 === a.rFirst || void 0 === a.rFirst;
            a.showTitle = a.noReplacments || a.extra_properties && "true" === a.extra_properties.show_title;
            a.replaceInCard = !a.noReplacments && a.extra_properties && "true" === a.extra_properties.show_title;
            a.didYouMean = !a.noReplacments && a.extra_properties && "true" === a.extra_properties.did_you_mean;
            a.enhancement = a.replacements && a.replacements.length && b;
            a.notClickableTitle = a.noReplacments || a.showTitle || a.didYouMean;
            a.priority = parseInt(String(a.extra_properties && a.extra_properties.priority || 0), 10);
            a.r = a.replacements || [];
            a.rHtml = a.rHtml || [];
            a.v = a.text;
            a.oldVal = a.v;
            a.sid = a.id.toString();
            a.originalTransforms = a.transforms || [];
            a.transforms = t(a);
            a.header = u(a);
            a.details = a.details || "";
            a.originalTodo = a.todo || "";
            a.originalExamples = a.examples || "";
            a.examples = d(a.originalExamples);
            a.explanation = a.explanation && a.explanation.replace(/<\/?p[^>]*>/g, "").trim();
            if ("Plagiarism" === a.category) {
                b = a.details.split(/\n|<br\/?>/gi);
                b.splice(0, 4);
                c = [];
                for (var e = 0; e < b.length; e++) {
                    var f = b[e].match(/<strong>(.*?)\:<\/strong>(.*?)$/i),
                        h = void 0,
                        g = void 0;
                    f && (h = f[1], g = f[2].replace("_br", ""));
                    c.push({
                        type: h,
                        descr: g
                    })
                }
                a.references = c;
                a.explanation =
                    "A part of your paper is matching some text from the Web. Please make sure that this text is properly referenced.";
                a.header = "Unoriginal text: " + z.wordCount(a.text) + " words";
                a.href = a.extra_properties.url || "";
                a.href_title = (a.extra_properties.url || "").replace("https://", "").replace("http://", "")
            }
            a.l = a.e - a.s;
            a.multi = 0 < a.r.length;
            a.spell = "ContextualSpelling" === a.group;
            a.gramm = !a.spell;
            a.showAcceptButton = "ContextualSpelling" !== a.group && a.noReplacments && 1 > (a.replacements || []).length;
            a.showReplacements = !("Misspelled" !==
                a.category || !a.r.length);
            a.showAddToDictionary = !(!a.spell || "General" !== a.point || "Misspelled" !== a.category && "Unknown" !== a.category);
            a.showReplacementsInText = !0;
            a.multiReplace && (a.showReplacements = !0, a.showReplacementsInText = !1, a.showReplacementsOnTop = !0);
            a.cls && -1 !== a.cls.indexOf("doubleReplace") && (a.showReplacements = !1, a.showReplacementsInText = !1);
            (a.showTitle || a.longTitle) && (a.showReplacements = !1, a.showReplacementsOnTop = !1, a.showReplacementsInText = !1);
            if (a.showReplacements && a.del)
                for (b = a.del, c = 0; c <
                    a.r.length; c++) a.r[c] = y.differ(b, a.r[c]);
            a.enhancement && (a.category = "_" + a.category, a.title = z.declension(a.r.length, ["Suggested enhancement:", "Suggested enhancements:"]));
            "spelling" === a.todo && (a.todo = "correct");
            ("" === a.todo && !a.rFirst || "Plagiarism" === a.category || a.notClickableTitle) && (a.todo = "expand card");
            "" === a.todo && a.rFirst && (a.todo = "correct");
            a.value = a.v;
            a.todo = l("Click to " + a.todo);
            delete a.text;
            delete a.rid;
            delete a.action;
            delete a.undone
        }
    }, {
        "../dom": 215,
        "../util": 322,
        "./differ": 256,
        "./editor-util": 257,
        "babel-runtime/core-js/object/keys": 29,
        lodash: "lodash"
    }],
    261: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("../dom");
        c.SelectionAnimator = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var b = (a.animatorContainer ? a.animatorContainer.ownerDocument : document).querySelectorAll(".g-selection-anim"), c = b.length, d = 0; d < c; d++) {
                    var e = b[d];
                    e.parentNode && e.parentNode.removeChild(b[d])
                }
            }
            var c = {
                    animate: function(k, u) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (b(), 0 !== k.length) {
                            var l = k[0],
                                g = void 0;
                            if (n = k[k.length - 1] || l, f = "g-selection-anim " + a.editor.matchPrefix,
                                e = l.ownerDocument.createElement("div"), e.className = f, a.getAnimatorElPos) g = a.getAnimatorElPos(l);
                            else if (u) {
                                if (k = l.ownerDocument.querySelector(u)) l = l.getBoundingClientRect(), g = n.getBoundingClientRect(), k = k.getBoundingClientRect(), g = {
                                    left: l.left - k.left,
                                    right: g.right - k.right,
                                    top: l.top - k.top,
                                    bottom: l.bottom - k.bottom,
                                    width: g.right - l.left,
                                    height: l.height
                                }
                            } else g = k[0].getBoundingClientRect();
                            if (g) {
                                d.css(e, {
                                    top: g.top + g.height,
                                    left: g.left,
                                    width: 0
                                });
                                var q = g.width - Math.ceil(g.width / 8);
                                e.setAttribute("data-width",
                                    String(a.editor.matchPrefix ? Math.ceil(g.width) : g.width));
                                a.animatorContainer.appendChild(e);
                                setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    e.style.width = q + "px"
                                }, 10)
                            }
                            c.el = e
                        }
                    },
                    remove: b,
                    complete: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (e) return e.getAttribute("data-width") ? void d.css(e, {
                            webkitTransitionDuration: "0.2s",
                            MozTransitionDuration: "0.2s",
                            transitionDuration: "0.2s",
                            width: parseInt(e.getAttribute("data-width"), 10)
                        }) : b()
                    },
                    el: document.documentElement
                },
                e = void 0,
                f = void 0,
                n = void 0;
            return c
        }
    }, {
        "../dom": 215
    }],
    262: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c,
            "__esModule", {
                value: !0
            });
        var d = a("./selection-animator"),
            f = a("../util"),
            k = a("../dom"),
            m = a("lib/wrap"),
            e = a("emitter"),
            r = a("lodash");
        c.createSynonyms = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                y.remove()
            }

            function c(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                g.selectedMatch && g.selectedMatch.deselect();
                var b = g.getSelection(),
                    c = b.value;
                if (/^\s?[a-z']+\s?$/i.test(c) && !(2 > c.length)) {
                    if (!g.isTextarea) {
                        a = g.el.ownerDocument.getSelection().anchorNode || a.target.parentNode;
                        for (var d = m.skipClass() || [], e = m.skipTag() || [], f = 0; f < d.length; f++) e.push("." + d[f]);
                        if (a.tagName ||
                            (a = a.parentNode), k.matchesSelector(a, e.join(","))) return
                    }
                    g.getSynonyms(b.s, c);
                    c = b.s;
                    a = b.e;
                    d = b.value;
                    if (d.indexOf(" ") === d.length - 1 && (--a, b.text.substr(c, a - c)), h = b, g.dom) {
                        c = g.dom.renderRange({
                            s: c,
                            e: a
                        });
                        y.animate(c, z);
                        a = c.length;
                        for (d = 0; d < a; d++) m.unwrap(c[d]);
                        g.setCursor(b)
                    }
                    l()
                }
            }

            function l() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function c(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    d.isTrigger || 0 === d.clientX || a.canRemove(d.target) && (b(), k.unlisten(p.body, "click", c), k.unlisten(p.body, "input", c), k.unlisten(p.body, "keydown", c), r.find(g.getMatches(), {
                        syn: !0
                    }) && (g.removeSyn(), g.emit("rendered")))
                }
                k.listen(p.body, "click", c);
                k.listen(p.body, "input", c);
                k.listen(p.body, "keydown", c)
            }
            var g = a.editor,
                q = a.editor.el,
                n = a.exposeSynApi,
                p = q.ownerDocument,
                y = d.SelectionAnimator({
                    editor: a.editor,
                    getAnimatorElPos: a.getAnimatorElPos,
                    animatorContainer: a.animatorContainer
                });
            a.canRemove = a.canRemove || function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return !1
            };
            var z = a.textareaWrapSelector || "#editor .svg-wrap";
            k.listen(q, "dblclick", c);
            var h = void 0;
            g.on("syn", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                y.complete();
                var c = h.s,
                    d = h.e,
                    e = h.value;
                return g.getSelection().value !== e ? void console.log("selection changed") :
                    (e.indexOf(" ") === e.length - 1 && (--d, e = h.text.substr(c, d - c)), a.error ? console.warn("Error occured: ", a.error) : (r.extend(a, {
                        app: "synonyms",
                        addReplace: !0,
                        cls: "Synonyms",
                        syn: !0,
                        expanded: !0,
                        begin: c,
                        end: d,
                        highlightBegin: c,
                        highlightEnd: d,
                        id: f.guid(),
                        s: c,
                        e: d,
                        _s: c,
                        _e: d,
                        ed: 0,
                        sd: 0,
                        l: d - c,
                        auto: !1,
                        v: e,
                        serverRemove: !0,
                        value: e,
                        oldVal: e,
                        animEl: y.el,
                        todo: ""
                    }), n && r.extend(a, {
                        removeUnderline: b
                    }), g.removeSyn(), void g.addSyn(a)))
            });
            return e({
                completeAnimation: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    y.animate([a.getEl()], z);
                    setTimeout(y.complete, 120)
                },
                removeUnderline: b,
                registerRemove: l,
                disable: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b();
                    k.unlisten(q, "dblclick", c)
                },
                fieldEnable: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    k.listen(q, "dblclick", c)
                }
            })
        }
    }, {
        "../dom": 215,
        "../util": 322,
        "./selection-animator": 261,
        emitter: "emitter",
        "lib/wrap": 324,
        lodash: "lodash"
    }],
    263: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/core-js/json/stringify")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = a("lodash"),
            k = a("@grammarly-npm/changesets"),
            m = a("./capi");
        c.createTextApi = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (a !==
                    w.text) {
                    var b = k.diff(w.text, a);
                    w.text = a;
                    b.length && w.changes.push(b)
                }
            }

            function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                w.changes = [];
                w.text = "";
                w.sentRev = 0;
                h.rev = 0
            }

            function e() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = w.text;
                c();
                b(a);
                p()
            }

            function u(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                y && console.log("MIDDLE LOG: finished: " + (0, d["default"])(a));
                (a.removed || []).forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return w.emit("remove", a)
                });
                w.emit("finish", a)
            }

            function l(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                y && console.log("MIDDLE LOG: received match: " + (0, d["default"])(b), a, w.changes.length);
                g(b);
                b.type = a;
                w.emit("add", b)
            }

            function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var b = a.begin, c = a.rev + 1; c < w.changes.length; c++) q(w.changes[c],
                    a);
                a.rev = w.changes.length - 1;
                a.begin !== b && y && console.log("DIFF", a);
                a.begin > w.text.length && (y && console.log("match offset error", a), w.emit("match-has-wrong-revision", a))
            }

            function q(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.sequencify().forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    v(a, b, "begin", "end");
                    v(a, b, "highlightBegin", "highlightEnd")
                })
            }

            function v(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.pos + a.len >= b[c] && a.pos + a.len < b[d] && w.emit("ot_alert_intersection");
                "+" === a.type ? (0 > b[c] || a.pos <= b[c]) && (b[c] += a.len, b[d] += a.len) : "-" === a.type && a.pos < b[c] && (b[c] -= a.len, b[d] -= a.len)
            }

            function p() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b =
                    w.changes.slice(w.sentRev).map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.pack()
                    });
                if (b.length) {
                    w.emit("sending");
                    var c = {};
                    a.extendParams && a.extendParams(c);
                    h.submitOt(b, w.changes.length - 1, c, u);
                    w.sentRev = w.changes.length
                }
            }
            var y = !a.silentLogs,
                z = a.getContainerId,
                h = (a.capi || m.capi.createClient)({
                    sid: a.sid,
                    docid: a.docid,
                    createWs: a.createWs,
                    url: a.capiUrl,
                    dialect: a.dialect,
                    silentLogs: a.silentLogs
                });
            h.on("alert", l.bind(null, "error"));
            h.on("synonyms", l.bind(null, "syn"));
            h.on("socketReconnect", e);
            h.on("disconnect", c);
            h.on("socketStart",
                function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    z().then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        h.sendContainerId(a)
                    })["catch"](function(a) {
                        y && console.error("Cannot send containerId", a)
                    })
                });
            var w = f.extend({
                text: "",
                changes: [],
                sentRev: 0,
                send: p,
                update: b,
                updateMatchesToCurrentRevision: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (var b = 0; b < a.length; b++) {
                        var c = a[b];
                        c.begin = c.s;
                        c.end = c.e;
                        c.highlightBegin = c._s;
                        c.highlightEnd = c._e;
                        g(c);
                        c.s = c.begin;
                        c.e = c.end;
                        c._s = c.highlightBegin;
                        c._e = c.highlightEnd
                    }
                },
                updateMatch: g,
                restart: e,
                reset: c,
                checkPlagiarism: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    w.emit("sending");
                    h.plagiarism(a, function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return w.emit("plagiarismChecked")
                    })
                },
                getState: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return {
                        changes: w.changes.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.pack()
                        }),
                        text: w.text,
                        sentRev: w.sentRev
                    }
                },
                setState: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    w.text = a.text;
                    w.changes = a.changes.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return k.unpack(a)
                    });
                    w.sentRev = a.sentRev;
                    h.rev = a.sentRev
                },
                onadd: l,
                onfinish: u
            }, h);
            return w
        }
    }, {
        "./capi": 255,
        "@grammarly-npm/changesets": 1,
        "babel-runtime/core-js/json/stringify": 22,
        lodash: "lodash"
    }],
    264: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (a = a("babel-runtime/core-js/object/keys")) && a.__esModule ? a : {
            "default": a
        };
        Object.defineProperty(c,
            "__esModule", {
                value: !0
            });
        c.track = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = a.getMatches().filter(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !b.tracked && b.renderTs && e[a.id + b.rev + b.id] && e[a.id + b.rev]
                }).reduce(function(b, c) {
                    var d = e[a.id + c.rev + c.id],
                        f = d.type,
                        q = c.renderTs - e[a.id + c.rev].request,
                        k = 0 === c.rev ? "first." : "";
                    return c.tracked = !0, b["performance:checks." + k + "request_to_" + f + "_render"] = q, b["performance:checks." + k + "response_to_" + f + "_render"] = c.renderTs - d.time, b
                }, {});
                (0, d["default"])(b).length && (a.emit("track", {
                        type: "timing",
                        data: b
                    }), f &&
                    console.log("render times: ", b))
            }

            function c(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = !!b.renderTs;
                a.emit("track", {
                    type: "increment",
                    key: "performance:removed_checks.removed_alerts" + (c ? "_rendered" : "")
                });
                f && console.log("match:", c, b.renderTs)
            }
            var e = {},
                f = !1;
            a.id = a.id || "";
            a.on("rendered", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                try {
                    b()
                } catch (n) {}
            });
            a.api.on("submit_ot", function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b = a.id + b.rev;
                f && console.log("SUBMIT_OT", b);
                e[b] = {
                    request: Date.now()
                }
            });
            a.api.on("finish", function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = e[a.id + b.rev],
                    d = 0 === b.rev ? "first." : "",
                    l = {};
                c && c.first && (l["performance:checks." +
                    d + "request_to_first_response"] = c.first, c.last && (l["checks." + d + "request_to_last_response:performance"] = c.last), a.emit("track", {
                    type: "timing",
                    data: l
                }), f && console.log("finish:", b.rev, a.id, l))
            });
            a.api.on("alert", function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = a.id + b.rev;
                b = c + b.id;
                var d = c && e[c] && e[c].request ? Date.now() - e[c].request : 0;
                f && console.log("GET_ALERT", d);
                e[b] = {
                    time: Date.now(),
                    type: "first"
                };
                e[c] && (e[c].first ? (e[c].last = d, e[b].type = "last") : e[c].first = d)
            });
            a.api.on("ot_alert_intersection", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.ot_alert_intersection++
            });
            a.api.on("stats:timing", function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = {};
                c[b.key] = b.value;
                a.emit("track", {
                    type: "timing",
                    data: c
                })
            });
            a.matches.on("remove", c);
            a.matches.on("lost_match_value_in_text", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.emit("track", {
                    type: "increment",
                    key: "lost_match_value_in_text:old"
                })
            });
            a.matches.on("match_is_part_of_word", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.emit("track", {
                    type: "increment",
                    key: "match_is_part_of_word:old"
                })
            });
            a.matches.on("remove", c)
        }
    }, {
        "babel-runtime/core-js/object/keys": 29
    }],
    265: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("./tracking");
        c.infinityChecker = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                k = 0;
                t && clearTimeout(t);
                u && clearTimeout(u);
                l && clearTimeout(l);
                g && clearTimeout(g)
            }
            var e = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 2E4,
                f = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : [30, 60, 120],
                k = 0,
                t = null,
                u = null,
                l = null,
                g = null,
                q = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return 3 > k ? (2E4 === e && a(), void k++) : (d.logger.infinityCheckResetFail(e), void console.error("Infinity check reset fails, change to the offline state."))
                };
            return {
                start: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    c();
                    t = setTimeout(q, e);
                    u = setTimeout(q, 1E3 * f[0]);
                    l = setTimeout(q, 1E3 * f[1]);
                    g = setTimeout(q, 1E3 * f[2])
                },
                finish: c
            }
        }
    }, {
        "./tracking": 307
    }],
    266: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("react");
        c.LogoIcon = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.createElement("svg", {
                className: a.className,
                width: "18",
                height: "18",
                viewBox: "0 0 18 18"
            }, d.createElement("g", {
                transform: "translate(-7 -7)",
                fill: "none",
                fillRule: "evenodd"
            }, d.createElement("circle", {
                fill: "#00AE84",
                cx: "16",
                cy: "16",
                r: "9.008"
            }), d.createElement("path", {
                d: "M17.318 17.843c.052.297.335.504.64.504h.963l.56-.074c-.895 1.297-2.438 1.897-4.13 1.638-1.38-.214-2.566-1.14-3.065-2.437-1.134-2.942 1.03-5.75 3.84-5.75 1.468 0 2.75.852 3.49 1.882.193.304.58.385.864.185.267-.185.342-.533.178-.815-1.014-1.578-2.84-2.593-4.906-2.46-2.677.193-4.854 2.37-5.003 5.04-.18 3.103 2.295 5.637 5.382 5.637 1.618 0 3.065-.703 4.056-1.837l-.12.652v.585c0 .304.21.586.508.637.395.074.738-.23.738-.608v-3.52H17.93c-.38.008-.687.35-.612.74z",
                fill: "#FFF"
            })))
        };
        c.IgnoreIcon = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.createElement("span", {
                className: a.className,
                dangerouslySetInnerHTML: {
                    __html: '\n            <svg width="32" height="32" viewBox="0 0 32 32">\n              <defs>\n                <path d="M21,12.5 L21,20.1308289 C21,21.7154283 19.6513555,23 17.9996703,23 L14.0003297,23 C12.3432934,23 11,21.7124939 11,20.1308289 L11,12.5 L11,12.5" id="d70af4_ignoreIconUse"></path>\n                <mask data-mask-color="d70af4_ignoreIcon" id="d70af4_ignoreIconMask" x="-1" y="0" width="9.5" height="10.5">\n                  <use data-fix="d70af4_ignoreIcon" xlink:href="#d70af4_ignoreIconUse"/>\n                </mask>\n              </defs>\n              <g stroke="#D2D4DD" fill="none" fill-rule="evenodd">\n                <path d="M9 10.6h14" stroke-width="1.2"/>\n                <g stroke-width="1.2">\n                  <path d="M14.6 14v6M17.4 14v6"/>\n                </g>\n                <use mask="url(#d70af4_ignoreIconMask)" stroke-width="2.4" xlink:href="#d70af4_ignoreIconUse"/>\n                <path d="M18.5 11V9c0-1.1045695-.8982606-2-1.9979131-2h-1.0041738C14.3944962 7 13.5 7.8877296 13.5 9v2" stroke-width="1.2"/>\n              </g>\n            </svg>\n      '
                }
            })
        };
        c.DictionaryIcon = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.createElement("span", {
                className: a.className,
                dangerouslySetInnerHTML: {
                    __html: '\n        <svg width="32" height="32" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n          <defs>\n            <mask id="57da07_dictionaryIconMask" x="0" y="0" width="10" height="15" fill="#fff">\n              <path id="57da07_dictionaryIconUse" d="M11 9h10v15l-4.8857422-4L11 24z"/>\n            </mask>\n          </defs>\n          <use mask="url(#57da07_dictionaryIconMask)" xlink:href="#57da07_dictionaryIconUse" stroke-width="2.4" stroke="#D2D4DD" fill="none"/>\n        </svg>\n      '
                }
            })
        };
        c.DictionaryAddedIcon = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.createElement("svg", {
                className: a.className,
                width: "15",
                height: "23",
                viewBox: "0 0 15 23"
            }, d.createElement("path", {
                d: "M14.773 22.573V.39h-14v22.183l7-5.326",
                fill: "#15C49A",
                fillRule: "evenodd"
            }))
        };
        c.WikiIcon = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.createElement("svg", {
                className: a.className,
                width: "32",
                height: "32",
                viewBox: "0 0 32 32"
            }, d.createElement("path", {
                d: "M13.633 21l2.198-4.264L17.64 21h.633l3.756-8.643c.21-.485.62-.776 1.057-.842V11H20.05v.515c.402.09.83.24 1.02.666l-2.758 6.363c-.5-1.06-1.01-2.22-1.498-3.375.504-1.07.915-2.064 1.533-3.04.36-.576.948-.59 1.25-.618V11h-3.23v.51c.404 0 1.242.037.868.822l-.936 1.97-.993-2.19c-.155-.342.145-.57.635-.596L15.938 11h-3.633v.51c.433.015 1.043.013 1.268.38.694 1.274 1.158 2.598 1.79 3.898l-1.636 3.06-2.75-6.323c-.31-.713.425-.943.903-1.002L11.874 11H8v.51c.535.178 1.225.974 1.418 1.376 1.447 3.027 2.176 5.057 3.557 8.114h.658z",
                fill: "#D2D4DD",
                fillRule: "evenodd"
            }))
        };
        c.UndoIcon = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d.createElement("svg", {
                className: a.className,
                width: "32",
                height: "32",
                viewBox: "0 0 32 32"
            }, d.createElement("g", {
                stroke: "#D2D4DD",
                fill: "none",
                fillRule: "evenodd",
                strokeLinecap: "round"
            }, d.createElement("path", {
                d: "M11.518 8.412l-4.26 4.224L11.5 16.88"
            }), d.createElement("path", {
                d: "M16.192 22.236h4.23c2.642 0 4.784-2.147 4.784-4.783 0-2.642-2.15-4.784-4.787-4.784H8.1"
            })))
        }
    }, {
        react: "react"
    }],
    267: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ?
                a : {
                    "default": a
                }
        }

        function f(a, b, d, e, f, h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            switch (a.kind) {
                case "common":
                    return q.createElement(D, {
                        model: a,
                        onIgnore: b,
                        onAddToDictionary: d,
                        onEditor: e,
                        onLogin: f,
                        isAddedToDictionary: h
                    });
                case "synonyms":
                    return q.createElement(c.CardSynonyms, {
                        model: a,
                        onEditor: e,
                        onLogin: f
                    });
                default:
                    return null
            }
        }
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var k = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var m = d(b);
        b = a("babel-runtime/helpers/createClass");
        var e = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var r = d(b);
        b = a("babel-runtime/helpers/inherits");
        var n = d(b);
        b = a("babel-runtime/helpers/extends");
        var t = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var u = a("lib/config"),
            l = a("lib/message"),
            g = a("lib/inline-cards/model/grammarly_editor_alert"),
            q = a("react"),
            v = a("./utils/react"),
            p = a("../dom"),
            y = a("../tracking"),
            z = a("../location"),
            h = a("./model/card"),
            w = a("./replacement"),
            x = a("./icons"),
            B = {
                container: "_c4f153-container",
                flip: "_c4f153-flip",
                flipSyn: "_c4f153-flipSyn",
                card: "_c4f153-card",
                bigTitle: "_c4f153-bigTitle",
                unknownWordTitle: "_c4f153-unknownWordTitle",
                btnDictLabelWithIcon: "_c4f153-btnDictLabelWithIcon",
                explanation: "_c4f153-explanation",
                replacement: "_c4f153-replacement",
                maxWidthReached: "_c4f153-maxWidthReached",
                item: "_c4f153-item",
                logoIcon: "_c4f153-logoIcon",
                ignoreIcon: "_c4f153-ignoreIcon",
                undoIcon: "_c4f153-undoIcon",
                dictionaryIcon: "_c4f153-dictionaryIcon",
                wikiIcon: "_c4f153-wikiIcon",
                footer: "_c4f153-footer",
                footerButton: "_c4f153-footerButton",
                btnIgnore: "_c4f153-btnIgnore",
                icon: "_c4f153-icon",
                btnLogo: "_c4f153-btnLogo",
                btnPersonalize: "_c4f153-btnPersonalize",
                personalizeMessage: "_c4f153-personalizeMessage",
                attn: "_c4f153-attn",
                cardAddedToDict: "_c4f153-cardAddedToDict",
                addedToDictTitle: "_c4f153-addedToDictTitle",
                dictionaryDescription: "_c4f153-dictionaryDescription",
                undo: "_c4f153-undo",
                dictLink: "_c4f153-dictLink",
                dictionaryAddedIcon: "_c4f153-dictionaryAddedIcon",
                synTitle: "_c4f153-synTitle",
                synList: "_c4f153-synList",
                synListSingle: "_c4f153-synListSingle",
                synListTitle: "_c4f153-synListTitle",
                synListNumber: "_c4f153-synListNumber",
                synSubitems: "_c4f153-synSubitems",
                synItem: "_c4f153-synItem",
                dict: "_c4f153-dict",
                dictContent: "_c4f153-dictContent",
                dictItemCounter: "_c4f153-dictItemCounter",
                dictItem: "_c4f153-dictItem",
                qualifier: "_c4f153-qualifier",
                dictFooterItem: "_c4f153-dictFooterItem",
                wikiLink: "_c4f153-wikiLink",
                wiki: "_c4f153-wiki",
                gr__tooltip_empty: "gr__tooltip_empty",
                gr__tooltip: "gr__tooltip",
                "gr-notfound-tooltip": "gr-notfound-tooltip",
                "gr__tooltip-content": "gr__tooltip-content",
                "gr__tooltip-logo": "gr__tooltip-logo",
                gr__flipped: "gr__flipped"
            },
            C = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = a.title;
                a = a.className;
                return q.createElement("div", (0, t["default"])({
                    className: a
                }, v.setInnerHTML(b.toLowerCase(), ["i", "b"])))
            },
            G = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = a.explanation;
                return q.createElement("div", null, q.createElement(C, {
                    className: B.bigTitle,
                    title: a.title
                }), q.createElement("div", (0, t["default"])({
                    className: B.explanation
                }, v.setInnerHTML(b, ["i", "b"]))))
            };
        c.FooterButton = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.onClick,
                c = a.children;
            return q.createElement("div", {
                className: p.cs(B.footerButton, a.className),
                role: "button",
                onClick: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a.stopPropagation();
                    b()
                }
            }, c)
        };
        c.GrammarlyFooter = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.onEditor,
                d = a.onLogin;
            return a.isUserAuthenticated ? q.createElement(c.FooterButton, {
                className: p.cs(B.item, B.btnLogo),
                onClick: b
            }, q.createElement(x.LogoIcon, {
                className: p.cs(B.icon, B.logoIcon)
            }), " See more in Grammarly") : q.createElement(c.FooterButton, {
                className: p.cs(B.btnPersonalize, B.item),
                onClick: d
            }, q.createElement("div", {
                    className: B.personalizeMessage
                }, q.createElement("span", {
                    className: B.attn
                }, "ATTN:"), " You\u2019re missing many ",
                q.createElement("br", null), " key Grammarly features."), q.createElement(x.LogoIcon, {
                className: p.cs(B.icon, B.logoIcon)
            }), " Personalize for free")
        };
        c.CardCommonContent = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.model,
                d = a.onAddToDictionary,
                e = a.onIgnore,
                f = a.onEditor;
            a = a.onLogin;
            var h = b.getFooterProps();
            return q.createElement("div", {
                className: p.cs(B.card)
            }, b.isTextCard ? !b.isUnknowWord && q.createElement(G, {
                title: b.title,
                explanation: b.explanation
            }) : q.createElement("div", {
                className: B.replacement
            }, q.createElement(w.Replacement, {
                itemClassName: B.item,
                replacement: b.getReplacements()
            })), q.createElement("div", {
                className: B.footer
            }, h.hasAddToDictionary && q.createElement(c.FooterButton, {
                className: p.cs(B.btnDict, B.item),
                onClick: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return d()
                }
            }, b.isUnknowWord && q.createElement(C, {
                className: B.unknownWordTitle,
                title: b.title
            }), q.createElement("span", {
                className: p.cs(B.btnDictLabelWithIcon)
            }, q.createElement(x.DictionaryIcon, {
                className: p.cs(B.icon, B.dictionaryIcon)
            }), " Add to dictionary")), q.createElement(c.FooterButton, {
                className: p.cs(B.btnIgnore, B.item),
                onClick: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return e()
                }
            }, q.createElement(x.IgnoreIcon, {
                className: p.cs(B.icon, B.ignoreIcon)
            }), " Ignore"), q.createElement(c.GrammarlyFooter, {
                onEditor: f,
                onLogin: a,
                isUserAuthenticated: b.isUserAuthenticated
            })))
        };
        var A = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a = a.word;
                return q.createElement("div", {
                    className: p.cs(B.card, B.cardAddedToDict)
                }, q.createElement("div", {
                    className: B.addedToDictTitle
                }, q.createElement(x.DictionaryAddedIcon, {
                    className: B.dictionaryAddedIcon
                }), " ", a), q.createElement("div", {
                        className: B.dictionaryDescription
                    },
                    "is now in your ", q.createElement("div", {
                        onClick: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            l.emitBackground("open-url", u.URLS.appPersonalDictionary)
                        },
                        className: B.dictLink
                    }, "personal dictionary")))
            },
            D = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    (0, m["default"])(this, b);
                    var a = (0, r["default"])(this, (b.__proto__ || (0, k["default"])(b)).apply(this, arguments));
                    return a.state = {
                        isAddedToDictionary: a.props.isAddedToDictionary
                    }, a
                }
                return (0, n["default"])(b, a), (0, e["default"])(b, [{
                    key: "render",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = this,
                            b = this.props.model;
                        return this.state.isAddedToDictionary ?
                            q.createElement(A, {
                                word: b.highlightText
                            }) : q.createElement(c.CardCommonContent, {
                                onAddToDictionary: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    a.setState({
                                        isAddedToDictionary: !0
                                    });
                                    a.props.onAddToDictionary()
                                },
                                onIgnore: this.props.onIgnore,
                                onEditor: this.props.onEditor,
                                onLogin: this.props.onLogin,
                                model: b
                            })
                    }
                }]), b
            }(q.Component);
        c.CardCommon = D;
        var J = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a.meanings;
            switch (a.length) {
                case 0:
                    return q.createElement("span", null);
                case 1:
                    return q.createElement("div", {
                        className: p.cs(B.synList, B.synListSingle)
                    }, q.createElement("div", {
                            className: B.synSubitems
                        },
                        q.createElement(w.Replacement, {
                            replacement: a[0].list,
                            itemClassName: B.synItem
                        })));
                default:
                    return q.createElement("div", {
                        className: B.synList
                    }, a.map(function(a, b) {
                        return q.createElement("div", {
                            key: b,
                            className: B.synListItem
                        }, q.createElement("div", {
                            className: B.synListTitle
                        }, q.createElement("span", {
                            className: B.synListNumber
                        }, b + 1, "."), a.title), q.createElement("div", {
                            className: B.synSubitems
                        }, q.createElement(w.Replacement, {
                            replacement: a.list,
                            itemClassName: B.synItem
                        })))
                    }))
            }
        };
        c.CardSynonyms = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b =
                a.model,
                d = a.onEditor;
            a = a.onLogin;
            return q.createElement("div", {
                className: p.cs(B.card, B.synCard)
            }, q.createElement("div", {
                className: B.synTitle
            }, "Synonyms:"), q.createElement(J, {
                meanings: b.meanings
            }), q.createElement("div", {
                className: B.footer
            }, q.createElement(c.GrammarlyFooter, {
                onEditor: d,
                onLogin: a,
                isUserAuthenticated: b.isUserAuthenticated
            })))
        };
        var L = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, m["default"])(this, b);
                var a = (0, r["default"])(this, (b.__proto__ || (0, k["default"])(b)).apply(this, arguments));
                return a.state = {
                        isMaxWidth: !1
                    },
                    a
            }
            return (0, n["default"])(b, a), (0, e["default"])(b, [{
                key: "componentDidMount",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this.el && this.el.firstElementChild && 288 === this.el.firstElementChild.clientWidth && this.setState({
                        isMaxWidth: !0
                    })
                }
            }, {
                key: "render",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this,
                        b = this.props,
                        c = b.model,
                        d = b.onIgnore,
                        e = b.onAddToDictionary,
                        h = b.onEditor,
                        g = b.onLogin;
                    b = b.isAddedToDictionary;
                    return q.createElement("div", {
                        onClick: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.stopPropagation()
                        },
                        key: c.id,
                        ref: function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.el = b
                        },
                        className: p.cs(this.state.isMaxWidth &&
                            B.maxWidthReached)
                    }, f(c, d, e, h, g, b))
                }
            }]), b
        }(q.Component);
        c.Card = L;
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, m["default"])(this, b);
                var a = (0, r["default"])(this, (b.__proto__ || (0, k["default"])(b)).apply(this, arguments));
                return a.state = {
                    pos: {
                        rect: {
                            top: 0,
                            left: 0,
                            width: 0,
                            height: 0,
                            flip: !1
                        },
                        sourceRect: {
                            width: 0
                        },
                        delta: {
                            right: 0,
                            left: 0,
                            bottom: 0,
                            top: 0
                        },
                        className: "",
                        visible: !1
                    },
                    addedToDict: !1,
                    match: {},
                    visible: !1
                }, a._firstInteractionMap = {}, a.handlers = function(b, c, d) {
                    var e = a.state.match,
                        f = a.props;
                    if (a.state.addedToDict) return void y.fire("show-dictionary");
                    if (b) {
                        switch (b) {
                            case "replace":
                                f.animateReplacement(String(e.id), c, d);
                                e.replace(c, !1);
                                f.hide();
                                e.syn ? y.logger.synonymReplacementAction() : y.logger.cardReplacementAction();
                                break;
                            case "ignore":
                                e.ignore();
                                f.hide();
                                y.logger.cardIgnoreAction();
                                break;
                            case "hide":
                                f.hide();
                                break;
                            case "anim-hide":
                                f.hide();
                                break;
                            case "editor":
                                f.openEditor();
                                break;
                            case "login":
                                f.openEditor();
                                break;
                            case "add":
                                f.addToDict(), y.logger.cardAddToDictAction()
                        }
                        try {
                            switch (b) {
                                case "replace":
                                case "ignore":
                                case "add":
                                case "editor":
                                    void 0 ===
                                        a._firstInteractionMap[e.editorId] && (y.logger.cardFirstInteraction(z.getDomain(), a.props.getUserType(), a.props.getEditorType()), a._firstInteractionMap[e.editorId] = !0)
                            }
                        } catch (F) {}
                    }
                }, a
            }
            return (0, n["default"])(b, a), (0, e["default"])(b, [{
                    key: "createCardModel",
                    value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var c = this;
                        switch (a.kind) {
                            case "common":
                                return new h.CommonCardModelImpl(a, function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return c.handlers("replace", a, b)
                                }, b);
                            case "synonym":
                                return new h.SynonymsCardModelImpl(a, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return c.handlers("replace", a)
                                }, b);
                            default:
                                return null
                        }
                    }
                },
                {
                    key: "render",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = this,
                            b = this.state,
                            c = b.match,
                            d = b.visible,
                            e = b.addedToDict,
                            f = b.pos.rect;
                        b = f.flip;
                        f = {
                            top: f.top,
                            left: f.left,
                            visibility: d ? "" : "hidden"
                        };
                        if (!d) return q.createElement("div", null);
                        c = g.createAlert(c);
                        c = this.createCardModel(c, !this.props.isAnonymous());
                        return q.createElement("div", {
                            style: f,
                            className: p.cs(B.container, b && B.flip, b && "synonyms" === c.kind && B.flipSyn)
                        }, q.createElement(L, {
                            model: c,
                            onIgnore: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return a.handlers("ignore")
                            },
                            onAddToDictionary: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return a.handlers("add")
                            },
                            isAddedToDictionary: e,
                            onLogin: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return a.handlers("login")
                            },
                            onEditor: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return a.handlers("editor")
                            }
                        }))
                    }
                }
            ]), b
        }(q.Component);
        c.PositionedCard = a
    }, {
        "../dom": 215,
        "../location": 277,
        "../tracking": 307,
        "./icons": 266,
        "./model/card": 270,
        "./replacement": 273,
        "./utils/react": 275,
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/extends": 37,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        "lib/config": 211,
        "lib/inline-cards/model/grammarly_editor_alert": 272,
        "lib/message": 278,
        react: "react"
    }],
    268: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        a = a("./alert_replacement");
        c.createReplacement = a.createReplacement;
        c.createSimpleReplacement = a.createSimpleReplacement;
        var d;
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a[a.contextualSpelling = 0] = "contextualSpelling";
            a[a.grammar = 1] = "grammar";
            a[a.sentenceStructure = 2] = "sentenceStructure";
            a[a.punctuation = 3] = "punctuation";
            a[a.style = 4] = "style";
            a[a.plagiarism = 5] = "plagiarism";
            a[a.synonym = 6] = "synonym"
        }(d = c.AlertGroup || (c.AlertGroup = {}));
        c.alertGroupFromString = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = {
                Spelling: d.contextualSpelling,
                ContextualSpelling: d.contextualSpelling,
                Grammar: d.grammar,
                Style: d.style,
                SentenceStructure: d.sentenceStructure,
                Punctuation: d.punctuation
            };
            if (void 0 === b[a]) throw new TypeError("Unknown alert group " + a);
            return b[a]
        }
    }, {
        "./alert_replacement": 269
    }],
    269: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                re: new RegExp("^(" + a + ")(.*)$"),
                createResult: b
            }
        }

        function f(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = !0,
                    c = !1,
                    d = void 0;
                try {
                    for (var e, f = (0, m["default"])(r); !(b = (e = f.next()).done); b = !0) {
                        var g = e.value,
                            l = a.match(g.re);
                        if (null !== l) return [g.createResult(l), l[l.length - 1]]
                    }
                } catch (G) {
                    c = !0, d = G
                } finally {
                    try {
                        !b && f["return"] && f["return"]()
                    } finally {
                        if (c) throw d;
                    }
                }
            }

            function c(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = ["<span class='gr_grammar_del'>", "<span class='gr_grammar_ins'>", "\u2192"].map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return b.indexOf(a)
                });
                if (0 < c.findIndex(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return 0 === a
                    })) throw e.logger.couldNotParseTransform(a, !1), Error("Couldn't parse transform: " +
                    a);
                return (c = c.filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return 0 < a
                }), 0 < c.length) ? (c = Math.min.apply(Math, (0, k["default"])(c)), [{
                    type: "text",
                    text: b.substring(0, c)
                }, b.substring(c)]) : [{
                    type: "text",
                    text: b
                }, ""]
            }
            for (var d = a, f = [], q = !1; 0 < d.length;) {
                var n = b(d);
                if (void 0 === n && (q = !0), n = n || c(d), void 0 !== n) "insert" === n[0].type && (d = f[f.length - 1]) && "delete" === d.type && f.push({
                    type: "arrow"
                }), f.push(n[0]), d = n[1];
                (q || void 0 === n) && e.logger.couldNotParseTransform(a, void 0 === n)
            }
            return f
        }
        var k = (b = a("babel-runtime/helpers/toConsumableArray")) &&
            b.__esModule ? b : {
                "default": b
            },
            m = (b = a("babel-runtime/core-js/get-iterator")) && b.__esModule ? b : {
                "default": b
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = a("../../tracking"),
            r = [d("(?:\\<span class='gr_grammar_del'\\>([\\S\\s]*?)\\</span\\>)", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return {
                    type: "delete",
                    text: a[2]
                }
            }), d("(?:\\<span class='gr_grammar_ins'\\>([\\S\\s]*?)\\</span\\>)", function(a) {
                return {
                    type: "insert",
                    text: a[2]
                }
            }), d("(\u2192)", function(a) {
                return {
                    type: "arrow"
                }
            }), d("([^<>\u2192]+)", function(a) {
                return {
                    type: "text",
                    text: a[1]
                }
            })];
        c.parseTransformHtml = f;
        c.createReplacement = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                newText: b,
                transform: f(a)
            }
        };
        c.createSimpleReplacement = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                newText: a,
                transform: [{
                    type: "insert",
                    text: a
                }]
            }
        }
    }, {
        "../../tracking": 307,
        "babel-runtime/core-js/get-iterator": 20,
        "babel-runtime/helpers/toConsumableArray": 41
    }],
    270: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var f = d(b);
        b = a("babel-runtime/helpers/createClass");
        var k = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var m = d(b);
        b = a("babel-runtime/helpers/inherits");
        var e = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var r = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var n = a("./alert"),
            t = a("./card_replacement");
        a = function l(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            (0, r["default"])(this, l);
            this.isUserAuthenticated = b;
            this.id = a.id;
            this.title = a.title;
            this.explanation = a.explanation;
            this.details = a.details
        };
        c.CardModelBaseImpl = a;
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, r["default"])(this, b);
                var e = (0, m["default"])(this, (b.__proto__ || (0, f["default"])(b)).call(this,
                    a, d));
                return e._alert = a, e._replace = c, e.isUserAuthenticated = d, e.kind = "common", e.details = e._alert.details, e.todo = e._alert.todo, e.isUnknowWord = "Unknown" === e._alert.category, e.highlightText = e._alert.highlightText, e.extraProperties = e._alert.extraProperties, e.hasAcknowledgeButton = 0 === e._alert.replacements.length && e._alert.group !== n.AlertGroup.contextualSpelling, e.hasAddToDictionary = !!e._alert.extraProperties.hasAddToDictionary, e.isTextCard = t.isNoReplacement(e._alert.replacements), e.title = e._getTitle(),
                    e
            }
            return (0, e["default"])(b, a), (0, k["default"])(b, [{
                key: "_getTitle",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return this.isUnknowWord ? "Unknown word" : "Misspelled" === this._alert.category && "General" === this._alert.point ? "" : this._alert.extraProperties.isDidYouMean || this.extraProperties.isShowTitle ? "Check word usage" : this._alert.todo
                }
            }, {
                key: "getFooterProps",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return {
                        hasAcknowledgeButton: this.hasAcknowledgeButton,
                        hasAddToDictionary: this.hasAddToDictionary
                    }
                }
            }, {
                key: "getReplacements",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = this._alert.replacements;
                    return t.isNoReplacement(a) ? new t.EmptyReplacement : new t.CardReplacementList(this.title, a, this._replace)
                }
            }]), b
        }(a);
        c.CommonCardModelImpl = a;
        c.SynonymsCardModelImpl = function g(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = this;
            (0, r["default"])(this, g);
            this._alert = a;
            this._replace = b;
            this.isUserAuthenticated = c;
            this.kind = "synonyms";
            this.meanings = this._alert.meanings.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return {
                    title: a.title,
                    list: new t.CardReplacementFlatList("", a.replacements, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return d._replace(a)
                    })
                }
            });
            this.isActive = !1;
            this.isAnyMeanings = !!this.meanings.length;
            this.id = this._alert.id;
            this.title = this._alert.title;
            this.details = this.explanation = ""
        }
    }, {
        "./alert": 268,
        "./card_replacement": 271,
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39
    }],
    271: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }

        function f(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.slice(a.findIndex(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return "arrow" === a.type
                }) +
                1).filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "delete" !== a.type
            }).map(function(a) {
                return "insert" === a.type || "text" === a.type ? a.text : ""
            }).join("")
        }
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var k = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var m = d(b);
        b = a("babel-runtime/helpers/inherits");
        var e = d(b);
        a = a("babel-runtime/helpers/classCallCheck");
        var r = d(a);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var n;
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a[a.single = 0] = "single";
            a[a.list = 1] = "list";
            a[a.flatList = 2] = "flatList";
            a[a.empty =
                3] = "empty"
        }(n = c.CardReplacementTemplate || (c.CardReplacementTemplate = {}));
        c.isNoReplacement = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return !a || 0 === a.length
        };
        c.EmptyReplacement = function u() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            (0, r["default"])(this, u);
            this.template = n.empty;
            this.headerText = ""
        };
        c.CardReplacementSingle = function l(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = this;
            (0, r["default"])(this, l);
            this.headerText = a;
            this._replacement = b;
            this._onReplace = c;
            this.transform = this._replacement.transform;
            this.onReplace = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return d._onReplace(d._replacement.newText)
            };
            this.template = n.single
        };
        a = function g(a,
            b, c) {
            var d = this;
            (0, r["default"])(this, g);
            this.headerText = a;
            this.replacements = b;
            this._onReplace = c;
            this.template = n.list;
            this.getOnReplace = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    d._onReplace(a.newText, f(a.transform))
                }
            }
        };
        c.CardReplacementList = a;
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, r["default"])(this, b);
                c = (0, m["default"])(this, (b.__proto__ || (0, k["default"])(b)).call(this, a, c, d));
                return c.headerText = a, c.template = n.flatList, c
            }
            return (0, e["default"])(b, a), b
        }(a);
        c.CardReplacementFlatList = a
    }, {
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39
    }],
    272: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a.rawMatch;
            return r.assert("synonym" !== a.action, "Do not use `getBasicAlertFields` for synonyms."), {
                id: a.id.toString(),
                hidden: a.hidden,
                category: a.category,
                isFree: a.free,
                highlightText: a.highlightText,
                range: {
                    start: a.begin,
                    end: a.end
                },
                group: n.alertGroupFromString(a.group)
            }
        }

        function f(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.rawMatch,
                c = Number(b.synonyms.pos),
                d = b.synonyms.token;
            return {
                id: String(a.id),
                hidden: !1,
                category: b.category,
                isFree: !0,
                highlightText: d,
                range: {
                    start: c,
                    end: c + d.length
                },
                group: n.AlertGroup.synonym
            }
        }

        function k(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.rawMatch,
                c = b.extra_properties;
            a = d(a);
            var f = {
                title: b.title,
                details: b.details,
                explanation: b.explanation
            };
            a = (0, e["default"])(a, f);
            c = {
                kind: "common",
                todo: b.todo,
                point: b.point,
                replacements: (b.transforms || []).map(function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return n.createReplacement(a, b.replacements[c])
                }),
                extraProperties: {
                    hasAddToDictionary: !!c.add_to_dict,
                    isDidYouMean: !!c.did_you_mean,
                    isShowTitle: !!c.show_title,
                    isEnchancement: !!c.enhancement,
                    plagiarismUrl: c.url,
                    sentence: c.sentence,
                    priority: c.priority ? parseInt(c.priority, 10) : 0
                }
            };
            return (0, e["default"])(a, c)
        }

        function m(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.rawMatch;
            a = f(a);
            var c = {
                title: b.synonyms.token,
                details: "",
                explanation: ""
            };
            a = (0, e["default"])(a, c);
            b = {
                kind: "synonym",
                meanings: b.synonyms.meanings.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return {
                        title: a.meaning,
                        replacements: a.synonyms.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return n.createSimpleReplacement(a.derived)
                        })
                    }
                }),
                replacements: (b.replacements || []).map(n.createSimpleReplacement)
            };
            return (0, e["default"])(a, b)
        }
        var e = (b = a("babel-runtime/core-js/object/assign")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var r = a("stdlib"),
            n = a("./alert");
        c.createAlert = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.rawMatch;
            if (!b.group && "synonyms" === b.action) return m(a);
            n.alertGroupFromString(a.rawMatch.group);
            return k(a)
        }
    }, {
        "./alert": 268,
        "babel-runtime/core-js/object/assign": 24,
        stdlib: 328
    }],
    273: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a.filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "insert" === a.type || "delete" === a.type
            });
            return 0 < a.length ? a[a.length - 1].type + "Replacement" : ""
        }

        function f(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a.slice(b).filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "insert" === a.type
            });
            return 0 < a.length ? a[0].text : ""
        }

        function k(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a.slice(0, b).filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "delete" === a.type
            });
            return 0 < a.length ? a[0].text : ""
        }

        function m(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return 0 === a.filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "insert" !== a.type && "text" !== a.type
            }).length
        }

        function e(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.slice(a.findIndex(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "arrow" === a.type
            }) + 1)
        }

        function r(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return g.createElement("span", {
                key: c,
                className: z[d(a)],
                onClick: y.stopPropagation(b)
            }, e(a).map(function(b, c) {
                switch (b.type) {
                    case "delete":
                        b = b.text;
                        var d = f(a, c);
                        return g.createElement("span", {
                            className: q.cs(z.deletePart, p.isQuoteWithPunctuation(b) && z.deleteQuoteWithPunctuation, p.isPunctuation(b) && z.deletePunctuation, p.isColonOrSemicolon(b) && z.deleteColonOrSemicolon, p.isComma(b) && z.deleteComma, p.isExclamation(b) && z.deleteExclamation, p.isDash(b) && z.deleteDash, p.isQuestion(b) && z.deleteQuestion, p.isEllipsis(b) && z.deleteEllipsis, p.isQuote(b) && z.deleteQuote,
                                p.isPeriod(b) && z.deletePeriod, p.isParenthesis(b) && z.deleteParenthesis, p.isDoubleComma(b) && z.deleteDoubleComma, p.isAphostrophe(b) && z.deleteAphostrophe, p.isLetter(b) && z.deleteLetter, p.isPunctuationAndLetter(b) && z.deletePunctuationBeforeLetter),
                            key: c
                        }, p.highlightDiff(d, b));
                    case "insert":
                        b = b.text;
                        d = k(a, c);
                        var e = m(a),
                            h = !!a[c + 1] && "text" === a[c + 1].type;
                        return g.createElement("span", {
                            className: q.cs(z.insertPart, e && z.insertWithWord, p.isSinglePunctuation(b) && z.insertPunctuation, p.isQuestion(b) && z.insertQuestion,
                                h && z.nextIsWord),
                            key: c
                        }, p.highlightDiff(d, b));
                    case "text":
                        return b = b.text, g.createElement("span", {
                            className: q.cs(z.wordPart, !!a[c + 1] && "delete" === a[c + 1].type && z.wordBeforeDelete, !!a[c + 1] && "insert" === a[c + 1].type && z.wordBeforeInsert),
                            key: c
                        }, b);
                    default:
                        throw Error("Part " + b + " should not exist");
                }
            }))
        }

        function n(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return g.createElement("div", (0, l["default"])({
                className: z.title,
                onClick: y.stopPropagation(b)
            }, y.setInnerHTML(a)))
        }

        function t(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return g.createElement("div", {
                    className: z.listReplacement
                },
                a.replacements.map(function(d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return g.createElement("div", {
                        key: e,
                        className: q.cs(z.listItemReplacementWrapper, c, b && z.flattenListItemReplacementWrapper, 0 === e && !a.headerText && z.listItemReplacementNoHeader),
                        onClick: a.getOnReplace(d)
                    }, 0 === e && a.headerText && n(a.headerText, a.getOnReplace(d)), g.createElement("span", {
                        className: z.listItemReplacement
                    }, r(d.transform, a.getOnReplace(d), e)))
                }))
        }

        function u(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            switch (a.template) {
                case v.CardReplacementTemplate.single:
                    return g.createElement("div", {
                        className: q.cs(z.singleReplacement,
                            b)
                    }, g.createElement("div", null, r(a.transform, a.onReplace)));
                case v.CardReplacementTemplate.list:
                    return t(a, !1, b);
                case v.CardReplacementTemplate.flatList:
                    return t(a, !0, b);
                default:
                    throw Error("Replacement template " + v.CardReplacementTemplate[a.template] + " is not supported");
            }
        }
        var l = (b = a("babel-runtime/helpers/extends")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var g = a("react"),
            q = a("../../dom"),
            v = a("../model/card_replacement"),
            p = a("./utils"),
            y = a("../utils/react"),
            z = {
                title: "_abcbcc-title",
                replacement: "_abcbcc-replacement",
                singleReplacement: "_abcbcc-singleReplacement",
                listItemReplacement: "_abcbcc-listItemReplacement",
                sideCommas: "_abcbcc-sideCommas",
                orReplacement: "_abcbcc-orReplacement",
                insertReplacement: "_abcbcc-insertReplacement",
                longReplacement: "_abcbcc-longReplacement",
                didYouMean: "_abcbcc-didYouMean",
                wordPart: "_abcbcc-wordPart",
                wordBeforeInsert: "_abcbcc-wordBeforeInsert",
                insertPart: "_abcbcc-insertPart",
                insertPunctuation: "_abcbcc-insertPunctuation",
                deleteReplacement: "_abcbcc-deleteReplacement",
                deletePart: "_abcbcc-deletePart",
                wordBeforeDelete: "_abcbcc-wordBeforeDelete",
                deletePunctuation: "_abcbcc-deletePunctuation",
                deleteColonOrSemicolon: "_abcbcc-deleteColonOrSemicolon",
                deleteParenthesis: "_abcbcc-deleteParenthesis",
                deleteQuestion: "_abcbcc-deleteQuestion",
                deleteExclamation: "_abcbcc-deleteExclamation",
                deletePeriod: "_abcbcc-deletePeriod",
                deleteQuote: "_abcbcc-deleteQuote",
                deleteDash: "_abcbcc-deleteDash",
                deleteEllipsis: "_abcbcc-deleteEllipsis",
                deleteQuoteWithPunctuation: "_abcbcc-deleteQuoteWithPunctuation",
                deleteApostrophe: "_abcbcc-deleteApostrophe",
                deletePunctuationBeforeLetter: "_abcbcc-deletePunctuationBeforeLetter",
                deleteLetter: "_abcbcc-deleteLetter",
                deleteDoubleComma: "_abcbcc-deleteDoubleComma",
                insertQuestion: "_abcbcc-insertQuestion",
                nextIsWord: "_abcbcc-nextIsWord",
                listReplacement: "_abcbcc-listReplacement",
                arrowPart: "_abcbcc-arrowPart",
                bold: "_abcbcc-bold",
                orSeparator: "_abcbcc-orSeparator",
                didYouMeanLabel: "_abcbcc-didYouMeanLabel",
                listItemReplacementNoHeader: "_abcbcc-listItemReplacementNoHeader",
                listItemReplacementWrapper: "_abcbcc-listItemReplacementWrapper",
                flattenListItemReplacementWrapper: "_abcbcc-flattenListItemReplacementWrapper"
            };
        c.Replacement = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return g.createElement("div", {
                className: q.cs(z.replacement)
            }, u(a.replacement, a.itemClassName))
        }
    }, {
        "../../dom": 215,
        "../model/card_replacement": 271,
        "../utils/react": 275,
        "./utils": 274,
        "babel-runtime/helpers/extends": 37,
        react: "react"
    }],
    274: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return null !== a && 3 > a.replace(/\s/g, "").length && null !== a.match(m)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = a("react"),
            k = a("@grammarly-npm/textdiff"),
            m = /["'\u201d\u201c.,;:!?\\\/\u2026\-\u2014()]/;
        c.isPunctuation = d;
        c.isColonOrSemicolon = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return null !== a && 3 > a.replace(/\s/g, "").length && null !== a.match(/[;:]/)
        };
        c.isSinglePunctuation = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return null !== a && 1 === a.replace(/\s/g, "").length && d(a)
        };
        c.isQuoteWithPunctuation = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return null !== a && null !== a.match(/["'\u201d][.,;]/)
        };
        c.isQuote = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return '"' === a || "\u201d" === a || "\u201c" ===
                a
        };
        c.isDoubleComma = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return null !== a && null !== a.match(/,,/)
        };
        c.isPunctuationAndLetter = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return null !== a && a.match(/[.,;:!?\\\/\u2026\-\u2014()]\s*[a-z]/i)
        };
        c.isAphostrophe = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "\u2019" === a
        };
        c.isComma = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "," === a
        };
        c.isExclamation = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "!" === a
        };
        c.isDash = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "-" === a || "\u2014" === a
        };
        c.isQuestion = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "?" === a
        };
        c.isPeriod = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "." === a
        };
        c.isEllipsis = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "\u2026" === a
        };
        c.isParenthesis = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return ")" ===
                a || "(" === a
        };
        c.isLetter = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return null !== a && 1 === a.length && null !== a.match(/[a-z]/i)
        };
        c.highlightDiff = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (4 >= a.length) return f.createElement("span", null, b);
            var c = k.textdiff(a, b),
                d = c.from,
                e = c.to,
                l = c.oldFragment;
            c = c.newFragment;
            var g = 1 === c.length && 0 < d && a[d - 1] === c,
                q = 1 === l.length && 0 === c.length && b[d - 1] === l,
                v = d,
                p = c;
            return (g || q) && (v = d - 1), g && (p = c + c), q && (p = l), 3 < p.length ? f.createElement("span", null, b) : f.createElement("span", null, a.substring(0, v), f.createElement("span", {
                    className: "_abcbcc-bold"
                },
                p), a.substring(e))
        }
    }, {
        "@grammarly-npm/textdiff": 16,
        react: "react"
    }],
    275: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("./string");
        c.setInnerHTML = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                dangerouslySetInnerHTML: {
                    __html: d.sanitize(a, b)
                }
            }
        };
        c.stopPropagation = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b.stopPropagation();
                a(b)
            }
        }
    }, {
        "./string": 276
    }],
    276: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("dompurify");
        c.nbsp = String.fromCharCode(160);
        c.capitalize = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a ? a[0].toUpperCase() +
                a.slice(1) : ""
        };
        c.camelize = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a ? a.replace(/(?:^|[-_])(\w)/g, function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b ? b.toUpperCase() : ""
            }) : ""
        };
        c.sanitize = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "",
                b = arguments[1];
            return a && "undefined" != typeof window ? b ? d.sanitize(a, {
                ALLOWED_TAGS: b
            }) : d.sanitize(a) : ""
        };
        c.getFirstMatch = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return (a = a.match(b)) && a[1]
        };
        c.getFirstWord = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.split(/\s+/)[0]
        };
        c.pluralize = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return 1 === a ? b : c
        }
    }, {
        dompurify: "dompurify"
    }],
    277: [function(a,
        b, c) {
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = this,
                c = a.tabs;
            return u.SafePromise.create(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return r(b, void 0, void 0, m["default"].mark(function y() {
                    var b, d;
                    return m["default"].wrap(function(e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return b = setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return c.getActiveTabUrl().then(a)
                                }, 2E3), e.next = 3, c.getActiveTabUrl();
                            case 3:
                                d = e.sent, clearTimeout(b), a(d);
                            case 6:
                            case "end":
                                return e.stop()
                        }
                    }, y, this)
                }))
            })
        }

        function f(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a && a.ownerDocument || document;
            return (a = a.location || a.defaultView.location) ? a.hostname.replace("www.",
                "") : ""
        }

        function k(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (n.isFF() && /^about:/.test(a)) return a;
            var b = document.createElement("a");
            return b.href = a, b.hostname.replace("www.", "")
        }
        var m = (b = a("babel-runtime/regenerator")) && b.__esModule ? b : {
                "default": b
            },
            e = (b = a("babel-runtime/core-js/promise")) && b.__esModule ? b : {
                "default": b
            },
            r = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c || (c = e["default"]))(function(e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            l(d.next(a))
                        } catch (B) {
                            f(B)
                        }
                    }

                    function h(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            l(d["throw"](a))
                        } catch (B) {
                            f(B)
                        }
                    }

                    function l(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? e(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(g,
                            h)
                    }
                    l((d = d.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var n = a("./util"),
            t = a("./page-config/defaults"),
            u = a("stdlib");
        c.currentUrl = d;
        c.getDomain = f;
        c.promiseGetDomain = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return e["default"].race([d(a).then(k), n.delay(1E4).then(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                throw Error("Request to tabs.getCurrentTabUrl rejected by timeout");
            })])
        };
        c.domainFromUrl = k;
        c.isFacebookSite = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return t.FACEBOOK_SITES.includes(f())
        };
        c.isJiraSite = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return /\.atlassian\.net/.test(f())
        };
        c.isBlackboardSite =
            function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return /\.blackboard\.com/.test(f())
            };
        c.getUrl = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a && a.ownerDocument || document;
            return (a = a.location || a.defaultView.location) ? a.pathname + a.search : ""
        };
        c.getFavicon = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var a = "", b = document.getElementsByTagName("link"), c = 0; c < b.length; c++) {
                var d = b[c]; - 1 !== ('"' + d.getAttribute("rel") + '"').search(/(\"icon )|( icon\")|(\"icon\")|( icon )/i) && (a = d.getAttribute("href"))
            }
            return a || (a = "favicon.ico"), /^(?:[a-z]+:)?\/\//i.test(a) ? a : "/" !== a[0] ? "//" + document.location.host + document.location.pathname +
                a : "//" + document.location.host + a
        }
    }, {
        "./page-config/defaults": 283,
        "./util": 322,
        "babel-runtime/core-js/promise": 31,
        "babel-runtime/regenerator": 43,
        stdlib: 328
    }],
    278: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        (function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function d(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if ("__bgerror" === a) return void q.on("__bgerror", b);
                var d = v[a] = v[a] || [];
                if (d.push(b), 1 === d.length) try {
                    g.listen(a, function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = !0,
                            b = !1,
                            c = void 0;
                        try {
                            for (var e, f = (0, r["default"])(d); !(a = (e = f.next()).done); a = !0) e.value.apply(void 0, arguments)
                        } catch (G) {
                            b = !0, c = G
                        } finally {
                            try {
                                !a && f["return"] && f["return"]()
                            } finally {
                                if (b) throw c;
                            }
                        }
                    })
                } catch (h) {
                    c.emitError(h)
                }
            }

            function k(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if ("__bgerror" === a) return void q.off("__bgerror", b);
                var c = v[a];
                c && (b = c.indexOf(b), -1 !== b && c.splice(b, 1), 0 === c.length && delete v[a])
            }
            var m = a("babel-runtime/core-js/promise"),
                e = m && m.__esModule ? m : {
                    "default": m
                },
                r = (m = a("babel-runtime/core-js/get-iterator")) && m.__esModule ? m : {
                    "default": m
                };
            Object.defineProperty(c, "__esModule", {
                value: !0
            });
            m = a("lodash");
            var n = a("emitter"),
                t = a("./util"),
                u = a("./dom"),
                l = a("extension-api"),
                g = (b && b.env && b.env.SANDBOX ? {
                    message: {
                        broadcastBackground: t._f,
                        listen: t._f,
                        toFocused: t._f
                    }
                } : l.getGlobalExtensionApi()).message,
                q = n({}),
                v = {};
            c.emitError = m.throttle(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return q.emit("__bgerror", a)
            }, 1E3);
            t.isBg() && u.listen(document, "grammarly:offline", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return c.emitError("proxy dead")
            }, void 0);
            c.one = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    k(a, c);
                    for (var d = arguments.length, e = Array(d), f = 0; f < d; f++) e[f] = arguments[f];
                    b.apply(this, e)
                }
                d(a, c)
            };
            c.on = d;
            c.off = k;
            c.emitTabs = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                try {
                    switch (g.kind) {
                        case "background-message-api":
                            g.broadcast(a, {});
                            break;
                        default:
                            throw Error("emitTabs can be used only on background");
                    }
                } catch (y) {
                    c.emitError(y)
                }
            };
            c.emitTo = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : {},
                    e = arguments[3] || function() {};
                try {
                    if (!a) throw TypeError("emitTo can't be used without destination point");
                    switch (g.kind) {
                        case "background-message-api":
                            g.sendTo(a, b, d, e);
                            break;
                        default:
                            throw Error("emitTo can be used only on background");
                    }
                } catch (w) {
                    c.emitError(w)
                }
            };
            c.emitFocusedTab = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                try {
                    g.toFocused(a, b)
                } catch (z) {
                    c.emitError(z)
                }
            };
            c.emitBackground = function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                try {
                    switch (g.kind) {
                        case "content-script-message-api":
                            g.broadcastBackground(a,
                                b, d);
                            break;
                        default:
                            throw Error("emitBackground can be used only in content script");
                    }
                } catch (h) {
                    c.emitError(h)
                }
            };
            c.promiseBackground = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {},
                    d = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 1E4,
                    f = new e["default"](function(d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            switch (g.kind) {
                                case "content-script-message-api":
                                    g.broadcastBackground(a, b, d, e);
                                    break;
                                default:
                                    throw Error("promiseBackground can be used only on client scripts");
                            }
                        } catch (B) {
                            e(B), c.emitError(B)
                        }
                    });
                return e["default"].race([f, t.delay(d).then(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    throw Error("Request to bg page (" + g + ") rejected by timeout");
                })])
            }
        }).call(this, a("_process"))
    }, {
        "./dom": 215,
        "./util": 322,
        _process: 158,
        "babel-runtime/core-js/get-iterator": 20,
        "babel-runtime/core-js/promise": 31,
        emitter: "emitter",
        "extension-api": 177,
        lodash: "lodash"
    }],
    279: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "bg" === k.bundleInfo.context
        }

        function f() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "popup" === k.bundleInfo.context
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var k = a("config").getGlobal();
        c.isTestsMode = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return !!window.__extensionTestsMode
        };
        c.getUuid = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return k.appConfig.extensionId
        };
        c.isFF = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "firefox" === k.bundleInfo.browser
        };
        c.isChrome = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "chrome" === k.bundleInfo.browser
        };
        c.isSafari = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "safari" === k.bundleInfo.browser
        };
        c.isEdge = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "edge" === k.bundleInfo.browser
        };
        c.isWindows = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return k.systemInfo.os.isWindows
        };
        c.isBg = d;
        c.isPopup = f;
        c.isBgOrPopup = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return d() || f()
        };
        c.getBrowser = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return k.bundleInfo.browser
        };
        c.getVersion = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return k.buildInfo.version
        };
        c.ENV = k.bundleInfo.env;
        c.URLS = k.appConfig.url;
        c.appName = k.appConfig.felog.appName;
        c.gnarAppName = k.appConfig.gnar.appName;
        c.GRAMMARLY_DOMAIN = k.appConfig.url.grammarlyDomain
    }, {
        config: 169
    }],
    280: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/keys");
        var f = d(b);
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var k = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var m = d(b);
        b = a("babel-runtime/helpers/createClass");
        var e = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var r = d(b);
        b = a("babel-runtime/helpers/inherits");
        var n = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var t = a("lib/util"),
            u = a("./defaults"),
            l = a("lib/location");
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, m["default"])(this, b);
                var c = (0, r["default"])(this, (b.__proto__ || (0, k["default"])(b)).call(this, a));
                return c.invalidate = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return c.load()
                }, c
            }
            return (0, n["default"])(b, a), (0, e["default"])(b, [{
                key: "getByPage",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b =
                        1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : l.getUrl();
                    if (a) {
                        var c = (0, f["default"])(a).find(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return (new RegExp(a)).test(b)
                        });
                        return c ? a[c] : void 0
                    }
                }
            }, {
                key: "get",
                value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var c = this.config.pageConfig[a] || this.config.subdomains.find(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return (new RegExp("\\." + t.escapeRegExp(b.domain) + "$")).test(a)
                    }) || this.config.partials.find(function(b) {
                        return a.includes(b.domain)
                    });
                    if (c && !1 === c.enabled) return c;
                    b = this.getByPage(c && c.pages, b) || c || {};
                    return b.enabled = !1 !== b.enabled,
                        b
                }
            }, {
                key: "toReload",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return 0 === a.indexOf("http") && u.SITES_TO_RELOAD.some(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.includes(b)
                    })
                }
            }]), b
        }(a("./config-loader").ConfigLoader);
        c.Config = a
    }, {
        "./config-loader": 281,
        "./defaults": 283,
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/core-js/object/keys": 29,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        "lib/location": 277,
        "lib/util": 322
    }],
    281: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/regenerator");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        b = a("babel-runtime/core-js/promise");
        var e = d(b),
            r = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c || (c = e["default"]))(function(e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function h(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            l(d.next(a))
                        } catch (J) {
                            f(J)
                        }
                    }

                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            l(d["throw"](a))
                        } catch (J) {
                            f(J)
                        }
                    }

                    function l(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? e(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(h,
                            g)
                    }
                    l((d = d.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var n = a("./localforage"),
            t = a("lib/request"),
            u = a("lib/config"),
            l = a("lib/tracking"),
            g = a("./meta"),
            q = a("./utils"),
            v = a("./decorator"),
            p = a("lib/profiler");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, k["default"])(this, a);
                this._prefs = b
            }
            return (0, m["default"])(a, [{
                key: "init",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return r(this, void 0, void 0, f["default"].mark(function h() {
                        var a;
                        return f["default"].wrap(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (b.prev = b.next) {
                                case 0:
                                    return p.Profiler.start("pageConfig_init"),
                                        a = void 0, b.next = 4, this.isSkipConfig();
                                case 4:
                                    if (!b.sent) {
                                        b.next = 8;
                                        break
                                    }
                                    console.warn("Config: use default config in DEBUG mode (skipConfig=true)");
                                    b.next = 11;
                                    break;
                                case 8:
                                    return b.next = 10, this.loadFromStorage();
                                case 10:
                                    a = b.sent;
                                case 11:
                                    return this.config = a ? a : {}, b.next = 14, (new g.Meta).load();
                                case 14:
                                    return this.meta = b.sent, p.Profiler.stop("pageConfig_init"), b.abrupt("return", this);
                                case 17:
                                case "end":
                                    return b.stop()
                            }
                        }, h, this)
                    }))
                }
            }, {
                key: "isSkipConfig",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return r(this, void 0, void 0, f["default"].mark(function h() {
                        return f["default"].wrap(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (a.prev =
                                a.next) {
                                case 0:
                                    if (a.t0 = !1, !a.t0) {
                                        a.next = 5;
                                        break
                                    }
                                    return a.next = 4, this._prefs.get("skipConfig");
                                case 4:
                                    a.t0 = a.sent;
                                case 5:
                                    return a.abrupt("return", a.t0);
                                case 6:
                                case "end":
                                    return a.stop()
                            }
                        }, h, this)
                    }))
                }
            }, {
                key: "load",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return r(this, void 0, void 0, f["default"].mark(function h() {
                        var a, b, c, d;
                        return f["default"].wrap(function(e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    if (a = this.meta.config, b = a.date, c = a.interval, !(b + c > Date.now())) {
                                        e.next = 5;
                                        break
                                    }
                                    return d = (b + c - Date.now()) / 1E3 / 60, console.info("Config: next update in " +
                                        d.toFixed(2) + " m"), e.abrupt("return");
                                case 5:
                                    return console.info("Config: going to update config from CDN..."), e.abrupt("return", this.updateFromCDN());
                                case 7:
                                case "end":
                                    return e.stop()
                            }
                        }, h, this)
                    }))
                }
            }, {
                key: "updateFromCDN",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return r(this, void 0, void 0, f["default"].mark(function h() {
                        var a, b;
                        return f["default"].wrap(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (c.prev = c.next) {
                                case 0:
                                    return a = void 0, c.prev = 1, c.next = 4, t.fetch(u.URLS.pageConfigUrl, {
                                        timeout: 6E4
                                    });
                                case 4:
                                    if (a = c.sent, q.isValid(a)) {
                                        c.next = 7;
                                        break
                                    }
                                    throw Error("Config malformed");
                                case 7:
                                    this.config = a;
                                    this.save(a);
                                    c.next = 17;
                                    break;
                                case 11:
                                    c.prev = 11, c.t0 = c["catch"](1), l.logger.pageConfigCDNError(c.t0.message), b = "Config: can't get valid config - " + c.t0.message, console.warn(b, a), this.saveOnError(b);
                                case 17:
                                case "end":
                                    return c.stop()
                            }
                        }, h, this, [
                            [1, 11]
                        ])
                    }))
                }
            }, {
                key: "loadFromStorage",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return r(this, void 0, void 0, f["default"].mark(function h() {
                        var a;
                        return f["default"].wrap(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                for (;;) switch (b.prev = b.next) {
                                    case 0:
                                        return b.prev = 0, b.next = 3, n.localforage.getItem("config");
                                    case 3:
                                        if (a = b.sent) {
                                            b.next = 6;
                                            break
                                        }
                                        throw Error("Config missed");
                                    case 6:
                                        if (q.isValid(a)) {
                                            b.next = 8;
                                            break
                                        }
                                        throw Error("Config malformed");
                                    case 8:
                                        return console.info("Config: loaded from local storage successfully"), b.abrupt("return", a);
                                    case 12:
                                        return b.prev = 12, b.t0 = b["catch"](0), "Config missed" === b.t0.message || l.logger.pageConfigLocalStorageError(b.t0.message, b.t0.name), console.warn("Config: cannot get valid config from storage: " + b.t0), b.abrupt("return", void 0);
                                    case 17:
                                    case "end":
                                        return b.stop()
                                }
                            },
                            h, this, [
                                [0, 12]
                            ])
                    }))
                }
            }, {
                key: "save",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = a.interval,
                        c = a.protocolVersion,
                        d = a.version;
                    n.localforage.setItem("config", a);
                    this.fireVersionUpdate(d, this.meta.config.version);
                    this.meta.set({
                        date: this.getCurrentTimestamp(),
                        status: "success",
                        interval: b,
                        protocolVersion: c,
                        version: d
                    });
                    console.info("Config: new config saved to local storage successfully:", a.version, a)
                }
            }, {
                key: "saveOnError",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = this.meta.config,
                        c = b.interval,
                        d = b.protocolVersion;
                    b = b.version;
                    this.meta.set({
                        date: this.getCurrentTimestamp(),
                        status: "failed",
                        interval: c,
                        protocolVersion: d,
                        version: b,
                        info: a
                    })
                }
            }, {
                key: "fireVersionUpdate",
                value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a && b !== a && l.logger.pageConfigUpdated(b, a)
                }
            }, {
                key: "getCurrentTimestamp",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return Date.now()
                }
            }, {
                key: "config",
                set: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a = a || {};
                    this._config = v.decorateConfig(a)
                },
                get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return this._config
                }
            }]), a
        }();
        c.ConfigLoader = a
    }, {
        "./decorator": 282,
        "./localforage": 285,
        "./meta": 286,
        "./utils": 287,
        "babel-runtime/core-js/promise": 31,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/regenerator": 43,
        "lib/config": 211,
        "lib/profiler": 290,
        "lib/request": 291,
        "lib/tracking": 307
    }],
    282: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }

        function f(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = g.merge({
                pageConfig: {}
            }, a);
            return a.pageConfig || (a.pageConfig = {}), a
        }
        b = a("babel-runtime/helpers/defineProperty");
        var k = d(b);
        b = a("babel-runtime/core-js/object/keys");
        var m = d(b);
        b = a("babel-runtime/core-js/object/assign");
        var e = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var r = d(b);
        b = a("babel-runtime/helpers/createClass");
        var n = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var t = a("../config"),
            u = a("./defaults"),
            l = a("../util"),
            g = a("lodash");
        c.deepCopyWithDefault = f;
        var q = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, r["default"])(this, a)
            }
            return (0, n["default"])(a, null, [{
                    key: "decorate",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a = a || {}, a = this.filterByVersion(a), a = this.withDefault(a), a = this.parseBooleans(a), a = this.parseBrowserValues(a), a = this.filterInvalidPageRegexp(a), a = this.collectSubdomains(a), this.collectPartials(a)
                    }
                }, {
                    key: "withDefault",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a =
                            f(a);
                        var b = u.PAGE_CONFIG && u.PAGE_CONFIG.pageConfig || {};
                        u.OVERRIDE_PAGE_CONFIG || {};
                        return a.pageConfig = g.merge({}, b, a.pageConfig), a
                    }
                }, {
                    key: "filterByVersion",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : t.getVersion();
                        a = f(a);
                        var c = a.pageConfig;
                        return a.pageConfig = (0, m["default"])(c).filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            a = c[a].version;
                            return !a || "*" === a || 1 !== l.versionComparator(b, a)
                        }).reduce(function(b, c) {
                            return (0, e["default"])({}, b, (0, k["default"])({}, c, a.pageConfig[c]))
                        }, {}), a
                    }
                }, {
                    key: "parseBooleans",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return !(!1 === a || "false" === a)
                        }

                        function c(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return !!a && b(a)
                        }
                        a = f(a);
                        var d = a.pageConfig;
                        return (0, m["default"])(d).forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            d[a] || (d[a] = {});
                            var e = d[a];
                            e.enabled = b(e.enabled);
                            e.matchInclusions = c(e.matchInclusions);
                            e.matchSubdomains = c(e.matchSubdomains);
                            e.pages && (0, m["default"])(e.pages).forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                e.pages[a].enabled = b(e.pages[a].enabled)
                            })
                        }), a
                    }
                }, {
                    key: "parseBrowserValues",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : l.getBrowser();
                        a = f(a);
                        var c = a.pageConfig;
                        return (0, m["default"])(c).map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var d = c[a] && c[a].disabledBrowsers;
                            d && d.includes(b) && (c[a].enabled = !1)
                        }), a
                    }
                }, {
                    key: "filterInvalidPageRegexp",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a = f(a);
                        var b = a.pageConfig;
                        return (0, m["default"])(b).forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var c = b[a];
                            c.pages && (c.pages = (0, m["default"])(c.pages).filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                try {
                                    return new RegExp(a)
                                } catch (x) {
                                    return !1
                                }
                            }).reduce(function(a, b) {
                                return (0, e["default"])({}, a, (0, k["default"])({}, b, c.pages[b]))
                            }, {}))
                        }), a
                    }
                }, {
                    key: "collectSubdomains",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a = f(a);
                        var b = a.pageConfig;
                        a.subdomains = [];
                        try {
                            a.subdomains = (0, m["default"])(b).filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return b[a].matchSubdomains
                            }).map(function(a) {
                                return (0, e["default"])({
                                    domain: a
                                }, b[a])
                            })
                        } catch (z) {
                            console.warn("Cannot collect subdomains from config")
                        }
                        return a
                    }
                }, {
                    key: "collectPartials",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a = f(a);
                        var b = a.pageConfig;
                        a.partials = [];
                        try {
                            a.partials = (0, m["default"])(b).filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return b[a].matchInclusions
                            }).map(function(a) {
                                return (0, e["default"])({
                                    domain: a
                                }, b[a])
                            })
                        } catch (z) {
                            console.warn("Cannot collect partials from config")
                        }
                        return a
                    }
                }]),
                a
        }();
        c.RawConfigDecorator = q;
        c.decorateConfig = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return q.decorate(a)
        }
    }, {
        "../config": 211,
        "../util": 322,
        "./defaults": 283,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/core-js/object/keys": 29,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/defineProperty": 36,
        lodash: "lodash"
    }],
    283: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d;
        b = (b = a("babel-runtime/helpers/defineProperty")) && b.__esModule ? b : {
            "default": b
        };
        var f = a("babel-runtime/helpers/toConsumableArray");
        f = f && f.__esModule ? f : {
            "default": f
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var k = a("lodash");
        a = a("lib/config");
        c.PROTOCOL_VERSION = "1.0";
        c.SITES_TO_RELOAD = "inbox.google.com mail.google.com yahoo.com mail.live.com facebook.com tumblr.com stackoverflow.com wordpress.com wordpress.org blogspot.com".split(" ");
        c.FACEBOOK_SITES = ["facebook.com", "messenger.com", "work.fb.com", "business.facebook.com"];
        c.HTML_GHOST_SITES = ["twitter.com"].concat((0, f["default"])(c.FACEBOOK_SITES));
        c.CUSTOM_UNSUPPORTED_MESSAGES = {
            "drive.google.com": {
                title: "Google Drive",
                message: 'We hope to support Google Drive apps<br/> in the future, but for now please use your</br> <a class="openGrammarly" href="' + a.URLS.app + '">Grammarly Editor</a>.'
            },
            "docs.google.com": {
                title: "Google Drive",
                message: 'We hope to support Google Drive apps<br/> in the future, but for now please use your</br> <a class="openGrammarly" href="' + a.URLS.app + '">Grammarly Editor</a>.'
            },
            "chrome.google.com": {
                title: "Web Store"
            }
        };
        c.PAGE_CONFIG_DEFAULT_INTERVAL = 18E5;
        c.PAGE_CONFIG_UPDATE_INTERVALS = [6E5, c.PAGE_CONFIG_DEFAULT_INTERVAL, 36E5, 108E5, 432E5, 864E5, 31536E6];
        c.OVERRIDE_PAGE_CONFIG = {};
        c.PAGE_CONFIG_INTERNAL = (d = {
            version: {
                enabled: !1,
                servicePage: !0
            },
            extensions: {
                enabled: !1,
                servicePage: !0
            },
            settings: {
                enabled: !1,
                servicePage: !0
            },
            "com.safari.grammarlyspellcheckergrammarchecker": {
                enabled: !1,
                matchInclusions: !0,
                servicePage: !0
            }
        }, (0, b["default"])(d, "app." + a.GRAMMARLY_DOMAIN, {
            enabled: !1,
            grammarlyEditor: !0
        }), (0, b["default"])(d, "linkedin.com", {
            pages: {
                "/messaging": {
                    afterReplaceEvents: ["input"]
                }
            }
        }), (0, b["default"])(d,
            "plus.google.com", {
                afterReplaceEvents: ["keyup"],
                minFieldHeight: 0,
                minFieldWidth: 0
            }), (0, b["default"])(d, "facebook.com", {
            minFieldHeight: 0,
            fields: [{
                name: "caption_text"
            }]
        }), (0, b["default"])(d, "mail.google.com", {
            fields: [{
                name: "to"
            }, {
                name: "cc"
            }, {
                name: "bcc"
            }, {
                className: "vO"
            }],
            subframes: !1
        }), (0, b["default"])(d, "drive.google.com", {
            track: !0
        }), (0, b["default"])(d, "docs.google.com", {
            track: !0
        }), (0, b["default"])(d, "app.asana.com", {
            fields: [{
                className: "task-row-text-input"
            }]
        }), (0, b["default"])(d, "tumblr.com", {
            fields: [{
                attr: ["aria-label",
                    "Post title"
                ]
            }, {
                attr: ["aria-label", "Type or paste a URL"]
            }]
        }), (0, b["default"])(d, "chrome.google.com", {
            dontShowDisabledBadge: !0
        }), (0, b["default"])(d, "airbnb.com", {
            fields: [{
                attr: ["id", "question"]
            }]
        }), d);
        c.PAGE_CONFIG = {
            pageConfig: k.merge({}, {
                "hootsuite.com": {
                    enabled: !1
                },
                "chrome.google.com": {
                    enabled: !1
                },
                "facebook.com": {
                    enabled: !0,
                    pages: {
                        ".*/notes": {
                            enabled: !1
                        }
                    }
                },
                "onedrive.live.com": {
                    enabled: !1
                },
                "docs.com": {
                    enabled: !1
                },
                "sp.docs.com": {
                    enabled: !1
                },
                "docs.google.com": {
                    enabled: !1
                },
                "drive.google.com": {
                    enabled: !1
                },
                "texteditor.nsspot.net": {
                    enabled: !1
                },
                "jsbin.com": {
                    enabled: !1
                },
                "jsfiddle.net": {
                    enabled: !1
                },
                "quora.com": {
                    enabled: !1
                },
                "paper.dropbox.com": {
                    enabled: !1
                },
                "mail.live.com": {
                    enabled: !1,
                    matchInclusions: !0
                },
                "imperavi.com": {
                    enabled: !1
                },
                "usecanvas.com": {
                    enabled: !1
                }
            }, c.PAGE_CONFIG_INTERNAL)
        }
    }, {
        "babel-runtime/helpers/defineProperty": 36,
        "babel-runtime/helpers/toConsumableArray": 41,
        "lib/config": 211,
        lodash: "lodash"
    }],
    284: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        b = a("./config-base");
        var d = a("universal/bg/prefs");
        a = a("extension-api");
        a = new d.PrefsImpl(a.getGlobalExtensionApi().preferences);
        c.pageConfig = new b.Config(a)
    }, {
        "./config-base": 280,
        "extension-api": 177,
        "universal/bg/prefs": 331
    }],
    285: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/core-js/promise")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        b = void 0;
        try {
            b = a("localforage"), b.config({
                name: "Grammarly",
                version: 1,
                size: 4194304,
                storeName: "configuration"
            })
        } catch (k) {
            console.error("Fallback to memory storage", k);
            var f = {};
            b = {
                getItem: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return d["default"].resolve(f[a])
                },
                setItem: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return f[a] = b, d["default"].resolve(b)
                },
                clear: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    f = {};
                    d["default"].resolve(!0)
                }
            }
        }
        c.localforage = b
    }, {
        "babel-runtime/core-js/promise": 31,
        localforage: "localforage"
    }],
    286: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/regenerator");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        b = a("babel-runtime/core-js/promise");
        var e = d(b),
            r = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c || (c =
                    e["default"]))(function(e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            h(d.next(a))
                        } catch (x) {
                            f(x)
                        }
                    }

                    function l(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            h(d["throw"](a))
                        } catch (x) {
                            f(x)
                        }
                    }

                    function h(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? e(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(g, l)
                    }
                    h((d = d.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var n = a("./localforage"),
            t = a("./utils");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, k["default"])(this, a)
            }
            return (0, m["default"])(a, [{
                    key: "load",
                    value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return r(this, void 0, void 0, f["default"].mark(function g() {
                            var a;
                            return f["default"].wrap(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                for (;;) switch (b.prev =
                                    b.next) {
                                    case 0:
                                        return b.next = 2, n.localforage.getItem("lastConfigUpdate");
                                    case 2:
                                        return a = b.sent, this.set(a), b.abrupt("return", this);
                                    case 5:
                                    case "end":
                                        return b.stop()
                                }
                            }, g, this)
                        }))
                    }
                }, {
                    key: "set",
                    value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a = a || {};
                        var b = a.protocolVersion,
                            c = a.version,
                            d = a.status,
                            e = a.info;
                        return this._meta = {
                            date: Number(a.date) || 0,
                            interval: t.getInterval(Number(a.interval)),
                            protocolVersion: b,
                            version: c,
                            status: d,
                            info: e
                        }, n.localforage.setItem("lastConfigUpdate", this._meta)
                    }
                }, {
                    key: "config",
                    get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return this._meta
                    }
                }]),
                a
        }();
        c.Meta = a
    }, {
        "./localforage": 285,
        "./utils": 287,
        "babel-runtime/core-js/promise": 31,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/regenerator": 43
    }],
    287: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/core-js/object/keys")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = a("./defaults");
        c.isValid = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a && a.pageConfig && (0, d["default"])(a).length && (0, d["default"])(a.pageConfig).length && (!a.protocolVersion || a.protocolVersion ===
                    f.PROTOCOL_VERSION)) return !0
        };
        c.getInterval = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return f.PAGE_CONFIG_UPDATE_INTERVALS.includes(a) ? a : f.PAGE_CONFIG_DEFAULT_INTERVAL
        }
    }, {
        "./defaults": 283,
        "babel-runtime/core-js/object/keys": 29
    }],
    288: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/assign");
        var f = d(b);
        b = a("babel-runtime/helpers/slicedToArray");
        var k = d(b);
        b = a("babel-runtime/helpers/defineProperty");
        var m = d(b);
        b = a("babel-runtime/core-js/symbol/iterator");
        var e = d(b);
        b = a("babel-runtime/regenerator");
        var r = d(b);
        b = a("babel-runtime/core-js/array/from");
        var n = d(b);
        b = a("babel-runtime/helpers/toConsumableArray");
        var t = d(b);
        b = a("babel-runtime/core-js/map");
        var u = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var l = a("lodash"),
            g = a("emitter"),
            q = a("./config"),
            v = a("./sites"),
            p = a("./ghost/html-ghost-locator"),
            y = a("./elements/iframe"),
            z = a("./util"),
            h = a("./dom"),
            w = a("./location"),
            x = a("./editor/field-type-detect"),
            B = document.createElement("a"),
            C = !1;
        c.PageFields = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                na = !0;
                pa = new MutationObserver(d);
                pa.observe(I.body, {
                    childList: !0,
                    subtree: !0
                });
                z.interval(M, S)
            }

            function c(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : [],
                    d = l.flatten(l.transform(Z, function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.push(b)
                    }, []));
                if (function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return -1 !== d.indexOf(a) && !!b.push(a)
                    }(a) || !a.children) return b;
                for (var e = 0; e < a.children.length; e++) c(a.children[e], b);
                return b
            }

            function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b, d;
                (b = []).concat.apply(b, (0, t["default"])((d = []).concat.apply(d, (0, t["default"])(a.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a = a.removedNodes;
                    return [].concat((0, t["default"])((0,
                        n["default"])(a))).map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return c(a)
                    })
                }))))).forEach(H)
            }

            function G() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return [].concat((0, t["default"])(Z)).filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return Q(a) || !a.offsetHeight
                })
            }

            function M() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                G().forEach(H);
                var a = T();
                0 === a.textareas.length && 0 === a.contenteditables.length && 0 === a.iframes.length && 0 === a.htmlghosts.length && 0 === a.usageTracking.length || ha.emit("add", a)
            }

            function H(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                X.has(a) && (X.get(a).off(), X["delete"](a));
                ["textareas", "contenteditables", "iframes", "htmlghosts"].forEach(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var c = Z[b].indexOf(a); -
                    1 !== c && Z[b].splice(c, 1)
                });
                ha.emit("remove", a)
            }

            function O() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return r["default"].wrap(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (;;) switch (a.prev = a.next) {
                        case 0:
                            return a.delegateYield(this.textareas, "t0", 1);
                        case 1:
                            return a.delegateYield(this.contenteditables, "t1", 2);
                        case 2:
                            return a.delegateYield(this.iframes, "t2", 3);
                        case 3:
                            return a.delegateYield(this.htmlghosts, "t3", 4);
                        case 4:
                        case "end":
                            return a.stop()
                    }
                }, ea[0], this)
            }

            function K() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (0, m["default"])({
                        textareas: [],
                        contenteditables: [],
                        iframes: [],
                        htmlghosts: [],
                        usageTracking: []
                    },
                    e["default"], O)
            }

            function R(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return W ? !1 === W.enabled ? !1 : W.fields || !0 !== W.enabled ? !W.fields.some(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var c = b.name,
                        d = b.id,
                        e = b.className;
                    b = b.attr;
                    !(c = c && c === a.name || d && d === a.id || e && h.hasClass(a, e)) && (c = b && Array.isArray(b)) && (b = (0, k["default"])(b, 2), c = b[1], c = a.getAttribute(b[0]) === c);
                    return c
                }) : !0 : !0
            }

            function P(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return c.filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return !b || "readonly" !== a
                    }).some(function(b) {
                        return Array.isArray(b) ? a.hasAttribute(b[0]) && a.getAttribute(b[0]).includes(b[1]) : a.hasAttribute(b)
                    }) || "rtl" ===
                    a.getAttribute("dir")
            }

            function aa(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if ([].concat((0, t["default"])(q.grammarlyAttrs), ["spellcheck"]).forEach(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.removeAttribute(b)
                    }), p.isHtmlGhostSite()) {
                    var b = a.parentElement && a.parentElement.parentElement;
                    b && b.removeAttribute("spellcheck")
                }
            }

            function U(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = [],
                    d = [];
                return [].concat((0, t["default"])((0, n["default"])(I.querySelectorAll(a)))).forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var e = P(a, b, q.restrictedAttrs),
                        f = P(a, b, q.customFieldsRestrictedAttrs),
                        g = R(a),
                        l = h.isVisible(a),
                        k = x.isDraftJsField(a),
                        p = w.isFacebookSite();
                    e = (!k || p || C || (C = !0), !k || p) && !e && !f && !(a.clientHeight < ja || a.clientWidth < ia) && (l && g || h.hasClass(a, "grammDemo"));
                    (f || !1 === g && !0 === l) && !e && c.push(a);
                    e && d.push(a)
                }), {
                    fields: d,
                    trackingFields: c
                }
            }

            function F() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (fa) return {
                    fields: [],
                    trackingFields: []
                };
                var a = U('[contenteditable]:not([contenteditable="false"]):not([data-reactid])', !0);
                return a.fields = a.fields.filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !h.getParentBySel(a, q.restrictedParentAttrs)
                }), a
            }

            function Y(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (B.href = a.src, (0 !== a.src.indexOf("http") ||
                        sa.test(a.src)) && "about:blank" !== a.src && (!a.src || -1 !== a.src.indexOf("javascript:") || B.protocol === document.location.protocol && B.hostname === document.location.hostname && B.port === document.location.port) && !h.hasClass(a, y.baseCls)) {
                    var b = null;
                    try {
                        b = a.contentDocument
                    } catch (Da) {
                        return
                    }
                    if ((!b || b.body) && b && !P(a, !1, q.allRestrictedAttrs) && !P(b.body, !1, q.allRestrictedAttrs) && R(a)) {
                        var c = b.querySelector("html") || {
                            hasAttribute: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return !1
                            }
                        };
                        if (("on" === b.designMode || b.body.hasAttribute("contenteditable") ||
                                "false" === b.body.getAttribute("contenteditable") || c.hasAttribute("contenteditable") || "false" === c.getAttribute("contenteditable")) && !(a.clientHeight < ja || a.clientWidth < ia)) return z.isFF() && "on" === b.designMode && (b.designMode = "off", b.body.setAttribute("contenteditable", "true")), !0
                    }
                }
            }

            function da(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                Z = l.mapValues(Z, function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return [].concat(b, a[c])
                });
                Z[e["default"]] = O
            }

            function V(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a = l.difference(a[b], Z[b]);
                return N.shouldRemove ? a.filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !N.shouldRemove(a)
                }) : a
            }

            function T() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a =
                    K();
                var b;
                (b = !I.location || 0 === I.location.href.indexOf("about:") || 0 === I.location.href.indexOf("chrome:") || !I.body || 0 === I.body.childNodes.length || "interactive" !== I.readyState && "complete" !== I.readyState) || (b = I.documentElement.getBoundingClientRect(), b = b.height < oa && ca.innerHeight < oa || b.width < oa);
                if (!b) {
                    b = U("textarea", !1);
                    var c = F(),
                        d = fa ? U(p.getHtmlGhostSelector(), !1) : {
                            fields: [],
                            trackingFields: []
                        },
                        h = [].concat((0, t["default"])((0, n["default"])(I.querySelectorAll("iframe")))).filter(Y),
                        g = [].concat((0, t["default"])(b.trackingFields),
                            (0, t["default"])(c.trackingFields), (0, t["default"])(d.trackingFields));
                    a = (0, f["default"])({}, a, {
                        textareas: b.fields,
                        contenteditables: c.fields,
                        iframes: h,
                        htmlghosts: d.fields,
                        usageTracking: g
                    })
                }
                a = (0, m["default"])({
                    textareas: V(a, "textareas"),
                    contenteditables: V(a, "contenteditables"),
                    iframes: V(a, "iframes"),
                    htmlghosts: V(a, "htmlghosts"),
                    usageTracking: V(a, "usageTracking")
                }, e["default"], O);
                return da(a), a
            }
            var E = a.doc;
            E = void 0 === E ? document : E;
            var W = a.page,
                ea = [O].map(r["default"].mark),
                S = 1 < arguments.length && void 0 !==
                arguments[1] ? arguments[1] : 1E3,
                X = new u["default"],
                fa = p.isHtmlGhostSite(),
                N = v.pageStyles(E).getFixesForCurrentDomain(),
                Q = N.shouldRemove || z._f,
                oa = 150,
                ja = 35,
                ia = 300,
                Z = K(),
                I = void 0,
                ca = void 0,
                la = void 0,
                sa = void 0,
                na = void 0,
                pa = void 0;
            I = E;
            la = I.location.hostname;
            sa = new RegExp("://" + la);
            ca = I.defaultView;
            W && (ja = l.isNumber(W.minFieldHeight) ? W.minFieldHeight : ja, ia = l.isNumber(W.minFieldWidth) ? W.minFieldHeight : ia);
            var ha = g({
                    get: T,
                    reset: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        l.each(Z, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.forEach(aa)
                        });
                        Z = K();
                        ha.emit("add", T());
                        b()
                    },
                    remove: H,
                    stop: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        na && (z.cancelInterval(M), pa.disconnect(), na = !1)
                    }
                }),
                ma = ha.on;
            return ha.on = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return na || b(), ma(a, c), {
                    un: function() {}
                }
            }, ha
        }
    }, {
        "./config": 211,
        "./dom": 215,
        "./editor/field-type-detect": 218,
        "./elements/iframe": 225,
        "./ghost/html-ghost-locator": 253,
        "./location": 277,
        "./sites": 294,
        "./util": 322,
        "babel-runtime/core-js/array/from": 19,
        "babel-runtime/core-js/map": 23,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/core-js/symbol/iterator": 33,
        "babel-runtime/helpers/defineProperty": 36,
        "babel-runtime/helpers/slicedToArray": 40,
        "babel-runtime/helpers/toConsumableArray": 41,
        "babel-runtime/regenerator": 43,
        emitter: "emitter",
        lodash: "lodash"
    }],
    289: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return f(a, b)[0]
        }

        function f(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = [{
                top: 0,
                left: 0,
                height: 0,
                width: 0
            }];
            if (!a) return c;
            var f = a.ownerDocument,
                g = f.documentElement;
            a = a.getClientRects();
            var q = g.scrollTop || f.body.scrollTop,
                k = g.scrollLeft || f.body.scrollLeft;
            f = b && b.contentDocument;
            if (0 === a.length) return c;
            c = (0, r["default"])(a).map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return {
                    top: a.top +
                        q,
                    left: a.left + k,
                    height: a.height,
                    width: a.width
                }
            });
            if (f && f.documentElement && f.documentElement === g) {
                var p = d(b);
                c = c.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return (0, e["default"])({}, a, {
                        top: a.top + p.top - q,
                        left: a.left + p.left - k
                    })
                })
            }
            return c
        }

        function k() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = document.createElement("div");
            a.style.cssText = "position: fixed;top: 0;left: 0;bottom: 0;right: 0;";
            document.documentElement.insertBefore(a, document.documentElement.firstChild);
            var b = a.getBoundingClientRect();
            return document.documentElement.removeChild(a), b
        }

        function m(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a ||
                a === b) return {
                x: 0,
                y: 0
            };
            var c = {
                x: a.offsetLeft,
                y: a.offsetTop
            };
            a = m(a.offsetParent, b);
            return c.x += a.x, c.y += a.y, c
        }
        var e = (b = a("babel-runtime/core-js/object/assign")) && b.__esModule ? b : {
                "default": b
            },
            r = (a = a("babel-runtime/core-js/array/from")) && a.__esModule ? a : {
                "default": a
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.getAbsRect = d;
        c.getAllAbsRects = f;
        c.posToRect = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = 2 < arguments.length && void 0 !== arguments[2] && arguments[2],
                d = a.ownerDocument;
            var e = d.defaultView.innerWidth;
            var f = a.clientWidth,
                k = a.clientHeight,
                p = {
                    top: 0,
                    left: 0,
                    flip: !1
                };
            d = {
                top: b.top - d.body.scrollTop - k,
                left: b.left - f,
                bottom: d.body.scrollTop + d.defaultView.innerHeight - b.top - b.height - k,
                right: d.body.scrollLeft + e - b.left - f
            };
            return 0 > d.bottom && d.bottom < d.top || c ? (p.top = b.top - k + 3, p.flip = !0) : (p.top = b.top + b.height - 3, p.flip = !1), 0 > d.right ? p.left = e - f : p.left = b.left, {
                rect: p,
                delta: d,
                sourceRect: b
            }
        };
        c.posToEl = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function c(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                p[a] += f[b] / 2 - n[b] / 2;
                e[a] > p[a] && (p[a] = e[a]);
                e[a] + e[b] < p[a] + n[b] && (p[a] = e[a] + e[b] - n[b])
            }
            var d = 2 < arguments.length &&
                void 0 !== arguments[2] ? arguments[2] : "top:center",
                e = k(),
                f = b.getBoundingClientRect(),
                n = a.getBoundingClientRect(),
                p = {
                    top: 0,
                    left: 0,
                    flipY: !1,
                    flipX: !1
                },
                m = f.top - e.top,
                r = f.left - e.left,
                h = -f.bottom + e.bottom,
                t = -f.right + e.right;
            d = d.split(":");
            return p.top = f.top, "center" === d[0] ? c("top", "height") : "top" === d[0] ? m > n.height ? p.top -= n.height : (p.top += f.height, p.flipY = !0) : "bottom" === d[0] && (h > n.height ? p.top += f.height : (p.top -= n.height, p.flipY = !0)), p.left = f.left, "center" === d[1] ? c("left", "width") : "left" === d[1] ? (p.left += f.width -
                n.width, r + f.width < n.width && (p.left = e.left)) : "right" === d[1] && t + f.width < n.width && (p.left += f.width + t - n.width), p
        };
        c.getPos = m
    }, {
        "babel-runtime/core-js/array/from": 19,
        "babel-runtime/core-js/object/assign": 24
    }],
    290: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/regenerator");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        b = a("babel-runtime/core-js/promise");
        var e = d(b),
            r = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c ||
                    (c = e["default"]))(function(e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            h(d.next(a))
                        } catch (x) {
                            f(x)
                        }
                    }

                    function k(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            h(d["throw"](a))
                        } catch (x) {
                            f(x)
                        }
                    }

                    function h(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? e(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(g, k)
                    }
                    h((d = d.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var n = a("lib/timers"),
            t = a("lib/tracking");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = this;
                (0, k["default"])(this, a);
                this.timings = {};
                this.track = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (var c = arguments.length, d = Array(1 < c ? c - 1 : 0), e = 1; e < c; e++) d[e - 1] = arguments[e];
                    return r(b, void 0, void 0, f["default"].mark(function z() {
                        return f["default"].wrap(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (b.prev = b.next) {
                                case 0:
                                    return b.abrupt("return", this._track.apply(this, [!1, a].concat(d)));
                                case 1:
                                case "end":
                                    return b.stop()
                            }
                        }, z, this)
                    }))
                };
                this.trackAsync = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (var c = arguments.length, d = Array(1 < c ? c - 1 : 0), e = 1; e < c; e++) d[e - 1] = arguments[e];
                    return r(b, void 0, void 0, f["default"].mark(function z() {
                        return f["default"].wrap(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (b.prev = b.next) {
                                case 0:
                                    return b.abrupt("return",
                                        this._track.apply(this, [!0, a].concat(d)));
                                case 1:
                                case "end":
                                    return b.stop()
                            }
                        }, z, this)
                    }))
                };
                this._track = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (var d = arguments.length, e = Array(2 < d ? d - 2 : 0), g = 2; g < d; g++) e[g - 2] = arguments[g];
                    return r(b, void 0, void 0, f["default"].mark(function h() {
                        var b;
                        return f["default"].wrap(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            for (;;) switch (d.prev = d.next) {
                                case 0:
                                    if (b = c.name + (a ? "__sync" : ""), n.timers.start(b), d.prev = 2, !a) {
                                        d.next = 8;
                                        break
                                    }
                                    return d.next = 6, c.apply(void 0, e);
                                case 6:
                                    d.next = 9;
                                    break;
                                case 8:
                                    c.apply(void 0, e);
                                case 9:
                                    d.next = 14;
                                    break;
                                case 11:
                                    throw d.prev = 11, d.t0 = d["catch"](2), d.t0;
                                case 14:
                                    return d.prev = 14, this.timings[b] = n.timers.stop(b), d.finish(14);
                                case 17:
                                case "end":
                                    return d.stop()
                            }
                        }, h, this, [
                            [2, 11, 14, 17]
                        ])
                    }))
                }
            }
            return (0, m["default"])(a, [{
                key: "start",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    n.timers.start(a)
                }
            }, {
                key: "stop",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this.timings[a] = n.timers.stop(a)
                }
            }], [{
                key: "start",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    n.timers.start(a)
                }
            }, {
                key: "stop",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 3E4,
                        c = n.timers.stop(a);
                    return c >
                        b && (console.warn("profiler_" + a + "_time_exceeded", c), "pageConfig_init" === a && t.logger.tooLongPageConfigInit(c), "updateUser" === a && t.logger.tooLongUserUpdateTime(c)), c
                }
            }]), a
        }();
        c.Profiler = a
    }, {
        "babel-runtime/core-js/promise": 31,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/regenerator": 43,
        "lib/timers": 301,
        "lib/tracking": 307
    }],
    291: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a.data && (a.query || "post" !== a.method) && (a.url += "?" + k(a.data)), a.data && "post" === a.method && !a.query &&
                !a.body) {
                try {
                    a.body = (0, e["default"])(a.data)
                } catch (q) {
                    a.body = {}, console.warn(q)
                }
                a.headers = a.headers || {};
                a.headers["Content-Type"] = a.headers["Content-Type"] || "application/json";
                delete a.data
            }
            return a.credentials = "include", a
        }

        function f(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b.ok ? b[a.isText ? "text" : "json"]() : b.text().then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    throw {
                        name: "RequestError",
                        body: a,
                        statusCode: b.status,
                        message: b.statusText
                    };
                })
            }
            var c = a.url;
            return delete a.url, c ? m["default"].race([window.fetch(c, a).then(b).then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if ("string" !=
                    typeof a && a && a.error) throw Error(a.error);
                return a
            }), n.delay(a.timeout || l).then(function() {
                throw Error("Fetch request to " + c + " rejected by timeout");
            })]) : m["default"].reject(Error("Url is not defined in fetch request"))
        }

        function k(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = "",
                c = function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (Array.isArray(a[c])) {
                        if (a[c].length) {
                            var d = a[c].map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return c + "=" + a
                            }).join("&");
                            b += "" + (b.length ? "&" : "") + d
                        }
                    } else b += "" + (b.length ? "&" : "") + c + "=" + encodeURIComponent(a[c])
                },
                d;
            for (d in a) c(d);
            return b
        }
        var m = (b = a("babel-runtime/core-js/promise")) &&
            b.__esModule ? b : {
                "default": b
            },
            e = (b = a("babel-runtime/core-js/json/stringify")) && b.__esModule ? b : {
                "default": b
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var r = a("lodash"),
            n = a("./util"),
            t = a("./config"),
            u = a("./message"),
            l = 1E4;
        n.isBg() && u.on("fetch", function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return f(a).then(b, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b({
                    error: a.message
                })
            })
        });
        c.transformOptions = d;
        c.fetch = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {};
            return b.url = a, d(b), n.isBg() || t.isTestsMode() ? f(b) : u.promiseBackground("fetch",
                b).then(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (r.isObject(a) && a.error) throw Error(a.error);
                return a
            })
        };
        c.paramStr = k
    }, {
        "./config": 211,
        "./message": 278,
        "./util": 322,
        "babel-runtime/core-js/json/stringify": 22,
        "babel-runtime/core-js/promise": 31,
        lodash: "lodash"
    }],
    292: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/assign");
        var f = d(b);
        b = a("babel-runtime/core-js/symbol");
        var k = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var m = d(b);
        b = a("babel-runtime/helpers/createClass");
        var e = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var r = a("react"),
            n = a("./position"),
            t = a("./dom"),
            u = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return r.createElement("div", {
                    style: a.style,
                    className: "g-selection-anim " + a.className
                })
            };
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = this,
                    c = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : document;
                (0, m["default"])(this, a);
                this._doc = c;
                this._id = (0, k["default"])("SelectionAnimator");
                this._cls = "";
                this._width20 = this._width80 = 0;
                this._component = null;
                this.render = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b._component = t.renderReactWithParent(r.createElement(u, {
                        style: (0, f["default"])({}, b._style),
                        className: b._cls
                    }), b._doc.documentElement, b._id)
                };
                this.remove = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b._component && (b._component.remove(), b._component = null)
                };
                this.complete = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b._style.WebkitTransitionDuration = "0.2s";
                    b._style.MozTransitionDuration = "0.2s";
                    b._style.transitionDuration = "0.2s";
                    b._style.width = b._width80 + b._width20;
                    b._component && b.render()
                }
            }
            return (0, e["default"])(a, [{
                key: "animate",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = this;
                    this._cls = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] :
                        "";
                    var c = n.getAbsRect(a);
                    this._style = {
                        top: c.top + c.height + 1,
                        left: c.left,
                        width: 0,
                        height: 2
                    };
                    this._width20 = Math.ceil(c.width / 8);
                    this._width80 = c.width - this._width20;
                    setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        b._style.width = b._width80;
                        b.render()
                    }, 10);
                    setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        b.complete()
                    }, 500);
                    this.render()
                }
            }]), a
        }();
        c.SelectionAnimator = a
    }, {
        "./dom": 215,
        "./position": 289,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/core-js/symbol": 32,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        react: "react"
    }],
    293: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = a.anchorNode;
            if (!c) return !1;
            var d = k.restrictedAttrs.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return Array.isArray(a) ? "[" + a[0] + '="' + a[1] + '"]' : "[" + a + "]"
                }).join(","),
                e = b.activeElement;
            a = a.toString().trim();
            b = "TEXTAREA" !== c.tagName && "INPUT" !== c.tagName;
            e = !e || "INPUT" !== e.tagName && "TEXTAREA" !== e.tagName;
            var f = !m.isContentEditable(c);
            d = !m.getParentBySel(c, d) && !m.matchesSelector(c, d);
            c = !m.getParentBySel(c, "[contenteditable=true],[contenteditable=plaintext-only]") && !m.parentIsContentEditable(c);
            return !!(a && b && e && f && d && c)
        }
        var f = (b = a("babel-runtime/helpers/classCallCheck")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var k = a("./config"),
            m = a("./dom");
        c.isValidSelection = d;
        c.SelectionElement = function r(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var k = this;
            (0, f["default"])(this, r);
            this._doc = a;
            this._selectHandler = b;
            this._deselectHandler = c;
            this._select = !1;
            this.release = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return m.unlisten(k._doc, "click", k.check)
            };
            this.check = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (2 !== a.detail) return void(k._select && (k._deselectHandler(),
                    k._select = !1));
                k._select = !0;
                a = k._doc.getSelection();
                if (d(a, k._doc)) {
                    var b = a.anchorNode.textContent,
                        c = a.toString();
                    if (!c.match(/[0-9_\u00b1!@#$%^&*:"|<>?~().,:}{\u2019=']/)) {
                        var f = {
                                v: c,
                                s: 0,
                                e: c.length
                            },
                            g = a.getRangeAt(0);
                        if (g.ownerDocument = k._doc, a.anchorNode === a.focusNode) {
                            f = a.anchorOffset;
                            a: {
                                var l = f + c.length;
                                if (b) {
                                    b = b.split(/[.;!?]/g);
                                    for (var h = 0, n = 0, m = 0; m < b.length; m++) {
                                        if (n = h + b[m].length, f >= h && l <= n) {
                                            f = {
                                                v: b[m],
                                                s: f - h,
                                                e: l - h
                                            };
                                            break a
                                        }
                                        h = n + 1
                                    }
                                }
                                f = null
                            }
                        }
                        null !== f && k._selectHandler({
                            data: {
                                v: f.v,
                                s: f.s,
                                e: f.e,
                                w: c
                            },
                            pos: a.getRangeAt(0).getBoundingClientRect(),
                            el: g
                        })
                    }
                }
            };
            m.listen(a, "click", this.check)
        }
    }, {
        "./config": 211,
        "./dom": 215,
        "babel-runtime/helpers/classCallCheck": 34
    }],
    294: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && a.__esModule ? a : {
                    "default": a
                }
            }

            function f(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.find(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return k(b, a.split(":"))
                })
            }

            function k(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = (0, t["default"])(b, 2);
                b = c[0];
                c = c[1];
                a = a.getAttribute(b);
                return !(!a || !(a === c || a.includes(c) && b + ":" + c))
            }

            function m(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.dataset && a.dataset.testid
            }

            function e(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.classList.contains("zendesk-editor--rich-text-comment")
            }
            b = a("babel-runtime/core-js/object/keys");
            var r = d(b);
            b = a("babel-runtime/core-js/array/from");
            var n = d(b);
            b = a("babel-runtime/helpers/slicedToArray");
            var t = d(b);
            Object.defineProperty(c, "__esModule", {
                value: !0
            });
            var u = a("./location"),
                l = a("./util"),
                g = a("lodash"),
                q = a("./client-script"),
                v = a("./dom"),
                p = {
                    "translate.google.com": {
                        "#gt-clear": {
                            zIndex: "2"
                        }
                    },
                    "linkedin.com": {
                        ".mentions-highlighter": {
                            zIndex: "0"
                        }
                    },
                    "us.nakedwines.com": {
                        ".postbutton": {
                            display: "inline-block"
                        }
                    }
                },
                y = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = void 0;
                    return function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return "undefined" ==
                            typeof a && (a = !!document.querySelector("c-wiz")), a
                    }
                }(),
                z = {
                    "airbnb.com": {
                        stopImmediatePropagationForClick: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.classList.contains("send-message-textarea")
                        }
                    },
                    "twitter.com": {
                        btnDiff: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            if ("tweet-box-dm-conversation" === a.id) return [-25, 1];
                            var b = a.parentElement && a.parentElement.parentElement && a.parentElement.parentElement.querySelector(".EmojiPicker");
                            return null != b && 0 < b.offsetHeight ? [-25, 3] : 40 < a.clientHeight || "tweet-box-home-timeline" !== a.id ? [0, 0] : [-30, 0]
                        },
                        fieldRestoreInlineStyles: function(a,
                            b) {
                            "tweet-box-dm-conversation" === a.id && a.style.zIndex !== b.src["z-index"] && (a.style.zIndex = b.src["z-index"], a.style.position = b.src.position, a.style.transition = "none", a.style.background = "transparent")
                        }
                    },
                    "linkedin.com": {
                        fieldStateForDomain: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return "IFRAME" === a.tagName && a.id ? a.id.replace(/\d*\d/, "") : f(["class:trans"], a)
                        },
                        menuPosLeft: function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return !l.isSafari() || c.enabled ? b : b - 7
                        }
                    },
                    "*.slack.com": {
                        forceMinimize: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return 40 < a.clientHeight
                        },
                        btnCustomContainer: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a
                        },
                        btnCustomStyles: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b = 40 > b.clientHeight ? 25 : 0;
                            return a ? {
                                right: 10 + b,
                                bottom: 10,
                                left: "auto",
                                top: "auto"
                            } : {
                                right: -10,
                                bottom: -2,
                                left: "auto",
                                top: "auto"
                            }
                        },
                        customDefaultBg: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.parentNode && a.parentNode.parentNode && a.parentNode.parentNode.classList.contains("offline") ? "rgb(253, 241, 193)" : "rgb(255, 255, 255)"
                        }
                    },
                    "*.zendesk.com": {
                        btnCustomContainer: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return e(a) ? a : null
                        },
                        btnCustomStyles: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return e(b) ? {
                                bottom: 50,
                                right: 8,
                                left: "auto",
                                top: "auto"
                            } : {}
                        },
                        customDefaultBg: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.classList.contains("ember-text-area") &&
                                (a.parentNode && a.parentNode.parentNode && a.parentNode.parentNode.parentNode && !a.parentNode.parentNode.parentNode.classList.contains("is-public") ? "#fff6d9" : "#fff") || null
                        }
                    },
                    "facebook.com": {
                        fieldStateForDomain: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return ["role:textbox", "testid:ufi_comment_composer", "testid:react-composer-root"].find(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                b = b.split(":");
                                b = (0, t["default"])(b, 2);
                                var c = b[0],
                                    d = b[1];
                                "testid" === c ? (b = Boolean, c = [c, d], c = (0, t["default"])(c, 2), c = (c[0], c[1]), c = a.dataset && a.dataset.testid === c ? "testid:" + c : !!v.getParentByData(a,
                                    "testid", c) && "testid:" + c, b = b(c)) : b = k(a, [c, d]);
                                return b
                            })
                        },
                        ghostHeight: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            a = parseInt(a, 10);
                            return 0 < a ? a + 2 + "px" : a + "px"
                        },
                        setContainerLineHeight: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var c = {
                                "14px": "18px",
                                "24px": "28px",
                                "30px": "1.2em"
                            };
                            "status-attachment-mentions-input" === m(a) && (v.getParentByDepth.call(a, 0).style.lineHeight = c[b] || parseInt(b, 10) + 4 + "px")
                        },
                        removeContainerFontSize: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return "status-attachment-mentions-input" === m(a)
                        },
                        menuPosLeft: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a && a.el.name && "xhpc_message_text" === a.el.name ? Math.ceil(b) :
                                b
                        },
                        forceMinimize: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return "ufi_reply_composer" === m(a)
                        },
                        getContainerTextAlign: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            if ("status-attachment-mentions-input" === m(a)) return v.getParentByDepth.call(a, 4).style.textAlign
                        },
                        btnCustomContainer: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var b = m(a);
                            return "ufi_comment_composer" === b || "ufi_reply_composer" === b ? a : "status-attachment-mentions-input" === b ? (a = v.getParentByDepth.call(a, 4), a.parentNode.style.position = "relative", a) : a.name && "xhpc_message_text" === a.name ? a : v.getParentByData(a, "testid", "react-composer-root") ?
                                (a = v.getParentByDepth.call(a, 3), a.parentNode.style.position = "relative", a) : "webMessengerRecentMessages" === a.getAttribute("aria-controls") ? a : void 0
                        },
                        btnCustomStyles: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            if ("webMessengerRecentMessages" === b.getAttribute("aria-controls")) return a ? {
                                right: 10,
                                bottom: 10,
                                left: "auto",
                                top: "auto"
                            } : {
                                right: -5,
                                bottom: 2,
                                left: "auto",
                                top: "auto"
                            };
                            var c = m(b);
                            if ("ufi_comment_composer" === c) return b = v.getParentByDepth.call(b, 6).querySelector(".UFICommentAttachmentButtons"), {
                                right: a ? 0 : -(b.clientWidth + 15),
                                bottom: a ?
                                    -4 : -14,
                                left: "auto",
                                top: "auto"
                            };
                            if ("ufi_reply_composer" === c || b.hasAttribute("aria-haspopup") && b.hasAttribute("aria-owns")) return b = v.getParentByDepth.call(b, 6).querySelector(".UFICommentAttachmentButtons"), {
                                right: a ? 0 : -(b.clientWidth + 17),
                                bottom: a ? -4 : -8,
                                left: "auto",
                                top: "auto"
                            };
                            c = a ? 10 : -8;
                            var d = a ? 10 : -5,
                                e = v.getParentByData(b, "testid", "react-composer-root");
                            e && 0 < e.querySelectorAll('[aria-label="Post a sticker"], [aria-label="Insert an emoji"]').length && (c = a ? 30 : -12, d = a ? 6 : -3);
                            return b.name && "xhpc_message_text" ===
                                b.name && (d = 50), {
                                    right: c,
                                    bottom: d,
                                    left: "auto",
                                    top: "auto"
                                }
                        }
                    },
                    "mail.google.com": {
                        btnCustomContainer: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var b = (a = (a = v.getParentByTag(a, "TABLE")) && v.getParentByTag(a, "TABLE")) && a.querySelector('[command="Files"]');
                            return a && b ? v.getParentByTag(b, "TABLE") : null
                        },
                        btnCustomStyles: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a ? {
                                right: 10,
                                top: -30,
                                left: "auto"
                            } : {
                                right: -2,
                                top: -25,
                                left: "auto"
                            }
                        },
                        shouldRemove: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            if (a = v.getParentByTag(a, "TABLE"))
                                if (a = v.getParentByTag(a, "TABLE")) return (a = a.querySelector('[role=toolbar][aria-label="Spell Check"]')) &&
                                    a.offsetParent
                        }
                    },
                    "inbox.google.com": {
                        btnCustomContainer: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.parentNode
                        },
                        btnCustomStyles: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a ? {
                                right: 12,
                                top: "auto",
                                left: "auto",
                                bottom: 62
                            } : {
                                right: -5,
                                top: "auto",
                                left: "auto",
                                bottom: 60
                            }
                        }
                    },
                    "medium.com": {
                        btnDiff: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return v.parentHasClass(a, "postArticle--full") ? [-75, 0, !1] : [0, 0, !1]
                        }
                    },
                    "plus.google.com": {
                        forceMinimize: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return 30 > a.clientHeight
                        },
                        btnCustomContainer: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return y() && /comment/i.test(a.getAttribute("aria-label") || "") ? a.parentNode : a
                        },
                        btnCustomStyles: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var b =
                                y() ? -12 : -18,
                                c = y() ? -5 : -10;
                            return a ? {
                                right: 10,
                                bottom: 10,
                                left: "auto",
                                top: "auto"
                            } : {
                                right: b,
                                bottom: c,
                                left: "auto",
                                top: "auto"
                            }
                        },
                        fieldParentCustomStyle: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var a = {
                                "padding-bottom": "2px",
                                "overflow-x": "hidden"
                            };
                            return y() ? a : {}
                        }
                    },
                    "app.asana.com": {
                        forceMinimize: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return !!a.classList.contains("task-comments-input") && !!(a.parentNode && a.parentNode.parentNode && a.parentNode.parentNode.parentNode) && !a.parentNode.parentNode.parentNode.classList.contains("focused")
                        }
                    },
                    "youtube.com": {
                        btnDiff: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return v.hasClass(a,
                                "comment-simplebox-text") ? [15, 15] : [0, 0]
                        }
                    },
                    "socialflow.com": {
                        fieldParentCustomStyle: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a ? {
                                width: "",
                                overflow: "visible"
                            } : {}
                        }
                    }
                };
            c.pageStyles = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : document,
                    b = u.getDomain(a.documentElement),
                    c = p[b];
                return {
                    addDomainClass: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.documentElement.classList.add("gr__" + b.replace(/\./g, "_"))
                    },
                    customizeElements: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        c && g(c).each(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return (0, n["default"])(a.querySelectorAll(c)).forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return g.extend(a.style || {}, b)
                            })
                        })
                    },
                    getFixesForCurrentDomain: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = z[b];
                        return a ? a : (a = (0, r["default"])(z).filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.includes("*")
                        }).find(function(a) {
                            return -1 < b.indexOf(a.replace("*", ""))
                        })) && z[a] || {}
                    }
                }
            };
            (function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function a() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (window.randomize) {
                        var a = window.randomize;
                        window.randomize = function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            try {
                                if (b.data) {
                                    var c = JSON.parse(b.data);
                                    c[0] && c[0].parentWindowLocation && a(b)
                                }
                            } catch (G) {}
                        }
                    }
                }
                var b = u.getDomain();
                (-1 < b.indexOf("chase.com") || -1 < b.indexOf("chaseonline.com")) && q.addScript(document, [a])
            })()
        },
        {
            "./client-script": 205,
            "./dom": 215,
            "./location": 277,
            "./util": 322,
            "babel-runtime/core-js/array/from": 19,
            "babel-runtime/core-js/object/keys": 29,
            "babel-runtime/helpers/slicedToArray": 40,
            lodash: "lodash"
        }
    ],
    295: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.UPDATE_CONNECTION = "connection/UPDATE_CONNECTION";
        c.bgPageDown = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.UPDATE_CONNECTION,
                data: {
                    bgNotConnected: !0,
                    online: !1
                },
                reason: a,
                sync: !1
            }
        }
    }, {}],
    296: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("lib/message"),
            f = a("lib/store-mirror"),
            k = a("./reducer"),
            m = a("./actions");
        c.createAndObserve = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = f.createMirrorStore(a, {
                bgPageDown: m.bgPageDown
            }, k.reducer);
            a = b.store;
            b = b.actions;
            return d.on("__bgerror", b.bgPageDown), {
                store: a,
                actions: b
            }
        }
    }, {
        "./actions": 295,
        "./reducer": 297,
        "lib/message": 278,
        "lib/store-mirror": 299
    }],
    297: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/core-js/object/assign")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = a("./actions");
        c.reducer = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
                b = arguments[1],
                c = b.data;
            switch (b.type) {
                case f.UPDATE_CONNECTION:
                    return (0, d["default"])({}, a, {
                        connection: (0, d["default"])({}, a.connection, c)
                    });
                default:
                    return a
            }
        }
    }, {
        "./actions": 295,
        "babel-runtime/core-js/object/assign": 24
    }],
    298: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/helpers/defineProperty");
        var f = d(b);
        b = a("babel-runtime/core-js/object/assign");
        var k = d(b);
        b = a("babel-runtime/core-js/object/keys");
        var m = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = a("lodash"),
            r = a("lib/util");
        c.observeStore = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = a.getState();
                e.isEmpty(c) || e.isEqual(d, c) || (d = c, b(c))
            }
            var d = void 0;
            return r.asyncCall(c), a.subscribe(c)
        };
        c.bindActions = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return (0, m["default"])(a).filter(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a[b]
            }).reduce(function(c, d) {
                return (0, k["default"])(c, (0, f["default"])({}, d, function() {
                    var c = a[d].apply(a, arguments),
                        e = "undefined" == typeof c.sync || c.sync;
                    return b((0, k["default"])({},
                        c, {
                            sync: e
                        }))
                }))
            }, {})
        }
    }, {
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/core-js/object/keys": 29,
        "babel-runtime/helpers/defineProperty": 36,
        "lib/util": 322,
        lodash: "lodash"
    }],
    299: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/core-js/object/assign")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        b = a("redux-logger");
        var f = a("redux"),
            k = a("lib/message"),
            m = a("universal/bg/store"),
            e = a("./helpers"),
            r = a("../util"),
            n = b({
                level: "debug",
                collapsed: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !0
                },
                predicate: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !1
                }
            }),
            t = {
                page: {},
                connection: {}
            };
        c.createMirrorStore = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {},
                c = arguments[2],
                q = f.createStore(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : t,
                        b = arguments[1],
                        e = (a.page || a.config || {}).domain;
                    return b.sync && k.emitBackground("dispatch", (0, d["default"])({}, b, {
                        domain: e
                    })), "store/SYNC" === b.type ? (0, d["default"])({}, a, b.data) : c ? c(a, b) : a
                }, {}, f.applyMiddleware(n));
            b = e.bindActions((0, d["default"])({}, m.pureActions, b), q.dispatch);
            return k.on("state", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                r.asyncCall(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return q.dispatch({
                        type: "store/SYNC",
                        data: a
                    })
                }, 0)
            }), e.observeStore(q, a), {
                store: q,
                actions: b
            }
        }
    }, {
        "../util": 322,
        "./helpers": 298,
        "babel-runtime/core-js/object/assign": 24,
        "lib/message": 278,
        redux: "redux",
        "redux-logger": "redux-logger",
        "universal/bg/store": 341
    }],
    300: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/helpers/typeof")) && b.__esModule ? b : {
                "default": b
            },
            f = (b = a("babel-runtime/core-js/json/stringify")) && b.__esModule ? b : {
                "default": b
            };
        Object.defineProperty(c,
            "__esModule", {
                value: !0
            });
        var k = a("./dom"),
            m = a("./message"),
            e = a("./console");
        c.api = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = [];
                return (0, f["default"])(a, function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if ("object" === ("undefined" == typeof c ? "undefined" : (0, d["default"])(c)) && null !== c) {
                        if (-1 !== b.indexOf(c)) return;
                        b.push(c)
                    }
                    return c
                })
            }
            "bg-reload reset qa-relogin disable-auth enable-auth disable-defs enable-defs disable-domain enable-domain uninstall set-popup-url set-premium-user set-fake-capi run-fake-capi disable-send-state-to-tabs enable-send-state-to-tabs".split(" ").forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                k.listen(document,
                    a,
                    function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        m.emitBackground(a, b.value)
                    })
            });
            k.listen(document, "get-extid", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                m.emitBackground("get-extid", {}, function(a) {
                    return k.emitDomEvent("extid", a)
                })
            });
            k.listen(document, "get-ext-uuid", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                m.emitBackground("get-ext-uuid", {}, function(a) {
                    return k.emitDomEvent("ext-uuid", a)
                })
            });
            k.listen(document, "get-capi-log", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                m.emitBackground("get-capi-log", {}, function(a) {
                    return k.emitDomEvent("capi-log", a)
                })
            });
            k.listen(document, "get-tracker-log", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                m.emitBackground("get-tracker-log", {}, function(a) {
                    return k.emitDomEvent("tracker-log", a)
                })
            });
            k.listen(document, "get-console-log", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                k.emitDomEvent("console-log", a(e.flushLog()))
            });
            k.listen(document, "get-localforage", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                m.emitBackground("get-localforage", {}, function(a) {
                    return k.emitDomEvent("localforage", a)
                })
            });
            k.listen(document, "set-localforage", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                m.emitBackground("set-localforage", {
                    key: a.key,
                    value: a.value
                }, function(a) {
                    return k.emitDomEvent("localforage", a)
                })
            });
            k.listen(document, "get-pref", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b =
                    a.key;
                m.emitBackground("get-pref", {
                    key: b
                }, function(a) {
                    return k.emitDomEvent("pref", {
                        key: b,
                        value: a
                    })
                })
            });
            k.listen(document, "set-prefs", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                m.emitBackground("set-pref", {
                    key: a.key,
                    value: a.value
                })
            })
        }
    }, {
        "./console": 212,
        "./dom": 215,
        "./message": 278,
        "babel-runtime/core-js/json/stringify": 22,
        "babel-runtime/helpers/typeof": 42
    }],
    301: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = {};
        c.timers = {
            start: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                d[a] = Date.now()
            },
            stop: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = this.passed(a);
                return delete d[a],
                    b
            },
            passed: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a && d[a] ? Date.now() - d[a] : 0
            }
        }
    }, {}],
    302: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/regenerator")) && b.__esModule ? b : {
                "default": b
            },
            f = (b = a("babel-runtime/core-js/promise")) && b.__esModule ? b : {
                "default": b
            },
            k = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c || (c = f["default"]))(function(e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function h(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            k(d.next(a))
                        } catch (A) {
                            f(A)
                        }
                    }

                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            k(d["throw"](a))
                        } catch (A) {
                            f(A)
                        }
                    }

                    function k(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? e(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(h, g)
                    }
                    k((d = d.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(c,
            "__esModule", {
                value: !0
            });
        var m = a("cookie"),
            e = a("../location"),
            r = a("../config"),
            n = a("../util"),
            t = a("../config"),
            u = a("./tracker"),
            l = a("./logger"),
            g = a("@grammarly-npm/gnarclientweb"),
            q = a("@grammarly-npm/telemetry.ts");
        c.init = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return k(this, void 0, void 0, d["default"].mark(function p() {
                return d["default"].wrap(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (;;) switch (a.prev = a.next) {
                        case 0:
                            try {
                                var b = u.tracker(),
                                    c = window.fetch.bind(window),
                                    d = q.LoggingImpl.DefaultLogAppender.createRootLogger("gnar", q.Logging.LogLevel.INFO, new q.LoggingImpl.GetFelogClient(r.URLS.newFelog,
                                        r.appName, r.getVersion(), r.ENV, c)),
                                    e = q.TimeSeriesImpl.MetricsStorage.createRoot("gnar", r.URLS.newFelog, c),
                                    f = new g.BackendStorage(c, t.GNAR.url),
                                    k = new g.ChromeCookieStorage(t.GNAR.url, t.GNAR.domain),
                                    p = new g.WebExtensionsCookieStorage(t.GNAR.url, t.GNAR.domain),
                                    m = new g.ContainerIdManager(n.isChrome() ? k : n.isFF() ? p : f, [new g.CookieStorage(t.GNAR.domain), new g.LocalStorage, new g.MemoryStorage], d.getLogger("containerId"), e.getCounter("containerId"), n.isChrome() ? 1E3 : 5E3);
                                var y = new g.GnarClientImpl(t.GNAR.url,
                                    r.gnarAppName, t.getVersion(), c, m, d, e, !0);
                                b.gnar = y
                            } catch (J) {
                                l.logger.gnarClientInitFail(J && J.message)
                            }
                        case 1:
                        case "end":
                            return a.stop()
                    }
                }, p, this)
            }))
        };
        c.processCookiesFromGrammarly = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a.dapi;
            var b = {
                path: "/",
                domain: e.getDomain(),
                expires: new Date((new Date).setFullYear((new Date).getFullYear() + 1))
            };
            a && (m("__fngrprnt__", null), m("__fngrprnt__", a, b))
        };
        c.getContainerIdOrUndefined = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return k(void 0, void 0, void 0, d["default"].mark(function p() {
                return d["default"].wrap(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (;;) switch (a.prev =
                        a.next) {
                        case 0:
                            return a.prev = 0, a.next = 3, u.tracker().gnar.getContainerId();
                        case 3:
                            return a.abrupt("return", a.sent);
                        case 6:
                            return a.prev = 6, a.t0 = a["catch"](0), a.abrupt("return", void 0);
                        case 9:
                        case "end":
                            return a.stop()
                    }
                }, p, this, [
                    [0, 6]
                ])
            }))
        }
    }, {
        "../config": 211,
        "../location": 277,
        "../util": 322,
        "./logger": 308,
        "./tracker": 311,
        "@grammarly-npm/gnarclientweb": 5,
        "@grammarly-npm/telemetry.ts": 8,
        "babel-runtime/core-js/promise": 31,
        "babel-runtime/regenerator": 43,
        cookie: "cookie"
    }],
    303: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a &&
                a.__esModule ? a : {
                    "default": a
                }
        }

        function f(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b = arguments.length, c = Array(1 < b ? b - 1 : 0), d = 1; d < b; d++) c[d - 1] = arguments[d];
            var f = function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                console.warn("tracking call " + a + " failed, reason: ", b)
            };
            if (n.isBg()) n.asyncCall(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b;
                try {
                    switch (console.info(a, c), a) {
                        case e.CALL_HANDLER_ID:
                            var d = c[0],
                                h = c.slice(1);
                            (b = e.methods)[d].apply(b, (0, m["default"])(h));
                            break;
                        default:
                            k(a, c)
                    }
                } catch (D) {
                    f(D)
                }
            }, 20);
            else {
                var g = void 0,
                    l = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return clearInterval(g)
                    };
                g = window.setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        l();
                        f("timeout call through bg page")
                    },
                    1E4);
                r.emitBackground("tracking-call", {
                    msg: a,
                    data: c
                }, l)
            }
        }

        function k(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = a.split("."),
                d = c.pop();
            return (c = c.reduce(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b in a ? a[b] : {}
            }, t.tracker())) && d && c[d] ? void c[d].apply(c, (0, m["default"])(b)) : console.error("No method " + a + " in tracker object")
        }
        b = a("babel-runtime/core-js/object/assign");
        b = (d(b), a("babel-runtime/helpers/toConsumableArray"));
        var m = d(b);
        b = a("babel-runtime/core-js/object/keys");
        b = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e, r = a("../message"),
            n =
            a("../util"),
            t = a("./tracker"),
            u = a("./felogPixel"),
            l = a("../config"),
            g = a("./felogClient"),
            q = a("lib/request");
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = n.isBg() ? new g.DefaultFelogClient(l.URLS.newFelog, l.appName, l.getVersion(), l.ENV, q.fetch.bind(window)) : void 0;
            ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.sendFelog = function(a, c, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (!b) throw Error("felogClient unavailable");
                    b.sendEvent(a, c, d, e)["catch"](function(f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return u.sendEventPixel(a, c, d, e, b.getContext())
                    })
                };
                a.sendFelogUsageEvent = function(a, c, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (!b) throw Error("felogClient unavailable");
                    b.sendUsageEvent(a, c, d, e)["catch"](function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return u.sendEventPixel(a, c, d)
                    })
                };
                a.setUserId = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b && b.setUserId(a)
                };
                a.setContainerId = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b && b.setContainerId(a)
                }
            }(a.methods || (a.methods = {}));
            a.CALL_HANDLER_ID = "tracking/RPC"
        }(e || (e = {}));
        c.callBgPage = (0, b["default"])(e.methods).reduce(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a[b] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var a = arguments.length, c = Array(a), d = 0; d < a; d++) c[d] = arguments[d];
                return f.apply(void 0, [e.CALL_HANDLER_ID, b].concat(c))
            }, a
        }, {});
        var v = [];
        c.call = f;
        c.getLog = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a =
                v.slice(0);
            return v.length = 0, a
        }
    }, {
        "../config": 211,
        "../message": 278,
        "../util": 322,
        "./felogClient": 305,
        "./felogPixel": 306,
        "./tracker": 311,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/core-js/object/keys": 29,
        "babel-runtime/helpers/toConsumableArray": 41,
        "lib/request": 291
    }],
    304: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (a = a("babel-runtime/core-js/json/stringify")) && a.__esModule ? a : {
            "default": a
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f;
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a[a.INFO = 0] = "INFO";
            a[a.WARN = 1] = "WARN";
            a[a.ERROR = 2] =
                "ERROR"
        }(f = c.LogLevel || (c.LogLevel = {}));
        (function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.toFelogString = function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                switch (b) {
                    case a.INFO:
                        return "INFO";
                    case a.WARN:
                        return "WARN";
                    case a.ERROR:
                        return "ERROR";
                    default:
                        throw new TypeError("Unrecognized log level " + b);
                }
            }
        })(f = c.LogLevel || (c.LogLevel = {}));
        c.felogRequestUrl = function(a, b, c, r, n, t, u, l, g) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = {
                message: t,
                logger: n,
                level: f.toFelogString(u),
                application: a,
                version: b,
                userId: g && g.userId,
                containerId: g && g.containerId,
                env: c
            };
            return l && (a.extra = l), r + "/log?json=" + encodeURIComponent((0, d["default"])(a))
        };
        c.felogUsageRequestUrl = function(a, b, c, r, n, t, u, l) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = {
                message: t,
                logger: n,
                level: f.toFelogString(u),
                application: a,
                version: b,
                env: c,
                extra_usage: l
            };
            return r + "/log?json=" + encodeURIComponent((0, d["default"])(a))
        }
    }, {
        "babel-runtime/core-js/json/stringify": 22
    }],
    305: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/assign");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        Object.defineProperty(c,
            "__esModule", {
                value: !0
            });
        var e = a("@grammarly-npm/telemetry.ts/lib/timeseries_impl"),
            r = a("./felog"),
            n = a("lib/util");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(b, c, d, f, n) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, k["default"])(this, a);
                this._baseUrl = b;
                this._appName = c;
                this._appVersion = d;
                this._env = f;
                this._fetch = n;
                this._context = {
                    userId: void 0,
                    containerId: void 0
                };
                this._metrics = e.MetricsStorage.createRoot(this._env + "." + this._appName, this._baseUrl, this._fetch)
            }
            return (0, m["default"])(a, [{
                key: "setUserId",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._context = (0, f["default"])({}, this._context, {
                        userId: a
                    })
                }
            }, {
                key: "setContainerId",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._context = (0, f["default"])({}, this._context, {
                        containerId: a
                    })
                }
            }, {
                key: "getContext",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return this._context
                }
            }, {
                key: "sendEvent",
                value: function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return this._fetch(r.felogRequestUrl(this._appName, this._appVersion, this._env, this._baseUrl, a, b, c, d, this._context), {
                        mode: "no-cors",
                        method: "get",
                        cache: "no-cache"
                    }).then(function(a) {})["catch"](function(a) {})
                }
            }, {
                key: "sendUsageEvent",
                value: function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var e = {
                        domain: d.domain,
                        accountType: d.accountType,
                        fieldType: d.fieldType,
                        fieldSupported: d.fieldSupported
                    };
                    if (this._context.containerId || this._context.userId) e.groupInfo = n.normalizedHashCode((this._context.containerId || this._context.userId) + d.domain, 1E9);
                    return this._fetch(r.felogUsageRequestUrl(this._appName, this._appVersion, this._env, this._baseUrl, a, b, c, e), {
                        mode: "no-cors",
                        method: "get",
                        cache: "no-cache"
                    }).then(function(a) {})["catch"](function(a) {})
                }
            }, {
                key: "sendCounter",
                value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._metrics.getCounter(a).increment(b)
                }
            }, {
                key: "sendTimer",
                value: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._metrics.getTimer(a).recordTime(b)
                }
            }]), a
        }();
        c.DefaultFelogClient = a
    }, {
        "./felog": 304,
        "@grammarly-npm/telemetry.ts/lib/timeseries_impl": 13,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "lib/util": 322
    }],
    306: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/core-js/promise")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = a("../newConfig"),
            k = a("./felog");
        c.sendEventPixel =
            function(a, b, c, n, t) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return document.createElement("img").src = k.felogRequestUrl(f.appName, f.getVersion(), f.ENV, f.URLS.newFelog, a, b, c, n, t), d["default"].resolve()
            }
    }, {
        "../newConfig": 279,
        "./felog": 304,
        "babel-runtime/core-js/promise": 31
    }],
    307: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b = arguments.length, c = Array(1 < b ? b - 1 : 0), d = 1; d < b; d++) c[d - 1] = arguments[d];
            if (k.isBg()) {
                if (!n[a]) return console.error("No handler specified for message: " + a);
                k.asyncCall(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b;
                    return (b = n)[a].apply(b, c)
                }, 20)
            } else m.emitBackground("tracking-fire", {
                msg: a,
                data: c
            })
        }
        var f = (b = a("babel-runtime/helpers/toConsumableArray")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var k = a("../util"),
            m = a("../message"),
            e = a("./call"),
            r = a("./logger");
        c.logger = r.logger;
        b = a("./call");
        c.call = b.call;
        c.getLog = b.getLog;
        var n = {};
        c.initBg = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a("./bgonly"),
                c = b.init;
            b = b.processCookiesFromGrammarly;
            c()["catch"](function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return r.logger.bgTrackingInitFail()
            });
            n = a("./on").on;
            m.on("tracking-fire", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = a.data;
                return d.apply(void 0, [a.msg].concat((0, f["default"])(b)))
            });
            m.on("tracker-init", b);
            m.on("tracking-call", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = a.data,
                    c = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : k._f;
                e.call.apply(e, [a.msg].concat((0, f["default"])(b)));
                c()
            });
            d("activity-ping")
        };
        c.fire = d;
        c.initContentScript = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = 0,
                c = a("cookie");
            c["default"] && (c = c["default"]);
            var d = setInterval(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b++;
                    b > e && clearInterval(d);
                    var a = {
                        gnar: c("gnar_containerId"),
                        dapi: c("__fngrprnt__")
                    };
                    clearInterval(d);
                    m.emitBackground("tracker-init",
                        a)
                }, 500),
                e = 10
        }
    }, {
        "../message": 278,
        "../util": 322,
        "./bgonly": 302,
        "./call": 303,
        "./logger": 308,
        "./on": 309,
        "babel-runtime/helpers/toConsumableArray": 41,
        cookie: "cookie"
    }],
    308: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            window.addEventListener("error", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return c.logger.unhandledBgPageException(a)
            });
            window.addEventListener("unhandledrejection", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return c.logger.unhandledBgPageRejection(a)
            })
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        b = a("./call");
        var f = a("./telemetry");
        a = a("../newConfig");
        c.logger =
            new f.Telemetry(b.callBgPage.sendFelog.bind(b.callBgPage), b.callBgPage.sendFelogUsageEvent.bind(b.callBgPage), b.callBgPage.setUserId.bind(b.callBgPage), b.callBgPage.setContainerId.bind(b.callBgPage));
        a.isBg() && (console.info("Installing unhandled error loggers..."), d())
    }, {
        "../newConfig": 279,
        "./call": 303,
        "./telemetry": 310
    }],
    309: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        var f;
        b = a("babel-runtime/helpers/defineProperty");
        b = d(b);
        var k = a("babel-runtime/regenerator"),
            m = d(k);
        k =
            a("babel-runtime/helpers/slicedToArray");
        var e = d(k);
        k = a("babel-runtime/core-js/promise");
        var r = d(k),
            n = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c || (c = r["default"]))(function(e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function h(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            k(d.next(a))
                        } catch (A) {
                            f(A)
                        }
                    }

                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            k(d["throw"](a))
                        } catch (A) {
                            f(A)
                        }
                    }

                    function k(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? e(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(h, g)
                    }
                    k((d = d.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var t = a("../util"),
            u = a("./call"),
            l = a("./logger"),
            g = a("universal/bg/prefs"),
            q = a("extension-api");
        c.on = (f = {}, (0, b["default"])(f, "activity-ping", function() {}), (0, b["default"])(f, "daily-ping", function(a, b) {
                return n(this, void 0, void 0, m["default"].mark(function z() {
                    var c, d, f, k, p, n, r;
                    return m["default"].wrap(function(h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (;;) switch (h.prev = h.next) {
                            case 0:
                                if (a) {
                                    h.next = 2;
                                    break
                                }
                                return h.abrupt("return");
                            case 2:
                                return u.call("gnar.pingMaybe"), c = new g.PrefsImpl(q.getGlobalExtensionApi().preferences), h.next = 6, c.get("pingDate");
                            case 6:
                                if (d = h.sent, "string" != typeof d && (d = ""), f = d.split("|"), k = (0, e["default"])(f,
                                        2), p = k[0], n = k[1], r = b ? "cookiesDisabled" : a, !(p && p > Date.now() && n === r)) {
                                    h.next = 12;
                                    break
                                }
                                return h.abrupt("return");
                            case 12:
                                return l.logger.dailyPing(), h.next = 15, c.set("pingDate", [t.getNextPingDate(), r].join("|"));
                            case 15:
                            case "end":
                                return h.stop()
                        }
                    }, z, this)
                }))
            }), (0, b["default"])(f, "app_signin_success", function(a) {
                u.call("gnar.track", "userLoginForm/accepted", {
                    placement: a
                })
            }), (0, b["default"])(f, "app_signup_success", function(a) {
                u.call("gnar.track", "userAccountSignupForm/accepted", {
                    placement: a
                })
            }), (0, b["default"])(f,
                "signin-error",
                function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a.errorType = "Server-Side";
                    u.call("gnar.track", "userLoginForm/rejected")
                }), (0, b["default"])(f, "signup-error", function(a) {
                a.errorType = "Server-Side";
                u.call("gnar.track", "userAccountSignupForm/rejected")
            }), (0, b["default"])(f, "upgrade-after-register", function() {
                return n(this, void 0, void 0, m["default"].mark(function p() {
                    return m["default"].wrap(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (;;) switch (a.prev = a.next) {
                            case 0:
                                u.call("gnar.track", "Account_Type_Selected");
                            case 1:
                            case "end":
                                return a.stop()
                        }
                    }, p, this)
                }))
            }),
            (0, b["default"])(f, "hook-clicked", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                u.call("gnar.track", "upgradeHookClicked", {
                    placement: a
                });
                l.logger.userUpgradeClick(a)
            }), (0, b["default"])(f, "correct-btn-clicked", function() {
                u.call("gnar.track", "gbuttonClicked");
                l.logger.gButtonClick()
            }), (0, b["default"])(f, "btn-disable-in-field", function(a) {
                u.call("gnar.track", "checkingInFieldToggled", {
                    enabled: a
                });
                l.logger.checkingToggledInField(a)
            }), (0, b["default"])(f, "button-change-state", function() {}), (0, b["default"])(f, "login-attempt", function(a) {
                u.call("gnar.track",
                    "signInClicked", {
                        placement: a
                    })
            }), (0, b["default"])(f, "show-dictionary", function() {
                u.call("gnar.track", "showDictionary")
            }), (0, b["default"])(f, "referral-shown", function(a) {
                u.call("gnar.track", "referral/referralNotificationShown", {
                    placement: a
                })
            }), (0, b["default"])(f, "referral-clicked", function(a) {
                u.call("gnar.track", "referral/referralButtonClicked", {
                    placement: a
                })
            }), (0, b["default"])(f, "tab-connected", function(a, b, c, d, e, f) {
                b = b.enabled;
                (this["daily-ping"](a.id, c.cookiesDisabled), b || !0 === f) || (l.logger.disabledTabLoad(e,
                    a.type), u.call("gnar.track", "NotEnabledOnDomain"));
                !0 === b && !1 === d && l.logger.disabledTabByUserLoad(e, a.type)
            }), (0, b["default"])(f, "session-invalidate", function(a, b, c, d, e) {
                e = a.id;
                var f = a.anonymous;
                a = a.isTest;
                e !== b.id && (u.call("gnar.setUser", e, a), this["daily-ping"](e, d));
                c && l.logger.sessionInvalidated(c, e !== b.id);
                b.email && !b.anonymous && f && l.logger.unexpectedAnonymous({
                    email: b.email,
                    token: b.token,
                    grauth: b.grauth,
                    tokenEqualsGrauth: b.token === b.grauth,
                    cookiesDisabled: d,
                    reason: c
                })
            }), (0, b["default"])(f, "set-dapi-prop",
                function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    l.logger.dapiPropInitialized(a, b)
                }), (0, b["default"])(f, "change-dialect", function(a) {
                u.call("gnar.track", "languageStrongPreference", a)
            }), (0, b["default"])(f, "change-defs", function(a) {
                u.call("gnar.track", "definitionsToggled", a);
                l.logger.toggleExtensionDefs(a.enabled)
            }), (0, b["default"])(f, "checking-toggled", function(a) {
                u.call("gnar.track", "checkingToggled", a);
                l.logger.toggleExtension(a.enabled, a.placement)
            }), (0, b["default"])(f, "disable-until-next-visit", function() {
                u.call("gnar.track", "disableUntilNextVisit");
                l.logger.disableUntilNextVisit()
            }), (0, b["default"])(f, "disable-button-click", function() {
                u.call("gnar.track", "disableButtonClick");
                l.logger.disableButtonClick()
            }), (0, b["default"])(f, "popup-open", function() {
                u.call("gnar.track", "browserToolbarButtonClicked")
            }), (0, b["default"])(f, "popup-open-on-unsupported", function() {
                u.call("gnar.track", "browserToolbarButtonClicked/unsupported")
            }), (0, b["default"])(f, "cookie-overflow", function(a, b) {
                l.logger.cookieOverflow(a, b)
            }), (0, b["default"])(f, "premium-popup-show",
                function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    u.call("gnar.track", "upgradeReferralPopupShown")
                }), (0, b["default"])(f, "premium-popup-upgrade-click", function() {
                u.call("gnar.track", "upgradeReferralPremiumBtnClicked")
            }), (0, b["default"])(f, "premium-popup-referral-click", function() {
                u.call("gnar.track", "upgradeReferralInviteBtnClicked")
            }), (0, b["default"])(f, "email-perception-popup-show", function(a) {
                u.call("gnar.track", "askForFeedback-popup-show", {
                    isFirstShown: a
                });
                l.logger.emailPerceptionPopupShow()
            }), (0, b["default"])(f, "email-perception-popup-cancel",
                function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    u.call("gnar.track", "askForFeedback-popup-cancel", {
                        isFirstShown: a
                    });
                    l.logger.emailPerceptionPopupCancel()
                }), (0, b["default"])(f, "email-perception-button-hover", function() {
                u.call("gnar.track", "askForFeedback-button-hover");
                l.logger.emailPerceptiongButtonHover()
            }), (0, b["default"])(f, "email-perception-learn-more-click", function() {
                u.call("gnar.track", "emailPerceptionOptInLearnMore-button-click")
            }), (0, b["default"])(f, "email-perception-disable-click", function() {
                u.call("gnar.track", "dontShowEmailPerceptionAgain-button-click")
            }),
            (0, b["default"])(f, "onboarding-popup-show", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                u.call("gnar.track", "onboarding-popup-show");
                l.logger.onboardingPopupShow()
            }), (0, b["default"])(f, "onboarding-popup-cancel", function() {
                u.call("gnar.track", "onboarding-popup-cancel");
                l.logger.onboardingPopupCancel()
            }), (0, b["default"])(f, "onboardingTutorial-popup-show", function() {
                u.call("gnar.track", "onboardingTutorial-popup-show");
                l.logger.onboardingTutorialShow()
            }), (0, b["default"])(f, "onboardingTutorialNext-button-click", function() {
                u.call("gnar.track",
                    "onboardingTutorialNext-button-click")
            }), (0, b["default"])(f, "onboardingTutorialPersonalize-button-click", function() {
                u.call("gnar.track", "onboardingTutorialPersonalize-button-click")
            }), (0, b["default"])(f, "onboardingTutorialSave-button-click", function() {
                u.call("gnar.track", "onboardingTutorialSave-button-click")
            }), (0, b["default"])(f, "onboardingTutorialLetsWrite-button-click", function() {
                u.call("gnar.track", "onboardingTutorialLetsWrite-button-click")
            }), f)
    }, {
        "../util": 322,
        "./call": 303,
        "./logger": 308,
        "babel-runtime/core-js/promise": 31,
        "babel-runtime/helpers/defineProperty": 36,
        "babel-runtime/helpers/slicedToArray": 40,
        "babel-runtime/regenerator": 43,
        "extension-api": 177,
        "universal/bg/prefs": 331
    }],
    310: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/json/stringify");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = a("./felog");
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(b, c, d, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var g =
                    this;
                (0, k["default"])(this, a);
                this._sendFelog = b;
                this._sendFelogUsage = c;
                this._setUserId = d;
                this._setContainerId = f;
                this.pageLoadTimeout = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.connection.failover.pageLoad.timeout", "content script init failed", e.LogLevel.ERROR)
                };
                this.appLoadTimeout = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.connection.failover.appLoad.timeout", "extension init timed out", e.LogLevel.ERROR)
                };
                this.differentStateDomain = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.state.differentDomain", "received state for different domain", e.LogLevel.INFO, {
                        stateDomain: a
                    })
                };
                this.restoredBgConnection = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.connection.bg.restored", "bg page connection restored", e.LogLevel.INFO, {
                        timeWithoutConnection: a
                    })
                };
                this.initWithoutBgConnection = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.connection.bg.disconnected", "no connection to bg page", e.LogLevel.INFO)
                };
                this.fetchDefinitionsFail = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.connection.api.definition.failed", "definitions fetch failed", e.LogLevel.WARN)
                };
                this.infinityCheckResetFail = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.connection.infiniteCheck.failed", "infinite check reset failed",
                        e.LogLevel.ERROR, {
                            delay: a
                        })
                };
                this.tooLongPageConfigInit = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.pageConfig.init.exceeded", "page config init timeout", e.LogLevel.WARN, {
                        initTime: a
                    })
                };
                this.tooLongUserUpdateTime = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.state.user.update.exceeded", "user state update took too long", e.LogLevel.WARN, {
                        updateTime: a
                    })
                };
                this.lostBgPageConnection = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.gbutton.bg\u0421onnection.lost", "gbutton connection to bg page lost", e.LogLevel.INFO)
                };
                this.restoreBgPageConnection = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.gbutton.bg\u0421onnection.restored",
                        "gbutton connection to bg page restored", e.LogLevel.INFO, {
                            time: a
                        })
                };
                this.badCursorPosition = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.editor.badCursorPosition", "incorrect cursor position in grammarly-editor", e.LogLevel.INFO)
                };
                this.cursorJump = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.editor.cursorJump", "cursor jump detected", e.LogLevel.WARN)
                };
                this.signinOpen = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.signin.open", "sign in dialog opened", e.LogLevel.INFO)
                };
                this.signinClose = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.signin.close", "sign in dialog closed", e.LogLevel.INFO, {
                        openTime: a
                    })
                };
                this.tabReloadClick = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.gbutton.reload.click", "gbutton reload clicked", e.LogLevel.WARN)
                };
                this.popupLoadError = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.popup.load.error", "could not open pop-up editor", e.LogLevel.ERROR, {
                        message: a,
                        name: b
                    })
                };
                this.loginNoBgPageConnection = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("debug.cs.connection.signin.bg.timeout", "can not connect to bg page on login", e.LogLevel.INFO, {
                        message: a
                    })
                };
                this.pageConfigCDNError = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.pageConfig.cdn.error", "could not read page config", e.LogLevel.ERROR, {
                        message: a
                    })
                };
                this.pageConfigLocalStorageError = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.pageConfig.localStorage.error", "could not read page config from localStorage", e.LogLevel.INFO, {
                        message: a,
                        name: b
                    })
                };
                this.pageConfigUpdated = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.pageConfig.updated", "page config updated", e.LogLevel.INFO, {
                        oldVersion: a,
                        newVersion: b
                    })
                };
                this.settingsPopupTimeout = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("settings.popup.init.timeout", "settings popup open timeout", e.LogLevel.WARN)
                };
                this.settingsUsupportedShow = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("settings.popup.state.unsupported.show",
                        "page unsupported message shown", e.LogLevel.INFO, {
                            popupType: a
                        })
                };
                this.settingsPopupToggled = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("settings.popup.experiment.toggle", "settings popup disabled/enabled for experiment on /personalize page", e.LogLevel.INFO, {
                        isPopupDisabled: a
                    })
                };
                this.socketBgError = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.socket.error", "bg page socket error", e.LogLevel.WARN)
                };
                this.capiNotAuthorizedLoop = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("debug.socket.notAuthorizedLoop", "could not authenticate on capi and auth", e.LogLevel.INFO, {
                        authDegradation: a,
                        cookiesDisabled: b
                    })
                };
                this.socketDisabledCookie = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("debug.socket.disabledCookies", "disabled cookies after failed authentication", e.LogLevel.INFO)
                };
                this.socketBgRestored = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("debug.bg.socket.restored", "capi session restored", e.LogLevel.INFO, {
                        tryCount: a
                    })
                };
                this.socketBgReconnectFail = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.socket.reconnect.fail", "could not restore ws connection", e.LogLevel.WARN, {
                        token: a,
                        tryCount: b
                    })
                };
                this.socketCsError = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.socket.error", "content script socket error",
                        e.LogLevel.WARN)
                };
                this.soketCsErrorMsg = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.socket.errorMsg", "capi error", e.LogLevel.WARN, {
                        message: a
                    })
                };
                this.gnarClientInitFail = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("gnar.bg.tracking.gnar.init.fail", "gnar init failed", e.LogLevel.WARN, {
                        message: a
                    })
                };
                this.bgTrackingInitFail = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("debug.tracking.init.fail", "bg page tracking library init failed", e.LogLevel.INFO)
                };
                this.dailyPing = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("debug.dailyPing", "daily ping", e.LogLevel.INFO)
                };
                this.userUpgradeClick = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.ui.action.upgradeClick",
                        "upgrade hook clicked", e.LogLevel.INFO, {
                            placement: a
                        })
                };
                this.gButtonClick = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.ui.gbutton.click", "gbutton clicked", e.LogLevel.INFO)
                };
                this.checkingToggledInField = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.ui.gbutton.toggleInField", "checking toggled in field", e.LogLevel.INFO, {
                        enabled: a
                    })
                };
                this.sessionInvalidated = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.session.invalidated", "user session invalidated", e.LogLevel.INFO, {
                        reason: a,
                        userChanged: b
                    })
                };
                this.unexpectedAnonymous = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("debug.bg.session.unexpectedAnonymous",
                        "user changed to anonymous", e.LogLevel.INFO, a)
                };
                this.dapiPropInitialized = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.settings.dapi.prop.init", "save property to the DAPI", e.LogLevel.INFO, {
                        name: a,
                        value: b
                    })
                };
                this.getDapiPropError = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.connection.dapi.getProp.error", "could not get dapi property", e.LogLevel.WARN, {
                        property: a,
                        body: b
                    })
                };
                this.setDapiPropError = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.connection.dapi.setProp.error", "could not set dapi property", e.LogLevel.WARN, {
                        property: a,
                        body: b
                    })
                };
                this.toggleExtensionDefs =
                    function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        g._send("bg.settings.definitions.toggle", "definitions toggled for domain", e.LogLevel.INFO, {
                            enabled: a
                        })
                    };
                this.toggleExtension = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.settings.extension.toggle", "extension toggled for domain", e.LogLevel.INFO, {
                        enabled: a,
                        placement: b
                    })
                };
                this.disableUntilNextVisit = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.gbutton.disableUntilNextVisit", "extension temporary disabled on the current tab", e.LogLevel.INFO)
                };
                this.disableButtonClick = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.gbutton.disableButtonClick", "clicked on disable button in gButton",
                        e.LogLevel.INFO)
                };
                this.cookieOverflow = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("debug.bg.state.cookie.overflow", "cookie is too big", e.LogLevel.INFO, {
                        size: a,
                        biggestCookie: b
                    })
                };
                this.externalChangePlan = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.api.external.changePlan", "plan changed from editor", e.LogLevel.INFO)
                };
                this.externalChangeDialect = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.api.external.changeDialect", "dialect changed from editor", e.LogLevel.INFO)
                };
                this.externalChangeUser = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.api.external.changeUsed", "user changed from editor", e.LogLevel.INFO)
                };
                this.externalLogout = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.api.external.logout", "user logged out form editor", e.LogLevel.INFO)
                };
                this.externalEnableEmailPerception = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.api.external.enableEmailPerception", "user enabled email perception feature on the funnel", e.LogLevel.INFO)
                };
                this.bgPageStartFail = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.start.fail", "bg page start failed", e.LogLevel.ERROR, {
                        message: a,
                        stack: b
                    })
                };
                this.bgPageInitTimeout = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.state.start.timeout", "bg page init timeout", e.LogLevel.WARN, {
                        initTime: a
                    })
                };
                this.bgPageInitFail = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.state.init.fail", "bg page init failed", e.LogLevel.ERROR, {
                        initAttempts: a
                    })
                };
                this.extensionUpdated = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.state.updated", "extension updated", e.LogLevel.INFO, {
                        currentVersion: a,
                        previousVersion: b
                    })
                };
                this.extensionUpdateFail = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.state.update.fail", "extension update failed", e.LogLevel.INFO, {
                        previousVersion: a
                    })
                };
                this.cannotGetInstallSource = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.getSource.fail", "failed to get extension install source",
                        e.LogLevel.WARN)
                };
                this.extensionInstall = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.state.install", "extension installed", e.LogLevel.INFO, {
                        source: a
                    })
                };
                this.chromeForcedToUpdate = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.chrome.forcedToUpdate", "chrome forced update", e.LogLevel.INFO, {
                        newVersion: a
                    })
                };
                this.chromeContentScriptLoadError = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.chrome.cs.load.error", "content script execution error", e.LogLevel.WARN, {
                        message: a,
                        type: b
                    })
                };
                this.reloadNotificationShow = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.ui.notification.tabsReload.show", "extension reload notification shown",
                        e.LogLevel.WARN)
                };
                this.reloadNotificationClick = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.ui.notification.tabsReload.click", "reload notification clicked", e.LogLevel.INFO)
                };
                this.fetchUserFail = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.user.fetch.fail", "failed to update user", e.LogLevel.WARN, {
                        body: b,
                        statusCode: c,
                        reason: a
                    })
                };
                this.fetchMimicFail = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.user.mimic.fail", "mimic request failed", e.LogLevel.WARN, {
                        body: a,
                        statusCode: b
                    })
                };
                this.fetchCookieFail = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.cookie.fail", "could not get grauth from cookie",
                        e.LogLevel.WARN)
                };
                this.fetchSettingsFail = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.user.settings.fail", "could not get settings from auth", e.LogLevel.WARN, {
                        body: a,
                        statusCode: b
                    })
                };
                this.frequentCookieChanges = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("debug.cookie.onChange.error", "cookie change too frequent", e.LogLevel.INFO, {
                        canceled: a
                    })
                };
                this.initializePropFromDapi = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.state.dapi.prop.initialize", "set property from dapi", e.LogLevel.INFO, {
                        name: a
                    })
                };
                this.emailPerceptionPopupShow = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.emailPerception.popup.show",
                        "show email perception popup on gmail/inbox domain", e.LogLevel.INFO)
                };
                this.emailPerceptionPopupCancel = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.emailPerception.popup.cancel", "user canceled email perception popup on gmail/inbox", e.LogLevel.INFO)
                };
                this.emailPerceptiongButtonHover = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.emailPerception.gbutton.hover", "user hovered gButton and ask for feedback btn is shown on gmail/inbox", e.LogLevel.INFO)
                };
                this.onboardingPopupShow = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.onboarding.popup.show", "show onboarding popup to user after first time extension install",
                        e.LogLevel.INFO)
                };
                this.onboardingPopupCancel = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.onboarding.popup.cancel", "user canceled onboarding popup", e.LogLevel.INFO)
                };
                this.onboardingTutorialShow = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.onboarding.tutorial.show", "opened onboarding dialog after popup", e.LogLevel.INFO)
                };
                this.onboardingVideoLoaded = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.onboarding.tutorial.video.loaded", "load video data for onboarding tutorial", e.LogLevel.INFO)
                };
                this.saveEmailFeedbackError = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.emailfeedback.save.error", "failed to save email feedback",
                        e.LogLevel.INFO, {
                            body: a
                        })
                };
                this.incognitoInit = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.incognito.init", "extension initialized in incognito mode", e.LogLevel.INFO)
                };
                this.disabledCookiesInit = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.cookie.disabled", "extension initialized with disabled cookies", e.LogLevel.INFO)
                };
                this.proxyInit = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._sendWithProbability(.05, "proxy.init", "proxy script initialized", e.LogLevel.INFO)
                };
                this.proxyPortDisconnected = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._sendWithProbability(.05, "proxy.disconnect", "proxy port disconnected", e.LogLevel.INFO, {
                        port: a,
                        error: b
                    })
                };
                this.unhandledBgPageException = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.unhandledException", "unhandled exception on background page", e.LogLevel.ERROR, {
                        message: a.error ? a.error.message : a.message
                    })
                };
                this.unhandledBgPageRejection = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.unhandledRejection", "unhandled promise rejection on background page", e.LogLevel.ERROR, {
                        message: null != a.reason ? "string" == typeof a.reason ? a.reason : a.reason.message : void 0
                    })
                };
                this.storageMigrationSucceeded = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.storageMigration.success",
                        "storage migration succeeded", e.LogLevel.INFO, {})
                };
                this.storageMigrationFailed = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("bg.storageMigration.failure", "storage migration failed", e.LogLevel.ERROR, {
                        message: a && a.message
                    })
                };
                this.cardShowAction = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._sendWithProbability(.1, "cs.editor.card.show", "show card action", e.LogLevel.INFO)
                };
                this.cardHideAction = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._sendWithProbability(.1, "cs.editor.card.hide", "hide card action", e.LogLevel.INFO)
                };
                this.cardReplacementAction = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._sendWithProbability(.1, "cs.editor.card.replacement",
                        "click on the replacement in the card", e.LogLevel.INFO)
                };
                this.cardAddToDictAction = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._sendWithProbability(.1, "cs.editor.card.addToDict", "click add to dictionary button in the card", e.LogLevel.INFO)
                };
                this.cardIgnoreAction = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._sendWithProbability(.1, "cs.editor.card.ignore", "click ignore button in the card", e.LogLevel.INFO)
                };
                this.synonymCardShowAction = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._sendWithProbability(.1, "cs.editor.synonym.show", "show synonymous card action", e.LogLevel.INFO, {
                        notFoundCard: a
                    })
                };
                this.synonymCardHideAction =
                    function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        g._sendWithProbability(.1, "cs.editor.synonym.hide", "hide synonymous card action", e.LogLevel.INFO, {
                            notFoundCard: a
                        })
                    };
                this.synonymReplacementAction = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._sendWithProbability(.1, "cs.editor.synonym.replacement", "click on the replacement in the synonym", e.LogLevel.INFO)
                };
                this.dictCardShowAction = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._sendWithProbability(.1, "cs.editor.dict.show", "show dictionary card action", e.LogLevel.INFO)
                };
                this.dictCardHideAction = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._sendWithProbability(.1, "cs.editor.dict.hide",
                        "hide dictionary card action", e.LogLevel.INFO)
                };
                this.couldNotParseTransform = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._send("cs.cards.transforms.parse.error", "Could not parse transform in inline cards", e.LogLevel.WARN, {
                        transformHTML: a,
                        fallbackParseSuccessful: b
                    })
                };
                this.disabledTabLoad = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._sendUsage("usage.loadOnDisabledTab", "tab load event with disabled extension", e.LogLevel.INFO, {
                        domain: a,
                        accountType: b
                    })
                };
                this.disabledTabByUserLoad = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._sendUsage("usage.loadOnDisabledByUserTab", "tab load event with disabled by user extension",
                        e.LogLevel.INFO, {
                            domain: a,
                            accountType: b
                        })
                };
                this.initSession = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._sendUsage("usage.session.init", "init in the field", e.LogLevel.INFO, {
                        domain: a,
                        accountType: b,
                        fieldType: c,
                        fieldSupported: d
                    })
                };
                this.cardFirstInteraction = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    g._sendUsage("usage.card.interaction", "interaction with card in the field", e.LogLevel.INFO, {
                        domain: a,
                        accountType: b,
                        fieldType: c
                    })
                }
            }
            return (0, m["default"])(a, [{
                key: "_send",
                value: function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var e = void 0;
                    try {
                        e = (0, f["default"])(d)
                    } catch (q) {
                        e = "Failed to stringify event properties: '" +
                            q + "', '" + (q && q.message) + "'", console.warn(e, "for " + b + "@" + a)
                    }
                    try {
                        this._sendFelog(a, b, c, null != d ? {
                            json: e
                        } : void 0)
                    } catch (q) {
                        console.warn("Failed to send felog for " + b + "@" + a + ": '" + q + "', '" + (q && q.message) + "'")
                    }
                }
            }, {
                key: "_sendUsage",
                value: function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._sendFelogUsage(a, b, c, d)
                }
            }, {
                key: "_sendWithProbability",
                value: function(a, b, c, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a > Math.random() && this._send(b, c, d, e)
                }
            }, {
                key: "setUserId",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._setUserId(a)
                }
            }, {
                key: "setContainerId",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._setContainerId(a)
                }
            }, {
                key: "notificationShown",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._send("cs.notification.show", "show notification on the page", e.LogLevel.INFO, {
                        type: a
                    })
                }
            }, {
                key: "notificationHide",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    this._send("cs.notification.hide", "hide notification on the page", e.LogLevel.INFO, {
                        type: a
                    })
                }
            }]), a
        }();
        c.Telemetry = a
    }, {
        "./felog": 304,
        "babel-runtime/core-js/json/stringify": 22,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35
    }],
    311: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.tracker = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return window.tracker =
                window.tracker || {}, window.tracker
        }
    }, {}],
    312: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("emitter"),
            f = a("lodash"),
            k = a("dompurify"),
            m = a("lib/dom"),
            e = a("lib/util"),
            r = a("lib/wrap");
        c.createHtmlDom = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = f.where(G.matches.get(), {
                    inDom: !0
                });
                f.difference(d, a).forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return h(a)
                });
                d = !1;
                for (var e = 0; e < a.length; e++) {
                    var k = a[e];
                    k.replaced && (k._s = k.s, k._e = k.e);
                    k.inDom || (d = !0, l(k, a))
                }
                return d ? (c(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return g(a, b)
                    }), void J.invalidate()) :
                    (J.invalidate(), J.emit("rendered"))
            }

            function c(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = n();
                a();
                m.isFocused(A) && v(b) && p(b.pos)
            }

            function l(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    a._e - a._s > d._e - d._s && 0 < r.collision(a, d) && d.inDom && h(d)
                }
            }

            function g(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                r.render({
                    node: A,
                    matches: b,
                    createElement: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var d = D.createElement("g"),
                            e = G.getMatchClass(a, c || "");
                        return d.className = "gr_ gr_" + a.id + e + " " + (a.cls || ""), d.textContent = b, d.id = a.id.toString(), d.setAttribute("data-gr-id", a.id.toString()), d
                    },
                    isValidNode: a.isValidNode,
                    isValidMatchForNode: a.isValidMatchForNode,
                    type: "dom"
                });
                for (var d = 0; d < b.length; d++) {
                    var e = b[d];
                    e.inDom || G.matches.remove(e, !0)
                }
                J.emit("rendered")
            }

            function n() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = m.getDocSelection(D),
                    b = a.anchorNode || {};
                a = a.focusNode || {};
                return {
                    pos: y(),
                    aNode: b,
                    aNodeText: b.textContent,
                    aNodeParent: b.parentNode,
                    fNode: a,
                    fNodeText: a.textContent,
                    fNodeParent: a.parentNode
                }
            }

            function v(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = m.getDocSelection(D),
                    c = b.anchorNode || {};
                b = b.focusNode || {};
                return a.aNode !== c || a.aNodeText !== c.textContent || a.aNodeParent !== c.parentNode || a.fNode !== b || a.fNodeText !== b.textContent ||
                    a.fNodeParent !== b.parentNode
            }

            function p(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b = b || 10;
                var c = r.setCursorPos(A, a);
                return !1 === c && 1 >= b ? J.emit("badCursorPositionRetryFail") : !1 === c && 1 < a.s ? (J.emit("badCursorPosition"), p({
                    s: a.s - 1,
                    e: a.e - 1
                }, b - 1)) : void 0
            }

            function y() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return r.getCursorPos(A)
            }

            function z(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a._s = a.s, a._e = a.e, a.id = "tmp_id", a.cls = "gr_tmp_id", g([a]), [].slice.call(A.querySelectorAll(".gr_tmp_id"))
            }

            function h(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var c = r.getCursorPos(A), d = A.querySelectorAll(".gr_" + a.id), e = d.length, f = 0; f < e; f++)
                    if (b) {
                        var h = d[f].parentNode;
                        h && h.removeChild(d[f])
                    } else r.unwrap(d[f]);
                a.inDom = !1;
                m.isFocused(A) && r.setCursorPos(A, c)
            }

            function w(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a: {
                    var b = a[0],
                        c = "contains" in b ? "contains" : "compareDocumentPosition",
                        d = "contains" === c ? 1 : 16;b: for (; b.parentNode;) {
                        var e = a.length;
                        for (b = b.parentNode; e--;)
                            if ((b[c](a[e]) & d) !== d) continue b;
                        e = b;
                        break a
                    }
                    e = null
                }
                b = a;c = a.length;1 < c && (c = r.mergeNodes(a), b = [], b.push(c), c = b.length);
                for (a = 0; a < c; a++) {
                    d = b[a];
                    for (var f = d.parentNode, h = 0; f !== e && 1E3 > h;) {
                        var g = f;
                        f = f && f.parentNode;
                        r.unwrap(g);
                        h++
                    }
                    r.unwrap(d)
                }
            }

            function x(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                M &&
                    clearTimeout(M);
                var c = A.querySelectorAll("g[data-gr-id]"),
                    d = c.length,
                    e = [];
                r.markChildPos(A);
                for (var f = 0; f < d; f++) {
                    var h = c[f],
                        g = G.matches.byId(h.id);
                    e.push(h.id);
                    var k;
                    if (k = g) {
                        k = h.__pos;
                        var l = k + (h.textContent || "").length;
                        k = k >= g._s && l <= g._e
                    }
                    k ? (!g.inDom && a && (g.inDom = !0), !g.selected && m.hasClass(h, "sel") && m.removeClass(h, "sel"), h.className) || (k = G.getMatchClass(g, G.getText()), h.className = "gr_ gr_" + g.id + k + " " + (g.cls || "")) : (g = n(), r.unwrap(h), m.isFocused(A) && v(g) && p(g.pos))
                }
                a = G.getFiltered();
                c = !1;
                for (d = 0; d <
                    a.length; d++) f = a[d], -1 === e.indexOf(f.id) && (f.inDom = !1, c = !0);
                c && b(a, G.getText())
            }

            function B(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var b = 0, c = a.childNodes.length; b < c; ++b) {
                    var d = a.childNodes[b];
                    3 !== d.nodeType && 1 !== d.nodeType && H.push(d);
                    3 === d.nodeType && B(d)
                }
            }

            function C() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    B(A);
                    for (var a = 0; a < H.length; a++) {
                        var b = H[a];
                        b.parentNode && b.parentNode.removeChild(b)
                    }
                    0 < H.length && (A.normalize(), (a = A.firstChild) && a.parentNode && "" === (a.textContent || "").trim() && a.parentNode.removeChild(a), (a = A.lastChild) && a.parentNode && "" === (a.textContent ||
                        "").trim() && a.parentNode.removeChild(a), G.hardReset());
                    H = [];
                    J.emit("startInvalidateNode");
                    r.invalidateNode(A);
                    J.emit("endInvalidateNode")
                }, 0)
            }
            var G = a.editor,
                A = a.el,
                D = A.ownerDocument,
                J = d({
                    render: b,
                    remove: h,
                    renderRange: z,
                    removeBySelector: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var b = r.getCursorPos(A);
                        a = A.querySelectorAll(a);
                        for (var c = a.length, d = 0; d < c; d++) r.unwrap(a[d]);
                        m.isFocused(A) && r.setCursorPos(A, b)
                    },
                    replace: function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        l(a, G.getFiltered());
                        var d = z({
                            s: a.s,
                            e: a.e
                        });
                        1 < d.length && w(d);
                        d = z({
                            s: a.s,
                            e: a.e
                        })[0];
                        d.textContent = b;
                        d.id = a.id.toString();
                        a.replaced = !c;
                        a.inDom = !c;
                        d.className = "gr_ gr_" + a.id + G.getMatchClass(a, G.getText()) + " " + (a.cls || "");
                        d.setAttribute("data-gr-id", a.id.toString());
                        c && r.unwrap(d)
                    },
                    getCleanHtml: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (var a = A.cloneNode(!0), b = a.querySelectorAll(".gr-alert"), c = 0; c < b.length; c++) r.unwrap(b[c]);
                        return a.innerHTML
                    },
                    cleanHTML: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (var a = A.querySelectorAll(".gr-alert"), b = 0; b < a.length; b++) r.unwrap(a[b])
                    },
                    getHtml: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return A.innerHTML
                    },
                    start: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        M = setTimeout(x, L);
                        G.on("paste",
                            function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                J.emit("startInvalidateNode");
                                r.invalidateNode(A);
                                J.emit("endInvalidateNode");
                                J.invalidate()
                            })
                    },
                    stop: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        M && clearTimeout(M)
                    },
                    select: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a = D.querySelectorAll(".gr_" + a.id);
                        for (var b = a.length, c = 0; c < b; c++) m.addClass(a[c], "sel")
                    },
                    deselect: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a = D.querySelectorAll(".gr_" + a.id);
                        for (var b = a.length, c = 0; c < b; c++) m.removeClass(a[c], "sel")
                    },
                    getText: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a && (J.emit("startInvalidateNode"), r.invalidateNode(A), J.emit("endInvalidateNode")), r.getText(A).replace(e.NBSP_RE,
                            " ")
                    },
                    setText: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        A.innerHTML = e.br(f.escape(a))
                    },
                    setHtml: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        A.innerHTML = k.sanitize(a)
                    },
                    changeSelection: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = m.getDocSelection(D),
                            b = a.anchorNode;
                        if (b) {
                            var c = b.parentNode;
                            if (!(1 < a.toString().length)) return m.hasClass(c, "gr_") ? (c.parentNode && m.hasClass(c.parentNode, "gr_spell") && (c = c.parentNode), G.selectById(c.id)) : (c = b.nextElementSibling) && b.__node_text && m.hasClass(c, "gr_tiny") && b.__node_text.length === a.focusOffset ? G.selectById(c.id) : void(G.selectedMatch && G.selectedMatch.deselect())
                        }
                    },
                    getCursor: y,
                    setCursor: p,
                    unwrapToCommonParent: w,
                    invalidate: x
                });
            G && G.on && G.on("immediatepaste", C);
            var L = 1E3,
                M = void 0,
                H = [];
            return J
        }
    }, {
        dompurify: "dompurify",
        emitter: "emitter",
        "lib/dom": 215,
        "lib/util": 322,
        "lib/wrap": 324,
        lodash: "lodash"
    }],
    313: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("lib/wrap"),
            f = a("lib/dom"),
            k = a("lib/util");
        c.HtmlTypingLimiter = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a && a.parentNode && (a.firstChild && "BR" === a.firstChild.tagName && f.insertBefore(a.firstChild,
                        a), a.lastChild && "BR" === a.lastChild.tagName && f.insertAfter(a.lastChild, a), d.invalidateNode(a))
                }, 0)
            }
            var c = a.inputListener,
                n = a.el,
                m = n.ownerDocument,
                u = void 0;
            c.on("keypress", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var e = f.getDocSelection(m);
                if (!(1 < e.toString().length)) {
                    var l = e.anchorNode;
                    d.invalidateNode(l);
                    var r = a.originalEvent,
                        p = a.commandKeyPressed,
                        t = a.navKey;
                    a = l.parentNode;
                    if (!(r.metaKey || r.ctrlKey || (p && (u = null), !l || !l.nodeType || 3 !== l.nodeType || t || p && 13 !== k.keyCode(r) && 32 !== k.keyCode(r)) || (u = null, p = l.textContent || "", !f.hasClass(a,
                            "gr_") || p.length !== e.anchorOffset && 0 !== e.anchorOffset))) {
                        if (13 === k.keyCode(r)) return b(l.parentNode);
                        l = String.fromCharCode(k.keyCode(r));
                        r.shiftKey || (l = l.toLowerCase());
                        l = m.createTextNode(l);
                        " " === l.textContent && (l.textContent = String.fromCharCode(160));
                        0 === e.anchorOffset ? f.insertBefore(l, a) : f.insertAfter(l, a);
                        u = d.getPosInText(n, l, 1);
                        d.setRange({
                            node: l,
                            offset: 1
                        });
                        r.preventDefault();
                        d.invalidateNode(l);
                        setTimeout(c.oninput, 0)
                    }
                }
            });
            c.on("keydown", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a = a.originalEvent;
                if ((a.metaKey || a.ctrlKey) &&
                    90 === k.keyCode(a) && null !== u) {
                    var b = d.getCursorPos(n),
                        e = d.getNodeByTextPos(n, u),
                        f = d.getNodeText(e);
                    e.node.textContent = f.substr(0, e.offset - 1) + f.substr(e.offset);
                    d.invalidateNode(e.node);
                    u = null;
                    b.s--;
                    b.e--;
                    d.setCursorPos(n, b);
                    a.preventDefault();
                    setTimeout(c.oninput, 0)
                }
            });
            c.on("input", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = f.getDocSelection(m);
                a.anchorNode && d.invalidateNode(a.anchorNode)
            })
        }
    }, {
        "lib/dom": 215,
        "lib/util": 322,
        "lib/wrap": 324
    }],
    314: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/core-js/object/assign")) && b.__esModule ?
            b : {
                "default": b
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = a("emitter"),
            k = a("lodash"),
            m = a("./matches"),
            e = a("./input-listener"),
            r = a("./html-typing-limiter"),
            n = a("./html-dom"),
            t = a("./textarea-dom"),
            u = a("lib/util"),
            l = a("lib/dom");
        c.createEditor = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                Z.start();
                N.start();
                a.value && z(a.value);
                F.update(E.currentText);
                B()
            }

            function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                ia = (a = a.length > da) ? oa : ja;
                V = a
            }

            function q() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                E.currentText = N.getText(!0);
                E.emit("afterReplace")
            }

            function z(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                S.get().forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    a.inDom = !1
                });
                F.update(a);
                F.updateMatchesToCurrentRevision(E.matches.get());
                S.update(E.currentText, a);
                N.setText(a);
                E.isHtmlGhost ? setTimeout(q, 100) : q()
            }

            function h(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return N.setCursor(a)
            }

            function w() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return N.getCursor()
            }

            function x() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                E.latestCursor = w()
            }

            function B() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                F.send()
            }

            function C() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (E._currentText !== (fa ? E.el.value : E.el.innerHTML)) {
                    E._currentText = fa ? E.el.value : E.el.innerHTML;
                    var a = N.getText(void 0);
                    g(a);
                    var b = {
                        text: a,
                        cancel: !1
                    };
                    if (E.emit("beforeUpdate", b), b.cancel) return C();
                    F.update(a);
                    F.updateMatchesToCurrentRevision(E.matches.get());
                    S.update(E.currentText, a);
                    E.currentText = a
                }
            }

            function G(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = !1;
                fa || (c = l.getDocSelection(U), c = c.anchorNode && l.hasClass(c.anchorNode.parentNode, "gr_"));
                (fa || b || c || E.isHtmlGhost) && (A(), x(), E.emit("input", a))
            }

            function A() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (!T) {
                    C();
                    var a = H();
                    N.render(a, E.currentText);
                    E.emit("saveDoc", E.currentText)
                }
            }

            function D() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                ea = setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    X.length && Date.now() - W > Y && J();
                    X.length ? D() : ea = void 0
                }, 50)
            }

            function J() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (Z.isUserTyping()) return clearTimeout(Q), void(Q = setTimeout(J, 200));
                if (clearTimeout(Q), X.length) {
                    var a =
                        X.shift();
                    a ? L(a) : J()
                }
            }

            function L(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = N.getText(void 0);
                if (E.currentText = c, F.update(c), F.updateMatch(a), -1 < E._removedByServer.indexOf(a.id)) return console.log("skip because it is removed by server");
                !1 !== E.processMatch(a, c) && E.tryToAdd(a, c) && (O(a), b ? A() : ia())
            }

            function M() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return S.get()
            }

            function H() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return E.matchFilter(M())
            }

            function O(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = u.guid(),
                    c = Date.now();
                k.extend(a, {
                    uid: b,
                    ts: c,
                    replace: function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        E.emit("beforeReplace");
                        var d = N.getText(void 0),
                            e = b.length - a.oldVal.length;
                        E.latestCursor.s <
                            a.s && (e = 0);
                        E.beforeReplace(a, e, b);
                        N.remove(a);
                        N.replace(a, b, c);
                        S.replace(a, b, c, d);
                        R(a, c ? "undoed" : "accepted");
                        E.currentText = N.getText(void 0);
                        a.rev++;
                        h({
                            s: a._e,
                            e: a._e
                        });
                        fa || (aa.focus(), h({
                            s: a._e,
                            e: a._e
                        }));
                        A();
                        B();
                        E.emit("afterReplace", a);
                        c || (E.emit("fix", a), E.emit("tracking", {
                            event: "matchAcceptedCard",
                            matches: a
                        }))
                    },
                    undo: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var b = a.v;
                        a.replace(b, !0);
                        a.undoed = !0;
                        a.beforeReplace = b;
                        S.removeIntersectedWithReplace(a) && A();
                        E.emit("undo");
                        E.emit("tracking", {
                            event: "matchUndo",
                            matches: a
                        })
                    },
                    addToDict: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        S.forceRemove(a);
                        F.addToDictionary(a);
                        var b = S.removeSimilar(a);
                        b.push(a);
                        A();
                        E.emit("fix");
                        E.emit("tracking", {
                            event: "matchAddToDict",
                            matches: b
                        })
                    },
                    acknowledged: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        S.forceRemove(a);
                        F.acknowledged(a);
                        S.removeByPID(a);
                        A();
                        E.emit("fix");
                        E.emit("tracking", {
                            event: "acknowledged",
                            matches: a
                        })
                    },
                    ignore: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        S.forceRemove(a);
                        F.ignore(a);
                        S.removeByPID(a);
                        A();
                        E.emit("fix");
                        E.emit("tracking", {
                            event: "matchIgnored",
                            matches: a
                        })
                    },
                    ignoreAll: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        S.forceRemove(a);
                        S.removeSimilar(a);
                        F.ignoreAll(a);
                        var b = S.removeSimilar(a);
                        b.push(a);
                        E.emit("tracking", {
                            event: "matchIgnoredAll",
                            matches: b
                        });
                        A()
                    },
                    remove: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return K(a)
                    },
                    getEl: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return U.getElementById(String(a.id))
                    },
                    select: function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.selected || (a.selected = !0, b || (E.emit("selectedMatch", a), R(a, "looked")), N.select(a), E.selectedMatch = a)
                    },
                    deselect: function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.selected && (a.selected = !1, b || E.emit("deselectedMatch", a), N.deselect(a), E.selectedMatch = void 0)
                    }
                });
                E.emit("matchExtend", a)
            }

            function K(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                S.remove(a, !0);
                N.remove(a);
                E.emit("rendered")
            }

            function R(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                console.log("FEEDBACK",
                    a.value, b);
                F.feedback(a, b)
            }

            function P() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                S.get().forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return N.remove(a)
                });
                S.clear();
                E._removedByServer = [];
                E._currentText = "";
                A()
            }
            var aa = a.el,
                U = aa.ownerDocument,
                F = a.api,
                Y = 500,
                da = 3E3,
                V = !1;
            k.isUndefined(a.useBufferForAddingMatches) || (V = a.useBufferForAddingMatches);
            var T = !1,
                E = f({
                    el: aa,
                    getText: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a ? N.getText(void 0) : E.currentText
                    },
                    setText: z,
                    setCursor: h,
                    getCursor: w,
                    saveCursor: x,
                    restoreCursor: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        h(E.latestCursor)
                    },
                    addMethodsToMatch: O,
                    addMatches: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (a && 0 !==
                            a.length) {
                            for (var b = N.getText(void 0), c = 0; c < a.length; c++) {
                                var d = a[c];
                                d.v === b.substring(d.s, d.e) && (d.rendered = !1, O(d), S.add(d))
                            }
                            N.invalidate(!0);
                            A()
                        }
                    },
                    tryToAdd: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return S.tryToAdd(a, b)
                    },
                    render: A,
                    check: B,
                    getMatches: M,
                    getFiltered: H,
                    getSelection: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = w(),
                            b = N.getText(void 0);
                        return {
                            value: b.substring(a.s, a.e),
                            s: a.s,
                            e: a.e,
                            text: b
                        }
                    },
                    close: close,
                    clearData: P,
                    hardReset: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a || F.reset();
                        P();
                        C();
                        F.start();
                        B();
                        E.emit("rendered")
                    },
                    latestCursor: {
                        s: 0,
                        e: 0
                    },
                    exit: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        T = !0;
                        Z.stop();
                        N.stop();
                        l.unlisten(aa, "click", x);
                        E.emit("exit")
                    },
                    waitTime: Y,
                    matchFilter: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a
                    },
                    processMatch: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a._s = a._s || a.s, a._e = a._e || a.e, a.sd = a._s - a.s, a.ed = a._e - a.e, !0
                    },
                    beforeReplace: function(a, b, c) {},
                    getMatchClass: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return ""
                    },
                    processRemove: u._f,
                    matchRemoved: u._f,
                    extendMatch: u._f,
                    matchesEqual: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return !1
                    },
                    canAddRemovedMatch: u._F,
                    canShiftMatchEnd: u._F,
                    selectById: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        (a = E.matches.byId(a)) && E.selectedMatch && E.selectedMatch !== a && E.selectedMatch.deselect();
                        a && a.select()
                    },
                    skipInputEvents: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        Z.skipInputEvents(a)
                    },
                    run: c,
                    api: F,
                    _removedByServer: [],
                    matches: {},
                    currentText: "",
                    _currentText: "",
                    isHtmlGhost: !1
                }),
                W = 0,
                ea = void 0,
                S = m.createMatches(E),
                X = S.matchesBuffer;
            E.matches = S;
            var fa = "textarea" === a.editorType.value;
            E.isTextarea = fa;
            var N = void 0,
                Q = void 0;
            b = (0, d["default"])({}, a, b, {
                editor: E
            });
            N = a.dom ? a.dom(b) : "contenteditable" === a.editorType.value ? n.createHtmlDom(b) : fa ? t.createTextareaDom(b) : n.createHtmlDom(b);
            E.dom = N;
            E.currentText = N.getText(void 0) || "";
            var oa =
                k.debounce(A, 1E3, {
                    maxWait: 5E3
                });
            b = k.debounce(A, 200, {
                maxWait: 1E3
            });
            var ja = window.requestIdleCallback ? function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return window.requestIdleCallback(A)
                } : b,
                ia = void 0;
            g(E.currentText);
            S.on("remove", K);
            S.on("hasAvailableRenderDeletedMatch", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (a && X.length) {
                    var b = a.match;
                    a = a.position;
                    X[a] && X[a].id === b.id && (X[a] = !1, L(b, !0))
                }
            });
            var Z = e.createInputListener({
                el: aa,
                editor: E
            });
            return E.inputListener = Z, "contenteditable" === a.editorType.value && (r.HtmlTypingLimiter({
                inputListener: Z,
                el: aa
            }), E.setHtml = function(a) {
                N.setHtml(a);
                q()
            }, E.getHtml = N.getHtml), Z.on("changed", function() {
                fa || G(void 0, !0);
                B();
                E.emit("change", void 0)
            }), Z.on("input", G), Z.on("keypress", function(a) {
                W = Date.now();
                32 === a.originalEvent.charCode && J()
            }), Z.on("selectionChanged", function() {
                N.changeSelection()
            }), l.listen(aa, "click", x), Z.delegate(E, "keydown"), Z.delegate(E, "paste"), Z.delegate(E, "immediatepaste"), F.delegate(E, "sending"), F.delegate(E, "finish"), F.on("add", function(a) {
                V ? (X.push(a), ea || D()) : L(a);
                E.emit("tracking", {
                    event: "matchFound",
                    matches: a
                })
            }), F.on("start",
                function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    E.sid = a.sid;
                    E.emit("saveSid", E.sid)
                }), N.delegate(E, "rendered"), N.delegate(E, "startInvalidateNode"), N.delegate(E, "endInvalidateNode"), a.autorun && c(), E
        }
    }, {
        "./html-dom": 312,
        "./html-typing-limiter": 313,
        "./input-listener": 315,
        "./matches": 317,
        "./textarea-dom": 319,
        "babel-runtime/core-js/object/assign": 24,
        emitter: "emitter",
        "lib/dom": 215,
        "lib/util": 322,
        lodash: "lodash"
    }],
    315: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("emitter"),
            f = a("lib/dom"),
            k = a("lib/util"),
            m = a("./watcher");
        c.createInputListener = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return C ? x.getText(!0) : x.el.innerHTML
            }

            function c(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                H.emit("typed", a);
                O || (L = Date.now(), H.emit("input"))
            }

            function e() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                H.ignorePaste || (H.emit("immediatepaste"), O || setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    u(!0);
                    H.emit("paste");
                    H.emit("input")
                }, 10))
            }

            function u() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = 0 < arguments.length && void 0 !== arguments[0] && arguments[0];
                if (!O) {
                    var c = b(),
                        d = z(),
                        e = J.trim() !== c.trim();
                    ("" !== c || e) && (e && D && (a = !0, D = !1), (e && !d || a) && (H.emit("changed"), J = c, M = J))
                }
            }

            function l() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                H.emit("selectionChanged")
            }

            function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                O || (window.event && !window.event.customWritted || (a.customWritted = !0, window.event = a), l())
            }

            function q(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (!O) return -1 !== [37, 38, 39, 40].indexOf(k.keyCode(a)) ? void l() : void H.emit("keyup")
            }

            function v(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                O || (D = -1 !== [32, 190, 188, 186, 59, 57, 48, 191, 49, 13, 8].indexOf(k.keyCode(a)), H.emit("keydown", {
                    originalEvent: a,
                    commandKeyPressed: D,
                    listener: H
                }))
            }

            function p(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (!O) {
                    var b = -1 !== [37, 38, 39, 40, 17, 18, 91, 8, 16, 20, 9].indexOf(k.keyCode(a));
                    H.emit("keypress", {
                        originalEvent: a,
                        navKey: b,
                        commandKeyPressed: D,
                        listener: H
                    })
                }
            }

            function y() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                O || (L = Date.now() - 1E5, u())
            }

            function z() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return !(Date.now() - L > G)
            }

            function h() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                A = setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = b();
                    a !== M && (L = Date.now(), M = a, H.emit("input"));
                    u();
                    h()
                }, 200)
            }
            var w = a.el,
                x = a.editor,
                B = w.ownerDocument,
                C = x.isTextarea,
                G = 4E3,
                A = void 0,
                D = void 0,
                J = b(),
                L = Date.now(),
                M = "",
                H = d({
                    start: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        f.listen(w, "input", c);
                        f.listen(w, "click", g);
                        f.listen(w, "keyup", q);
                        f.listen(w, "keypress", p);
                        f.listen(w, "keydown", v);
                        f.listen(w, "paste", e);
                        f.listen(B, "mousedown", y);
                        m.watch(w, e);
                        h()
                    },
                    stop: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        f.unlisten(w,
                            "input", c);
                        f.unlisten(w, "click", g);
                        f.unlisten(w, "keyup", q);
                        f.unlisten(w, "keypress", p);
                        f.unlisten(w, "keydown", v);
                        f.unlisten(w, "paste", e);
                        f.unlisten(B, "mousedown", y);
                        m.unwatch(w, e);
                        A && clearTimeout(A)
                    },
                    oninput: c,
                    isUserTyping: z,
                    skipInputEvents: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        O = void 0 === a
                    },
                    ignorePaste: void 0
                }),
                O = !1;
            return H
        }
    }, {
        "./watcher": 320,
        emitter: "emitter",
        "lib/dom": 215,
        "lib/util": 322
    }],
    316: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("emitter"),
            f = a("lodash"),
            k = a("@grammarly-npm/textdiff"),
            m = a("lib/util");
        c.createMatchUpdater = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(b, c, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (b.skipUpdatePos) return !1;
                f.isUndefined(d) && (d = b.s);
                f.isUndefined(e) && (e = b.e);
                var g = c.substring(d, e),
                    k = b.value;
                return g !== k ? (console.log("%c removed '%s' '%s'", "color:rgba(239, 110, 105, 0.8)", g, k), b.removed = !0, !0) : a.matchRemoved(b, c, d, e)
            }

            function c(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (2 > a.siblingValue.length) return !1;
                if (a.siblingValue === b.substring(a._s - 1, a._e + 1)) return !0;
                for (var c = -10; 10 > c; c++)
                    if (b.substring(a._s + c - 1, a._e + c + 1) === a.siblingValue) return a._s +=
                        c, a._e += c, a.replaced || (a.s = a._s - a.sd, a.e = a._e - a.ed), !0;
                return !1
            }

            function e(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (b) {
                    for (var d = 0; d < b.length; d++) {
                        var e = b[d];
                        if (a.matchesEqual(e, c, e.s - 3 >= c.s && e.s + 3 <= c.e || e.e >= c.s && e.e <= c.e)) return e
                    }
                    return !1
                }
            }

            function u(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var d = [], e = 0; e < a.length; e++) {
                    var f = a[e] - e,
                        h = b[f];
                    b.splice(f, 1);
                    d.push(h)
                }
                for (a = 0; a < d.length; a++) c && l.emit("remove", d[a])
            }
            var l = d({
                remove: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (var c = 0; c < b.length; c++) b[c].id === a.id && (b.splice(c, 1), c--)
                },
                removeNotExisting: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (b) {
                        for (var c = [], d = 0; d <
                            b.length; d++) {
                            var e = b[d],
                                f = void 0,
                                h = a.substring(e.s, e.e);
                            e.skipUpdatePos && h || (f = e.value !== h, f && c.push(d))
                        }
                        0 < c.length && u(c, b, !0)
                    }
                },
                matchRemoved: b,
                extend: function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    c = c.concat();
                    for (var d = 0; d < c.length; d++) {
                        var f = c[d],
                            g = e(b, f);
                        g ? (a.extendMatch(g, f), console.log("%c SKIP MATCH it already exists", "color:rgba(239, 110, 105, 0.8)", f, g)) : b.push(f)
                    }
                },
                extendWithoutAdding: function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    (b = e(b, c)) && a.extendMatch(b, c)
                },
                updatePos: function(d, e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var g = k.diffPos(m.trimRight(d), m.trimRight(e));
                    d = [];
                    if (-1 !== g.s) {
                        var l =
                            g.s,
                            n = g.delta;
                        g = [];
                        for (var h = 0; h < f.length; h++) {
                            var r = f[h],
                                q = r.s,
                                t = r.e;
                            if ((q >= l || 0 !== n && 0 === r.s && 0 === l) && (q += n, t += n), r.value !== e.substring(q, t) || 0 > q || r._value !== e.substring(q + r.sd, t + r.ed) || r.removed || b(r, e, q, t)) {
                                if (q = a.processRemove(r)) {
                                    if (q.next) continue;
                                    if (q.add && (g = g.concat(q.add)), q.remove) {
                                        d.push(h);
                                        r.removed = !0;
                                        continue
                                    }
                                }
                                c(r, e) || (d.push(h), r.removed = !0)
                            } else r.s >= l && (0 === n && r.value !== e.substring(q, t) ? (d.push(h), r.removed = !0) : (r.s = q, r.e = t, r.replaced ? (r._s = r.s, r._e = r.e) : (r._s = r.s + r.sd, r._e = r.e +
                                r.ed)))
                        }
                        if (0 < d.length && u(d, f, !0), 0 < g.length)
                            for (e = 0; e < g.length; e++) f.push(g[e])
                    }
                },
                locateMatch: c,
                tryToAddRemoved: function(a, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var e = [],
                        f;
                    for (f in d) {
                        var g = d[f];
                        g.siblingValue !== a.substring(g._s - 1, g._e + 1) || b(g, a) || (delete d[f], c.push(g), e.push(g))
                    }
                    return e
                }
            });
            return l
        }
    }, {
        "@grammarly-npm/textdiff": 16,
        emitter: "emitter",
        "lib/util": 322,
        lodash: "lodash"
    }],
    317: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("emitter"),
            f = a("lodash"),
            k = a("./match-updater");
        c.createMatches = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a,
                b) {
                b || z.emit("remove", a);
                y.remove(a, q);
                c(a)
            }

            function c(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (var b = 0; b < p.length; b++) p[b] && p[b].id === a && (p[b] = !1)
                }
                if (a && a.id) {
                    var c = a.id;
                    if (f.isArray(c))
                        for (var d = 0; d < c.length; d++) b(c[d]), n(a);
                    else b(c), n(a)
                }
            }

            function n(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (p.length)
                    for (var b = 0; b < p.length; b++) {
                        var c = p[b];
                        c && c.pid === a.pid && c.highlightBegin === a.highlightBegin && c.highlightEnd === a.highlightEnd && z.emit("hasAvailableRenderDeletedMatch", {
                            match: c,
                            position: b
                        })
                    }
            }

            function m(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                y.updatePos(a, b, c);
                z.emit("updatePos", {
                    matches: c,
                    text: b
                })
            }

            function u(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                y.extend(q, [a])
            }

            function l(b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var e = 0; e < q.length; e++) {
                    var f = q[e];
                    b !== f && (b.e < f.s && (f.s += c, f.e += c, f._s += c, f._e += c), b.s >= f.s && b.e <= f.e && a.canShiftMatchEnd(b) ? (f.e += c, f._e += c, f.value = d.substring(f.s, f.e), f._value = d.substring(f._s, f._e), f.oldVal = f.value) : b.s >= f.s && b.e > f.e && (f.value = d.substring(f.s, f.e), f._value = d.substring(f._s, f._e), f.oldVal = f.value), f.rev++)
                }
            }

            function g(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (a.s <= b.s && a.e >= b.s || a.s >= b.s && a.e <= b.e || a.s <= b.e && a.e >= b.e) && b
            }
            var q = [],
                v = {},
                p = [],
                y = k.createMatchUpdater(a),
                z = d({
                    matchUpdater: y,
                    add: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        q.push(a)
                    },
                    tryToAdd: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.value = b.substring(a.s, a.e);
                        a.skipUpdatePos && (a.value = b.substring(a.s, a.e), a._value = b.substring(a._s, a._e), a.v = a.value);
                        var c;
                        a: {
                            for (c = 0; c < q.length; c++) {
                                var d = q[c],
                                    e = a.s === d.s && a.e === d.e;
                                if (d.r && d.ignored && e) {
                                    c = !0;
                                    break a
                                }
                            }
                            c = !1
                        }
                        if (c) return console.log("match exist", a), !1;
                        c = b.substring(a._s, a._e);
                        d = b.substring(a.s, a.e);
                        return a.siblingValue = b.substring(a._s - 1, a._e + 1), a.skipUpdatePos || (a.removed = c !== a._value || d !== a.v, a.removed &&
                            (console.log("%c match value does not correspondents to the value in a text", "color:rgba(239, 110, 105, 0.8)", "'" + a.v + "' vs '" + d + "'"), z.emit("lost_match_value_in_text", a))), a.removed ? (console.log("%c lost match", "color:rgba(239, 110, 105, 0.8)", a), !1) : (u(a), !0)
                    },
                    isIntersected: g,
                    removeIntersectedWithReplace: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (var c = !1, d = 0; d < q.length; d++) {
                            var e = q[d];
                            1 < e.value.split(" ").length || a === e || (e = g(a, e)) && (b(e), c = !0)
                        }
                        return c
                    },
                    update: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        m(a, b, q);
                        y.removeNotExisting(b, q);
                        b && y.tryToAddRemoved(b,
                            q, v)
                    },
                    forceRemove: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (var d = 0; d < q.length; d++) q[d].id === a.id && b(q[d]);
                        c(a);
                        delete v[a.id]
                    },
                    byId: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return f.find(q, {
                            id: a
                        })
                    },
                    removeSimilar: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a = a.oldVal;
                        for (var c = [], d = q.length; d--;) {
                            var e = q[d];
                            e.oldVal === a && (e.addedToDict = !0, b(e), c.push(e))
                        }
                        return c
                    },
                    removeByPID: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (var c = a.pid, d = [], e = q.length; e--;) {
                            var f = q[e];
                            f.pid === c && "" !== f.value && a.value === f.value && (b(f), d.push(f))
                        }
                        return d
                    },
                    updatePos: m,
                    shift: l,
                    extend: u,
                    remove: b,
                    clear: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        q = [];
                        v = {}
                    },
                    locateMatch: function(a,
                        b) {
                        return y.locateMatch(a, b)
                    },
                    get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return q || (q = []), q
                    },
                    matchesBuffer: p,
                    matchesRmBuffer: [],
                    getRemoved: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return v
                    },
                    addRemoved: function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        b.removed = !1;
                        b.rendered = !1;
                        a.canAddRemovedMatch(b) || (v[b.id] = b)
                    },
                    replace: function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        f.isUndefined(b) && (b = a.rFirst);
                        d = d.substring(0, a.s) + b + d.substring(a.e, d.length);
                        l(a, b.length - a.oldVal.length, d);
                        a.e = a.s + b.length;
                        c ? (a._s = a.s + a.sd, a._e = a.e + a.ed) : (a._s = a.s, a._e = a.e);
                        a.undoed = !1;
                        a.replaced = !c;
                        a.beforeReplace = a.v;
                        a.oldVal = b;
                        a.value = b;
                        a._value =
                            d.substring(a._s, a._e)
                    },
                    rmMatchesBufferCache: c
                });
            return y.delegate(z, "remove"), z
        }
    }, {
        "./match-updater": 316,
        emitter: "emitter",
        lodash: "lodash"
    }],
    318: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/core-js/object/assign")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = a("@grammarly-npm/changesets"),
            k = a("emitter"),
            m = a("lodash"),
            e = a("lib/dom"),
            r = a("lib/util");
        c.createTextSplit = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var c = f.cs([]), d = [], e = void 0, g = void 0, k = 0; k < b.length; k++) e = b[k],
                    "=" !== e.type && e.len && (e.pos < a.pos || e.pos > a.pos + a.len || (g = e.extend({
                        tlen: a.len,
                        pos: e.pos - a.pos
                    }), "+" === e.type && (c.push(e), d.forEach(function(a) {
                        return a.pos += e.len
                    })), "-" === e.type && (g.text = g.text.substr(0, a.pos + a.len - e.pos), g.len = g.text.length, e.text = e.text.substr(g.len), e.len = e.text.length, c.push(g), d.push(e)), a.text = g.apply(a.text), a.len = a.text.length));
                return c
            }

            function c(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = document.createElement("gr_block");
                return c.style.display = "inline", (0, d["default"])(f.op({
                    type: "+",
                    tlen: 0,
                    pos: a,
                    text: b,
                    accessory: 0
                }), {
                    el: c,
                    textUp: !0,
                    posUp: !0,
                    matchesUp: !1,
                    matches: []
                })
            }
            var l = a.node,
                g = [],
                n = a.blockSize || 1E3,
                v = a.maxBlockSize || 2E3,
                p = "",
                y = k({
                    update: function(a, d, k) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var h = f.diff(p, a),
                            q = void 0;
                        g.length || (q = c(0, ""), l.appendChild(q.el), g.push(q));
                        h = h.sequencify();
                        var u = f.cs([]);
                        for (var t = 0; t < g.length; t++) {
                            q = g[t];
                            var A = q.text;
                            var w = q.pos;
                            for (var z = 0; z < u.length; z++) q.pos = q.transformAgainst(u[z]).pos;
                            if (u.push(b(q, h)), q.len)
                                for (q.text !== A && (q.textUp = !0), q.text === A && q.pos === w || (q.posUp = !0); q.len > v;) A = c(q.pos + n,
                                    q.text.substr(n)), q.text = q.text.substr(0, n), q.len = q.text.length, e.insertAfter(A.el, q.el), g.splice(t + 1, 0, A), t++, q = A;
                            else g.splice(t, 1), l.removeChild(q.el), t--
                        }
                        h = void 0;
                        for (t = 0; t < g.length; t++) {
                            q = g[t];
                            u = [];
                            for (z = 0; z < d.length; z++) A = d[z], w = Math.min(q.pos + q.len, A.e) - Math.max(q.pos, A.s), 0 > w || (h = m.extend({}, A), h.orig = A, h.s = Math.max(0, A.s - q.pos), h.value = h.value.substr(Math.max(0, q.pos - A.s), w), h.e = h.s + h.value.length, h._s = h.s, h._e = h.e, A.replaced || (h._s = h.s + A.sd, h._e = h.e + A.ed), 0 > h._s || 0 > h._e || u.push(h));
                            if (q.matchesUp = !0, q.matches.length || u.length)
                                if (q.matches.length === u.length)
                                    for (q.matchesUp = !1, A = 0; A < q.matches.length; A++) {
                                        if (q.matches[A].orig !== u[A].orig || q.matches[A]._s !== u[A]._s || q.matches[A]._e !== u[A]._e) {
                                            q.matchesUp = !0;
                                            break
                                        }
                                    } else q.matchesUp = !0;
                                else q.matchesUp = !1;
                            q.matchesUp && (q.matches = u)
                        }
                        for (d = 0; d < g.length; d++) {
                            if (q = g[d], q.textUp || q.matchesUp) h = q.text, h = q.matches.length ? k(q.text, q.matches) : m.escape(h), q.el.innerHTML = r.br(h, d === g.length - 1), q.textUp = !1;
                            q.posUp && (q.el.setAttribute("p", [q.pos, q.pos + q.len].join()),
                                q.posUp = !1)
                        }
                        y.emit("finish");
                        p = a
                    }
                });
            return y
        }
    }, {
        "@grammarly-npm/changesets": 1,
        "babel-runtime/core-js/object/assign": 24,
        emitter: "emitter",
        "lib/dom": 215,
        "lib/util": 322,
        lodash: "lodash"
    }],
    319: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("emitter"),
            f = a("lodash"),
            k = a("lib/dom"),
            m = a("lib/util"),
            e = a("lib/wrap"),
            r = a("./html-dom"),
            n = a("./text-split");
        c.createTextareaDom = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = y.getCursor(),
                    b = z.value;
                z.value = b + " ";
                z.value = b;
                k.isFocused(z) && y.setCursor(a)
            }

            function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = A.insertGhost();
                B = a.clone;
                C = a.cloneVal;
                x = r.createHtmlDom({
                    el: C,
                    editor: y
                });
                w = n.createTextSplit({
                    node: C
                });
                w.on("finish", function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    A.emit("rendered")
                });
                A.htmlDom = x;
                G = f.throttle(g, 100);
                A.clone = B;
                A.cloneVal = C;
                y.emit("createdGhost")
            }

            function g(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                try {
                    w.update(a, b, c)
                } catch (H) {
                    console.error(H.stack || H)
                }
            }

            function q(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var d = 0; d < a.length; d++) {
                    var f = a[d];
                    f.replaced && (f._s = f.s, f._e = f.e)
                }
                e.render({
                    node: z,
                    matches: a,
                    createTag: t,
                    type: "text",
                    text: b,
                    updateMethod: c ? g : G
                })
            }

            function t(a,
                b) {
                a = a.parent || a;
                b = y.getMatchClass(a, b);
                return {
                    start: '<g class="gr_ gr_' + a.id + b + '" data-gr-id="' + a.id + '" id="' + a.id + '">',
                    end: "</g>"
                }
            }

            function p(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                A.setTextareaValue(a);
                q(y.getFiltered(), a, !0)
            }
            var y = a.editor,
                z = y.el,
                h = m.guid(),
                w = void 0,
                x = void 0,
                B = void 0,
                C = void 0,
                G = void 0,
                A = d({
                    el: z,
                    id: h,
                    render: q,
                    remove: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a = y.getFiltered();
                        q(a, y.currentText, !0)
                    },
                    renderRange: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return x.renderRange(a)
                    },
                    removeBySelector: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a = z.querySelectorAll(a);
                        for (var b = a.length, c = 0; c < b; c++) e.unwrap(a[c])
                    },
                    replace: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var c = z.value;
                        c = c.substring(0, a.s) + b + c.substr(a.e);
                        y.currentText = c;
                        p(c)
                    },
                    start: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        c()
                    },
                    stop: m._f,
                    select: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        x.select(a)
                    },
                    deselect: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        x.deselect(a)
                    },
                    getText: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return z.value
                    },
                    setText: p,
                    setTextareaValue: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        z.value = a
                    },
                    changeSelection: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        1 < k.getDocSelection(document).toString().length || D()
                    },
                    getCursor: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return {
                            s: z.selectionStart,
                            e: z.selectionEnd
                        }
                    },
                    setCursor: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        z.selectionStart = a.s;
                        z.selectionEnd = a.e
                    },
                    insertGhost: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a =
                            document.createElement("div");
                        a.className = "gram-ghost";
                        a.setAttribute("gramm_editor", "true");
                        a.setAttribute("contenteditable", "true");
                        a.setAttribute("tabindex", "-1");
                        var b = document.createElement("span");
                        a = (b.className = "clone-val", a.appendChild(b), a);
                        b = a.firstChild;
                        return a.id = h, a.setAttribute("gramm_id", h), k.insertBefore(a, z), {
                            clone: a,
                            cloneVal: b
                        }
                    },
                    forceRedraw: b,
                    invalidate: m._f
                }),
                D = f.debounce(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = z.selectionStart,
                        b = y.getFiltered().concat(),
                        c = !1;
                    b.sort(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return b._e - a._e
                    });
                    for (var d = [], e = 0; e < b.length; e++) {
                        var f = b[e];
                        a >= f._s && a <= f._e && d.push(f)
                    }
                    if (0 < d.length) return d.sort(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a._e - a._s - (b._e - b._s)
                    }), c = !0, a = d[0], y.selectedMatch && y.selectedMatch !== a && y.selectedMatch.deselect(), y.selectById(a.id);
                    !c && y.selectedMatch && y.selectedMatch.deselect();
                    c || y.emit("deselectMatch")
                }, 100);
            return setTimeout(b, 10), A
        }
    }, {
        "./html-dom": 312,
        "./text-split": 318,
        emitter: "emitter",
        "lib/dom": 215,
        "lib/util": 322,
        "lib/wrap": 324,
        lodash: "lodash"
    }],
    320: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c,
            "__esModule", {
                value: !0
            });
        var d = a("lodash"),
            f = "b strong i em u ins s font span ul li ol a img blockquote h1 h2 h3 h4 h5 h6".split(" "),
            k = [];
        c.watch = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if ("undefined" != typeof MutationObserver && !d.findLast(k, {
                    node: a,
                    cb: b
                })) {
                var c = new MutationObserver(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function c(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (var e = 0, f = b.length; e < f; e++) {
                            var g = {
                                node: a.target,
                                tag: (b[e].tagName ? b[e].tagName : a.target.tagName).toLowerCase(),
                                action: c
                            };
                            a.target && -1 === d.indexOf(g) && d.push(g)
                        }
                    }
                    var d = [],
                        e = {
                            tags: f
                        };
                    a.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        0 !==
                            a.addedNodes.length && c(a, a.addedNodes, "addedNodes");
                        0 !== a.removedNodes.length && c(a, a.removedNodes, "removedNodes")
                    });
                    (a = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var c = [],
                            d = !1;
                        return a.forEach(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            "removedNodes" === a.action && b.tags.includes(a.tag) && (d = !0)
                        }), a.forEach(function(a) {
                            var e = b.tags.includes(a.tag),
                                f = void 0;
                            ("addedNodes" === a.action && e || "removedNodes" === a.action && d) && (f = a.node);
                            f && -1 === c.indexOf(f) && c.push(f)
                        }), !!c.length && c
                    }(d, e)) && b && b(a)
                });
                c.observe(a, {
                    childList: !0,
                    subtree: !0,
                    attributes: !1,
                    characterData: !1
                });
                k.push({
                    node: a,
                    cb: b,
                    mo: c
                })
            }
        };
        c.unwatch = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            (a = d.findLast(k, {
                node: a,
                cb: b
            })) && (a.mo.disconnect(), k = d.without(k, a))
        }
    }, {
        lodash: "lodash"
    }],
    321: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "utm_medium=" + encodeURIComponent("internal") + "&" + ("utm_source=" + encodeURIComponent(a)) + "&" + ("utm_campaign=" + encodeURIComponent(b))
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = a("./newConfig");
        c.getSignUpURL = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return f.URLS.signup + "?" + d(a, b)
        };
        c.getSignInURL = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return f.URLS.signin + "?" +
                ("utm_medium=" + encodeURIComponent("internal"))
        };
        c.getResetPasswordURL = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return f.URLS.resetPassword + "?" + ("utm_medium=" + encodeURIComponent("internal"))
        };
        c.getTermsURL = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return f.URLS.terms + "?" + ("utm_medium=" + encodeURIComponent("internal"))
        };
        c.getPrivatePolicyURL = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return f.URLS.policy + "?" + ("utm_medium=" + encodeURIComponent("internal"))
        };
        c.getUpgradeURL = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return f.URLS.upgrade + "?" + d(a, b)
        };
        c.getExtensionSuccessURL = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return f.URLS.welcomeC + "?" + ("utm_medium=" +
                encodeURIComponent("navigation"))
        };
        c.getAfterInstallURL = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return f.URLS.afterInstall + "/?extension_install=true&" + ("utm_medium=" + encodeURIComponent("navigation"))
        };
        c.addParamsToUpgradeURL = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a + "&" + d(b, c)
        }
    }, {
        "./newConfig": 279
    }],
    322: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }

        function f(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    e();
                    a()
                }

                function e() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var e = setTimeout(c, b);
                    d[a] = e
                }
                e()
            }
            var d = f.items = f.items || {},
                e = d[a];
            if (e || b) return e && !b ? (clearTimeout(e), void delete d[a]) :
                void c()
        }

        function k() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return (65536 * (1 + Math.random()) | 0).toString(16).substring(1)
        }

        function m() {}

        function e(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return new g["default"](function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return setTimeout(b, a)
            })
        }
        b = a("babel-runtime/regenerator");
        var r = d(b);
        b = a("babel-runtime/helpers/toConsumableArray");
        var n = d(b);
        b = a("babel-runtime/helpers/defineProperty");
        var t = d(b);
        b = a("babel-runtime/core-js/object/assign");
        var u = d(b);
        b = a("babel-runtime/core-js/object/keys");
        var l = d(b);
        b = a("babel-runtime/core-js/promise");
        var g = d(b),
            q = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c ||
                    (c = g["default"]))(function(e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            k(d.next(a))
                        } catch (R) {
                            f(R)
                        }
                    }

                    function h(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            k(d["throw"](a))
                        } catch (R) {
                            f(R)
                        }
                    }

                    function k(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? e(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(g, h)
                    }
                    k((d = d.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var v = a("lodash"),
            p = a("non-crypto-hash"),
            y = a("./newConfig");
        a = a("./newConfig");
        c.isTestsMode = a.isTestsMode;
        c.getBrowser = a.getBrowser;
        c.isBg = a.isBg;
        c.isBgOrPopup = a.isBgOrPopup;
        c.isChrome = a.isChrome;
        c.isFF = a.isFF;
        c.isPopup =
            a.isPopup;
        c.isSafari = a.isSafari;
        c.isEdge = a.isEdge;
        c.isWindows = a.isWindows;
        c.isGrammarlyEmail = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return -1 === ["freeeeeeee@grammarly.com", "premiumuser@grammarly.com"].indexOf(a) && /^.*@grammarly.com$/.test(a)
        };
        c.chromeBgError = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return window.chrome && window.chrome.runtime && window.chrome.runtime.lastError
        };
        c.isFunction = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return !!(a && a.constructor && a.call && a.apply)
        };
        c.interval = f;
        (f = c.interval || (c.interval = {})).items = {};
        c.cancelInterval = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            f(a)
        };
        c.guid = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return k() +
                k() + "-" + k() + "-" + k() + "-" + k() + "-" + k() + k() + k()
        };
        c._f = m;
        c._F = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return !0
        };
        c.bgPageReload = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            window.chrome && window.chrome.runtime && window.chrome.runtime.reload ? window.chrome.runtime.reload() : window.location.reload()
        };
        c.isGmail = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a.location) {
                var b = "mail.google.com" == a.location.host;
                a = a.querySelector("iframe#js_frame") && a.querySelector("iframe#sound_frame");
                return b || a
            }
        };
        c.isValidEmail = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return /^[-!#$%&\'*+\\.\/0-9=?A-Z^_`a-z{|}~]+@[-!#$%&\'*+\\/0-9=?A-Z^_`a-z{|}~]+\.[-!#$%&\'*+\\.\/0-9=?A-Z^_`a-z{|}~]+$/.test(a)
        };
        c.formatNumber = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
        };
        c.declension = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return b[1 == a ? 0 : 1]
        };
        c.stub = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return v.transform(a, function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a[b] = m
            })
        };
        c.memoize = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = {};
            return function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var e = "_memoize_" + (b ? b.apply(this, arguments) : arguments[0]);
                return window.hasOwnProperty.call(d, e) ? d[e] : (c && setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    delete d[e]
                }, c), d[e] = a.apply(this, arguments))
            }
        };
        c.syncWait = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return (0, l["default"])(b).reduce(function(c,
                d) {
                return (0, u["default"])({}, c, (0, t["default"])({}, d, function() {
                    for (var c = arguments.length, e = Array(c), f = 0; f < c; f++) e[f] = arguments[f];
                    return a.then(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return b[d].apply(b, e)
                    })
                }))
            }, {})
        };
        c.promisify = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return new g["default"](function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a(b)
            })
        };
        c.getRandomIntInclusive = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return Math.floor(Math.random() * (b - a + 1)) + a
        };
        c.delay = e;
        var z = "January February March April May June July August September October November December".split(" ");
        c.formatDate = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a && (a = new Date(a),
                    "Invalid Date" !== a.toString())) return z[a.getMonth()] + " " + a.getDate() + ", " + a.getFullYear()
        };
        c.createClass = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = function() {};
            return b.prototype = a(), b
        };
        c.versionComparator = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.split(".").map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return Number(a) || 0
                })
            }
            var b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "",
                c = a(0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : ""),
                d = a(b);
            b = Array(Math.abs(c.length - d.length)).fill(0);
            if (c.length > d.length ? d.push.apply(d, (0, n["default"])(b)) :
                c.push.apply(c, (0, n["default"])(b)), c.every(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a === d[b]
                })) return 0;
            b = 0;
            for (var e = c.length; b < e; b++) {
                if (c[b] > d[b]) return 1;
                if (c[b] < d[b]) break
            }
            return -1
        };
        c.isBgAlive = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return q(this, void 0, void 0, r["default"].mark(function G() {
                return r["default"].wrap(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (;;) switch (a.prev = a.next) {
                        case 0:
                            if (y.isChrome() || y.isFF()) {
                                a.next = 2;
                                break
                            }
                            return a.abrupt("return", null);
                        case 2:
                            return a.prev = 2, a.next = 5, g["default"].race([new g["default"](function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                return window.chrome.runtime.sendMessage("ping",
                                    a)
                            }), e(1E4).then(function(a) {
                                return "timeouted"
                            })]);
                        case 5:
                            return a.abrupt("return", a.sent);
                        case 8:
                            return a.prev = 8, a.t0 = a["catch"](2), a.abrupt("return", "orphaned");
                        case 11:
                        case "end":
                            return a.stop()
                    }
                }, G, this, [
                    [2, 8]
                ])
            }))
        };
        c.asyncCall = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            setTimeout(a, 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 10)
        };
        c.createChannel = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = (0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}).buffered,
                b = void 0 === a || a,
                c = [],
                d = [];
            return {
                take: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return c.length ? g["default"].resolve(c.shift()) :
                        new g["default"](function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return d.push(a)
                        })
                },
                put: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    0 < d.length ? d.shift()(a) : b ? c.push(a) : c[0] = a
                }
            }
        };
        c.normalizedHashCode = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 100;
            if (!a) return NaN;
            var c = p.createHash("superfasthash");
            return parseInt(c.hash(a), 16) % b
        };
        c.keyCode = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.which || a.charCode || a.keyCode || 0
        };
        c.NBSP_RE = new RegExp(String.fromCharCode(160), "g");
        var h = String.fromCharCode(160),
            w = /\n/g,
            x = /\s$/g,
            B = new RegExp("\n" + String.fromCharCode(32), "g");
        c.br = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a = a.replace(B, "<br>" + h).replace(w, "<br>"), b && (a = a.replace(x, h)), a
        };
        c.trimLeft = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.replace(/^\s+/, "")
        };
        c.trimRight = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.replace(/\s+$/, "")
        };
        c.SECOND = 1E3;
        c.MINUTE = 60 * c.SECOND;
        c.HOUR = 60 * c.MINUTE;
        c.DAY = 24 * c.HOUR;
        c.ESC_KEY = 27;
        c.ENTER_KEY = 13;
        c.pastDays = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return Math.round(Math.abs(+new Date - +new Date(a)) / c.DAY)
        };
        c.getNextPingDate = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = new Date;
            return 2 < a.getHours() && a.setDate(a.getDate() + 1), a.setHours(3), a.setMinutes(Math.floor(60 *
                Math.random())), a.getTime()
        };
        c.escapeRegExp = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&")
        }
    }, {
        "./newConfig": 279,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/core-js/object/keys": 29,
        "babel-runtime/core-js/promise": 31,
        "babel-runtime/helpers/defineProperty": 36,
        "babel-runtime/helpers/toConsumableArray": 41,
        "babel-runtime/regenerator": 43,
        lodash: "lodash",
        "non-crypto-hash": "non-crypto-hash"
    }],
    323: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }

        function f(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var f = d ? b + "_forced" : b,
                g = {
                    listeners: []
                },
                k = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var a = g.listeners.indexOf(c); - 1 < a && g.listeners.splice(a, 1)
                };
            if ("on" === a || "once" === a) {
                if (t[f] = t[f] || {
                        domEventListener: function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            n.emit(f, b);
                            "once" === a && k()
                        },
                        listeners: []
                    }, g = t[f], g.domEventListener) {
                    var l = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        g.domEventListener && g.domEventListener((0, e["default"])({
                            originalEvent: a,
                            preventDefault: r._f,
                            stopPropagation: r._f
                        }, a.detail))
                    };
                    g.listenerWrapper = g.listenerWrapper || l
                }
                0 === g.listeners.length && (g.domEventListener && window.addEventListener(b,
                    g.domEventListener, d), g.listenerWrapper && window.addEventListener(b + "-gr", g.listenerWrapper, d));
                g.listeners.push(c)
            }
            if ("un" === a) {
                l = t[f];
                if (!l) return;
                k();
                0 === l.listeners.length && (l.domEventListener && window.addEventListener(b, l.domEventListener, d), l.listenerWrapper && window.addEventListener(b + "-gr", l.listenerWrapper, d))
            }
            n[a](f, c)
        }
        b = a("babel-runtime/core-js/object/keys");
        var k = d(b);
        b = a("babel-runtime/helpers/typeof");
        var m = d(b);
        b = a("babel-runtime/core-js/object/assign");
        var e = d(b);
        Object.defineProperty(c,
            "__esModule", {
                value: !0
            });
        b = a("emitter");
        var r = a("./util"),
            n = b({}),
            t = {};
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = 2 < arguments.length && void 0 !== arguments[2] && arguments[2];
                "object" === ("undefined" == typeof b ? "undefined" : (0, m["default"])(b)) ? (0, k["default"])(b).map(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return f(a, c, b[c], d)
                }): c && f(a, b, c, d)
            }
        };
        c.on = a("on");
        c.off = a("un");
        c.once = a("one")
    }, {
        "./util": 322,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/core-js/object/keys": 29,
        "babel-runtime/helpers/typeof": 42,
        emitter: "emitter"
    }],
    324: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (; a.parent;) a = a.parent;
            return a
        }

        function f(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a.concat();
            for (var b = 0; b < a.length; b++) {
                var c = a[b],
                    d = [];
                void 0 === c._s && (c._s = c.s, c._e = c.e);
                for (var e = b + 1; e < a.length; e++) {
                    var f = a[e];
                    if (void 0 === f._s && (f._s = f.s, f._e = f.e), !(0 >= k(c, f))) {
                        if (c._s > f._s && 0 < c._e - f._e) {
                            d.push({
                                _s: c._s,
                                _e: f._e,
                                parent: c
                            });
                            d.push({
                                _s: f._e,
                                _e: c._e,
                                parent: c
                            });
                            break
                        }
                        if (c._e < f._e && 0 < f._s - c._s) {
                            d.push({
                                _s: c._s,
                                _e: f._s,
                                parent: c
                            });
                            d.push({
                                _s: f._s,
                                _e: c._e,
                                parent: c
                            });
                            break
                        }
                    }
                }
                d.length && (a.splice.apply(a, [b, 1].concat(d)), b = 0)
            }
            return a.sort(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a._s - b._s || b._e - a._e
            }), a
        }

        function k(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return Math.min(a._e, b._e) - Math.max(a._s, b._s)
        }

        function m(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return null === a ? "" : ("" + a).replace(X.mark, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return W[a]
            })
        }

        function e(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return null === a ? "" : ("" + a).replace(X.escape, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return ea[a]
            })
        }

        function r(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.node,
                c = a.matches,
                e = a.createElement,
                g = a.isValidNode || function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !0
                };
            a = a.isValidMatchForNode;
            var h = f(c).filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return !a.inDom && !d(a).inDom
            });
            0 !== h.length &&
                (q(b, b, 0, h, null, e, g, a), h = f(c).filter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !a.inDom && !d(a).inDom
                }))
        }

        function n(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.text,
                c = a.node,
                d = a.matches,
                e = a.createTag;
            (a = a.updateMethod) ? a(b, d, function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b = f(b);
                return u(a, b, e)
            }): (f(d), c.innerHTML = u(b, d, e).replace(/\n/g, "<br>"))
        }

        function t(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a.parent || a;
            return {
                start: '<g class="gr_ gr_' + a.id + '" id="' + a.id + '">',
                end: "</g>"
            }
        }

        function u(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = a;
            a = m(a);
            c = c || t;
            var f = [],
                g = void 0,
                h = void 0,
                k = h = void 0,
                l = void 0,
                n = 0,
                p = 0,
                q = 0;
            for (q = 0; q < b.length; q++) {
                l = b[q];
                l.calculatedPos = !1;
                h = l.parent || l;
                h.inDom = !0;
                h.orig && (h.orig.inDom = !0);
                h = h.orig || h;
                g = c(h, d);
                h.renderTs = h.renderTs || Date.now();
                h = g.start;
                k = n + l._s;
                a = a.substring(0, k) + h + a.substring(k);
                n += h.length;
                for (p = 0; p < f.length; p++) f[p] > k && (f[p] += h.length);
                f.push(n + l._e)
            }
            f.sort(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a - b
            });
            for (p = n = 0; p < f.length; p++) k = n + f[p], a = a.substring(0, k) + g.end + a.substring(k), n += g.end.length;
            return e(a)
        }

        function l(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = document.createElement("g");
            return c.getElementsByTagName("g"), c.className = "gr_ gr_" + a.id, c.textContent =
                b, c.id = a.id.toString(), c
        }

        function g(a, b, c, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var f = a.ownerDocument || a,
                g = f.createRange();
            e = f.activeElement !== e;
            var h = void 0,
                k = void 0;
            e && (k = U.getDocSelection(f), h = {
                node: k.anchorNode,
                activeElement: f.activeElement,
                offset: k.anchorOffset,
                selectionStart: f.activeElement.selectionStart
            }, k = {
                node: k.focusNode,
                offset: k.focusOffset,
                selectionEnd: f.activeElement.selectionEnd
            });
            try {
                g.setStart(a, b), g.setEnd(a, c), g.deleteContents(), g.insertNode(d)
            } catch (sa) {
                throw fa && fa("replaceRange"), sa;
            }
            e && ("INPUT" === h.activeElement.tagName ||
                "TEXTAREA" === h.activeElement.tagName ? (h.activeElement.focus(), h.activeElement.selectionStart = h.selectionStart, h.activeElement.selectionEnd = k.selectionEnd) : h.node && R(h, k))
        }

        function q(a, b, c, e, f, h, k, n) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var m = void 0;
            c = c || 0;
            var r, t;
            h = h || l;
            f = f || {
                level: -1,
                validNodeForMatchLevel: 0
            };
            f.text = f.text || L(a);
            var u = f.level;
            k(b) ? f.level <= f.validNodeForMatchLevel && (f.validNodeForMatch = !0, f.validNodeForMatchLevel = f.level) : (f.validNodeForMatch = !1, f.validNodeForMatchLevel = f.level);
            f.level++;
            b.__s = c;
            for (r = 0; r < b.childNodes.length; r++)
                if (m =
                    b.childNodes[r], m.__jump_next && (r++, delete m.__jump_next, m = b.childNodes[r]), m && (1 === m.nodeType || 3 === m.nodeType) && !A(m)) {
                    var v = w(a, m);
                    if (!B(v) || 3 !== m.nodeType) {
                        3 !== m.nodeType && (c = q(a, m, c, e, f, h, k, n));
                        var N = f.brAddedAtNode;
                        N = f.prevIsBr && (N === m || z(N, m) || z(m, N));
                        v.prevIsBrWithinNode = N;
                        var y = C(v),
                            Q = y;
                        N = c;
                        c = t = c + y.length;
                        y && (f.prevIsBr = !1);
                        if (x(v) && (f.prevIsBr = !0, c++, f.brAddedAtNode = m.parentNode), v.isPreWrap && -1 !== y.indexOf("\n") && (f.prevIsBr = !0, f.brAddedAtNode = m.parentNode), "IMG" === v.node.tagName && (f.prevIsBr = !1), 3 === m.nodeType && N !== t)
                            for (Q !== m.textContent && (m.textContent = Q), v = 0; v < e.length; v++) {
                                Q = e[0];
                                var D = Q.parent || Q;
                                if (Q.__s = Q.__s || Q._s, Q.__e = Q.__e || Q._e, Q.__s >= t) break;
                                for (;
                                    "\n" === f.text[Q.__s];) Q.__s++;
                                if (m && Q.__s < N) {
                                    for (var E = m.parentNode; void 0 !== E.__s && E.__s > Q.__s;) E = E.parentNode;
                                    if (Q.__timesRendered = Q.__timesRendered || 0, Q.__timesRendered++, 5 < Q.__timesRendered) break;
                                    q(a, E, E.__s, e, f, h, k, n)
                                }
                                t < Q._e ? (E = Q.__s, Q.__s = t, Q = {
                                    __s: E,
                                    __e: t,
                                    parent: Q
                                }) : (e.shift(), v--);
                                if (f.validNodeForMatch || n(m, f.validNodeForMatch,
                                        D)) {
                                    E = 0;
                                    void 0 !== Q.__s && N < Q.__s && (E = Q.__s - N, y = y.substr(E));
                                    Q.calculatedPos = !1;
                                    var I = Q.__e - Q.__s,
                                        J = E + I,
                                        F = d(Q),
                                        H = h(F, y.substr(0, I));
                                    if (F.renderTs = F.renderTs || Date.now(), D.inDom = !0, y = y.substr(0, I), g(m, E, J, H, a), H.__node_info = null, H.previousSibling && (H.previousSibling.__node_info = null), H.nextSibling && (H.nextSibling.__node_info = null), p(m), m.parentNode === b) r++, N = Q.__s, t = Q.__e, H.__s = Q.__s, c = Q.__e, x(w(a, H)) && c++;
                                    delete Q.__s;
                                    delete Q.__e;
                                    delete Q.__timesRendered;
                                    m = H.firstChild;
                                    H.parentNode !== b && H.parentNode &&
                                        q(a, H.parentNode, H.parentNode.__s, e, f, h, k, n)
                                }
                            }
                    }
                }
            G(b) && G(b.nextElementSibling) && ((a = e[0]) && a.__s === c && a.__s++, c++);
            return f.level = u, c
        }

        function v(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a) return a.__trimmed_content ? a.__trimmed_content : b ? (a.__trimmed_content = a.textContent, a.__trimmed_content) : a.textContent ? (a.__trimmed_content = a.textContent.replace(F, "").replace(Y, ""), a.__trimmed_content) : void 0
        }

        function p(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.__trimmed_content && delete a.__trimmed_content;
            a.__node_text && delete a.__node_text
        }

        function y(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a && (p(a), a.parentNode &&
                    "HTML" !== a.parentNode.nodeName && a.parentNode.normalize(), 0 < a.childNodes.length))
                for (var b = 0, c = a.childNodes.length; b < c; b++) y(a.childNodes[b])
        }

        function z(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!b) return !1;
            for (b = b.parentNode; null !== b;) {
                if (b === a) return !0;
                b = b.parentNode
            }
            return !1
        }

        function h(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a) return !1;
            if (a.__is_block) return a.__is_block;
            if (!a.ownerDocument || !a.tagName || A(a)) return a.__is_block = !1, !1;
            var b = a.tagName.toLowerCase();
            b = -1 !== "table div p blockquote body table tr th td ol ul li h1 h2 h3 h4 h5 h6".split(" ").indexOf(b);
            return "block" === a.style.display && (b = !0), a.__is_block = b, b
        }

        function w(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (b.__node_info && (c._shouldCache || -1 < document.location.hash.indexOf("cache"))) return b.__node_info.pos = b.__node_info.offset = b.__node_info.prevIsBrWithinNode = void 0, b.__node_info;
            var d = h(b);
            a: if (b.__white_space) var e = "pre-wrap" === b.__white_space;
                else {
                    for (e = 3 === b.nodeType ? b.parentNode : b; e !== a || b === a || b.parentNode === a;) {
                        if (e.__white_space || (e.__white_space = getComputedStyle(e).whiteSpace), "pre-wrap" === e.__white_space) {
                            e = (b.__white_space =
                                e.__white_space, "pre-wrap" === b.__white_space);
                            break a
                        }
                        if (e = e.parentNode, b === a || b.parentNode === a) break
                    }
                    e = !1
                }
            var f = b.nextSibling,
                g = b.previousSibling,
                k = v(g, e),
                l = v(f, e);
            f && 3 === f.nodeType && !l && (f = f.nextSibling, l = v(f, e));
            g && 3 === g.nodeType && !k && (g = g.previousSibling, k = v(g, e));
            var m = f && f.parentNode && v(f.parentNode.lastChild, e),
                n = h(f),
                p = h(g),
                q = f && !!f.tagName && !h(f),
                r = g && !!g.tagName && !h(g),
                t = "BR" === b.tagName,
                u = "P" === b.tagName,
                x = f && "BR" === f.tagName,
                w = g && "BR" === g.tagName,
                y = f && f.parentNode.lastElementChild === f &&
                !m,
                N = b.parentNode.firstChild === b || !v(b.parentNode.firstChild, e) && b.parentNode.firstElementChild === b;
            m = b.parentNode.lastChild === b || !m && b.parentNode.lastElementChild === b;
            var z = N && b.parentNode === a,
                A = !!v(b, e) || !(!d || !b.querySelector("br")) || !(!b.tagName || !b.querySelector("img"));
            k = g && !!k;
            l = f && !!l;
            var C = !!v(b.parentNode, e),
                B;
            if (B = t)
                if ("SPAN" === b.parentNode.tagName) {
                    B = !0;
                    for (var Q = b.parentNode.parentNode; Q && Q !== a;) Q.parentNode && Q.parentNode.lastChild !== Q && (B = !1), Q = Q.parentNode
                } else B = b.parentNode.parentNode.lastChild ===
                    b.parentNode;
            return b.__node_info = {
                pos: void 0,
                offset: void 0,
                node: b,
                root: a,
                preWrap: e,
                next: f,
                prev: g,
                isTextNode: 3 === b.nodeType,
                nodeIsBlock: d,
                nextIsBlock: n,
                prevIsBlock: p,
                nextInline: q,
                prevInline: r,
                nodeIsBr: t,
                nodeIsP: u,
                nextIsBr: x,
                prevIsBr: w,
                prevIsBrWithinNode: void 0,
                nextIsLastChild: y,
                nodeIsFirstChild: N,
                nodeIsLastChild: m,
                nodeIsRootFirstChild: z,
                nodeWithContent: A,
                prevWithContent: k,
                nextWithContent: l,
                parentWithContent: C,
                parentIsLastChildForBr: B,
                nextIsElement: f && (3 === f.nodeType || q) && l,
                prevIsElement: g && (3 === g.nodeType ||
                    r) && k,
                nextIsBlockWithContent: n && l,
                prevIsBlockWithContent: p && k,
                onlyOneChild: b.parentNode && b.parentNode.children && 1 === b.parentNode.children.length,
                isPreWrap: !1,
                isRoot: b === a
            }, b.__node_info
        }

        function x(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = !1;
            return a.nodeIsBlock && a.nodeWithContent && a.nextIsElement && !a.prevIsBrWithinNode && (b = !0), !a.nodeIsBlock && a.nodeWithContent && (a.nextIsBlock || a.nextIsBr) && (b = !0), a.nodeIsBlock && a.nodeWithContent && a.nextIsBlock && !a.prevIsBrWithinNode && (b = !0), a.nextIsBr && !a.nextIsLastChild && a.nodeWithContent && (b = !0), a.nodeIsBr && !a.parentWithContent && a.nodeIsLastChild && (b = !0, S && a.parentIsLastChildForBr && (b = !1)), a.nodeIsBr && a.nextIsBr && (b = !0), a.nodeIsBr && a.nodeIsFirstChild && !a.onlyOneChild && (b = !0), a.nodeIsBr && a.nextIsElement && !a.prevWithContent && !a.prevIsBr && (b = !0), a.nodeIsBr && a.nextIsBlockWithContent && a.prevIsBlockWithContent && (b = !0), S && 0 === a.node.childNodes.length && "<br>" === a.node.innerHTML && (b = !0), a.isRoot && (b = !1), !(a.preWrap && a.node && a.node.textContent && "\n" === a.node.textContent[a.node.textContent.length -
                1]) || a.prev && !a.prevIsBlock || a.next && !a.nextIsBlock || (b = !1), a.isTextNode && B(a) && (b = !1), G(a.node) && (b = !1), b
        }

        function B(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.node.parentNode && -1 !== ["table", "tbody", "thead", "tr"].indexOf(a.node.parentNode.tagName.toLowerCase())
        }

        function C(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a.node.nodeValue || B(a)) return "";
            if (a.preWrap) return a.node.nodeValue;
            if (a.node.__node_text) return a.node.__node_text;
            var b = a.node.nodeValue.replace(/\n+/g, " ").replace(da, " ");
            return a.next && a.prev || h(a.node.parentNode) || a.prevIsBr ? ((!a.prev || a.prevIsBlock ||
                a.prevIsBr) && (b = b.replace(F, "")), a.next && !a.nextIsBlock || S || (b = b.replace(Y, "")), a.node.__node_text = b, b) : (a.node.__node_text = b, b)
        }

        function G(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a) return "TD" === a.tagName || "TH" === a.tagName
        }

        function A(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return 1 === a.nodeType && (D(a) || J(a))
        }

        function D(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a.tagName.toLowerCase();
            return 0 <= E.indexOf(a)
        }

        function J(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b = 0; b < T.length; b++)
                if (a.classList.contains(T[b])) return !0;
            return !1
        }

        function L(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = !!b;
            if (b = b || aa._f, a.normalize(), !c && a.__getText && a.__getText.getText && a.__getText.innerHTML ===
                a.innerHTML) return a.__getText.getText;
            var d = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                function c(g) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if ((3 === g.nodeType || 1 === g.nodeType) && !A(g)) {
                        var h = w(a, g),
                            k = e;
                        if (!B(h) || 3 !== g.nodeType) {
                            if (h.isTextNode) {
                                var l = C(h);
                                e += l.length;
                                l && d.push(l);
                                h.preWrap && "\n" === l[l.length - 1] && (f = g.parentNode)
                            }
                            if (g.childNodes && !A(g)) {
                                l = 0;
                                for (var m = g.childNodes.length; l < m; ++l)
                                    if (!1 === c(g.childNodes[l])) return !1
                            }
                            "IMG" === g.tagName && d.push("");
                            G(g) && G(g.nextElementSibling) && (d.push(V), e++);
                            l = d[d.length - 1];
                            l = !!l && "\n" === l[l.length - 1] && (f === g || z(f, g) ||
                                z(g, f));
                            h.prevIsBrWithinNode = l;
                            return x(h) && (d.push("\n"), e++, f = g.parentNode), (!b || !1 !== b(h, k)) && void 0
                        }
                    }
                }
                var d = [],
                    e = 0,
                    f = void 0;
                return c(a), d.join("")
            }(a);
            return c && a.__getText && delete a.__getText, c || (a.__getText = {
                getText: d,
                innerHTML: a.innerHTML
            }), d
        }

        function M(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = a;
            c.isTextNode ? (d = (c.node.textContent || "").substr(0, b), !c.preWrap && d.replace(F, "").replace(Y, "") && (d = d.replace(Y, "")), c = C({
                prev: c.prev,
                preWrap: c.preWrap,
                prevIsBlock: c.prevIsBlock,
                prevIsBr: c.prevIsBr,
                node: {
                    nodeValue: d
                }
            }), d = b + a - (d.length -
                c.length)) : c.nodeIsBr && !c.onlyOneChild && d--;
            return d
        }

        function H(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = 0;
            return b.childNodes.length && 0 < c && (b = b.childNodes[c], c = 0), L(a, function(a, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (a.node === b) return d = M(e, c, a), !1
            }), d
        }

        function O(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = void 0;
            return a.normalize(), L(a, function(a, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.pos = d;
                a.offset = 0;
                var e = d + C(a).length;
                if (d === e && !S) return !0;
                if (b >= d && b <= e) {
                    e = a.node.nodeValue || "";
                    for (var f = 0; f <= e.length; f++) b !== M(d, f, a) || (a.offset = f);
                    return !((!a.nodeIsBr || 0 !== a.offset) && (!a.isTextNode || a.nodeWithContent || S && "" !== e.replace(F,
                        " ").replace(Y, " "))) || (c = a, !1)
                }
            }), c
        }

        function K(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = U.getDocSelection(a.ownerDocument);
            if (!b.anchorNode) return {
                s: -1,
                e: -1
            };
            var c = H(a, b.anchorNode, b.anchorOffset);
            a = b.isCollapsed ? c : H(a, b.focusNode, b.focusOffset);
            return {
                s: c,
                e: a
            }
        }

        function R(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = a.node.ownerDocument;
            try {
                b || (b = a);
                var d = U.getDocSelection(c),
                    e = c.createRange();
                e.setStart(a.node, a.offset);
                e.setEnd(b.node, b.offset);
                d.removeAllRanges();
                d.addRange(e)
            } catch (Z) {
                console.log(Z)
            }
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var P = a("lodash"),
            aa = a("lib/util"),
            U = a("lib/dom");
        a = [10, 8, 32, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8287, 12288].map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return String.fromCharCode(a)
        });
        var F = new RegExp("^[" + a.join("") + "]+", "g"),
            Y = new RegExp("[" + a.join("") + "]+$", "g"),
            da = new RegExp("[" + a.join("") + "]+", "g"),
            V = String.fromCharCode(9),
            T = [],
            E = ["pre", "code", "blockquote"],
            W = {
                "&": "\u1aa5",
                "<": "\u1c89",
                ">": "\u1c86",
                '"': "\u1bfc",
                "'": "\u1a0b",
                "/": "\u1a57"
            },
            ea = {
                "\u1aa5": "&amp;",
                "\u1c89": "&lt;",
                "\u1c86": "&gt;",
                "\u1bfc": "&quot;",
                "\u1a0b": "&#x27;",
                "\u1a57": "&#x2F;"
            };
        c._shouldCache = !1;
        var S = !! function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = window.navigator.userAgent,
                    b = a.indexOf("MSIE ");
                if (0 < b) return parseInt(a.substring(b + 5, a.indexOf(".", b)), 10);
                if (0 < a.indexOf("Trident/")) return b = a.indexOf("rv:"), parseInt(a.substring(b + 3, a.indexOf(".", b)), 10);
                b = a.indexOf("Edge/");
                return 0 < b && parseInt(a.substring(b + 5, a.indexOf(".", b)), 10)
            }(),
            X = {
                mark: new RegExp("[" + P.keys(W).join("") + "]", "g"),
                escape: new RegExp("[" + P.keys(ea).join("") + "]", "g")
            };
        c.skipClass = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a ? void(T = a) : T
        };
        c.skipTag = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a ? void(E = a) : E
        };
        var fa = void 0;
        c.setOnError = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            fa = a
        };
        c.collision = k;
        c.render = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "dom" === a.type ? r(a) : "text" === a.type ? n(a) : void 0
        };
        c.replaceRange = g;
        c.mergeNodes = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a || a && 0 === a.length) return !1;
            if (1 === a.length) return a[0];
            for (var b = a[0], c = a.length, d = 1; d < c; d++) b.appendChild(a[d]), y(a[d].parentNode);
            return b.innerHTML = L(b), b.normalize(), a[0].parentNode.normalize(), y(b), y(a[0].parentNode), b
        };
        c.invalidateNode = y;
        c.unwrap = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a.parentNode) {
                var b =
                    a.ownerDocument,
                    c = a.parentNode;
                if (1 < a.childNodes.length) {
                    for (b = b.createDocumentFragment(); 0 < a.childNodes.length;) b.appendChild(a.childNodes[0]);
                    c.replaceChild(b, a);
                    y(c)
                } else a.firstChild ? (c.replaceChild(a.firstChild, a), c.normalize(), y(c)) : (c.removeChild(a), c.normalize(), y(c))
            }
        };
        c.getNodeText = C;
        c.hasSkipNode = A;
        c.hasSkipTag = D;
        c.hasSkipClass = J;
        c.getText = L;
        c.getPosInText = H;
        c.markChildPos = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            L(a, function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a.isTextNode || (a.node.__pos = b)
            })
        };
        c.getNodeByTextPos = O;
        c.getCursorPos = K;
        c.setCursorPos =
            function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = O(a, b.s);
                if (!d) return !1;
                (c._shouldCache || -1 < document.location.hash.indexOf("cache")) && (d = P.clone(d));
                var e = b.s === b.e ? d : O(a, b.e);
                !d || 0 > d || 0 > e || (S ? (R(d, e), K(a).s !== b.s && 0 < d.offset && (d.offset--, e.offset--, R(d, e), d.offset++, e.offset++, R(d, e))) : R(d, e))
            };
        c.setRange = R
    }, {
        "lib/dom": 215,
        "lib/util": 322,
        lodash: "lodash"
    }],
    325: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/core-js/array/from")) && b.__esModule ? b : {
                "default": b
            },
            f = (a = a("babel-runtime/helpers/toConsumableArray")) && a.__esModule ? a : {
                "default": a
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.flatMap = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c;
            return (c = []).concat.apply(c, (0, f["default"])(b.map(a)))
        };
        c.scan = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var d = [b], e = 0; e < c.length; e++) b = a(b, c[e]), d.push(b);
            return d
        };
        c.maximum = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.reduce(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b > a ? b : a
            }, a[0])
        };
        c.maximumBy = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return 0 === a.length ? void 0 : a.reduce(function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = b(c);
                return d > a[1] ? [c, d] : a
            }, [a[0], b(a[0])])[0]
        };
        c.reverse = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.slice().reverse()
        };
        c.partition = function(a,
            b) {
            for (var c = [], d = [], f = 0, k = 0, m = 0; m < b.length; m++) a(b[m]) ? c[f++] = b[m] : d[k++] = b[m];
            return [c, d]
        };
        c.chunkBySize = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (1 > a) throw Error("Invalid chunk size, expected > 0");
            if (0 === b.length) return [
                []
            ];
            for (var c = [], d = 0; d < Math.ceil(b.length / a); d++) c.push(b.slice(d * a, (d + 1) * a));
            return c
        };
        c.unfold = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = [];
            for (b = a(b); void 0 !== b;) c.push(b[0]), b = a(b[1]);
            return c
        };
        c.range = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return void 0 !== b ? (0, d["default"])(Array(b - a), function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return c + a
            }) : (0, d["default"])(Array(a), function(a,
                b) {
                return b
            })
        }
    }, {
        "babel-runtime/core-js/array/from": 19,
        "babel-runtime/helpers/toConsumableArray": 41
    }],
    326: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var m = d(b);
        a = a("babel-runtime/helpers/inherits");
        var e = d(a);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var r = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (0, k["default"])(this,
                    b), (0, m["default"])(this, (b.__proto__ || (0, f["default"])(b)).call(this, "Assertion failed: " + (a ? "string" == typeof a ? a : a() : "(unnamed)")))
            }
            return (0, e["default"])(b, a), b
        }(Error);
        c.AssertionError = r;
        c.assert = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (!a) throw new r(b);
        };
        c.assertNonNull = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (null == a) throw new r(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b ? "Expected " + b + " to be non-null" : "Expected non-null"
            });
            return a
        }
    }, {
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39
    }],
    327: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/helpers/classCallCheck")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = a("emitter");
        c.Emitter = function m() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = this,
                b = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {};
            (0, d["default"])(this, m);
            this.on = function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a._internalEmitter.on(b, c)
            };
            this.one = function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a._internalEmitter.one(b, c)
            };
            this.off = function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a._internalEmitter.off(b,
                    c)
            };
            this.emit = function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a._internalEmitter.emit(b, c)
            };
            this.delegate = function(b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a._internalEmitter.delegate(b, c, d)
            };
            this._internalEmitter = f(b)
        }
    }, {
        "babel-runtime/helpers/classCallCheck": 34,
        emitter: "emitter"
    }],
    328: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }

        function f(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.some(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a === b
            }) ? b : void 0
        }

        function k(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = parseInt(a, 10);
            return isNaN(a) ? void 0 : a
        }
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var m = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var e = d(b);
        b = a("babel-runtime/helpers/inherits");
        var r = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var n = d(b);
        b = a("babel-runtime/helpers/createClass");
        var t = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        b = a("./assert");
        c.assert = b.assert;
        c.assertNonNull = b.assertNonNull;
        c.AssertionError = b.AssertionError;
        b = a("./promise");
        c.SafePromise = b.SafePromise;
        b = a("./array");
        c.Arr = b;
        a = a("./object");
        c.Obj = a;
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, n["default"])(this, a);
                this._getFallbackValue = b
            }
            return (0, t["default"])(a, [{
                key: "init",
                value: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (void 0 !== this._value) throw Error("Global value already initialized.");
                    this._value = a
                }
            }, {
                key: "get",
                value: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (void 0 === this._value) {
                        if (void 0 === this._getFallbackValue) throw Error("Global value not initialized and no fallback value provided.");
                        this._value = this._getFallbackValue()
                    }
                    return this._value
                }
            }]), a
        }();
        c.Global = a;
        c.optionalStringUnion = f;
        c.assertStringUnion = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = f(a, b);
            if (void 0 !== a) return a;
            throw new TypeError('Unrecognized string union value "' +
                b + '"' + (c ? " for " + c : ""));
        };
        var u = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return (0, n["default"])(this, b), (0, e["default"])(this, (b.__proto__ || (0, m["default"])(b)).call(this, "Matching not exhaustive" + (a ? ": unexpected value " + a : "")))
            }
            return (0, r["default"])(b, a), b
        }(Error);
        c.MatchingNotExhaustiveError = u;
        c.assertNever = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            throw new u(a);
        };
        c.optionalIntString = k;
        c.assertIntString = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = k(a);
            if (void 0 !== c) return c;
            throw Error("Expected a number string, got '" + a + "'" + (void 0 !== b ? " for " + b : ""));
        };
        c.try_ =
            function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                try {
                    return a()
                } catch (q) {
                    return b(q)
                }
            }
    }, {
        "./array": 325,
        "./assert": 326,
        "./object": 329,
        "./promise": 330,
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39
    }],
    329: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (a = a("babel-runtime/core-js/object/keys")) && a.__esModule ? a : {
            "default": a
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.map = function(a,
            b) {
            var c = {};
            return (0, d["default"])(b).forEach(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return c[d] = a(d, b[d])
            }), c
        };
        c.filter = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = {};
            return (0, d["default"])(b).forEach(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a(d, b[d]) && (c[d] = b[d])
            }), c
        };
        c.values = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return (0, d["default"])(a).map(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a[b]
            })
        };
        c.pairs = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return (0, d["default"])(a).map(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return [b, a[b]]
            })
        }
    }, {
        "babel-runtime/core-js/object/keys": 29
    }],
    330: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (a = a("babel-runtime/core-js/promise")) && a.__esModule ? a : {
            "default": a
        };
        Object.defineProperty(c,
            "__esModule", {
                value: !0
            });
        ! function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new d["default"](a)
            }
            a.create = b;
            a.createCompletionSource = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = void 0,
                    b = void 0;
                return {
                    promise: new d["default"](function(c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a = c;
                        b = d
                    }),
                    resolve: function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a(b)
                    },
                    reject: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        b(a)
                    }
                }
            };
            a.sync = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b(function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return b(a())
                })
            }
        }(c.SafePromise || (c.SafePromise = {}))
    }, {
        "babel-runtime/core-js/promise": 31
    }],
    331: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/json/stringify");
        var f = d(b);
        b = a("babel-runtime/core-js/object/keys");
        var k = d(b);
        b = a("babel-runtime/helpers/typeof");
        var m = d(b);
        b = a("babel-runtime/helpers/defineProperty");
        var e = d(b);
        b = a("babel-runtime/core-js/object/assign");
        var r = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var n = d(b);
        b = a("babel-runtime/regenerator");
        var t = d(b);
        a = a("babel-runtime/core-js/promise");
        var u = d(a),
            l = function(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return new(c || (c = u["default"]))(function(e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    function g(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            k(d.next(a))
                        } catch (G) {
                            f(G)
                        }
                    }

                    function h(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        try {
                            k(d["throw"](a))
                        } catch (G) {
                            f(G)
                        }
                    }

                    function k(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a.done ? e(a.value) : (new c(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b(a.value)
                        })).then(g, h)
                    }
                    k((d = d.apply(a, b || [])).next())
                })
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var g = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return l(void 0, void 0, void 0, t["default"].mark(function y() {
                var c;
                return t["default"].wrap(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (;;) switch (d.prev = d.next) {
                        case 0:
                            return d.prev = 0, d.next = 3, b.get(a);
                        case 3:
                            if (c = d.sent, "undefined" !== c) {
                                d.next = 8;
                                break
                            }
                            return d.abrupt("return", void 0);
                        case 8:
                            return d.abrupt("return", c && JSON.parse(c));
                        case 9:
                            d.next = 19;
                            break;
                        case 11:
                            if (d.prev = 11, d.t0 = d["catch"](0), !d.t0 || !d.t0.toString().includes("SyntaxError")) {
                                d.next = 18;
                                break
                            }
                            throw b.remove(a), Error("'" + a + "' has unparseable value, removing");
                        case 18:
                            throw d.t0;
                        case 19:
                        case "end":
                            return d.stop()
                    }
                }, y, this, [
                    [0, 11]
                ])
            }))
        };
        c.PrefsImpl = function v(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = this;
            (0, n["default"])(this, v);
            this._api = a;
            this.get = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return l(b, void 0, void 0, t["default"].mark(function w() {
                    var b, c, d, f = this;
                    return t["default"].wrap(function(k) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (;;) switch (k.prev = k.next) {
                            case 0:
                                if (b =
                                    Array.isArray(a), c = void 0, k.prev = 2, !b) {
                                    k.next = 11;
                                    break
                                }
                                return k.next = 7, u["default"].all(a.map(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return g(a, f._api)
                                }));
                            case 7:
                                d = k.sent;
                                c = a.reduce(function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return (0, r["default"])(a, (0, e["default"])({}, b, d[c]))
                                }, {});
                                k.next = 15;
                                break;
                            case 11:
                                return k.next = 14, g(a, this._api);
                            case 14:
                                c = k.sent;
                            case 15:
                                k.next = 21;
                                break;
                            case 17:
                                k.prev = 17, k.t0 = k["catch"](2), b && (c = {}), console.warn("prefs get error:", k.t0);
                            case 21:
                                return k.abrupt("return", c);
                            case 22:
                            case "end":
                                return k.stop()
                        }
                    }, w, this, [
                        [2, 17]
                    ])
                }))
            };
            this.set = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return l(b, void 0, void 0, t["default"].mark(function x() {
                    var b = this;
                    return t["default"].wrap(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (;;) switch (d.prev = d.next) {
                            case 0:
                                if (null === a || "object" !== ("undefined" == typeof a ? "undefined" : (0, m["default"])(a))) {
                                    d.next = 5;
                                    break
                                }
                                return d.next = 3, u["default"].all((0, k["default"])(a).map(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    return b.set(c, a[c])
                                }));
                            case 3:
                                d.next = 14;
                                break;
                            case 5:
                                return d.prev = 5, c = void 0 === c ? "undefined" : (0, f["default"])(c), d.next = 9, this._api.set(a, c);
                            case 9:
                                d.next = 14;
                                break;
                            case 11:
                                d.prev =
                                    11, d.t0 = d["catch"](5), console.warn("prefs set error", d.t0);
                            case 14:
                            case "end":
                                return d.stop()
                        }
                    }, x, this, [
                        [5, 11]
                    ])
                }))
            };
            this.all = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return l(b, void 0, void 0, t["default"].mark(function h() {
                    var a, b, c;
                    return t["default"].wrap(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (;;) switch (d.prev = d.next) {
                            case 0:
                                return d.next = 2, this._api.getAll();
                            case 2:
                                a = d.sent;
                                for (b in a)
                                    if ("undefined" === a[b]) a[b] = void 0;
                                    else try {
                                        c = a[b], a[b] = c && JSON.parse(c)
                                    } catch (G) {}
                                return d.abrupt("return", a);
                            case 5:
                            case "end":
                                return d.stop()
                        }
                    }, h, this)
                }))
            };
            this.remove =
                function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    try {
                        return b._api.remove(a)
                    } catch (h) {
                        return console.warn("prefs remove error", h), u["default"].resolve()
                    }
                };
            this.clearAll = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                try {
                    return b._api.removeAll()["catch"](function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return console.warn("prefs clearAll error", a)
                    })
                } catch (z) {
                    return console.warn("prefs clearAll error", z), u["default"].resolve()
                }
            }
        }
    }, {
        "babel-runtime/core-js/json/stringify": 22,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/core-js/object/keys": 29,
        "babel-runtime/core-js/promise": 31,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/defineProperty": 36,
        "babel-runtime/helpers/typeof": 42,
        "babel-runtime/regenerator": 43
    }],
    332: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b = (b = a("babel-runtime/core-js/object/assign")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("./user/actions"),
            f = a("./settings/actions");
        a = a("./connection/actions");
        c.pureActions = (0, b["default"])({}, d, a, f)
    }, {
        "./connection/actions": 333,
        "./settings/actions": 335,
        "./user/actions": 339,
        "babel-runtime/core-js/object/assign": 24
    }],
    333: [function(a,
        b, c) {
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.t = {
            UPDATE_CONNECTION: "connection/UPDATE_CONNECTION",
            ONLINE_STATE: "connection/ONLINE_STATE"
        };
        c.updateConnection = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.UPDATE_CONNECTION,
                data: a
            }
        };
        c.onlineConnection = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.ONLINE_STATE,
                online: a
            }
        }
    }, {}],
    334: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/core-js/object/assign")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = a("./actions");
        c.defaultConnection = {
            networkOffline: !window.navigator.onLine,
            cookiesDisabled: !1 === navigator.cookieEnabled,
            online: !0
        };
        c.connectionReducer = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : c.defaultConnection,
                b = arguments[1],
                e = b.data,
                r = b.online;
            switch (b.type) {
                case f.t.ONLINE_STATE:
                    return (0, d["default"])({}, a, {
                        online: r
                    });
                case f.t.UPDATE_CONNECTION:
                    return (0, d["default"])({}, a, e);
                default:
                    return a
            }
        }
    }, {
        "./actions": 333,
        "babel-runtime/core-js/object/assign": 24
    }],
    335: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.t = {
            SETTINGS_INITIAL: "settings/SETTINGS_INITIAL",
            TOGGLE_DEFS: "settings/TOGGLE_DEFS",
            TOGGLE_SITE: "settings/TOGGLE_SITE",
            TOGGLE_FIELD: "settings/TOGGLE_FIELD",
            TOGGLE_POPUP: "settings/TOGGLE_POPUP",
            DISABLE_ON_TAB: "settings/DISABLE_ON_TAB",
            SHOW_DISABLE_REMINDER: "settings/SHOW_DISABLE_REMINDER",
            SHOW_NEWS: "settings/SHOW_NEWS",
            SEEN_NEWS: "settings/SEEN_NEWS",
            SEEN_REFERRALS: "settings/SEEN_REFERRALS",
            CLICK_REFERRALS: "settings/CLICK_REFERRALS",
            SHOW_ONBOARDING: "settings/SHOW_ONBOARDING",
            SEEN_ONBOARDING: "settings/SEEN_ONBOARDING",
            SET_DAPI_PROP: "settings/SET_DAPI_PROP",
            CHANGE_STRONG_DIALECT: "settings/CHANGE_STRONG_DIALECT",
            SAVE_ANONYMOUS_PROPERTIES: "settings/SAVE_ANONYMOUS_PROPERTIES",
            ENABLE_EMAIL_FEEDBACK: "settings/ENABLE_EMAIL_FEEDBACK",
            SAVE_FEEDBACK_DATA: "settings/SAVE_FEEDBACK_DATA",
            SEEN_EMAIL_PERCEPTION_POPUP: "settings/EMAIL_PERCEPTION_POPUP_SEEN",
            SET_EMAIL_PERCEPTION_POPUP_STATE: "settings/SET_EMAIL_PERCEPTION_POPUP_STATE"
        };
        c.DAPI_ACTIONS = [c.t.CHANGE_STRONG_DIALECT];
        c.CACHED_ACTIONS = [c.t.TOGGLE_DEFS, c.t.TOGGLE_SITE, c.t.TOGGLE_FIELD, c.t.SEEN_NEWS, c.t.SEEN_REFERRALS,
            c.t.CLICK_REFERRALS, c.t.SHOW_ONBOARDING, c.t.SEEN_ONBOARDING, c.t.SEEN_EMAIL_PERCEPTION_POPUP, c.t.SET_EMAIL_PERCEPTION_POPUP_STATE, c.t.SHOW_DISABLE_REMINDER
        ];
        c.setDapiProp = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.SET_DAPI_PROP,
                propKey: a,
                data: b
            }
        };
        c.changeStrongDialect = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.CHANGE_STRONG_DIALECT,
                data: a
            }
        };
        c.initialSettings = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.SETTINGS_INITIAL,
                data: a
            }
        };
        c.toggleDefs = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.TOGGLE_DEFS,
                enabledDefs: a
            }
        };
        c.toggleSite = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.TOGGLE_SITE,
                domain: b,
                enabled: a
            }
        };
        c.toggleField = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.TOGGLE_FIELD,
                domain: b,
                data: a
            }
        };
        c.seenNews = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.SEEN_NEWS
            }
        };
        c.showOnboarding = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.SHOW_ONBOARDING
            }
        };
        c.seenOnboarding = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.SEEN_ONBOARDING
            }
        };
        c.showNews = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.SHOW_NEWS,
                showNews: a
            }
        };
        c.seenReferrals = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.SEEN_REFERRALS
            }
        };
        c.clickReferrals = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.CLICK_REFERRALS
            }
        };
        c.togglePopup = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.TOGGLE_POPUP,
                isPopupDisabled: a
            }
        };
        c.enableEmailFeedback = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.ENABLE_EMAIL_FEEDBACK,
                domain: a
            }
        };
        c.saveAnonymousProps = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.SAVE_ANONYMOUS_PROPERTIES,
                props: a
            }
        };
        c.seenEmailPerceptionPopup = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.SEEN_EMAIL_PERCEPTION_POPUP,
                seenEmailPerceptionPopupDate: a
            }
        };
        c.disableEmailPerceptionPopup = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.SET_EMAIL_PERCEPTION_POPUP_STATE,
                emailPerceptionPopupEnabled: !1
            }
        };
        c.enableEmailPerceptionPopup = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.SET_EMAIL_PERCEPTION_POPUP_STATE,
                emailPerceptionPopupEnabled: !0
            }
        };
        c.saveFeedbackData = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.SAVE_FEEDBACK_DATA,
                subject: a,
                docId: b
            }
        };
        c.disableOnTab = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.DISABLE_ON_TAB
            }
        };
        c.showDisableReminder = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.SHOW_DISABLE_REMINDER,
                domain: a
            }
        }
    }, {}],
    336: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/helpers/defineProperty")) && b.__esModule ? b : {
                "default": b
            },
            f = (b = a("babel-runtime/core-js/object/assign")) && b.__esModule ? b : {
                "default": b
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var k =
            a("lib/config"),
            m = a("./actions");
        c.settingsReducer = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
                b = arguments[1],
                c = b.data;
            c = void 0 === c ? {} : c;
            var t = b.domain,
                u = b.enabledDefs,
                l = b.enabled,
                g = b.showNews,
                q = b.isPopupDisabled,
                v = b.seenEmailPerceptionPopupDate,
                p = b.emailPerceptionPopupEnabled,
                y = b.propKey,
                z = a[t] || {};
            switch (b.type) {
                case m.t.SETTINGS_INITIAL:
                    return (0, f["default"])({}, a, c);
                case m.t.TOGGLE_DEFS:
                    return (0, f["default"])({}, a, {
                        common: (0, f["default"])({}, a.common, {
                            enabledDefs: u
                        })
                    });
                case m.t.TOGGLE_SITE:
                    return (0, f["default"])({}, a, (0, d["default"])({}, t, (0, f["default"])({}, z, {
                        enabled: l,
                        disabledDate: !0 === l ? null : Date.now()
                    })));
                case m.t.TOGGLE_FIELD:
                    return (0, f["default"])({}, a, (0, d["default"])({}, t, (0, f["default"])({}, a[t], {
                        disabledFields: (0, f["default"])({}, z.disabledFields, c)
                    })));
                case m.t.ENABLE_EMAIL_FEEDBACK:
                    return (0, f["default"])({}, a, (0, d["default"])({}, t, (0, f["default"])({}, a[t], {
                        emailFeedbackEnabled: !0
                    })));
                case m.t.SHOW_NEWS:
                    return (0, f["default"])({}, a, {
                        common: (0, f["default"])({},
                            a.common, {
                                showNews: g
                            })
                    });
                case m.t.SHOW_ONBOARDING:
                    return (0, f["default"])({}, a, {
                        common: (0, f["default"])({}, a.common, {
                            showOnboarding: !0
                        })
                    });
                case m.t.SEEN_ONBOARDING:
                    return (0, f["default"])({}, a, {
                        common: (0, f["default"])({}, a.common, {
                            showOnboarding: !1
                        })
                    });
                case m.t.SEEN_EMAIL_PERCEPTION_POPUP:
                    return (0, f["default"])({}, a, {
                        common: (0, f["default"])({}, a.common, {
                            seenEmailPerceptionPopupDate: v
                        })
                    });
                case m.t.SET_EMAIL_PERCEPTION_POPUP_STATE:
                    return (0, f["default"])({}, a, {
                        common: (0, f["default"])({}, a.common, {
                            emailPerceptionPopupEnabled: p
                        })
                    });
                case m.t.SEEN_NEWS:
                    return (0, f["default"])({}, a, {
                        common: (0, f["default"])({}, a.common, {
                            seenNewsVersion: k.newsId
                        })
                    });
                case m.t.TOGGLE_POPUP:
                    return (0, f["default"])({}, a, {
                        common: (0, f["default"])({}, a.common, {
                            isPopupDisabled: q
                        })
                    });
                case m.t.SEEN_REFERRALS:
                    return (0, f["default"])({}, a, {
                        common: (0, f["default"])({}, a.common, {
                            referralNewsBadge: !0
                        })
                    });
                case m.t.CLICK_REFERRALS:
                    return (0, f["default"])({}, a, {
                        common: (0, f["default"])({}, a.common, {
                            referralWasClicked: !0
                        })
                    });
                case m.t.SET_DAPI_PROP:
                    return (0, f["default"])({},
                        a, {
                            common: (0, f["default"])({}, a.common, (0, d["default"])({}, y, c))
                        });
                case m.t.SHOW_DISABLE_REMINDER:
                    return (0, f["default"])({}, a, (0, d["default"])({}, t, (0, f["default"])({}, z, {
                        disabledDate: Date.now()
                    })));
                default:
                    return a
            }
        }
    }, {
        "./actions": 335,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/helpers/defineProperty": 36,
        "lib/config": 211
    }],
    337: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.t = {
            SET_ACTIVE_TAB: "tabs/SET_ACTIVE_TAB"
        };
        c.setActiveTab = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.SET_ACTIVE_TAB,
                data: a
            }
        }
    }, {}],
    338: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/core-js/object/assign")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = a("./actions");
        c.tabsReducer = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
                b = arguments[1],
                c = b.data;
            switch (b.type) {
                case f.t.SET_ACTIVE_TAB:
                    return (0, d["default"])({}, a, {
                        active: c
                    });
                default:
                    return a
            }
        }
    }, {
        "./actions": 337,
        "babel-runtime/core-js/object/assign": 24
    }],
    339: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c,
            "__esModule", {
                value: !0
            });
        c.t = {
            SET_USER: "user/SET_USER",
            SET_SETTINGS: "user/SET_SETTINGS",
            SESSION_INVALIDATE: "user/SESSION_INVALIDATE",
            INC_FIXED: "user/INC_FIXED"
        };
        c.setUser = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.SET_USER,
                data: a
            }
        };
        c.setSettings = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.SET_SETTINGS,
                data: a
            }
        };
        c.sessionInvalidate = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.SESSION_INVALIDATE,
                reason: a
            }
        };
        c.incFixed = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return {
                type: c.t.INC_FIXED
            }
        }
    }, {}],
    340: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/core-js/object/assign")) && b.__esModule ? b : {
            "default": b
        };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = a("./actions");
        c.defaultUser = {
            anonymous: !0,
            premium: !1
        };
        c.userReducer = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : c.defaultUser,
                b = arguments[1],
                e = b.data;
            e = void 0 === e ? {} : e;
            switch (b.type) {
                case f.t.SET_USER:
                    return e;
                case f.t.SET_SETTINGS:
                    return (0, d["default"])({}, a, {
                        settings: e
                    });
                case f.t.INC_FIXED:
                    return b = a.fixed_errors + 1, (0, d["default"])({}, a, {
                        fixed_errors: b
                    });
                default:
                    return a
            }
        }
    }, {
        "./actions": 339,
        "babel-runtime/core-js/object/assign": 24
    }],
    341: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }

        function f(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = n.combineReducers({
                    user: g.userReducer,
                    tabs: q.tabsReducer,
                    settings: l.settingsReducer,
                    connection: u.connectionReducer
                }),
                c = r({
                    level: "debug",
                    colors: {
                        title: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return "green"
                        }
                    }
                });
            return n.createStore(b, {}, n.applyMiddleware(a, c))
        }
        b = a("babel-runtime/regenerator");
        var k = d(b);
        b = a("babel-runtime/helpers/createClass");
        var m = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var e = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var r = a("redux-logger"),
            n = a("redux"),
            t = a("redux-saga"),
            u = a("./state/connection/reducer"),
            l = a("./state/settings/reducer"),
            g = a("./state/user/reducer"),
            q = a("./state/tabs/reducer"),
            v = a("lib/config"),
            p = a("./state/actions");
        b = a("./state/actions");
        c.pureActions = b.pureActions;
        var y = a("redux-saga/effects"),
            z = a("lib/page-config");
        c.AuthSagaRunners = function w(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = this;
            (0, e["default"])(this, w);
            this._store = a;
            this._userSagas = b;
            this.refreshUser = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var a, b = arguments.length, d = Array(b),
                        e = 0; e < b; e++) d[e] = arguments[e];
                return (a = c._store).runSaga.apply(a, [c._userSagas.externalUpdateUser.bind(c._userSagas)].concat(d)).done
            };
            this.signin = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return c._store.runSaga(c._userSagas.authRequest.bind(c._userSagas), v.URLS.authSignin, a, "app_signin_success").done
            };
            this.signup = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return c._store.runSaga(c._userSagas.authRequest.bind(c._userSagas), v.URLS.authSignup, a, "app_signup_success").done
            }
        };
        c.TabsSagaRunner = function x(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = this;
            (0, e["default"])(this, x);
            this._store = a;
            this._tabsSagas =
                b;
            this.sendStateToTabs = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return c._store.runSaga(c._tabsSagas.sendStateToTabs.bind(c._tabsSagas))
            }
        };
        a = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(b, c, d, g) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var k = this;
                (0, e["default"])(this, a);
                this._userSagas = b;
                this._settingsSagas = c;
                this._tabsSagas = d;
                this._connectionSagas = g;
                var l = t["default"](b.start.bind(b), c.start.bind(c), g.start.bind(g));
                this.store = f(l);
                this.runSaga = l.run;
                this.initStore = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return l.run(k._startupFlow.bind(k)).done.then(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        k.store.subscribe(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return l.run(d.sendStateToTabs.bind(d))
                        })
                    })
                };
                this.actions = n.bindActionCreators(p.pureActions, this.store.dispatch)
            }
            return (0, m["default"])(a, [{
                key: "_startupFlow",
                value: k["default"].mark(function C() {
                    return k["default"].wrap(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (;;) switch (a.prev = a.next) {
                            case 0:
                                return a.next = 2, [y.call([this._settingsSagas, this._settingsSagas.setInitialSettings]), y.call([z.pageConfig, z.pageConfig.init]), y.call([this._userSagas, this._userSagas.updateUser], {
                                    failoverFromCache: !0
                                })];
                            case 2:
                                return a.next = 4, y.fork([this._connectionSagas, this._connectionSagas.monitorIsIncognito]);
                            case 4:
                                return a.next = 6, y.call([this._tabsSagas, this._tabsSagas.start]);
                            case 6:
                            case "end":
                                return a.stop()
                        }
                    }, C, this)
                })
            }]), a
        }();
        c.StoreControllerImpl = a
    }, {
        "./state/actions": 332,
        "./state/connection/reducer": 334,
        "./state/settings/reducer": 336,
        "./state/tabs/reducer": 338,
        "./state/user/reducer": 340,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/createClass": 35,
        "babel-runtime/regenerator": 43,
        "lib/config": 211,
        "lib/page-config": 284,
        redux: "redux",
        "redux-logger": "redux-logger",
        "redux-saga": "redux-saga",
        "redux-saga/effects": 159
    }],
    342: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a("index")
    }, {
        index: 185
    }],
    343: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = (b = a("babel-runtime/core-js/object/assign")) && b.__esModule ? b : {
                "default": b
            },
            f = (b = a("babel-runtime/helpers/classCallCheck")) && b.__esModule ? b : {
                "default": b
            };
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var k = a("universal/shared/socket"),
            m = a("lib/util"),
            e = a("emitter"),
            r = a("./socket");
        c.ContentScriptSocketManager = function t(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = this;
            (0, f["default"])(this, t);
            this._logger = a;
            this._message = b;
            this._sockets = {};
            this.createSocket = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = a.socketId || m.guid(),
                    e = {
                        socketId: b,
                        useStandBy: a.useStandBy,
                        url: a.url
                    };
                c._sockets[b] || (c._sockets[b] = new r.ContentScriptSocket(b, function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    c._message.emitBackground(k.MessageTypes.client, (0, d["default"])({}, e, {
                        method: a,
                        arg: b
                    }))
                }));
                a = c._sockets[b];
                return a.one("disconnect", function() {}), a.one("cleanup-socket-on-editor-remove", function() {
                    delete c._sockets[b]
                }), a.on("error", c._onError), a
            };
            this._onError = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                "disconnected" !== a && (c._logger.socketCsError(),
                    console.error("capi error", a), window.emit || e(window), window.emit("bgerror", a || "when send message to the socket"))
            };
            this._onMessage = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = c._sockets[a.socketId];
                if (d) {
                    var e = a.msg || {};
                    e.action && "error" === e.action.toLowerCase() && c._logger.soketCsErrorMsg(e);
                    b("ok");
                    d.emit(a.event, a.msg)
                }
            };
            b.on(k.MessageTypes.server, this._onMessage)
        }
    }, {
        "./socket": 344,
        "babel-runtime/core-js/object/assign": 24,
        "babel-runtime/helpers/classCallCheck": 34,
        emitter: "emitter",
        "lib/util": 322,
        "universal/shared/socket": 345
    }],
    344: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function d(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && a.__esModule ? a : {
                "default": a
            }
        }
        b = a("babel-runtime/core-js/object/get-prototype-of");
        var f = d(b);
        b = a("babel-runtime/helpers/classCallCheck");
        var k = d(b);
        b = a("babel-runtime/helpers/possibleConstructorReturn");
        var m = d(b);
        b = a("babel-runtime/helpers/inherits");
        var e = d(b);
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        a = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function b(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                (0, k["default"])(this, b);
                var d = (0, m["default"])(this, (b.__proto__ || (0, f["default"])(b)).call(this));
                return d.socketId =
                    a, d._send = c, d.send = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return d._send("send", a)
                    }, d.close = function() {
                        return d._send("close")
                    }, d.connect = function(a) {
                        return d._send("connect", a)
                    }, d.reconnect = function(a) {
                        return d._send("reconnect", a)
                    }, d.release = function() {
                        return d._send("release")
                    }, d.wsPlay = function() {
                        return d._send("wsPlay")
                    }, d.wsPause = function() {
                        return d._send("wsPause")
                    }, d.toString = function() {
                        return "[object SocketClient]"
                    }, d
            }
            return (0, e["default"])(b, a), b
        }(a("stdlib/emitter").Emitter);
        c.ContentScriptSocket = a
    }, {
        "babel-runtime/core-js/object/get-prototype-of": 28,
        "babel-runtime/helpers/classCallCheck": 34,
        "babel-runtime/helpers/inherits": 38,
        "babel-runtime/helpers/possibleConstructorReturn": 39,
        "stdlib/emitter": 327
    }],
    345: [function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.MessageTypes = {
            server: "socket-server",
            client: "socket-client",
            serverIframe: "socket-server-iframe",
            iframeMode: "iframe-mode"
        }
    }, {}]
}, {}, [165]);
