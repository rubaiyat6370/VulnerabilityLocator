package ReadFileAndFolders;

import java.awt.image.BufferedImageFilter;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.Scanner;
import java.util.regex.Pattern;

/**
 * Contains some methods to list files and folders from a directory
 *
 * @author Loiane Groner http://loiane.com (Portuguese) http://loianegroner.com
 *         (English)
 */
public class ListFilesUtil {
	/**
	 * List all the files and folders from a directory
	 * 
	 * @param directoryName
	 *            to be listed
	 */
	public void listFilesAndFolders(String directoryName) {
		File directory = new File(directoryName);
		// get all the files from a directory
		File[] fList = directory.listFiles();
		for (File file : fList) {
			System.out.println(file.getName());
		}
	}

	/**
	 * List all the files under a directory
	 * 
	 * @param directoryName
	 *            to be listed
	 */
	public void listFiles(String directoryName) {
		File directory = new File(directoryName);
		// get all the files from a directory
		File[] fList = directory.listFiles();
		for (File file : fList) {
			if (file.isFile()) {
				System.out.println(file.getName());
			}
		}
	}

	/**
	 * List all the folder under a directory
	 * 
	 * @param directoryName
	 *            to be listed
	 */
	public void listFolders(String directoryName) {
		File directory = new File(directoryName);
		// get all the files from a directory
		File[] fList = directory.listFiles();
		for (File file : fList) {
			if (file.isDirectory()) {
				System.out.println(file.getName());
			}
		}
	}

	/**
	 * List all files from a directory and its subdirectories
	 * 
	 * @param directoryName
	 *            to be listed
	 */
	public void listFilesAndFilesSubDirectories(String directoryName) {
		File directory = new File(directoryName);
		// get all the files from a directory
		File[] fList = directory.listFiles();
		for (File file : fList) {
			if (file.isFile()) {
				System.out.println(file.getName());
			} else if (file.isDirectory()) {
				listFilesAndFilesSubDirectories(file.getAbsolutePath());
			}
		}
	}
	
	public void splitFile(String directoryName) {
		File file = new File(directoryName);
		Scanner scanner;
		int count = 0;
		FileWriter fw;
		BufferedWriter bw = null;
		try {
			scanner = new Scanner(file);

			while (scanner.hasNextLine()) {
				String path = scanner.nextLine();
				String separator = "\\\\";
				path = path.replace("\\", "\\\\");
				String[] split = path.split(Pattern.quote(separator));
				String[] split2 = path.split(Pattern.quote("*"));
				
				
				try {
					
					if(split[0].equals("ILVD")) {
						path = split2[1];
						//System.out.println(path);
						fw = new FileWriter(path); // Do not keep previous content
						bw = new BufferedWriter(fw);
						int lineNo = Integer.parseInt(split[1]);
						for(int i=0;i<=lineNo;i++) {
							String newLine = scanner.nextLine();
							System.out.println(newLine);
							bw.write(newLine);
							bw.newLine();
							bw.flush();
						}
					}
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
				
				
			}
			System.out.println();
		} catch (FileNotFoundException e1) {
		
			e1.printStackTrace();
		}
	}

	public void appendFiles(String directoryName) {
		File directory = new File(directoryName);
		File[] fList = directory.listFiles();
		for (File file : fList) {

			if (file.isDirectory()) {
				// System.out.println("directory");
				appendFiles(file.getAbsolutePath());
			}

			else if (file.isFile()) {
				String filename = file.getName();
				String extension = filename.substring(filename.lastIndexOf(".") + 1, filename.length());
				String ex = "js";
				if (extension.equals(ex)) {
					String src = file.getParent() + "\\" + filename;
					// String src = "D:\\SPL3\\Grammarly\\test1.js";
					String dest = "D:\\SPL3\\Test\\test.js";
					File f = new File(src);
					Scanner scanner;
					int count = 0;
					try {
						scanner = new Scanner(f);

						while (scanner.hasNextLine()) {
							scanner.nextLine();
							count++;
						}
						System.out.println("Lines in the file: " + count);
					} catch (FileNotFoundException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}

					try (FileReader fr = new FileReader(src);
							FileWriter fw = new FileWriter(dest, true); // keep previous content
							BufferedWriter bw = new BufferedWriter(fw);
							BufferedReader br = new BufferedReader(fr);) {
						
						bw.newLine();
						bw.newLine();
						bw.write("ILVD\\" +count + "\\*"+ src);
						bw.newLine();
						bw.newLine();
						bw.flush();
						int c = fr.read();
						while (c != -1) {
							// System.out.println(c);
							fw.write(c);
							c = fr.read();
						}
					} catch (IOException e) {
						e.printStackTrace();
					}
				}
			}
		}

	}

	public static void main(String[] args) {
		ListFilesUtil listFilesUtil = new ListFilesUtil();
		// final String directoryLinuxMac ="/Users/loiane/test";
		// Windows directory example
		final String directoryWindows = "D:\\SPL3\\Test";
		final String directoryTest = "D:\\SPL3\\Test\\test.js";
		// listFilesUtil.listFilesAndFilesSubDirectories(directoryWindows);
		//listFilesUtil.appendFiles(directoryWindows);
		listFilesUtil.splitFile(directoryTest);
	}
}
