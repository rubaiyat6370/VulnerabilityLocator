
package Instrumentation;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class ReadJsFile
{
	public static void main ( String [ ] args ) throws IOException
	{
		/*
		 * Runtime rt = Runtime.getRuntime ( ); Process pr = rt.exec ( "cmd" );
		 * ProcessBuilder ps = new ProcessBuilder (
		 * "cmd"," java -jar \"E:/VulnerabilityLocator/VulnerabilityLocator/VulnerabilityLocator/src/closure-compiler-v20170626.jar\" --js \"E:/VulnerabilityLocator/VulnerabilityLocator/VulnerabilityLocator/src/hello.js\" --js_output_file \"E:/VulnerabilityLocator/VulnerabilityLocator/VulnerabilityLocator/src/hello-compiled.js\""
		 * ); ps.inheritIO ( ).start ( );
		 */// System.out.println("process stopped with exitCode " + exitCode);
		ProcessBuilder builder = new ProcessBuilder ( "cmd.exe" , "/c" ,
				"java -jar \"E:/VulnerabilityLocator/VulnerabilityLocator/VulnerabilityLocator/src/closure-compiler-v20170626.jar\" --js \"E:/VulnerabilityLocator/VulnerabilityLocator/VulnerabilityLocator/src/hello.js\" --js_output_file \"E:/VulnerabilityLocator/VulnerabilityLocator/VulnerabilityLocator/src/hello-compiled.js\"" );
		builder.redirectErrorStream ( true );
		Process p = builder.start ( );
		try
		{
			int code = p.waitFor ( );
			
		} catch (InterruptedException e)
		{
			
			e.printStackTrace();
		}
		
	}
}
