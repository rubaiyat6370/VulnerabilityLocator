/*
 jQuery v3.2.1 | (c) JS Foundation and other contributors | jquery.org/license */
var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.findInternal = function(n, B, C) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    n instanceof String && (n = String(n));
    for (var H = n.length, w = 0; w < H; w++) {
        var ma = n[w];
        if (B.call(C, ma, w, n)) return {
            i: w,
            v: ma
        }
    }
    return {
        i: -1,
        v: void 0
    }
};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(n, B, C) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    n != Array.prototype && n != Object.prototype && (n[B] = C.value)
};
$jscomp.getGlobal = function(n) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return "undefined" != typeof window && window === n ? n : "undefined" != typeof global && null != global ? global : n
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.polyfill = function(n, B, C, H) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    if (B) {
        C = $jscomp.global;
        n = n.split(".");
        for (H = 0; H < n.length - 1; H++) {
            var w = n[H];
            w in C || (C[w] = {});
            C = C[w]
        }
        n = n[n.length - 1];
        H = C[n];
        B = B(H);
        B != H && null != B && $jscomp.defineProperty(C, n, {
            configurable: !0,
            writable: !0,
            value: B
        })
    }
};
$jscomp.polyfill("Array.prototype.find", function(n) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    return n ? n : function(n, C) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return $jscomp.findInternal(this, n, C).v
    }
}, "es6", "es3");
! function(n, B) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
    "object" == typeof module && "object" == typeof module.exports ? module.exports = n.document ? B(n, !0) : function(n) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        if (!n.document) throw Error("jQuery requires a window with a document");
        return B(n)
    } : B(n)
}("undefined" != typeof window ? window : this, function(n, B) {
    function C(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b = b || q;
        var d = b.createElement("script");
        d.text = a;
        b.head.appendChild(d).parentNode.removeChild(d)
    }

    function H(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var b = !!a && "length" in a && a.length,
            d = c.type(a);
        return "function" !== d && !c.isWindow(a) && ("array" === d || 0 === b || "number" ==
            typeof b && 0 < b && b - 1 in a)
    }

    function w(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase()
    }

    function ma(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return c.isFunction(b) ? c.grep(a, function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return !!b.call(a, c, a) !== d
        }) : b.nodeType ? c.grep(a, function(a) {
            return a === b !== d
        }) : "string" != typeof b ? c.grep(a, function(a) {
            return -1 < aa.call(b, a) !== d
        }) : Sb.test(b) ? c.filter(b, a, d) : (b = c.filter(b, a), c.grep(a, function(a) {
            return -1 < aa.call(b, a) !== d && 1 === a.nodeType
        }))
    }

    function ab(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        for (;
            (a = a[b]) && 1 !== a.nodeType;);
        return a
    }

    function Tb(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var b = {};
        return c.each(a.match(K) || [], function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            b[c] = !0
        }), b
    }

    function na(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return a
    }

    function Ca(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        throw a;
    }

    function bb(a, b, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var f;
        try {
            a && c.isFunction(f = a.promise) ? f.call(a).done(b).fail(d) : a && c.isFunction(f = a.then) ? f.call(a, b, d) : b.apply(void 0, [a].slice(e))
        } catch (g) {
            d.apply(void 0, [g])
        }
    }

    function oa() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        q.removeEventListener("DOMContentLoaded", oa);
        n.removeEventListener("load", oa);
        c.ready()
    }

    function za() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        this.expando = c.expando + za.uid++
    }

    function cb(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var c;
        if (void 0 === d && 1 === a.nodeType)
            if (c = "data-" +
                b.replace(Ub, "-$&").toLowerCase(), d = a.getAttribute(c), "string" == typeof d) {
                try {
                    c = d, d = "true" === c || "false" !== c && ("null" === c ? null : c === +c + "" ? +c : Vb.test(c) ? JSON.parse(c) : c)
                } catch (f) {}
                F.set(a, b, d)
            } else d = void 0;
        return d
    }

    function db(a, b, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var f, g = 1,
            h = 20,
            k = e ? function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return e.cur()
            } : function() {
                return c.css(a, b, "")
            },
            l = k(),
            p = d && d[3] || (c.cssNumber[b] ? "" : "px"),
            m = (c.cssNumber[b] || "px" !== p && +l) && ea.exec(c.css(a, b));
        if (m && m[3] !== p) {
            p = p || m[3];
            d = d || [];
            m = +l || 1;
            do g = g || ".5", m /= g, c.style(a, b, m + p); while (g !== (g = k() /
                    l) && 1 !== g && --h)
        }
        return d && (m = +m || +l || 0, f = d[1] ? m + (d[1] + 1) * d[2] : +d[2], e && (e.unit = p, e.start = m, e.end = f)), f
    }

    function pa(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        for (var d, e, f = [], g = 0, h = a.length; g < h; g++)
            if (e = a[g], e.style)
                if (d = e.style.display, b) {
                    if ("none" === d && (f[g] = t.get(e, "display") || null, f[g] || (e.style.display = "")), "" === e.style.display && fa(e)) {
                        d = g;
                        var k = void 0;
                        var l = e.ownerDocument;
                        var p = e.nodeName;
                        l = (e = eb[p]) ? e : (k = l.body.appendChild(l.createElement(p)), e = c.css(k, "display"), k.parentNode.removeChild(k), "none" === e && (e = "block"), eb[p] = e, e);
                        f[d] = l
                    }
                } else "none" !== d && (f[g] = "none", t.set(e, "display", d));
        for (g = 0; g < h; g++) null != f[g] && (a[g].style.display = f[g]);
        return a
    }

    function N(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d;
        return d = "undefined" != typeof a.getElementsByTagName ? a.getElementsByTagName(b || "*") : "undefined" != typeof a.querySelectorAll ? a.querySelectorAll(b || "*") : [], void 0 === b || b && w(a, b) ? c.merge([a], d) : d
    }

    function Pa(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        for (var d = 0, c = a.length; d < c; d++) t.set(a[d], "globalEval", !b || t.get(b[d], "globalEval"))
    }

    function fb(a, b, d, e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        for (var g, h, k, l, p = b.createDocumentFragment(),
                m = [], v = 0, n = a.length; v < n; v++)
            if (g = a[v], g || 0 === g)
                if ("object" === c.type(g)) c.merge(m, g.nodeType ? [g] : g);
                else if (Wb.test(g)) {
            h = h || p.appendChild(b.createElement("div"));
            k = (gb.exec(g) || ["", ""])[1].toLowerCase();
            k = V[k] || V._default;
            h.innerHTML = k[1] + c.htmlPrefilter(g) + k[2];
            for (k = k[0]; k--;) h = h.lastChild;
            c.merge(m, h.childNodes);
            h = p.firstChild;
            h.textContent = ""
        } else m.push(b.createTextNode(g));
        p.textContent = "";
        for (v = 0; g = m[v++];)
            if (e && -1 < c.inArray(g, e)) f && f.push(g);
            else if (l = c.contains(g.ownerDocument, g), h = N(p.appendChild(g),
                "script"), l && Pa(h), d)
            for (k = 0; g = h[k++];) hb.test(g.type || "") && d.push(g);
        return p
    }

    function Ga() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return !0
    }

    function qa() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return !1
    }

    function ib() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        try {
            return q.activeElement
        } catch (a) {}
    }

    function Qa(a, b, d, e, f, g) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var h, k;
        if ("object" == typeof b) {
            "string" != typeof d && (e = e || d, d = void 0);
            for (k in b) Qa(a, k, d, e, b[k], g);
            return a
        }
        if (null == e && null == f ? (f = d, e = d = void 0) : null == f && ("string" == typeof d ? (f = e, e = void 0) : (f = e, e = d, d = void 0)), !1 === f) f = qa;
        else if (!f) return a;
        return 1 === g && (h = f, f = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return c().off(a), h.apply(this,
                arguments)
        }, f.guid = h.guid || (h.guid = c.guid++)), a.each(function() {
            c.event.add(this, b, f, e, d)
        })
    }

    function jb(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return w(a, "table") && w(11 !== b.nodeType ? b : b.firstChild, "tr") ? c(">tbody", a)[0] || a : a
    }

    function Xb(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return a.type = (null !== a.getAttribute("type")) + "/" + a.type, a
    }

    function Yb(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var b = Zb.exec(a.type);
        return b ? a.type = b[1] : a.removeAttribute("type"), a
    }

    function kb(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d, e, f, g, h, k;
        if (1 === b.nodeType) {
            if (t.hasData(a) && (d = t.access(a), e = t.set(b, d), k = d.events))
                for (f in delete e.handle, e.events = {}, k)
                    for (d =
                        0, e = k[f].length; d < e; d++) c.event.add(b, f, k[f][d]);
            F.hasData(a) && (g = F.access(a), h = c.extend({}, g), F.set(b, h))
        }
    }

    function ba(a, b, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        b = lb.apply([], b);
        var f, g, h, k = 0,
            l = a.length,
            p = l - 1,
            m = b[0],
            v = c.isFunction(m);
        if (v || 1 < l && "string" == typeof m && !r.checkClone && $b.test(m)) return a.each(function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var f = a.eq(c);
            v && (b[0] = m.call(this, c, f.html()));
            ba(f, b, d, e)
        });
        if (l && (f = fb(b, a[0].ownerDocument, !1, a, e), g = f.firstChild, 1 === f.childNodes.length && (f = g), g || e)) {
            g = c.map(N(f, "script"), Xb);
            for (h = g.length; k < l; k++) {
                var n = f;
                k !==
                    p && (n = c.clone(n, !0, !0), h && c.merge(g, N(n, "script")));
                d.call(a[k], n, k)
            }
            if (h)
                for (f = g[g.length - 1].ownerDocument, c.map(g, Yb), k = 0; k < h; k++) n = g[k], hb.test(n.type || "") && !t.access(n, "globalEval") && c.contains(f, n) && (n.src ? c._evalUrl && c._evalUrl(n.src) : C(n.textContent.replace(ac, ""), f))
        }
        return a
    }

    function mb(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        for (var e = b ? c.filter(b, a) : a, f = 0; null != (b = e[f]); f++) d || 1 !== b.nodeType || c.cleanData(N(b)), b.parentNode && (d && c.contains(b.ownerDocument, b) && Pa(N(b, "script")), b.parentNode.removeChild(b));
        return a
    }

    function ra(a,
        b, d) {
        var e, f, g, h, k = a.style;
        return d = d || Ia(a), d && (h = d.getPropertyValue(b) || d[b], "" !== h || c.contains(a.ownerDocument, a) || (h = c.style(a, b)), !r.pixelMarginRight() && Ra.test(h) && nb.test(b) && (e = k.width, f = k.minWidth, g = k.maxWidth, k.minWidth = k.maxWidth = k.width = h, h = d.width, k.width = e, k.minWidth = f, k.maxWidth = g)), void 0 !== h ? h + "" : h
    }

    function ob(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return {
            get: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a() ? void delete this.get : (this.get = b).apply(this, arguments)
            }
        }
    }

    function pb(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var b = c.cssProps[a];
        if (!b) {
            b = c.cssProps;
            a: {
                var d = a;
                if (!(d in qb)) {
                    for (var e =
                            d[0].toUpperCase() + d.slice(1), f = rb.length; f--;)
                        if (d = rb[f] + e, d in qb) break a;
                    d = void 0
                }
            }
            b = b[a] = d || a
        }
        return b
    }

    function sb(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return (a = ea.exec(b)) ? Math.max(0, a[2] - (d || 0)) + (a[3] || "px") : b
    }

    function tb(a, b, d, e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var g = 0;
        for (b = d === (e ? "border" : "content") ? 4 : "width" === b ? 1 : 0; 4 > b; b += 2) "margin" === d && (g += c.css(a, d + ha[b], !0, f)), e ? ("content" === d && (g -= c.css(a, "padding" + ha[b], !0, f)), "margin" !== d && (g -= c.css(a, "border" + ha[b] + "Width", !0, f))) : (g += c.css(a, "padding" + ha[b], !0, f), "padding" !== d && (g += c.css(a, "border" + ha[b] +
            "Width", !0, f)));
        return g
    }

    function ub(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var e, f = Ia(a),
            g = ra(a, b, f),
            h = "border-box" === c.css(a, "boxSizing", !1, f);
        return Ra.test(g) ? g : (e = h && (r.boxSizingReliable() || g === a.style[b]), "auto" === g && (g = a["offset" + b[0].toUpperCase() + b.slice(1)]), g = parseFloat(g) || 0, g + tb(a, b, d || (h ? "border" : "content"), e, f) + "px")
    }

    function M(a, b, d, c, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return new M.prototype.init(a, b, d, c, f)
    }

    function Sa() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Ja && (!1 === q.hidden && n.requestAnimationFrame ? n.requestAnimationFrame(Sa) : n.setTimeout(Sa, c.fx.interval), c.fx.tick())
    }

    function vb() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return n.setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            sa =
                void 0
        }), sa = c.now()
    }

    function Ka(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = 0,
            c = {
                height: a
            };
        for (b = b ? 1 : 0; 4 > d; d += 2 - b) {
            var f = ha[d];
            c["margin" + f] = c["padding" + f] = a
        }
        return b && (c.opacity = c.width = a), c
    }

    function wb(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        for (var c, f = (O.tweeners[b] || []).concat(O.tweeners["*"]), g = 0, h = f.length; g < h; g++)
            if (c = f[g].call(d, b, a)) return c
    }

    function bc(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d, e, f, g, h;
        for (d in a)
            if (e = c.camelCase(d), f = b[e], g = a[d], Array.isArray(g) && (f = g[1], g = a[d] = g[0]), d !== e && (a[e] = g, delete a[d]), h = c.cssHooks[e], h && "expand" in h)
                for (d in g = h.expand(g), delete a[e], g) d in
                    a || (a[d] = g[d], b[d] = f);
            else b[e] = f
    }

    function O(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var e, f = 0,
            g = O.prefilters.length,
            h = c.Deferred().always(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                delete k.elem
            }),
            k = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (e) return !1;
                var b = sa || vb();
                b = Math.max(0, l.startTime + l.duration - b);
                for (var d = 1 - (b / l.duration || 0), c = 0, f = l.tweens.length; c < f; c++) l.tweens[c].run(d);
                return h.notifyWith(a, [l, d, b]), 1 > d && f ? b : (f || h.notifyWith(a, [l, 1, 0]), h.resolveWith(a, [l]), !1)
            },
            l = h.promise({
                elem: a,
                props: c.extend({}, b),
                opts: c.extend(!0, {
                    specialEasing: {},
                    easing: c.easing._default
                }, d),
                originalProperties: b,
                originalOptions: d,
                startTime: sa || vb(),
                duration: d.duration,
                tweens: [],
                createTween: function(b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b = c.Tween(a, l.opts, b, d, l.opts.specialEasing[b] || l.opts.easing);
                    return l.tweens.push(b), b
                },
                stop: function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var d = 0,
                        c = b ? l.tweens.length : 0;
                    if (e) return this;
                    for (e = !0; d < c; d++) l.tweens[d].run(1);
                    return b ? (h.notifyWith(a, [l, 1, 0]), h.resolveWith(a, [l, b])) : h.rejectWith(a, [l, b]), this
                }
            });
        d = l.props;
        for (bc(d, l.opts.specialEasing); f < g; f++)
            if (b = O.prefilters[f].call(l, a, d, l.opts)) return c.isFunction(b.stop) && (c._queueHooks(l.elem,
                l.opts.queue).stop = c.proxy(b.stop, b)), b;
        return c.map(d, wb, l), c.isFunction(l.opts.start) && l.opts.start.call(a, l), l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always), c.fx.timer(c.extend(k, {
            elem: a,
            anim: l,
            queue: l.opts.queue
        })), l
    }

    function da(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return (a.match(K) || []).join(" ")
    }

    function U(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return a.getAttribute && a.getAttribute("class") || ""
    }

    function Ta(a, b, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var f;
        if (Array.isArray(b)) c.each(b, function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            d || cc.test(a) ? e(a, c) : Ta(a + "[" + ("object" == typeof c &&
                null != c ? b : "") + "]", c, d, e)
        });
        else if (d || "object" !== c.type(b)) e(a, b);
        else
            for (f in b) Ta(a + "[" + f + "]", b[f], d, e)
    }

    function xb(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return function(b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            "string" != typeof b && (d = b, b = "*");
            var e = 0,
                f = b.toLowerCase().match(K) || [];
            if (c.isFunction(d))
                for (; b = f[e++];) "+" === b[0] ? (b = b.slice(1) || "*", (a[b] = a[b] || []).unshift(d)) : (a[b] = a[b] || []).push(d)
        }
    }

    function yb(a, b, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function f(k) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var l;
            return g[k] = !0, c.each(a[k] || [], function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a = c(b, d, e);
                return "string" != typeof a || h || g[a] ? h ? !(l = a) : void 0 : (b.dataTypes.unshift(a),
                    f(a), !1)
            }), l
        }
        var g = {},
            h = a === Ua;
        return f(b.dataTypes[0]) || !g["*"] && f("*")
    }

    function Va(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d, e, f = c.ajaxSettings.flatOptions || {};
        for (d in b) void 0 !== b[d] && ((f[d] ? a : e || (e = {}))[d] = b[d]);
        return e && c.extend(!0, a, e), a
    }
    var ia = [],
        q = n.document,
        dc = Object.getPrototypeOf,
        W = ia.slice,
        lb = ia.concat,
        Wa = ia.push,
        aa = ia.indexOf,
        La = {},
        zb = La.toString,
        Ma = La.hasOwnProperty,
        Ab = Ma.toString,
        ec = Ab.call(Object),
        r = {},
        c = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return new c.fn.init(a, b)
        },
        fc = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
        gc = /^-ms-/,
        hc = /-([a-z])/g,
        ic = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return b.toUpperCase()
        };
    c.fn = c.prototype = {
        jquery: "3.2.1",
        constructor: c,
        length: 0,
        toArray: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return W.call(this)
        },
        get: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return null == a ? W.call(this) : 0 > a ? this[a + this.length] : this[a]
        },
        pushStack: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = c.merge(this.constructor(), a);
            return a.prevObject = this, a
        },
        each: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return c.each(this, a)
        },
        map: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.pushStack(c.map(this, function(b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.call(b, d, b)
            }))
        },
        slice: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.pushStack(W.apply(this, arguments))
        },
        first: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.eq(0)
        },
        last: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.eq(-1)
        },
        eq: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = this.length;
            a = +a + (0 > a ? b : 0);
            return this.pushStack(0 <= a && a < b ? [this[a]] : [])
        },
        end: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.prevObject || this.constructor()
        },
        push: Wa,
        sort: ia.sort,
        splice: ia.splice
    };
    c.extend = c.fn.extend = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var a, b, d, e, f = arguments[0] || {},
            g = 1,
            h = arguments.length,
            k = !1;
        "boolean" == typeof f && (k = f, f = arguments[g] || {}, g++);
        "object" == typeof f || c.isFunction(f) || (f = {});
        for (g === h && (f = this, g--); g < h; g++)
            if (null != (a = arguments[g]))
                for (b in a) {
                    var l = f[b];
                    var p =
                        a[b];
                    f !== p && (k && p && (c.isPlainObject(p) || (d = Array.isArray(p))) ? (d ? (d = !1, e = l && Array.isArray(l) ? l : []) : e = l && c.isPlainObject(l) ? l : {}, f[b] = c.extend(k, e, p)) : void 0 !== p && (f[b] = p))
                }
        return f
    };
    c.extend({
        expando: "jQuery" + ("3.2.1" + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            throw Error(a);
        },
        noop: function() {},
        isFunction: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "function" === c.type(a)
        },
        isWindow: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return null != a && a === a.window
        },
        isNumeric: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = c.type(a);
            return ("number" === b || "string" === b) && !isNaN(a -
                parseFloat(a))
        },
        isPlainObject: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b, d;
            return !(!a || "[object Object]" !== zb.call(a)) && (!(b = dc(a)) || (d = Ma.call(b, "constructor") && b.constructor, "function" == typeof d && Ab.call(d) === ec))
        },
        isEmptyObject: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b in a) return !1;
            return !0
        },
        type: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return null == a ? a + "" : "object" == typeof a || "function" == typeof a ? La[zb.call(a)] || "object" : typeof a
        },
        globalEval: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            C(a)
        },
        camelCase: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.replace(gc, "ms-").replace(hc, ic)
        },
        each: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d, c = 0;
            if (H(a))
                for (d =
                    a.length; c < d && !1 !== b.call(a[c], c, a[c]); c++);
            else
                for (c in a)
                    if (!1 === b.call(a[c], c, a[c])) break;
            return a
        },
        trim: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return null == a ? "" : (a + "").replace(fc, "")
        },
        makeArray: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            b = b || [];
            return null != a && (H(Object(a)) ? c.merge(b, "string" == typeof a ? [a] : a) : Wa.call(b, a)), b
        },
        inArray: function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return null == b ? -1 : aa.call(b, a, d)
        },
        merge: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var d = +b.length, c = 0, f = a.length; c < d; c++) a[f++] = b[c];
            return a.length = f, a
        },
        grep: function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var c = [], f = 0, g = a.length, h = !d; f < g; f++) d = !b(a[f],
                f), d !== h && c.push(a[f]);
            return c
        },
        map: function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c, f = 0,
                g = [];
            if (H(a))
                for (c = a.length; f < c; f++) {
                    var h = b(a[f], f, d);
                    null != h && g.push(h)
                } else
                    for (f in a) h = b(a[f], f, d), null != h && g.push(h);
            return lb.apply([], g)
        },
        guid: 1,
        proxy: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d, e, f;
            if ("string" == typeof b && (d = a[b], b = a, a = d), c.isFunction(a)) return e = W.call(arguments, 2), f = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a.apply(b || this, e.concat(W.call(arguments)))
            }, f.guid = a.guid = a.guid || c.guid++, f
        },
        now: Date.now,
        support: r
    });
    "function" == typeof Symbol && (c.fn[Symbol.iterator] =
        ia[Symbol.iterator]);
    c.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        La["[object " + b + "]"] = b.toLowerCase()
    });
    var la = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function b(a, b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var e, f, g, x, h = b && b.ownerDocument,
                L = b ? b.nodeType : 9;
            if (c = c || [], "string" != typeof a || !a || 1 !== L && 9 !== L && 11 !== L) return c;
            if (!d && ((b ? b.ownerDocument || b : X) !== E && Aa(b), b = b || E, Y)) {
                if (11 !== L && (x = za.exec(a)))
                    if (e = x[1])
                        if (9 === L) {
                            if (!(f = b.getElementById(e))) return c;
                            if (f.id === e) return c.push(f), c
                        } else {
                            if (h && (f = h.getElementById(e)) &&
                                Fa(b, f) && f.id === e) return c.push(f), c
                        }
                else {
                    if (x[2]) return ua.apply(c, b.getElementsByTagName(a)), c;
                    if ((e = x[3]) && P.getElementsByClassName && b.getElementsByClassName) return ua.apply(c, b.getElementsByClassName(e)), c
                }
                if (!(!P.qsa || H[a + " "] || T && T.test(a))) {
                    if (1 !== L) {
                        h = b;
                        var k = a
                    } else if ("object" !== b.nodeName.toLowerCase()) {
                        (g = b.getAttribute("id")) ? g = g.replace(ra, xa): b.setAttribute("id", g = z);
                        f = fa(a);
                        for (e = f.length; e--;) f[e] = "#" + g + " " + Ha(f[e]);
                        k = f.join(",");
                        h = ea.test(a) && n(b.parentNode) || b
                    }
                    if (k) try {
                        return ua.apply(c,
                            h.querySelectorAll(k)), c
                    } catch (Mc) {} finally {
                        g === z && b.removeAttribute("id")
                    }
                }
            }
            return Q(a.replace(W, "$1"), b, c, d)
        }

        function c() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function a(c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b.push(c + " ") > D.cacheLength && delete a[b.shift()], a[c + " "] = d
            }
            var b = [];
            return a
        }

        function e(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a[z] = !0, a
        }

        function f(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = E.createElement("fieldset");
            try {
                return !!a(b)
            } catch (G) {
                return !1
            } finally {
                b.parentNode && b.parentNode.removeChild(b)
            }
        }

        function g(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a.split("|");
            for (var c = a.length; c--;) D.attrHandle[a[c]] = b
        }

        function h(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = b && a,
                d = c && 1 ===
                a.nodeType && 1 === b.nodeType && a.sourceIndex - b.sourceIndex;
            if (d) return d;
            if (c)
                for (; c = c.nextSibling;)
                    if (c === b) return -1;
            return a ? 1 : -1
        }

        function k(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "input" === b.nodeName.toLowerCase() && b.type === a
            }
        }

        function l(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = b.nodeName.toLowerCase();
                return ("input" === c || "button" === c) && b.type === a
            }
        }

        function p(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return "form" in b ? b.parentNode && !1 === b.disabled ? "label" in b ? "label" in b.parentNode ? b.parentNode.disabled === a : b.disabled === a : b.isDisabled === a ||
                    b.isDisabled !== !a && Ba(b) === a : b.disabled === a : "label" in b && b.disabled === a
            }
        }

        function m(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return e(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b = +b, e(function(c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (var e, f = a([], c.length, b), g = f.length; g--;) c[e = f[g]] && (c[e] = !(d[e] = c[e]))
                })
            })
        }

        function n(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a && "undefined" != typeof a.getElementsByTagName && a
        }

        function t() {}

        function Ha(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b = 0, c = a.length, d = ""; b < c; b++) d += a[b].value;
            return d
        }

        function u(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = b.dir,
                e = b.next,
                f = e || d,
                g = c && "parentNode" === f,
                h = N++;
            return b.first ? function(b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (; b = b[d];)
                    if (1 === b.nodeType ||
                        g) return a(b, c, e);
                return !1
            } : function(b, c, x) {
                var k, l, m, L = [I, h];
                if (x)
                    for (; b = b[d];) {
                        if ((1 === b.nodeType || g) && a(b, c, x)) return !0
                    } else
                        for (; b = b[d];)
                            if (1 === b.nodeType || g)
                                if (m = b[z] || (b[z] = {}), l = m[b.uniqueID] || (m[b.uniqueID] = {}), e && e === b.nodeName.toLowerCase()) b = b[d] || b;
                                else {
                                    if ((k = l[f]) && k[0] === I && k[1] === h) return L[2] = k[2];
                                    if (l[f] = L, L[2] = a(b, c, x)) return !0
                                }
                return !1
            }
        }

        function q(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return 1 < a.length ? function(b, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var e = a.length; e--;)
                    if (!a[e](b, c, d)) return !1;
                return !0
            } : a[0]
        }

        function y(a, b, c, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var f,
                    g = [], h = 0, x = a.length, k = null != b; h < x; h++)(f = a[h]) && (c && !c(f, d, e) || (g.push(f), k && b.push(h)));
            return g
        }

        function r(a, c, d, f, g, h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return f && !f[z] && (f = r(f)), g && !g[z] && (g = r(g, h)), e(function(e, h, x, k) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var l, m = [],
                    L = [],
                    ta = h.length,
                    G;
                if (!(G = e)) {
                    G = c || "*";
                    for (var p = x.nodeType ? [x] : x, Ea = [], Da = 0, n = p.length; Da < n; Da++) b(G, p[Da], Ea);
                    G = Ea
                }
                G = !a || !e && c ? G : y(G, m, a, x, k);
                p = d ? g || (e ? a : ta || f) ? [] : h : G;
                if (d && d(G, p, x, k), f) {
                    var v = y(p, L);
                    f(v, [], x, k);
                    for (x = v.length; x--;)(l = v[x]) && (p[L[x]] = !(G[L[x]] = l))
                }
                if (e) {
                    if (g || a) {
                        if (g) {
                            v = [];
                            for (x = p.length; x--;)(l =
                                p[x]) && v.push(G[x] = l);
                            g(null, p = [], v, k)
                        }
                        for (x = p.length; x--;)(l = p[x]) && -1 < (v = g ? U(e, l) : m[x]) && (e[v] = !(h[v] = l))
                    }
                } else p = y(p === h ? p.splice(ta, p.length) : p), g ? g(null, h, p, k) : ua.apply(h, p)
            })
        }

        function w(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b, c, d = a.length,
                e = D.relative[a[0].type];
            var f = e || D.relative[" "];
            for (var g = e ? 1 : 0, h = u(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a === b
                }, f, !0), x = u(function(a) {
                    return -1 < U(b, a)
                }, f, !0), k = [function(a, c, d) {
                    a = !e && (d || c !== S) || ((b = c).nodeType ? h(a, c, d) : x(a, c, d));
                    return b = null, a
                }]; g < d; g++)
                if (f = D.relative[a[g].type]) k = [u(q(k), f)];
                else {
                    if (f =
                        D.filter[a[g].type].apply(null, a[g].matches), f[z]) {
                        for (c = ++g; c < d && !D.relative[a[c].type]; c++);
                        return r(1 < g && q(k), 1 < g && Ha(a.slice(0, g - 1).concat({
                            value: " " === a[g - 2].type ? "*" : ""
                        })).replace(W, "$1"), f, g < c && w(a.slice(g, c)), c < d && w(a = a.slice(c)), c < d && Ha(a))
                    }
                    k.push(f)
                }
            return q(k)
        }

        function A(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = 0 < c.length,
                f = 0 < a.length,
                g = function(e, g, h, x, k) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var l, m, L = 0,
                        G = "0",
                        ta = e && [],
                        p = [],
                        Ea = S,
                        n = e || f && D.find.TAG("*", k),
                        Da = I += null == Ea ? 1 : Math.random() || .1,
                        v = n.length;
                    for (k && (S = g === E || g || k); G !== v && null != (l = n[G]); G++) {
                        if (f &&
                            l) {
                            var u = 0;
                            for (g || l.ownerDocument === E || (Aa(l), h = !Y); m = a[u++];)
                                if (m(l, g || E, h)) {
                                    x.push(l);
                                    break
                                }
                            k && (I = Da)
                        }
                        d && ((l = !m && l) && L--, e && ta.push(l))
                    }
                    if (L += G, d && G !== L) {
                        for (u = 0; m = c[u++];) m(ta, p, g, h);
                        if (e) {
                            if (0 < L)
                                for (; G--;) ta[G] || p[G] || (p[G] = ca.call(x));
                            p = y(p)
                        }
                        ua.apply(x, p);
                        k && !e && 0 < p.length && 1 < L + c.length && b.uniqueSort(x)
                    }
                    return k && (I = Da, S = Ea), ta
                };
            return d ? e(g) : g
        }
        var R, B, Q, S, va, C, E, Z, Y, T, J, F, Fa, z = "sizzle" + 1 * new Date,
            X = a.document,
            I = 0,
            N = 0,
            M = c(),
            Cb = c(),
            H = c(),
            K = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a === b && (C = !0), 0
            },
            V = {}.hasOwnProperty,
            O = [],
            ca = O.pop,
            ha = O.push,
            ua = O.push,
            da = O.slice,
            U = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var c = 0, d = a.length; c < d; c++)
                    if (a[c] === b) return c;
                return -1
            },
            ia = /[\x20\t\r\n\f]+/g,
            W = /^[\x20\t\r\n\f]+|((?:^|[^\\])(?:\\.)*)[\x20\t\r\n\f]+$/g,
            la = /^[\x20\t\r\n\f]*,[\x20\t\r\n\f]*/,
            ma = /^[\x20\t\r\n\f]*([>+~]|[\x20\t\r\n\f])[\x20\t\r\n\f]*/,
            na = /=[\x20\t\r\n\f]*([^\]'"]*?)[\x20\t\r\n\f]*\]/g,
            pa = /:((?:\\.|[\w-]|[^\x00-\xa0])+)(?:\((('((?:\\.|[^\\'])*)'|"((?:\\.|[^\\"])*)")|((?:\\.|[^\\()[\]]|\[[\x20\t\r\n\f]*((?:\\.|[\w-]|[^\x00-\xa0])+)(?:[\x20\t\r\n\f]*([*^$|!~]?=)[\x20\t\r\n\f]*(?:'((?:\\.|[^\\'])*)'|"((?:\\.|[^\\"])*)"|((?:\\.|[\w-]|[^\x00-\xa0])+))|)[\x20\t\r\n\f]*\])*)|.*)\)|)/,
            qa = /^(?:\\.|[\w-]|[^\x00-\xa0])+$/,
            ba = {
                ID: /^#((?:\\.|[\w-]|[^\x00-\xa0])+)/,
                CLASS: /^\.((?:\\.|[\w-]|[^\x00-\xa0])+)/,
                TAG: /^((?:\\.|[\w-]|[^\x00-\xa0])+|[*])/,
                ATTR: /^\[[\x20\t\r\n\f]*((?:\\.|[\w-]|[^\x00-\xa0])+)(?:[\x20\t\r\n\f]*([*^$|!~]?=)[\x20\t\r\n\f]*(?:'((?:\\.|[^\\'])*)'|"((?:\\.|[^\\"])*)"|((?:\\.|[\w-]|[^\x00-\xa0])+))|)[\x20\t\r\n\f]*\]/,
                PSEUDO: /^:((?:\\.|[\w-]|[^\x00-\xa0])+)(?:\((('((?:\\.|[^\\'])*)'|"((?:\\.|[^\\"])*)")|((?:\\.|[^\\()[\]]|\[[\x20\t\r\n\f]*((?:\\.|[\w-]|[^\x00-\xa0])+)(?:[\x20\t\r\n\f]*([*^$|!~]?=)[\x20\t\r\n\f]*(?:'((?:\\.|[^\\'])*)'|"((?:\\.|[^\\"])*)"|((?:\\.|[\w-]|[^\x00-\xa0])+))|)[\x20\t\r\n\f]*\])*)|.*)\)|)/,
                CHILD: /^:(only|first|last|nth|nth-last)-(child|of-type)(?:\([\x20\t\r\n\f]*(even|odd|(([+-]|)(\d*)n|)[\x20\t\r\n\f]*(?:([+-]|)[\x20\t\r\n\f]*(\d+)|))[\x20\t\r\n\f]*\)|)/i,
                bool: /^(?:checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped)$/i,
                needsContext: /^[\x20\t\r\n\f]*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\([\x20\t\r\n\f]*((?:-\d)?\d*)[\x20\t\r\n\f]*\)|)(?=[^-]|$)/i
            },
            sa = /^(?:input|select|textarea|button)$/i,
            wa = /^h\d$/i,
            aa =
            /^[^{]+\{\s*\[native \w/,
            za = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
            ea = /[+~]/,
            ja = /\\([\da-f]{1,6}[\x20\t\r\n\f]?|([\x20\t\r\n\f])|.)/ig,
            ka = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                a = "0x" + b - 65536;
                return a !== a || c ? b : 0 > a ? String.fromCharCode(a + 65536) : String.fromCharCode(a >> 10 | 55296, 1023 & a | 56320)
            },
            ra = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
            xa = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return b ? "\x00" === a ? "\ufffd" : a.slice(0, -1) + "\\" + a.charCodeAt(a.length - 1).toString(16) + " " : "\\" + a
            },
            ya = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                Aa()
            },
            Ba = u(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return !0 === a.disabled && ("form" in
                    a || "label" in a)
            }, {
                dir: "parentNode",
                next: "legend"
            });
        try {
            ua.apply(O = da.call(X.childNodes), X.childNodes), O[X.childNodes.length].nodeType
        } catch (x) {
            ua = {
                apply: O.length ? function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    ha.apply(a, da.call(b))
                } : function(a, b) {
                    for (var c = a.length, d = 0; a[c++] = b[d++];);
                    a.length = c - 1
                }
            }
        }
        var P = b.support = {};
        var Ca = b.isXML = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a && (a.ownerDocument || a).documentElement;
            return !!a && "HTML" !== a.nodeName
        };
        var Aa = b.setDocument = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b, c;
            a = a ? a.ownerDocument || a : X;
            return a !== E && 9 === a.nodeType && a.documentElement ?
                (E = a, Z = E.documentElement, Y = !Ca(E), X !== E && (c = E.defaultView) && c.top !== c && (c.addEventListener ? c.addEventListener("unload", ya, !1) : c.attachEvent && c.attachEvent("onunload", ya)), P.attributes = f(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return a.className = "i", !a.getAttribute("className")
                    }), P.getElementsByTagName = f(function(a) {
                        return a.appendChild(E.createComment("")), !a.getElementsByTagName("*").length
                    }), P.getElementsByClassName = aa.test(E.getElementsByClassName), P.getById = f(function(a) {
                        return Z.appendChild(a).id = z, !E.getElementsByName ||
                            !E.getElementsByName(z).length
                    }), P.getById ? (D.filter.ID = function(a) {
                        var b = a.replace(ja, ka);
                        return function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return a.getAttribute("id") === b
                        }
                    }, D.find.ID = function(a, b) {
                        if ("undefined" != typeof b.getElementById && Y) return (a = b.getElementById(a)) ? [a] : []
                    }) : (D.filter.ID = function(a) {
                        var b = a.replace(ja, ka);
                        return function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return (a = "undefined" != typeof a.getAttributeNode && a.getAttributeNode("id")) && a.value === b
                        }
                    }, D.find.ID = function(a, b) {
                        if ("undefined" != typeof b.getElementById && Y) {
                            var c, d = b.getElementById(a);
                            if (d) {
                                if (c = d.getAttributeNode("id"), c && c.value === a) return [d];
                                var e = b.getElementsByName(a);
                                for (b = 0; d = e[b++];)
                                    if (c = d.getAttributeNode("id"), c && c.value === a) return [d]
                            }
                            return []
                        }
                    }), D.find.TAG = P.getElementsByTagName ? function(a, b) {
                        return "undefined" != typeof b.getElementsByTagName ? b.getElementsByTagName(a) : P.qsa ? b.querySelectorAll(a) : void 0
                    } : function(a, b) {
                        var c = [],
                            d = 0;
                        b = b.getElementsByTagName(a);
                        if ("*" === a) {
                            for (; a = b[d++];) 1 === a.nodeType && c.push(a);
                            return c
                        }
                        return b
                    }, D.find.CLASS = P.getElementsByClassName && function(a,
                        b) {
                        if ("undefined" != typeof b.getElementsByClassName && Y) return b.getElementsByClassName(a)
                    }, J = [], T = [], (P.qsa = aa.test(E.querySelectorAll)) && (f(function(a) {
                        Z.appendChild(a).innerHTML = "<a id='" + z + "'></a><select id='" + z + "-\r\\' msallowcapture=''><option selected=''></option></select>";
                        a.querySelectorAll("[msallowcapture^='']").length && T.push("[*^$]=[\\x20\\t\\r\\n\\f]*(?:''|\"\")");
                        a.querySelectorAll("[selected]").length || T.push("\\[[\\x20\\t\\r\\n\\f]*(?:value|checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped)");
                        a.querySelectorAll("[id~=" + z + "-]").length || T.push("~=");
                        a.querySelectorAll(":checked").length || T.push(":checked");
                        a.querySelectorAll("a#" + z + "+*").length || T.push(".#.+[+~]")
                    }), f(function(a) {
                        a.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                        var b = E.createElement("input");
                        b.setAttribute("type", "hidden");
                        a.appendChild(b).setAttribute("name", "D");
                        a.querySelectorAll("[name=d]").length && T.push("name[\\x20\\t\\r\\n\\f]*[*^$|!~]?=");
                        2 !== a.querySelectorAll(":enabled").length &&
                            T.push(":enabled", ":disabled");
                        Z.appendChild(a).disabled = !0;
                        2 !== a.querySelectorAll(":disabled").length && T.push(":enabled", ":disabled");
                        a.querySelectorAll("*,:x");
                        T.push(",.*:")
                    })), (P.matchesSelector = aa.test(F = Z.matches || Z.webkitMatchesSelector || Z.mozMatchesSelector || Z.oMatchesSelector || Z.msMatchesSelector)) && f(function(a) {
                        P.disconnectedMatch = F.call(a, "*");
                        F.call(a, "[s!='']:x");
                        J.push("!=", ":((?:\\\\.|[\\w-]|[^\x00-\\xa0])+)(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|\\[[\\x20\\t\\r\\n\\f]*((?:\\\\.|[\\w-]|[^\x00-\\xa0])+)(?:[\\x20\\t\\r\\n\\f]*([*^$|!~]?=)[\\x20\\t\\r\\n\\f]*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|((?:\\\\.|[\\w-]|[^\x00-\\xa0])+))|)[\\x20\\t\\r\\n\\f]*\\])*)|.*)\\)|)")
                    }),
                    T = T.length && new RegExp(T.join("|")), J = J.length && new RegExp(J.join("|")), b = aa.test(Z.compareDocumentPosition), Fa = b || aa.test(Z.contains) ? function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var c = 9 === a.nodeType ? a.documentElement : a;
                        b = b && b.parentNode;
                        return a === b || !(!b || 1 !== b.nodeType || !(c.contains ? c.contains(b) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(b)))
                    } : function(a, b) {
                        if (b)
                            for (; b = b.parentNode;)
                                if (b === a) return !0;
                        return !1
                    }, K = b ? function(a, b) {
                        if (a === b) return C = !0, 0;
                        var c = !a.compareDocumentPosition - !b.compareDocumentPosition;
                        return c ? c : (c = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1, 1 & c || !P.sortDetached && b.compareDocumentPosition(a) === c ? a === E || a.ownerDocument === X && Fa(X, a) ? -1 : b === E || b.ownerDocument === X && Fa(X, b) ? 1 : va ? U(va, a) - U(va, b) : 0 : 4 & c ? -1 : 1)
                    } : function(a, b) {
                        if (a === b) return C = !0, 0;
                        var c = 0,
                            d = a.parentNode,
                            e = b.parentNode,
                            f = [a],
                            g = [b];
                        if (!d || !e) return a === E ? -1 : b === E ? 1 : d ? -1 : e ? 1 : va ? U(va, a) - U(va, b) : 0;
                        if (d === e) return h(a, b);
                        for (; a = a.parentNode;) f.unshift(a);
                        for (a = b; a = a.parentNode;) g.unshift(a);
                        for (; f[c] ===
                            g[c];) c++;
                        return c ? h(f[c], g[c]) : f[c] === X ? -1 : g[c] === X ? 1 : 0
                    }, E) : E
        };
        b.matches = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return b(a, null, null, c)
        };
        b.matchesSelector = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if ((a.ownerDocument || a) !== E && Aa(a), c = c.replace(na, "='$1']"), !(!P.matchesSelector || !Y || H[c + " "] || J && J.test(c) || T && T.test(c))) try {
                var d = F.call(a, c);
                if (d || P.disconnectedMatch || a.document && 11 !== a.document.nodeType) return d
            } catch (ta) {}
            return 0 < b(c, E, null, [a]).length
        };
        b.contains = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return (a.ownerDocument || a) !== E && Aa(a), Fa(a, b)
        };
        b.attr = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            (a.ownerDocument ||
                a) !== E && Aa(a);
            var c = D.attrHandle[b.toLowerCase()];
            c = c && V.call(D.attrHandle, b.toLowerCase()) ? c(a, b, !Y) : void 0;
            return void 0 !== c ? c : P.attributes || !Y ? a.getAttribute(b) : (c = a.getAttributeNode(b)) && c.specified ? c.value : null
        };
        b.escape = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return (a + "").replace(ra, xa)
        };
        b.error = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            throw Error("Syntax error, unrecognized expression: " + a);
        };
        b.uniqueSort = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b, c = [],
                d = 0,
                e = 0;
            if (C = !P.detectDuplicates, va = !P.sortStable && a.slice(0), a.sort(K), C) {
                for (; b = a[e++];) b === a[e] && (d = c.push(e));
                for (; d--;) a.splice(c[d],
                    1)
            }
            return va = null, a
        };
        var oa = b.getText = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b, c = "",
                d = 0;
            if (b = a.nodeType)
                if (1 === b || 9 === b || 11 === b) {
                    if ("string" == typeof a.textContent) return a.textContent;
                    for (a = a.firstChild; a; a = a.nextSibling) c += oa(a)
                } else {
                    if (3 === b || 4 === b) return a.nodeValue
                }
            else
                for (; b = a[d++];) c += oa(b);
            return c
        };
        var D = b.selectors = {
            cacheLength: 50,
            createPseudo: e,
            match: ba,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a[1] =
                        a[1].replace(ja, ka), a[3] = (a[3] || a[4] || a[5] || "").replace(ja, ka), "~=" === a[2] && (a[3] = " " + a[3] + " "), a.slice(0, 4)
                },
                CHILD: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a[1] = a[1].toLowerCase(), "nth" === a[1].slice(0, 3) ? (a[3] || b.error(a[0]), a[4] = +(a[4] ? a[5] + (a[6] || 1) : 2 * ("even" === a[3] || "odd" === a[3])), a[5] = +(a[7] + a[8] || "odd" === a[3])) : a[3] && b.error(a[0]), a
                },
                PSEUDO: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b, c = !a[6] && a[2];
                    return ba.CHILD.test(a[0]) ? null : (a[3] ? a[2] = a[4] || a[5] || "" : c && pa.test(c) && (b = fa(c, !0)) && (b = c.indexOf(")", c.length - b) - c.length) && (a[0] = a[0].slice(0,
                        b), a[2] = c.slice(0, b)), a.slice(0, 3))
                }
            },
            filter: {
                TAG: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = a.replace(ja, ka).toLowerCase();
                    return "*" === a ? function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return !0
                    } : function(a) {
                        return a.nodeName && a.nodeName.toLowerCase() === b
                    }
                },
                CLASS: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = M[a + " "];
                    return b || (b = new RegExp("(^|[\\x20\\t\\r\\n\\f])" + a + "([\\x20\\t\\r\\n\\f]|$)"), M(a, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return b.test("string" == typeof a.className && a.className || "undefined" != typeof a.getAttribute && a.getAttribute("class") || "")
                    }))
                },
                ATTR: function(a, c, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return function(e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        e = b.attr(e,
                            a);
                        return null == e ? "!=" === c : !c || (e += "", "=" === c ? e === d : "!=" === c ? e !== d : "^=" === c ? d && 0 === e.indexOf(d) : "*=" === c ? d && -1 < e.indexOf(d) : "$=" === c ? d && e.slice(-d.length) === d : "~=" === c ? -1 < (" " + e.replace(ia, " ") + " ").indexOf(d) : "|=" === c && (e === d || e.slice(0, d.length + 1) === d + "-"))
                    }
                },
                CHILD: function(a, b, c, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var f = "nth" !== a.slice(0, 3),
                        g = "last" !== a.slice(-4),
                        h = "of-type" === b;
                    return 1 === d && 0 === e ? function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return !!a.parentNode
                    } : function(b, c, k) {
                        var l, m;
                        c = f !== g ? "nextSibling" : "previousSibling";
                        var x = b.parentNode,
                            p = h && b.nodeName.toLowerCase();
                        k = !k && !h;
                        var n = !1;
                        if (x) {
                            if (f) {
                                for (; c;) {
                                    for (l = b; l = l[c];)
                                        if (h ? l.nodeName.toLowerCase() === p : 1 === l.nodeType) return !1;
                                    var L = c = "only" === a && !L && "nextSibling"
                                }
                                return !0
                            }
                            if (L = [g ? x.firstChild : x.lastChild], g && k) {
                                l = x;
                                var G = l[z] || (l[z] = {});
                                var v = G[l.uniqueID] || (G[l.uniqueID] = {});
                                var u = v[a] || [];
                                n = (m = u[0] === I && u[1]) && u[2];
                                for (l = m && x.childNodes[m]; l = ++m && l && l[c] || (n = m = 0) || L.pop();)
                                    if (1 === l.nodeType && ++n && l === b) {
                                        v[a] = [I, m, n];
                                        break
                                    }
                            } else if (k && (l = b, G = l[z] || (l[z] = {}), v = G[l.uniqueID] || (G[l.uniqueID] = {}), u = v[a] || [], m =
                                    u[0] === I && u[1], n = m), !1 === n)
                                for (;
                                    (l = ++m && l && l[c] || (n = m = 0) || L.pop()) && ((h ? l.nodeName.toLowerCase() !== p : 1 !== l.nodeType) || !++n || (k && (G = l[z] || (l[z] = {}), v = G[l.uniqueID] || (G[l.uniqueID] = {}), v[a] = [I, n]), l !== b)););
                            return n -= e, n === d || 0 === n % d && 0 <= n / d
                        }
                    }
                },
                PSEUDO: function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var d, f = D.pseudos[a] || D.setFilters[a.toLowerCase()] || b.error("unsupported pseudo: " + a);
                    return f[z] ? f(c) : 1 < f.length ? (d = [a, a, "", c], D.setFilters.hasOwnProperty(a.toLowerCase()) ? e(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (var d, e = f(a, c), g = e.length; g--;) d = U(a, e[g]),
                            a[d] = !(b[d] = e[g])
                    }) : function(a) {
                        return f(a, 0, d)
                    }) : f
                }
            },
            pseudos: {
                not: e(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = [],
                        c = [],
                        d = B(a.replace(W, "$1"));
                    return d[z] ? e(function(a, b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var f;
                        c = d(a, null, e, []);
                        for (e = a.length; e--;)(f = c[e]) && (a[e] = !(b[e] = f))
                    }) : function(a, e, f) {
                        return b[0] = a, d(b, null, f, c), b[0] = null, !c.pop()
                    }
                }),
                has: e(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return 0 < b(a, c).length
                    }
                }),
                contains: e(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a = a.replace(ja, ka),
                        function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return -1 < (b.textContent || b.innerText || oa(b)).indexOf(a)
                        }
                }),
                lang: e(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return qa.test(a ||
                            "") || b.error("unsupported lang: " + a), a = a.replace(ja, ka).toLowerCase(),
                        function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            var c;
                            do
                                if (c = Y ? b.lang : b.getAttribute("xml:lang") || b.getAttribute("lang")) return c = c.toLowerCase(), c === a || 0 === c.indexOf(a + "-"); while ((b = b.parentNode) && 1 === b.nodeType);
                            return !1
                        }
                }),
                target: function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var c = a.location && a.location.hash;
                    return c && c.slice(1) === b.id
                },
                root: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a === Z
                },
                focus: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a === E.activeElement && (!E.hasFocus || E.hasFocus()) && !!(a.type || a.href || ~a.tabIndex)
                },
                enabled: p(!1),
                disabled: p(!0),
                checked: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && !!a.checked || "option" === b && !!a.selected
                },
                selected: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a.parentNode && a.parentNode.selectedIndex, !0 === a.selected
                },
                empty: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (a = a.firstChild; a; a = a.nextSibling)
                        if (6 > a.nodeType) return !1;
                    return !0
                },
                parent: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !D.pseudos.empty(a)
                },
                header: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return wa.test(a.nodeName)
                },
                input: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return sa.test(a.nodeName)
                },
                button: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && "button" ===
                        a.type || "button" === b
                },
                text: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b;
                    return "input" === a.nodeName.toLowerCase() && "text" === a.type && (null == (b = a.getAttribute("type")) || "text" === b.toLowerCase())
                },
                first: m(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return [0]
                }),
                last: m(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return [b - 1]
                }),
                eq: m(function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return [0 > c ? c + b : c]
                }),
                even: m(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (var c = 0; c < b; c += 2) a.push(c);
                    return a
                }),
                odd: m(function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (var c = 1; c < b; c += 2) a.push(c);
                    return a
                }),
                lt: m(function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (b = 0 > c ? c + b : c; 0 <= --b;) a.push(b);
                    return a
                }),
                gt: m(function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (c = 0 > c ? c + b : c; ++c <
                        b;) a.push(c);
                    return a
                })
            }
        };
        D.pseudos.nth = D.pseudos.eq;
        for (R in {
                radio: !0,
                checkbox: !0,
                file: !0,
                password: !0,
                image: !0
            }) D.pseudos[R] = k(R);
        for (R in {
                submit: !0,
                reset: !0
            }) D.pseudos[R] = l(R);
        t.prototype = D.filters = D.pseudos;
        D.setFilters = new t;
        var fa = b.tokenize = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d, e, f, g, h;
            if (g = Cb[a + " "]) return c ? 0 : g.slice(0);
            g = a;
            var l = [];
            for (h = D.preFilter; g;) {
                k && !(d = la.exec(g)) || (d && (g = g.slice(d[0].length) || g), l.push(e = []));
                var k = !1;
                (d = ma.exec(g)) && (k = d.shift(), e.push({
                    value: k,
                    type: d[0].replace(W, " ")
                }), g = g.slice(k.length));
                for (f in D.filter) !(d = ba[f].exec(g)) || h[f] && !(d = h[f](d)) || (k = d.shift(), e.push({
                    value: k,
                    type: f,
                    matches: d
                }), g = g.slice(k.length));
                if (!k) break
            }
            return c ? g.length : g ? b.error(a) : Cb(a, l).slice(0)
        };
        return B = b.compile = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c, d = [],
                    e = [],
                    f = H[a + " "];
                if (!f) {
                    b || (b = fa(a));
                    for (c = b.length; c--;) f = w(b[c]), f[z] ? d.push(f) : e.push(f);
                    f = H(a, A(e, d));
                    f.selector = a
                }
                return f
            }, Q = b.select = function(a, b, c, d) {
                var e, f, g, h, k, l = "function" == typeof a && a,
                    m = !d && fa(a = l.selector || a);
                if (c = c || [], 1 === m.length) {
                    if (f = m[0] = m[0].slice(0),
                        2 < f.length && "ID" === (g = f[0]).type && 9 === b.nodeType && Y && D.relative[f[1].type]) {
                        if (b = (D.find.ID(g.matches[0].replace(ja, ka), b) || [])[0], !b) return c;
                        l && (b = b.parentNode);
                        a = a.slice(f.shift().value.length)
                    }
                    for (e = ba.needsContext.test(a) ? 0 : f.length; e-- && (g = f[e], !D.relative[h = g.type]);)
                        if ((k = D.find[h]) && (d = k(g.matches[0].replace(ja, ka), ea.test(f[0].type) && n(b.parentNode) || b))) {
                            if (f.splice(e, 1), a = d.length && Ha(f), !a) return ua.apply(c, d), c;
                            break
                        }
                }
                return (l || B(a, m))(d, b, !Y, c, !b || ea.test(a) && n(b.parentNode) || b), c
            },
            P.sortStable = z.split("").sort(K).join("") === z, P.detectDuplicates = !!C, Aa(), P.sortDetached = f(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return 1 & a.compareDocumentPosition(E.createElement("fieldset"))
            }), f(function(a) {
                return a.innerHTML = "<a href='#'></a>", "#" === a.firstChild.getAttribute("href")
            }) || g("type|href|height|width", function(a, b, c) {
                if (!c) return a.getAttribute(b, "type" === b.toLowerCase() ? 1 : 2)
            }), P.attributes && f(function(a) {
                return a.innerHTML = "<input/>", a.firstChild.setAttribute("value", ""), "" === a.firstChild.getAttribute("value")
            }) ||
            g("value", function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (!c && "input" === a.nodeName.toLowerCase()) return a.defaultValue
            }), f(function(a) {
                return null == a.getAttribute("disabled")
            }) || g("checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", function(a, b, c) {
                var d;
                if (!c) return !0 === a[b] ? b.toLowerCase() : (d = a.getAttributeNode(b)) && d.specified ? d.value : null
            }), b
    }(n);
    c.find = la;
    c.expr = la.selectors;
    c.expr[":"] = c.expr.pseudos;
    c.uniqueSort = c.unique = la.uniqueSort;
    c.text = la.getText;
    c.isXMLDoc = la.isXML;
    c.contains = la.contains;
    c.escapeSelector = la.escape;
    var wa = function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var e = [], f = void 0 !== d;
                (a = a[b]) && 9 !== a.nodeType;)
                if (1 === a.nodeType) {
                    if (f && c(a).is(d)) break;
                    e.push(a)
                }
            return e
        },
        Db = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var c = []; a; a = a.nextSibling) 1 === a.nodeType && a !== b && c.push(a);
            return c
        },
        Eb = c.expr.match.needsContext,
        Fb = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,
        Sb = /^.[^:#\[\.,]*$/;
    c.filter = function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var e = b[0];
        return d && (a = ":not(" + a + ")"), 1 === b.length && 1 === e.nodeType ?
            c.find.matchesSelector(e, a) ? [e] : [] : c.find.matches(a, c.grep(b, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return 1 === a.nodeType
            }))
    };
    c.fn.extend({
        find: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b, d = this.length,
                e = this;
            if ("string" != typeof a) return this.pushStack(c(a).filter(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (b = 0; b < d; b++)
                    if (c.contains(e[b], this)) return !0
            }));
            var f = this.pushStack([]);
            for (b = 0; b < d; b++) c.find(a, e[b], f);
            return 1 < d ? c.uniqueSort(f) : f
        },
        filter: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.pushStack(ma(this, a || [], !1))
        },
        not: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.pushStack(ma(this, a || [], !0))
        },
        is: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return !!ma(this,
                "string" == typeof a && Eb.test(a) ? c(a) : a || [], !1).length
        }
    });
    var kc = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
    (c.fn.init = function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var e, f;
        if (!a) return this;
        if (d = d || lc, "string" == typeof a) {
            if (e = "<" === a[0] && ">" === a[a.length - 1] && 3 <= a.length ? [null, a, null] : kc.exec(a), !e || !e[1] && b) return !b || b.jquery ? (b || d).find(a) : this.constructor(b).find(a);
            if (e[1]) {
                if (b = b instanceof c ? b[0] : b, c.merge(this, c.parseHTML(e[1], b && b.nodeType ? b.ownerDocument || b : q, !0)), Fb.test(e[1]) && c.isPlainObject(b))
                    for (e in b) c.isFunction(this[e]) ?
                        this[e](b[e]) : this.attr(e, b[e]);
                return this
            }
            return f = q.getElementById(e[2]), f && (this[0] = f, this.length = 1), this
        }
        return a.nodeType ? (this[0] = a, this.length = 1, this) : c.isFunction(a) ? void 0 !== d.ready ? d.ready(a) : a(c) : c.makeArray(a, this)
    }).prototype = c.fn;
    var lc = c(q);
    var mc = /^(?:parents|prev(?:Until|All))/,
        nc = {
            children: !0,
            contents: !0,
            next: !0,
            prev: !0
        };
    c.fn.extend({
        has: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = c(a, this),
                d = b.length;
            return this.filter(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var a = 0; a < d; a++)
                    if (c.contains(this, b[a])) return !0
            })
        },
        closest: function(a,
            b) {
            var d, e = 0,
                f = this.length,
                g = [],
                h = "string" != typeof a && c(a);
            if (!Eb.test(a))
                for (; e < f; e++)
                    for (d = this[e]; d && d !== b; d = d.parentNode)
                        if (11 > d.nodeType && (h ? -1 < h.index(d) : 1 === d.nodeType && c.find.matchesSelector(d, a))) {
                            g.push(d);
                            break
                        }
            return this.pushStack(1 < g.length ? c.uniqueSort(g) : g)
        },
        index: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a ? "string" == typeof a ? aa.call(c(a), this[0]) : aa.call(this, a.jquery ? a[0] : a) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
        },
        add: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.pushStack(c.uniqueSort(c.merge(this.get(),
                c(a, b))))
        },
        addBack: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.add(null == a ? this.prevObject : this.prevObject.filter(a))
        }
    });
    c.each({
        parent: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return (a = a.parentNode) && 11 !== a.nodeType ? a : null
        },
        parents: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return wa(a, "parentNode")
        },
        parentsUntil: function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return wa(a, "parentNode", c)
        },
        next: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return ab(a, "nextSibling")
        },
        prev: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return ab(a, "previousSibling")
        },
        nextAll: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return wa(a, "nextSibling")
        },
        prevAll: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return wa(a, "previousSibling")
        },
        nextUntil: function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return wa(a,
                "nextSibling", c)
        },
        prevUntil: function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return wa(a, "previousSibling", c)
        },
        siblings: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return Db((a.parentNode || {}).firstChild, a)
        },
        children: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return Db(a.firstChild)
        },
        contents: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return w(a, "iframe") ? a.contentDocument : (w(a, "template") && (a = a.content || a), c.merge([], a.childNodes))
        }
    }, function(a, b) {
        c.fn[a] = function(d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var f = c.map(this, b, d);
            return "Until" !== a.slice(-5) && (e = d), e && "string" == typeof e && (f = c.filter(e, f)), 1 < this.length && (nc[a] || c.uniqueSort(f), mc.test(a) && f.reverse()),
                this.pushStack(f)
        }
    });
    var K = /[^\x20\t\r\n\f]+/g;
    c.Callbacks = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a = "string" == typeof a ? Tb(a) : c.extend({}, a);
        var b, d, e, f, g = [],
            h = [],
            k = -1,
            l = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                f = f || a.once;
                for (e = b = !0; h.length; k = -1)
                    for (d = h.shift(); ++k < g.length;) !1 === g[k].apply(d[0], d[1]) && a.stopOnFalse && (k = g.length, d = !1);
                a.memory || (d = !1);
                b = !1;
                f && (g = d ? [] : "")
            },
            p = {
                add: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return g && (d && !b && (k = g.length - 1, h.push(d)), function v(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            c.each(b, function(b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                c.isFunction(d) ? a.unique && p.has(d) || g.push(d) : d && d.length && "string" !== c.type(d) && v(d)
                            })
                        }(arguments),
                        d && !b && l()), this
                },
                remove: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return c.each(arguments, function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        for (var d; - 1 < (d = c.inArray(b, g, d));) g.splice(d, 1), d <= k && k--
                    }), this
                },
                has: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return a ? -1 < c.inArray(a, g) : 0 < g.length
                },
                empty: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return g && (g = []), this
                },
                disable: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return f = h = [], g = d = "", this
                },
                disabled: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !g
                },
                lock: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return f = h = [], d || b || (g = d = ""), this
                },
                locked: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !!f
                },
                fireWith: function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return f || (c = c || [], c = [a, c.slice ? c.slice() : c], h.push(c), b || l()), this
                },
                fire: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return p.fireWith(this,
                        arguments), this
                },
                fired: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return !!e
                }
            };
        return p
    };
    c.extend({
        Deferred: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = [
                    ["notify", "progress", c.Callbacks("memory"), c.Callbacks("memory"), 2],
                    ["resolve", "done", c.Callbacks("once memory"), c.Callbacks("once memory"), 0, "resolved"],
                    ["reject", "fail", c.Callbacks("once memory"), c.Callbacks("once memory"), 1, "rejected"]
                ],
                d = "pending",
                e = {
                    state: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return d
                    },
                    always: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return f.done(arguments).fail(arguments), this
                    },
                    "catch": function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return e.then(null, a)
                    },
                    pipe: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var a =
                            arguments;
                        return c.Deferred(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            c.each(b, function(b, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                var g = c.isFunction(a[e[4]]) && a[e[4]];
                                f[e[1]](function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                    var a = g && g.apply(this, arguments);
                                    a && c.isFunction(a.promise) ? a.promise().progress(d.notify).done(d.resolve).fail(d.reject) : d[e[0] + "With"](this, g ? [a] : arguments)
                                })
                            });
                            a = null
                        }).promise()
                    },
                    then: function(a, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        function f(a, b, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            return function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                var h = this,
                                    k = arguments,
                                    l = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        var l;
                                        if (!(a < g)) {
                                            if (l = d.apply(h, k), l === b.promise()) throw new TypeError("Thenable self-resolution");
                                            var m =
                                                l && ("object" == typeof l || "function" == typeof l) && l.then;
                                            c.isFunction(m) ? e ? m.call(l, f(g, b, na, e), f(g, b, Ca, e)) : (g++, m.call(l, f(g, b, na, e), f(g, b, Ca, e), f(g, b, na, b.notifyWith))) : (d !== na && (h = void 0, k = [l]), (e || b.resolveWith)(h, k))
                                        }
                                    },
                                    m = e ? l : function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                                        try {
                                            l()
                                        } catch (Bb) {
                                            c.Deferred.exceptionHook && c.Deferred.exceptionHook(Bb, m.stackTrace), a + 1 >= g && (d !== Ca && (h = void 0, k = [Bb]), b.rejectWith(h, k))
                                        }
                                    };
                                a ? m() : (c.Deferred.getStackHook && (m.stackTrace = c.Deferred.getStackHook()), n.setTimeout(m))
                            }
                        }
                        var g = 0;
                        return c.Deferred(function(g) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                            b[0][3].add(f(0,
                                g, c.isFunction(e) ? e : na, g.notifyWith));
                            b[1][3].add(f(0, g, c.isFunction(a) ? a : na));
                            b[2][3].add(f(0, g, c.isFunction(d) ? d : Ca))
                        }).promise()
                    },
                    promise: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return null != a ? c.extend(a, e) : e
                    }
                },
                f = {};
            return c.each(b, function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var g = c[2],
                    h = c[5];
                e[c[1]] = g.add;
                h && g.add(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    d = h
                }, b[3 - a][2].disable, b[0][2].lock);
                g.add(c[3].fire);
                f[c[0]] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return f[c[0] + "With"](this === f ? void 0 : this, arguments), this
                };
                f[c[0] + "With"] = g.fireWith
            }), e.promise(f), a && a.call(f, f), f
        },
        when: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = arguments.length,
                d = b,
                e = Array(d),
                f = W.call(arguments),
                g = c.Deferred(),
                h = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        e[a] = this;
                        f[a] = 1 < arguments.length ? W.call(arguments) : c;
                        --b || g.resolveWith(e, f)
                    }
                };
            if (1 >= b && (bb(a, g.done(h(d)).resolve, g.reject, !b), "pending" === g.state() || c.isFunction(f[d] && f[d].then))) return g.then();
            for (; d--;) bb(f[d], h(d), g.reject);
            return g.promise()
        }
    });
    var oc = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    c.Deferred.exceptionHook = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        n.console && n.console.warn && a && oc.test(a.name) && n.console.warn("jQuery.Deferred exception: " +
            a.message, a.stack, b)
    };
    c.readyException = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        n.setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            throw a;
        })
    };
    var Xa = c.Deferred();
    c.fn.ready = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return Xa.then(a)["catch"](function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            c.readyException(a)
        }), this
    };
    c.extend({
        isReady: !1,
        readyWait: 1,
        ready: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            (!0 === a ? --c.readyWait : c.isReady) || (c.isReady = !0, !0 !== a && 0 < --c.readyWait || Xa.resolveWith(q, [c]))
        }
    });
    c.ready.then = Xa.then;
    "complete" === q.readyState || "loading" !== q.readyState && !q.documentElement.doScroll ? n.setTimeout(c.ready) : (q.addEventListener("DOMContentLoaded",
        oa), n.addEventListener("load", oa));
    var ca = function(a, b, d, e, f, g, h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var k = 0,
                l = a.length,
                p = null == d;
            if ("object" === c.type(d))
                for (k in f = !0, d) ca(a, b, k, d[k], !0, g, h);
            else if (void 0 !== e && (f = !0, c.isFunction(e) || (h = !0), p && (h ? (b.call(a, e), b = null) : (p = b, b = function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return p.call(c(a), d)
                })), b))
                for (; k < l; k++) b(a[k], d, h ? e : e.call(a[k], k, b(a[k], d)));
            return f ? a : p ? b.call(a) : l ? b(a[0], d) : g
        },
        Na = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return 1 === a.nodeType || 9 === a.nodeType || !+a.nodeType
        };
    za.uid = 1;
    za.prototype = {
        cache: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a[this.expando];
            return b || (b = {}, Na(a) && (a.nodeType ? a[this.expando] = b : Object.defineProperty(a, this.expando, {
                value: b,
                configurable: !0
            }))), b
        },
        set: function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var e;
            a = this.cache(a);
            if ("string" == typeof b) a[c.camelCase(b)] = d;
            else
                for (e in b) a[c.camelCase(e)] = b[e];
            return a
        },
        get: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return void 0 === b ? this.cache(a) : a[this.expando] && a[this.expando][c.camelCase(b)]
        },
        access: function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return void 0 === b || b && "string" == typeof b && void 0 === c ? this.get(a, b) : (this.set(a, b, c), void 0 !== c ? c : b)
        },
        remove: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d,
                e = a[this.expando];
            if (void 0 !== e) {
                if (void 0 !== b)
                    for (Array.isArray(b) ? b = b.map(c.camelCase) : (b = c.camelCase(b), b = b in e ? [b] : b.match(K) || []), d = b.length; d--;) delete e[b[d]];
                (void 0 === b || c.isEmptyObject(e)) && (a.nodeType ? a[this.expando] = void 0 : delete a[this.expando])
            }
        },
        hasData: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a[this.expando];
            return void 0 !== a && !c.isEmptyObject(a)
        }
    };
    var t = new za,
        F = new za,
        Vb = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
        Ub = /[A-Z]/g;
    c.extend({
        hasData: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return F.hasData(a) || t.hasData(a)
        },
        data: function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return F.access(a,
                b, c)
        },
        removeData: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            F.remove(a, b)
        },
        _data: function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return t.access(a, b, c)
        },
        _removeData: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            t.remove(a, b)
        }
    });
    c.fn.extend({
        data: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d, e, f, g = this[0],
                h = g && g.attributes;
            if (void 0 === a) {
                if (this.length && (f = F.get(g), 1 === g.nodeType && !t.get(g, "hasDataAttrs"))) {
                    for (d = h.length; d--;) h[d] && (e = h[d].name, 0 === e.indexOf("data-") && (e = c.camelCase(e.slice(5)), cb(g, e, f[e])));
                    t.set(g, "hasDataAttrs", !0)
                }
                return f
            }
            return "object" == typeof a ? this.each(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                F.set(this, a)
            }) : ca(this,
                function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var c;
                    if (g && void 0 === b) {
                        if ((c = F.get(g, a), void 0 !== c) || (c = cb(g, a), void 0 !== c)) return c
                    } else this.each(function() {
                        F.set(this, a, b)
                    })
                }, null, b, 1 < arguments.length, null, !0)
        },
        removeData: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.each(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                F.remove(this, a)
            })
        }
    });
    c.extend({
        queue: function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var e;
            if (a) return b = (b || "fx") + "queue", e = t.get(a, b), d && (!e || Array.isArray(d) ? e = t.access(a, b, c.makeArray(d)) : e.push(d)), e || []
        },
        dequeue: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            b = b || "fx";
            var d = c.queue(a, b),
                e = d.length,
                f = d.shift(),
                g = c._queueHooks(a,
                    b),
                h = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    c.dequeue(a, b)
                };
            "inprogress" === f && (f = d.shift(), e--);
            f && ("fx" === b && d.unshift("inprogress"), delete g.stop, f.call(a, h, g));
            !e && g && g.empty.fire()
        },
        _queueHooks: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = b + "queueHooks";
            return t.get(a, d) || t.access(a, d, {
                empty: c.Callbacks("once memory").add(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    t.remove(a, [b + "queue", d])
                })
            })
        }
    });
    c.fn.extend({
        queue: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = 2;
            return "string" != typeof a && (b = a, a = "fx", d--), arguments.length < d ? c.queue(this[0], a) : void 0 === b ? this : this.each(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = c.queue(this, a, b);
                c._queueHooks(this, a);
                "fx" === a && "inprogress" !== d[0] && c.dequeue(this, a)
            })
        },
        dequeue: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.each(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                c.dequeue(this, a)
            })
        },
        clearQueue: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.queue(a || "fx", [])
        },
        promise: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d, e = 1,
                f = c.Deferred(),
                g = this,
                h = this.length,
                k = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    --e || f.resolveWith(g, [g])
                };
            "string" != typeof a && (b = a, a = void 0);
            for (a = a || "fx"; h--;)(d = t.get(g[h], a + "queueHooks")) && d.empty && (e++, d.empty.add(k));
            return k(), f.promise(b)
        }
    });
    var Gb = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
        ea =
        new RegExp("^(?:([+-])=|)(" + Gb + ")([a-z%]*)$", "i"),
        ha = ["Top", "Right", "Bottom", "Left"],
        fa = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a = b || a, "none" === a.style.display || "" === a.style.display && c.contains(a.ownerDocument, a) && "none" === c.css(a, "display")
        },
        Hb = function(a, b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d, g = {};
            for (d in b) g[d] = a.style[d], a.style[d] = b[d];
            c = c.apply(a, e || []);
            for (d in b) a.style[d] = g[d];
            return c
        },
        eb = {};
    c.fn.extend({
        show: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return pa(this, !0)
        },
        hide: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return pa(this)
        },
        toggle: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return "boolean" == typeof a ? a ? this.show() :
                this.hide() : this.each(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    fa(this) ? c(this).show() : c(this).hide()
                })
        }
    });
    var Ib = /^(?:checkbox|radio)$/i,
        gb = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i,
        hb = /^$|\/(?:java|ecma)script/i,
        V = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            thead: [1, "<table>", "</table>"],
            col: [2, "<table><colgroup>", "</colgroup></table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            _default: [0, "", ""]
        };
    V.optgroup = V.option;
    V.tbody = V.tfoot = V.colgroup = V.caption = V.thead;
    V.th = V.td;
    var Wb = /<|&#?\w+;/;
    ! function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var a = q.createDocumentFragment().appendChild(q.createElement("div")),
            b = q.createElement("input");
        b.setAttribute("type", "radio");
        b.setAttribute("checked", "checked");
        b.setAttribute("name", "t");
        a.appendChild(b);
        r.checkClone = a.cloneNode(!0).cloneNode(!0).lastChild.checked;
        a.innerHTML = "<textarea>x</textarea>";
        r.noCloneChecked = !!a.cloneNode(!0).lastChild.defaultValue
    }();
    var Oa = q.documentElement,
        pc = /^key/,
        qc = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
        Jb = /^([^.]*)(?:\.(.+)|)/;
    c.event = {
        global: {},
        add: function(a, b, d, e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var g, h, k, l, p, m, n, q;
            if (l = t.get(a))
                for (d.handler && (g = d, d = g.handler, f = g.selector), f && c.find.matchesSelector(Oa, f), d.guid || (d.guid = c.guid++), (k = l.events) || (k = l.events = {}), (h = l.handle) || (h = l.handle = function(b) {
                        return "undefined" != typeof c && c.event.triggered !== b.type ? c.event.dispatch.apply(a, arguments) : void 0
                    }), b = (b || "").match(K) || [""], l = b.length; l--;) {
                    var r = Jb.exec(b[l]) || [];
                    var u = q = r[1];
                    r = (r[2] || "").split(".").sort();
                    u && (m = c.event.special[u] || {}, u = (f ? m.delegateType :
                        m.bindType) || u, m = c.event.special[u] || {}, p = c.extend({
                        type: u,
                        origType: q,
                        data: e,
                        handler: d,
                        guid: d.guid,
                        selector: f,
                        needsContext: f && c.expr.match.needsContext.test(f),
                        namespace: r.join(".")
                    }, g), (n = k[u]) || (n = k[u] = [], n.delegateCount = 0, m.setup && !1 !== m.setup.call(a, e, r, h) || a.addEventListener && a.addEventListener(u, h)), m.add && (m.add.call(a, p), p.handler.guid || (p.handler.guid = d.guid)), f ? n.splice(n.delegateCount++, 0, p) : n.push(p), c.event.global[u] = !0)
                }
        },
        remove: function(a, b, d, e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var g, h, k, l, p, m, n, q, r = t.hasData(a) &&
                t.get(a);
            if (r && (l = r.events)) {
                b = (b || "").match(K) || [""];
                for (p = b.length; p--;)
                    if (k = Jb.exec(b[p]) || [], m = q = k[1], n = (k[2] || "").split(".").sort(), m) {
                        var u = c.event.special[m] || {};
                        m = (e ? u.delegateType : u.bindType) || m;
                        var w = l[m] || [];
                        k = k[2] && new RegExp("(^|\\.)" + n.join("\\.(?:.*\\.|)") + "(\\.|$)");
                        for (h = g = w.length; g--;) {
                            var y = w[g];
                            !f && q !== y.origType || d && d.guid !== y.guid || k && !k.test(y.namespace) || e && e !== y.selector && ("**" !== e || !y.selector) || (w.splice(g, 1), y.selector && w.delegateCount--, u.remove && u.remove.call(a, y))
                        }
                        h &&
                            !w.length && (u.teardown && !1 !== u.teardown.call(a, n, r.handle) || c.removeEvent(a, m, r.handle), delete l[m])
                    } else
                        for (m in l) c.event.remove(a, m + b[p], d, e, !0);
                c.isEmptyObject(l) && t.remove(a, "handle events")
            }
        },
        dispatch: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = c.event.fix(a),
                d, e, f, g, h = Array(arguments.length);
            var k = (t.get(this, "events") || {})[b.type] || [];
            var l = c.event.special[b.type] || {};
            h[0] = b;
            for (d = 1; d < arguments.length; d++) h[d] = arguments[d];
            if (b.delegateTarget = this, !l.preDispatch || !1 !== l.preDispatch.call(this, b)) {
                var p = c.event.handlers.call(this,
                    b, k);
                for (d = 0;
                    (f = p[d++]) && !b.isPropagationStopped();)
                    for (b.currentTarget = f.elem, k = 0;
                        (g = f.handlers[k++]) && !b.isImmediatePropagationStopped();) b.rnamespace && !b.rnamespace.test(g.namespace) || (b.handleObj = g, b.data = g.data, e = ((c.event.special[g.origType] || {}).handle || g.handler).apply(f.elem, h), void 0 !== e && !1 === (b.result = e) && (b.preventDefault(), b.stopPropagation()));
                return l.postDispatch && l.postDispatch.call(this, b), b.result
            }
        },
        handlers: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d, e = [],
                f = b.delegateCount,
                g = a.target;
            if (f && g.nodeType &&
                !("click" === a.type && 1 <= a.button))
                for (; g !== this; g = g.parentNode || this)
                    if (1 === g.nodeType && ("click" !== a.type || !0 !== g.disabled)) {
                        var h = [];
                        var k = {};
                        for (d = 0; d < f; d++) {
                            var l = b[d];
                            var p = l.selector + " ";
                            void 0 === k[p] && (k[p] = l.needsContext ? -1 < c(p, this).index(g) : c.find(p, this, null, [g]).length);
                            k[p] && h.push(l)
                        }
                        h.length && e.push({
                            elem: g,
                            handlers: h
                        })
                    }
            return g = this, f < b.length && e.push({
                elem: g,
                handlers: b.slice(f)
            }), e
        },
        addProp: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            Object.defineProperty(c.Event.prototype, a, {
                enumerable: !0,
                configurable: !0,
                get: c.isFunction(b) ?
                    function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        if (this.originalEvent) return b(this.originalEvent)
                    } : function() {
                        if (this.originalEvent) return this.originalEvent[a]
                    },
                set: function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    Object.defineProperty(this, a, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: b
                    })
                }
            })
        },
        fix: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a[c.expando] ? a : new c.Event(a)
        },
        special: {
            load: {
                noBubble: !0
            },
            focus: {
                trigger: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (this !== ib() && this.focus) return this.focus(), !1
                },
                delegateType: "focusin"
            },
            blur: {
                trigger: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (this === ib() && this.blur) return this.blur(), !1
                },
                delegateType: "focusout"
            },
            click: {
                trigger: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if ("checkbox" === this.type && this.click && w(this, "input")) return this.click(), !1
                },
                _default: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return w(a.target, "a")
                }
            },
            beforeunload: {
                postDispatch: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    void 0 !== a.result && a.originalEvent && (a.originalEvent.returnValue = a.result)
                }
            }
        }
    };
    c.removeEvent = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a.removeEventListener && a.removeEventListener(b, c)
    };
    c.Event = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return this instanceof c.Event ? (a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || void 0 ===
            a.defaultPrevented && !1 === a.returnValue ? Ga : qa, this.target = a.target && 3 === a.target.nodeType ? a.target.parentNode : a.target, this.currentTarget = a.currentTarget, this.relatedTarget = a.relatedTarget) : this.type = a, b && c.extend(this, b), this.timeStamp = a && a.timeStamp || c.now(), void(this[c.expando] = !0)) : new c.Event(a, b)
    };
    c.Event.prototype = {
        constructor: c.Event,
        isDefaultPrevented: qa,
        isPropagationStopped: qa,
        isImmediatePropagationStopped: qa,
        isSimulated: !1,
        preventDefault: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = this.originalEvent;
            this.isDefaultPrevented =
                Ga;
            a && !this.isSimulated && a.preventDefault()
        },
        stopPropagation: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = this.originalEvent;
            this.isPropagationStopped = Ga;
            a && !this.isSimulated && a.stopPropagation()
        },
        stopImmediatePropagation: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = this.originalEvent;
            this.isImmediatePropagationStopped = Ga;
            a && !this.isSimulated && a.stopImmediatePropagation();
            this.stopPropagation()
        }
    };
    c.each({
        altKey: !0,
        bubbles: !0,
        cancelable: !0,
        changedTouches: !0,
        ctrlKey: !0,
        detail: !0,
        eventPhase: !0,
        metaKey: !0,
        pageX: !0,
        pageY: !0,
        shiftKey: !0,
        view: !0,
        "char": !0,
        charCode: !0,
        key: !0,
        keyCode: !0,
        button: !0,
        buttons: !0,
        clientX: !0,
        clientY: !0,
        offsetX: !0,
        offsetY: !0,
        pointerId: !0,
        pointerType: !0,
        screenX: !0,
        screenY: !0,
        targetTouches: !0,
        toElement: !0,
        touches: !0,
        which: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.button;
            return null == a.which && pc.test(a.type) ? null != a.charCode ? a.charCode : a.keyCode : !a.which && void 0 !== b && qc.test(a.type) ? 1 & b ? 1 : 2 & b ? 3 : 4 & b ? 2 : 0 : a.which
        }
    }, c.event.addProp);
    c.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(a, b) {
        c.event.special[a] = {
            delegateType: b,
            bindType: b,
            handle: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d, f = a.relatedTarget,
                    g = a.handleObj;
                return f && (f === this || c.contains(this, f)) || (a.type = g.origType, d = g.handler.apply(this, arguments), a.type = b), d
            }
        }
    });
    c.fn.extend({
        on: function(a, b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return Qa(this, a, b, c, e)
        },
        one: function(a, b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return Qa(this, a, b, c, e, 1)
        },
        off: function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var e, f;
            if (a && a.preventDefault && a.handleObj) return e = a.handleObj, c(a.delegateTarget).off(e.namespace ? e.origType + "." + e.namespace : e.origType, e.selector, e.handler), this;
            if ("object" ==
                typeof a) {
                for (f in a) this.off(f, b, a[f]);
                return this
            }
            return !1 !== b && "function" != typeof b || (d = b, b = void 0), !1 === d && (d = qa), this.each(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                c.event.remove(this, a, d, b)
            })
        }
    });
    var rc = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,
        sc = /<script|<style|<link/i,
        $b = /checked\s*(?:[^=]|=\s*.checked.)/i,
        Zb = /^true\/(.*)/,
        ac = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
    c.extend({
        htmlPrefilter: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a.replace(rc, "<$1></$2>")
        },
        clone: function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var e, f =
                a.cloneNode(!0),
                g = c.contains(a.ownerDocument, a);
            if (!(r.noCloneChecked || 1 !== a.nodeType && 11 !== a.nodeType || c.isXMLDoc(a))) {
                var h = N(f);
                var k = N(a);
                var l = 0;
                for (e = k.length; l < e; l++) {
                    var p = k[l],
                        m = h[l],
                        n = m.nodeName.toLowerCase();
                    "input" === n && Ib.test(p.type) ? m.checked = p.checked : "input" !== n && "textarea" !== n || (m.defaultValue = p.defaultValue)
                }
            }
            if (b)
                if (d)
                    for (k = k || N(a), h = h || N(f), l = 0, e = k.length; l < e; l++) kb(k[l], h[l]);
                else kb(a, f);
            return h = N(f, "script"), 0 < h.length && Pa(h, !g && N(a, "script")), f
        },
        cleanData: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var b,
                    d, e, f = c.event.special, g = 0; void 0 !== (d = a[g]); g++)
                if (Na(d)) {
                    if (b = d[t.expando]) {
                        if (b.events)
                            for (e in b.events) f[e] ? c.event.remove(d, e) : c.removeEvent(d, e, b.handle);
                        d[t.expando] = void 0
                    }
                    d[F.expando] && (d[F.expando] = void 0)
                }
        }
    });
    c.fn.extend({
        detach: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return mb(this, a, !0)
        },
        remove: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return mb(this, a)
        },
        text: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return ca(this, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return void 0 === a ? c.text(this) : this.empty().each(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = a)
                    })
                }, null,
                a, arguments.length)
        },
        append: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return ba(this, arguments, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || jb(this, a).appendChild(a)
            })
        },
        prepend: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return ba(this, arguments, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var b = jb(this, a);
                    b.insertBefore(a, b.firstChild)
                }
            })
        },
        before: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return ba(this, arguments, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                this.parentNode && this.parentNode.insertBefore(a, this)
            })
        },
        after: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return ba(this, arguments, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                this.parentNode &&
                    this.parentNode.insertBefore(a, this.nextSibling)
            })
        },
        empty: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var a, b = 0; null != (a = this[b]); b++) 1 === a.nodeType && (c.cleanData(N(a, !1)), a.textContent = "");
            return this
        },
        clone: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a = null != a && a, b = null == b ? a : b, this.map(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return c.clone(this, a, b)
            })
        },
        html: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return ca(this, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = this[0] || {},
                    e = 0,
                    f = this.length;
                if (void 0 === a && 1 === b.nodeType) return b.innerHTML;
                if ("string" == typeof a && !sc.test(a) && !V[(gb.exec(a) || ["", ""])[1].toLowerCase()]) {
                    a = c.htmlPrefilter(a);
                    try {
                        for (; e < f; e++) b = this[e] || {}, 1 === b.nodeType && (c.cleanData(N(b, !1)), b.innerHTML = a);
                        b = 0
                    } catch (g) {}
                }
                b && this.empty().append(a)
            }, null, a, arguments.length)
        },
        replaceWith: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = [];
            return ba(this, arguments, function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = this.parentNode;
                0 > c.inArray(this, a) && (c.cleanData(N(this)), d && d.replaceChild(b, this))
            }, a)
        }
    });
    c.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(a, b) {
        c.fn[a] = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            for (var d = [], f = c(a), g = f.length - 1,
                    h = 0; h <= g; h++) a = h === g ? this : this.clone(!0), c(f[h])[b](a), Wa.apply(d, a.get());
            return this.pushStack(d)
        }
    });
    var nb = /^margin/,
        Ra = new RegExp("^(" + Gb + ")(?!px)[a-z%]+$", "i"),
        Ia = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = a.ownerDocument.defaultView;
            return b && b.opener || (b = n), b.getComputedStyle(a)
        };
    ! function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        function a() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (h) {
                h.style.cssText = "box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%";
                h.innerHTML = "";
                Oa.appendChild(g);
                var a = n.getComputedStyle(h);
                b = "1%" !== a.top;
                f = "2px" ===
                    a.marginLeft;
                d = "4px" === a.width;
                h.style.marginRight = "50%";
                e = "4px" === a.marginRight;
                Oa.removeChild(g);
                h = null
            }
        }
        var b, d, e, f, g = q.createElement("div"),
            h = q.createElement("div");
        h.style && (h.style.backgroundClip = "content-box", h.cloneNode(!0).style.backgroundClip = "", r.clearCloneStyle = "content-box" === h.style.backgroundClip, g.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute", g.appendChild(h), c.extend(r, {
            pixelPosition: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a(), b
            },
            boxSizingReliable: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a(),
                    d
            },
            pixelMarginRight: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a(), e
            },
            reliableMarginLeft: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return a(), f
            }
        }))
    }();
    var tc = /^(none|table(?!-c[ea]).+)/,
        Kb = /^--/,
        uc = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        },
        Lb = {
            letterSpacing: "0",
            fontWeight: "400"
        },
        rb = ["Webkit", "Moz", "ms"],
        qb = q.createElement("div").style;
    c.extend({
        cssHooks: {
            opacity: {
                get: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (b) return a = ra(a, "opacity"), "" === a ? "1" : a
                }
            }
        },
        cssNumber: {
            animationIterationCount: !0,
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            "float": "cssFloat"
        },
        style: function(a, b, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (a && 3 !== a.nodeType && 8 !== a.nodeType && a.style) {
                var f, g, h, k = c.camelCase(b),
                    l = Kb.test(b),
                    p = a.style;
                return l || (b = pb(k)), h = c.cssHooks[b] || c.cssHooks[k], void 0 === d ? h && "get" in h && void 0 !== (f = h.get(a, !1, e)) ? f : p[b] : (g = typeof d, "string" === g && (f = ea.exec(d)) && f[1] && (d = db(a, b, f), g = "number"), null != d && d === d && ("number" === g && (d += f && f[3] || (c.cssNumber[k] ? "" : "px")), r.clearCloneStyle || "" !== d || 0 !== b.indexOf("background") ||
                    (p[b] = "inherit"), h && "set" in h && void 0 === (d = h.set(a, d, e)) || (l ? p.setProperty(b, d) : p[b] = d)), void 0)
            }
        },
        css: function(a, b, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var f, g, h, k = c.camelCase(b);
            return Kb.test(b) || (b = pb(k)), h = c.cssHooks[b] || c.cssHooks[k], h && "get" in h && (f = h.get(a, !0, d)), void 0 === f && (f = ra(a, b, e)), "normal" === f && b in Lb && (f = Lb[b]), "" === d || d ? (g = parseFloat(f), !0 === d || isFinite(g) ? g || 0 : f) : f
        }
    });
    c.each(["height", "width"], function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.cssHooks[b] = {
            get: function(a, e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (e) return !tc.test(c.css(a, "display")) || a.getClientRects().length &&
                    a.getBoundingClientRect().width ? ub(a, b, f) : Hb(a, uc, function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return ub(a, b, f)
                    })
            },
            set: function(a, e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d, h = f && Ia(a);
                f = f && tb(a, b, f, "border-box" === c.css(a, "boxSizing", !1, h), h);
                return f && (d = ea.exec(e)) && "px" !== (d[3] || "px") && (a.style[b] = e, e = c.css(a, b)), sb(a, e, f)
            }
        }
    });
    c.cssHooks.marginLeft = ob(r.reliableMarginLeft, function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        if (b) return (parseFloat(ra(a, "marginLeft")) || a.getBoundingClientRect().left - Hb(a, {
            marginLeft: 0
        }, function() {
            return a.getBoundingClientRect().left
        })) + "px"
    });
    c.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(a, b) {
        c.cssHooks[a + b] = {
            expand: function(c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d = 0,
                    f = {};
                for (c = "string" == typeof c ? c.split(" ") : [c]; 4 > d; d++) f[a + ha[d] + b] = c[d] || c[d - 2] || c[0];
                return f
            }
        };
        nb.test(a) || (c.cssHooks[a + b].set = sb)
    });
    c.fn.extend({
        css: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return ca(this, function(a, b, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var d, e = {},
                    k = 0;
                if (Array.isArray(b)) {
                    f = Ia(a);
                    for (d = b.length; k < d; k++) e[b[k]] = c.css(a, b[k], !1, f);
                    return e
                }
                return void 0 !== f ? c.style(a, b, f) : c.css(a, b)
            }, a, b, 1 < arguments.length)
        }
    });
    c.Tween = M;
    M.prototype = {
        constructor: M,
        init: function(a,
            b, d, e, f, g) {
            this.elem = a;
            this.prop = d;
            this.easing = f || c.easing._default;
            this.options = b;
            this.start = this.now = this.cur();
            this.end = e;
            this.unit = g || (c.cssNumber[d] ? "" : "px")
        },
        cur: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = M.propHooks[this.prop];
            return a && a.get ? a.get(this) : M.propHooks._default.get(this)
        },
        run: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b, d = M.propHooks[this.prop];
            return this.options.duration ? this.pos = b = c.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : this.pos = b = a, this.now = (this.end - this.start) * b + this.start, this.options.step &&
                this.options.step.call(this.elem, this.now, this), d && d.set ? d.set(this) : M.propHooks._default.set(this), this
        }
    };
    M.prototype.init.prototype = M.prototype;
    M.propHooks = {
        _default: {
            get: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b;
                return 1 !== a.elem.nodeType || null != a.elem[a.prop] && null == a.elem.style[a.prop] ? a.elem[a.prop] : (b = c.css(a.elem, a.prop, ""), b && "auto" !== b ? b : 0)
            },
            set: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                c.fx.step[a.prop] ? c.fx.step[a.prop](a) : 1 !== a.elem.nodeType || null == a.elem.style[c.cssProps[a.prop]] && !c.cssHooks[a.prop] ? a.elem[a.prop] = a.now : c.style(a.elem,
                    a.prop, a.now + a.unit)
            }
        }
    };
    M.propHooks.scrollTop = M.propHooks.scrollLeft = {
        set: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now)
        }
    };
    c.easing = {
        linear: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a
        },
        swing: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return .5 - Math.cos(a * Math.PI) / 2
        },
        _default: "swing"
    };
    c.fx = M.prototype.init;
    c.fx.step = {};
    var sa, Ja, vc = /^(?:toggle|show|hide)$/,
        wc = /queueHooks$/;
    c.Animation = c.extend(O, {
        tweeners: {
            "*": [function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = this.createTween(a, b);
                return db(c.elem, a, ea.exec(b), c), c
            }]
        },
        tweener: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            c.isFunction(a) ?
                (b = a, a = ["*"]) : a = a.match(K);
            for (var d, e = 0, f = a.length; e < f; e++) d = a[e], O.tweeners[d] = O.tweeners[d] || [], O.tweeners[d].unshift(b)
        },
        prefilters: [function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var e, f, g, h, k, l, p, m, n = "width" in b || "height" in b,
                q = this,
                r = {},
                u = a.style,
                w = a.nodeType && fa(a),
                y = t.get(a, "fxshow");
            d.queue || (h = c._queueHooks(a, "fx"), null == h.unqueued && (h.unqueued = 0, k = h.empty.fire, h.empty.fire = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                h.unqueued || k()
            }), h.unqueued++, q.always(function() {
                q.always(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    h.unqueued--;
                    c.queue(a, "fx").length || h.empty.fire()
                })
            }));
            for (e in b)
                if (f =
                    b[e], vc.test(f)) {
                    if (delete b[e], g = g || "toggle" === f, f === (w ? "hide" : "show")) {
                        if ("show" !== f || !y || void 0 === y[e]) continue;
                        w = !0
                    }
                    r[e] = y && y[e] || c.style(a, e)
                }
            if (l = !c.isEmptyObject(b), l || !c.isEmptyObject(r))
                for (e in n && 1 === a.nodeType && (d.overflow = [u.overflow, u.overflowX, u.overflowY], p = y && y.display, null == p && (p = t.get(a, "display")), m = c.css(a, "display"), "none" === m && (p ? m = p : (pa([a], !0), p = a.style.display || p, m = c.css(a, "display"), pa([a]))), ("inline" === m || "inline-block" === m && null != p) && "none" === c.css(a, "float") && (l || (q.done(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        u.display =
                            p
                    }), null == p && (m = u.display, p = "none" === m ? "" : m)), u.display = "inline-block")), d.overflow && (u.overflow = "hidden", q.always(function() {
                        u.overflow = d.overflow[0];
                        u.overflowX = d.overflow[1];
                        u.overflowY = d.overflow[2]
                    })), l = !1, r) l || (y ? "hidden" in y && (w = y.hidden) : y = t.access(a, "fxshow", {
                    display: p
                }), g && (y.hidden = !w), w && pa([a], !0), q.done(function() {
                    w || pa([a]);
                    t.remove(a, "fxshow");
                    for (e in r) c.style(a, e, r[e])
                })), l = wb(w ? y[e] : 0, e, q), e in y || (y[e] = l.start, w && (l.end = l.start, l.start = 0))
        }],
        prefilter: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            b ? O.prefilters.unshift(a) :
                O.prefilters.push(a)
        }
    });
    c.speed = function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var e = a && "object" == typeof a ? c.extend({}, a) : {
            complete: d || !d && b || c.isFunction(a) && a,
            duration: a,
            easing: d && b || b && !c.isFunction(b) && b
        };
        return c.fx.off ? e.duration = 0 : "number" != typeof e.duration && (e.duration in c.fx.speeds ? e.duration = c.fx.speeds[e.duration] : e.duration = c.fx.speeds._default), null != e.queue && !0 !== e.queue || (e.queue = "fx"), e.old = e.complete, e.complete = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            c.isFunction(e.old) && e.old.call(this);
            e.queue && c.dequeue(this, e.queue)
        }, e
    };
    c.fn.extend({
        fadeTo: function(a,
            b, c, e) {
            return this.filter(fa).css("opacity", 0).show().end().animate({
                opacity: b
            }, a, c, e)
        },
        animate: function(a, b, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var f = c.isEmptyObject(a),
                g = c.speed(b, d, e);
            b = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = O(this, c.extend({}, a), g);
                (f || t.get(this, "finish")) && b.stop(!0)
            };
            return b.finish = b, f || !1 === g.queue ? this.each(b) : this.queue(g.queue, b)
        },
        stop: function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var e = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = a.stop;
                delete a.stop;
                b(d)
            };
            return "string" != typeof a && (d = b, b = a, a = void 0), b && !1 !== a && this.queue(a || "fx", []), this.each(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = !0,
                    g = null != a &&
                    a + "queueHooks",
                    h = c.timers,
                    k = t.get(this);
                if (g) k[g] && k[g].stop && e(k[g]);
                else
                    for (g in k) k[g] && k[g].stop && wc.test(g) && e(k[g]);
                for (g = h.length; g--;) h[g].elem !== this || null != a && h[g].queue !== a || (h[g].anim.stop(d), b = !1, h.splice(g, 1));
                !b && d || c.dequeue(this, a)
            })
        },
        finish: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return !1 !== a && (a = a || "fx"), this.each(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var b = t.get(this),
                    d = b[a + "queue"];
                var e = b[a + "queueHooks"];
                var f = c.timers,
                    g = d ? d.length : 0;
                b.finish = !0;
                c.queue(this, a, []);
                e && e.stop && e.stop.call(this, !0);
                for (e = f.length; e--;) f[e].elem ===
                    this && f[e].queue === a && (f[e].anim.stop(!0), f.splice(e, 1));
                for (e = 0; e < g; e++) d[e] && d[e].finish && d[e].finish.call(this);
                delete b.finish
            })
        }
    });
    c.each(["toggle", "show", "hide"], function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = c.fn[b];
        c.fn[b] = function(a, c, g) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return null == a || "boolean" == typeof a ? d.apply(this, arguments) : this.animate(Ka(b, !0), a, c, g)
        }
    });
    c.each({
        slideDown: Ka("show"),
        slideUp: Ka("hide"),
        slideToggle: Ka("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(a, b) {
        c.fn[a] = function(a, c, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.animate(b,
                a, c, f)
        }
    });
    c.timers = [];
    c.fx.tick = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var a = 0,
            b = c.timers;
        for (sa = c.now(); a < b.length; a++) {
            var d = b[a];
            d() || b[a] !== d || b.splice(a--, 1)
        }
        b.length || c.fx.stop();
        sa = void 0
    };
    c.fx.timer = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.timers.push(a);
        c.fx.start()
    };
    c.fx.interval = 13;
    c.fx.start = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Ja || (Ja = !0, Sa())
    };
    c.fx.stop = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        Ja = null
    };
    c.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    };
    c.fn.delay = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return a = c.fx ? c.fx.speeds[a] || a : a, b = b || "fx", this.queue(b, function(b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = n.setTimeout(b, a);
            c.stop = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                n.clearTimeout(d)
            }
        })
    };
    (function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var a = q.createElement("input"),
            b = q.createElement("select").appendChild(q.createElement("option"));
        a.type = "checkbox";
        r.checkOn = "" !== a.value;
        r.optSelected = b.selected;
        a = q.createElement("input");
        a.value = "t";
        a.type = "radio";
        r.radioValue = "t" === a.value
    })();
    var xa = c.expr.attrHandle;
    c.fn.extend({
        attr: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return ca(this, c.attr, a, b, 1 < arguments.length)
        },
        removeAttr: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.each(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                c.removeAttr(this, a)
            })
        }
    });
    c.extend({
        attr: function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var e, f, g = a.nodeType;
            if (3 !==
                g && 8 !== g && 2 !== g) return "undefined" == typeof a.getAttribute ? c.prop(a, b, d) : (1 === g && c.isXMLDoc(a) || (f = c.attrHooks[b.toLowerCase()] || (c.expr.match.bool.test(b) ? xc : void 0)), void 0 !== d ? null === d ? void c.removeAttr(a, b) : f && "set" in f && void 0 !== (e = f.set(a, d, b)) ? e : (a.setAttribute(b, d + ""), d) : f && "get" in f && null !== (e = f.get(a, b)) ? e : (e = c.find.attr(a, b), null == e ? void 0 : e))
        },
        attrHooks: {
            type: {
                set: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    if (!r.radioValue && "radio" === b && w(a, "input")) {
                        var c = a.value;
                        return a.setAttribute("type", b), c && (a.value = c), b
                    }
                }
            }
        },
        removeAttr: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var c = 0,
                e = b && b.match(K);
            if (e && 1 === a.nodeType)
                for (; b = e[c++];) a.removeAttribute(b)
        }
    });
    var xc = {
        set: function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return !1 === b ? c.removeAttr(a, d) : a.setAttribute(d, d), d
        }
    };
    c.each(c.expr.match.bool.source.match(/\w+/g), function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d = xa[b] || c.find.attr;
        xa[b] = function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var e, f, g = b.toLowerCase();
            return c || (f = xa[g], xa[g] = e, e = null != d(a, b, c) ? g : null, xa[g] = f), e
        }
    });
    var yc = /^(?:input|select|textarea|button)$/i,
        zc = /^(?:a|area)$/i;
    c.fn.extend({
        prop: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return ca(this,
                c.prop, a, b, 1 < arguments.length)
        },
        removeProp: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.each(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                delete this[c.propFix[a] || a]
            })
        }
    });
    c.extend({
        prop: function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var e, f, g = a.nodeType;
            if (3 !== g && 8 !== g && 2 !== g) return 1 === g && c.isXMLDoc(a) || (b = c.propFix[b] || b, f = c.propHooks[b]), void 0 !== d ? f && "set" in f && void 0 !== (e = f.set(a, d, b)) ? e : a[b] = d : f && "get" in f && null !== (e = f.get(a, b)) ? e : a[b]
        },
        propHooks: {
            tabIndex: {
                get: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b = c.find.attr(a, "tabindex");
                    return b ? parseInt(b, 10) : yc.test(a.nodeName) || zc.test(a.nodeName) && a.href ?
                        0 : -1
                }
            }
        },
        propFix: {
            "for": "htmlFor",
            "class": "className"
        }
    });
    r.optSelected || (c.propHooks.selected = {
        get: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a.parentNode;
            return a && a.parentNode && a.parentNode.selectedIndex, null
        },
        set: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = a.parentNode;
            a && (a.selectedIndex, a.parentNode && a.parentNode.selectedIndex)
        }
    });
    c.each("tabIndex readOnly maxLength cellSpacing cellPadding rowSpan colSpan useMap frameBorder contentEditable".split(" "), function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.propFix[this.toLowerCase()] = this
    });
    c.fn.extend({
        addClass: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b, d, e, f, g, h, k =
                0;
            if (c.isFunction(a)) return this.each(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                c(this).addClass(a.call(this, b, U(this)))
            });
            if ("string" == typeof a && a)
                for (b = a.match(K) || []; d = this[k++];)
                    if (f = U(d), e = 1 === d.nodeType && " " + da(f) + " ") {
                        for (h = 0; g = b[h++];) 0 > e.indexOf(" " + g + " ") && (e += g + " ");
                        e = da(e);
                        f !== e && d.setAttribute("class", e)
                    }
            return this
        },
        removeClass: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b, d, e, f, g, h, k = 0;
            if (c.isFunction(a)) return this.each(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                c(this).removeClass(a.call(this, b, U(this)))
            });
            if (!arguments.length) return this.attr("class", "");
            if ("string" ==
                typeof a && a)
                for (b = a.match(K) || []; d = this[k++];)
                    if (f = U(d), e = 1 === d.nodeType && " " + da(f) + " ") {
                        for (h = 0; g = b[h++];)
                            for (; - 1 < e.indexOf(" " + g + " ");) e = e.replace(" " + g + " ", " ");
                        e = da(e);
                        f !== e && d.setAttribute("class", e)
                    }
            return this
        },
        toggleClass: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = typeof a;
            return "boolean" == typeof b && "string" === d ? b ? this.addClass(a) : this.removeClass(a) : c.isFunction(a) ? this.each(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                c(this).toggleClass(a.call(this, d, U(this), b), b)
            }) : this.each(function() {
                var b, f;
                if ("string" === d) {
                    var g = 0;
                    var h = c(this);
                    for (f = a.match(K) || []; b = f[g++];) h.hasClass(b) ? h.removeClass(b) : h.addClass(b)
                } else void 0 !== a && "boolean" !== d || (b = U(this), b && t.set(this, "__className__", b), this.setAttribute && this.setAttribute("class", b || !1 === a ? "" : t.get(this, "__className__") || ""))
            })
        },
        hasClass: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b, c = 0;
            for (a = " " + a + " "; b = this[c++];)
                if (1 === b.nodeType && -1 < (" " + da(U(b)) + " ").indexOf(a)) return !0;
            return !1
        }
    });
    var Ac = /\r/g;
    c.fn.extend({
        val: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b, d, e, f = this[0];
            if (arguments.length) return e = c.isFunction(a), this.each(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var f;
                1 ===
                    this.nodeType && (f = e ? a.call(this, d, c(this).val()) : a, null == f ? f = "" : "number" == typeof f ? f += "" : Array.isArray(f) && (f = c.map(f, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return null == a ? "" : a + ""
                    })), b = c.valHooks[this.type] || c.valHooks[this.nodeName.toLowerCase()], b && "set" in b && void 0 !== b.set(this, f, "value") || (this.value = f))
            });
            if (f) return b = c.valHooks[f.type] || c.valHooks[f.nodeName.toLowerCase()], b && "get" in b && void 0 !== (d = b.get(f, "value")) ? d : (d = f.value, "string" == typeof d ? d.replace(Ac, "") : null == d ? "" : d)
        }
    });
    c.extend({
        valHooks: {
            option: {
                get: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b =
                        c.find.attr(a, "value");
                    return null != b ? b : da(c.text(a))
                }
            },
            select: {
                get: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var b, d, e = a.options,
                        f = a.selectedIndex,
                        g = "select-one" === a.type,
                        h = g ? null : [],
                        k = g ? f + 1 : e.length;
                    for (d = 0 > f ? k : g ? f : 0; d < k; d++)
                        if (b = e[d], !(!b.selected && d !== f || b.disabled || b.parentNode.disabled && w(b.parentNode, "optgroup"))) {
                            if (a = c(b).val(), g) return a;
                            h.push(a)
                        }
                    return h
                },
                set: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    for (var d, e = a.options, f = c.makeArray(b), g = e.length; g--;) b = e[g], (b.selected = -1 < c.inArray(c.valHooks.option.get(b), f)) && (d = !0);
                    return d || (a.selectedIndex = -1), f
                }
            }
        }
    });
    c.each(["radio", "checkbox"], function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.valHooks[this] = {
            set: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                if (Array.isArray(b)) return a.checked = -1 < c.inArray(c(a).val(), b)
            }
        };
        r.checkOn || (c.valHooks[this].get = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return null === a.getAttribute("value") ? "on" : a.value
        })
    });
    var Mb = /^(?:focusinfocus|focusoutblur)$/;
    c.extend(c.event, {
        trigger: function(a, b, d, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var f, g, h, k, l, p = [d || q],
                m = Ma.call(a, "type") ? a.type : a;
            var v = Ma.call(a, "namespace") ? a.namespace.split(".") : [];
            if (f = g = d = d || q, 3 !== d.nodeType && 8 !== d.nodeType && !Mb.test(m +
                    c.event.triggered) && (-1 < m.indexOf(".") && (v = m.split("."), m = v.shift(), v.sort()), h = 0 > m.indexOf(":") && "on" + m, a = a[c.expando] ? a : new c.Event(m, "object" == typeof a && a), a.isTrigger = e ? 2 : 3, a.namespace = v.join("."), a.rnamespace = a.namespace ? new RegExp("(^|\\.)" + v.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, a.result = void 0, a.target || (a.target = d), b = null == b ? [a] : c.makeArray(b, [a]), l = c.event.special[m] || {}, e || !l.trigger || !1 !== l.trigger.apply(d, b))) {
                if (!e && !l.noBubble && !c.isWindow(d)) {
                    var r = l.delegateType || m;
                    for (Mb.test(r +
                            m) || (f = f.parentNode); f; f = f.parentNode) p.push(f), g = f;
                    g === (d.ownerDocument || q) && p.push(g.defaultView || g.parentWindow || n)
                }
                for (v = 0;
                    (f = p[v++]) && !a.isPropagationStopped();) a.type = 1 < v ? r : l.bindType || m, (k = (t.get(f, "events") || {})[a.type] && t.get(f, "handle")) && k.apply(f, b), (k = h && f[h]) && k.apply && Na(f) && (a.result = k.apply(f, b), !1 === a.result && a.preventDefault());
                return a.type = m, e || a.isDefaultPrevented() || l._default && !1 !== l._default.apply(p.pop(), b) || !Na(d) || h && c.isFunction(d[m]) && !c.isWindow(d) && (g = d[h], g && (d[h] =
                    null), c.event.triggered = m, d[m](), c.event.triggered = void 0, g && (d[h] = g)), a.result
            }
        },
        simulate: function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            a = c.extend(new c.Event, d, {
                type: a,
                isSimulated: !0
            });
            c.event.trigger(a, null, b)
        }
    });
    c.fn.extend({
        trigger: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.each(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                c.event.trigger(a, b, this)
            })
        },
        triggerHandler: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var d = this[0];
            if (d) return c.event.trigger(a, b, d, !0)
        }
    });
    c.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),
        function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            c.fn[b] = function(a, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return 0 < arguments.length ? this.on(b, null, a, c) : this.trigger(b)
            }
        });
    c.fn.extend({
        hover: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.mouseenter(a).mouseleave(b || a)
        }
    });
    r.focusin = "onfocusin" in n;
    r.focusin || c.each({
        focus: "focusin",
        blur: "focusout"
    }, function(a, b) {
        var d = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            c.event.simulate(b, a.target, c.event.fix(a))
        };
        c.event.special[b] = {
            setup: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = this.ownerDocument || this,
                    f = t.access(c, b);
                f || c.addEventListener(a, d, !0);
                t.access(c, b, (f || 0) + 1)
            },
            teardown: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var c = this.ownerDocument ||
                    this,
                    f = t.access(c, b) - 1;
                f ? t.access(c, b, f) : (c.removeEventListener(a, d, !0), t.remove(c, b))
            }
        }
    });
    var ya = n.location,
        Nb = c.now(),
        Ya = /\?/;
    c.parseXML = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        if (!a || "string" != typeof a) return null;
        try {
            var b = (new n.DOMParser).parseFromString(a, "text/xml")
        } catch (d) {
            b = void 0
        }
        return b && !b.getElementsByTagName("parsererror").length || c.error("Invalid XML: " + a), b
    };
    var cc = /\[\]$/,
        Ob = /\r?\n/g,
        Bc = /^(?:submit|button|image|reset|file)$/i,
        Cc = /^(?:input|select|textarea|keygen)/i;
    c.param = function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var d, e = [],
            f = function(a,
                b) {
                b = c.isFunction(b) ? b() : b;
                e[e.length] = encodeURIComponent(a) + "=" + encodeURIComponent(null == b ? "" : b)
            };
        if (Array.isArray(a) || a.jquery && !c.isPlainObject(a)) c.each(a, function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            f(this.name, this.value)
        });
        else
            for (d in a) Ta(d, a[d], b, f);
        return e.join("&")
    };
    c.fn.extend({
        serialize: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return c.param(this.serializeArray())
        },
        serializeArray: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.map(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var a = c.prop(this, "elements");
                return a ? c.makeArray(a) : this
            }).filter(function() {
                var a = this.type;
                return this.name && !c(this).is(":disabled") &&
                    Cc.test(this.nodeName) && !Bc.test(a) && (this.checked || !Ib.test(a))
            }).map(function(a, b) {
                a = c(this).val();
                return null == a ? null : Array.isArray(a) ? c.map(a, function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return {
                        name: b.name,
                        value: a.replace(Ob, "\r\n")
                    }
                }) : {
                    name: b.name,
                    value: a.replace(Ob, "\r\n")
                }
            }).get()
        }
    });
    var Dc = /%20/g,
        Ec = /#.*$/,
        Fc = /([?&])_=[^&]*/,
        Gc = /^(.*?):[ \t]*([^\r\n]*)$/gm,
        Hc = /^(?:GET|HEAD)$/,
        Ic = /^\/\//,
        Pb = {},
        Ua = {},
        Qb = "*/".concat("*"),
        Za = q.createElement("a");
    Za.href = ya.href;
    c.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: ya.href,
            type: "GET",
            isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(ya.protocol),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": Qb,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /\bxml\b/,
                html: /\bhtml/,
                json: /\bjson\b/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            converters: {
                "* text": String,
                "text html": !0,
                "text json": JSON.parse,
                "text xml": c.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return b ? Va(Va(a, c.ajaxSettings), b) : Va(c.ajaxSettings, a)
        },
        ajaxPrefilter: xb(Pb),
        ajaxTransport: xb(Ua),
        ajax: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            function d(a, b, d, g) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var l, p, q, y = b;
                if (!F) {
                    F = !0;
                    h && n.clearTimeout(h);
                    e = void 0;
                    f = g || "";
                    A.readyState = 0 < a ? 4 : 0;
                    g = 200 <= a && 300 > a || 304 === a;
                    if (d) {
                        var J = m;
                        for (var C = A, Q, z, B, I, O = J.contents, H = J.dataTypes;
                            "*" === H[0];) H.shift(), void 0 === Q && (Q = J.mimeType || C.getResponseHeader("Content-Type"));
                        if (Q)
                            for (z in O)
                                if (O[z] &&
                                    O[z].test(Q)) {
                                    H.unshift(z);
                                    break
                                }
                        if (H[0] in d) B = H[0];
                        else {
                            for (z in d) {
                                if (!H[0] || J.converters[z + " " + H[0]]) {
                                    B = z;
                                    break
                                }
                                I || (I = z)
                            }
                            B = B || I
                        }
                        d = B ? (B !== H[0] && H.unshift(B), d[B]) : void 0;
                        J = d
                    }
                    a: {
                        d = m;Q = J;z = A;B = g;
                        var S, M, K;J = {};C = d.dataTypes.slice();
                        if (C[1])
                            for (S in d.converters) J[S.toLowerCase()] = d.converters[S];
                        for (I = C.shift(); I;)
                            if (d.responseFields[I] && (z[d.responseFields[I]] = Q), !K && B && d.dataFilter && (Q = d.dataFilter(Q, d.dataType)), K = I, I = C.shift())
                                if ("*" === I) I = K;
                                else if ("*" !== K && K !== I) {
                            if (S = J[K + " " + I] || J["* " + I], !S)
                                for (N in J)
                                    if (M = N.split(" "), M[1] === I && (S = J[K + " " + M[0]] || J["* " + M[0]])) {
                                        !0 === S ? S = J[N] : !0 !== J[N] && (I = M[0], C.unshift(M[1]));
                                        break
                                    }
                            if (!0 !== S)
                                if (S && d["throws"]) Q = S(Q);
                                else try {
                                    Q = S(Q)
                                } catch (jc) {
                                    var N = {
                                        state: "parsererror",
                                        error: S ? jc : "No conversion from " + K + " to " + I
                                    };
                                    break a
                                }
                        }
                        N = {
                            state: "success",
                            data: Q
                        }
                    }
                    J = N;
                    g ? (m.ifModified && (q = A.getResponseHeader("Last-Modified"), q && (c.lastModified[R] = q), q = A.getResponseHeader("etag"), q && (c.etag[R] = q)), 204 === a || "HEAD" === m.type ? y = "nocontent" : 304 === a ? y = "notmodified" : (y = J.state,
                        l = J.data, p = J.error, g = !p)) : (p = y, !a && y || (y = "error", 0 > a && (a = 0)));
                    A.status = a;
                    A.statusText = (b || y) + "";
                    g ? t.resolveWith(v, [l, y, A]) : t.rejectWith(v, [A, y, p]);
                    A.statusCode(w);
                    w = void 0;
                    k && r.trigger(g ? "ajaxSuccess" : "ajaxError", [A, m, g ? l : p]);
                    u.fireWith(v, [A, y]);
                    k && (r.trigger("ajaxComplete", [A, m]), --c.active || c.event.trigger("ajaxStop"))
                }
            }
            "object" == typeof a && (b = a, a = void 0);
            b = b || {};
            var e, f, g, h, k, l, p, m = c.ajaxSetup({}, b),
                v = m.context || m,
                r = m.context && (v.nodeType || v.jquery) ? c(v) : c.event,
                t = c.Deferred(),
                u = c.Callbacks("once memory"),
                w = m.statusCode || {},
                y = {},
                C = {},
                B = "canceled",
                A = {
                    readyState: 0,
                    getResponseHeader: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var b;
                        if (F) {
                            if (!g)
                                for (g = {}; b = Gc.exec(f);) g[b[1].toLowerCase()] = b[2];
                            b = g[a.toLowerCase()]
                        }
                        return null == b ? null : b
                    },
                    getAllResponseHeaders: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return F ? f : null
                    },
                    setRequestHeader: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return null == F && (a = C[a.toLowerCase()] = C[a.toLowerCase()] || a, y[a] = b), this
                    },
                    overrideMimeType: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        return null == F && (m.mimeType = a), this
                    },
                    statusCode: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        var b;
                        if (a)
                            if (F) A.always(a[A.status]);
                            else
                                for (b in a) w[b] = [w[b], a[b]];
                        return this
                    },
                    abort: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        a = a || B;
                        return e && e.abort(a), d(0, a), this
                    }
                };
            if (t.promise(A), m.url = ((a || m.url || ya.href) + "").replace(Ic, ya.protocol + "//"), m.type = b.method || b.type || m.method || m.type, m.dataTypes = (m.dataType || "*").toLowerCase().match(K) || [""], null == m.crossDomain) {
                a = q.createElement("a");
                try {
                    a.href = m.url, a.href = a.href, m.crossDomain = Za.protocol + "//" + Za.host != a.protocol + "//" + a.host
                } catch (Q) {
                    m.crossDomain = !0
                }
            }
            if (m.data && m.processData && "string" != typeof m.data && (m.data = c.param(m.data,
                    m.traditional)), yb(Pb, m, b, A), F) return A;
            (k = c.event && m.global) && 0 === c.active++ && c.event.trigger("ajaxStart");
            m.type = m.type.toUpperCase();
            m.hasContent = !Hc.test(m.type);
            var R = m.url.replace(Ec, "");
            m.hasContent ? m.data && m.processData && 0 === (m.contentType || "").indexOf("application/x-www-form-urlencoded") && (m.data = m.data.replace(Dc, "+")) : (p = m.url.slice(R.length), m.data && (R += (Ya.test(R) ? "&" : "?") + m.data, delete m.data), !1 === m.cache && (R = R.replace(Fc, "$1"), p = (Ya.test(R) ? "&" : "?") + "_=" + Nb++ + p), m.url = R + p);
            m.ifModified &&
                (c.lastModified[R] && A.setRequestHeader("If-Modified-Since", c.lastModified[R]), c.etag[R] && A.setRequestHeader("If-None-Match", c.etag[R]));
            (m.data && m.hasContent && !1 !== m.contentType || b.contentType) && A.setRequestHeader("Content-Type", m.contentType);
            A.setRequestHeader("Accept", m.dataTypes[0] && m.accepts[m.dataTypes[0]] ? m.accepts[m.dataTypes[0]] + ("*" !== m.dataTypes[0] ? ", " + Qb + "; q=0.01" : "") : m.accepts["*"]);
            for (l in m.headers) A.setRequestHeader(l, m.headers[l]);
            if (m.beforeSend && (!1 === m.beforeSend.call(v, A, m) ||
                    F)) return A.abort();
            if (B = "abort", u.add(m.complete), A.done(m.success), A.fail(m.error), e = yb(Ua, m, b, A)) {
                if (A.readyState = 1, k && r.trigger("ajaxSend", [A, m]), F) return A;
                m.async && 0 < m.timeout && (h = n.setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    A.abort("timeout")
                }, m.timeout));
                try {
                    var F = !1;
                    e.send(y, d)
                } catch (Q) {
                    if (F) throw Q;
                    d(-1, Q)
                }
            } else d(-1, "No Transport");
            return A
        },
        getJSON: function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return c.get(a, b, d, "json")
        },
        getScript: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return c.get(a, void 0, b, "script")
        }
    });
    c.each(["get", "post"], function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c[b] = function(a, e,
            f, g) {
            return c.isFunction(e) && (g = g || f, f = e, e = void 0), c.ajax(c.extend({
                url: a,
                type: b,
                dataType: g,
                data: e,
                success: f
            }, c.isPlainObject(a) && a))
        }
    });
    c._evalUrl = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return c.ajax({
            url: a,
            type: "GET",
            dataType: "script",
            cache: !0,
            async: !1,
            global: !1,
            "throws": !0
        })
    };
    c.fn.extend({
        wrapAll: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b;
            return this[0] && (c.isFunction(a) && (a = a.call(this[0])), b = c(a, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && b.insertBefore(this[0]), b.map(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var a = this; a.firstElementChild;) a = a.firstElementChild;
                return a
            }).append(this)), this
        },
        wrapInner: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return c.isFunction(a) ? this.each(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                c(this).wrapInner(a.call(this, b))
            }) : this.each(function() {
                var b = c(this),
                    d = b.contents();
                d.length ? d.wrapAll(a) : b.append(a)
            })
        },
        wrap: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var b = c.isFunction(a);
            return this.each(function(d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                c(this).wrapAll(b ? a.call(this, d) : a)
            })
        },
        unwrap: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.parent(a).not("body").each(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                c(this).replaceWith(this.childNodes)
            }), this
        }
    });
    c.expr.pseudos.hidden = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return !c.expr.pseudos.visible(a)
    };
    c.expr.pseudos.visible = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return !!(a.offsetWidth || a.offsetHeight || a.getClientRects().length)
    };
    c.ajaxSettings.xhr = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        try {
            return new n.XMLHttpRequest
        } catch (a) {}
    };
    var Jc = {
            0: 200,
            1223: 204
        },
        Ba = c.ajaxSettings.xhr();
    r.cors = !!Ba && "withCredentials" in Ba;
    r.ajax = Ba = !!Ba;
    c.ajaxTransport(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var b, c;
        if (r.cors || Ba && !a.crossDomain) return {
            send: function(d, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var e, h = a.xhr();
                if (h.open(a.type, a.url, a.async, a.username, a.password), a.xhrFields)
                    for (e in a.xhrFields) h[e] = a.xhrFields[e];
                a.mimeType &&
                    h.overrideMimeType && h.overrideMimeType(a.mimeType);
                a.crossDomain || d["X-Requested-With"] || (d["X-Requested-With"] = "XMLHttpRequest");
                for (e in d) h.setRequestHeader(e, d[e]);
                b = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    return function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        b && (b = c = h.onload = h.onerror = h.onabort = h.onreadystatechange = null, "abort" === a ? h.abort() : "error" === a ? "number" != typeof h.status ? f(0, "error") : f(h.status, h.statusText) : f(Jc[h.status] || h.status, h.statusText, "text" !== (h.responseType || "text") || "string" != typeof h.responseText ? {
                                binary: h.response
                            } : {
                                text: h.responseText
                            },
                            h.getAllResponseHeaders()))
                    }
                };
                h.onload = b();
                c = h.onerror = b("error");
                void 0 !== h.onabort ? h.onabort = c : h.onreadystatechange = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    4 === h.readyState && n.setTimeout(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                        b && c()
                    })
                };
                b = b("abort");
                try {
                    h.send(a.hasContent && a.data || null)
                } catch (k) {
                    if (b) throw k;
                }
            },
            abort: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                b && b()
            }
        }
    });
    c.ajaxPrefilter(function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a.crossDomain && (a.contents.script = !1)
    });
    c.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /\b(?:java|ecma)script\b/
        },
        converters: {
            "text script": function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                return c.globalEval(a), a
            }
        }
    });
    c.ajaxPrefilter("script", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        void 0 === a.cache && (a.cache = !1);
        a.crossDomain && (a.type = "GET")
    });
    c.ajaxTransport("script", function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        if (a.crossDomain) {
            var b, d;
            return {
                send: function(e, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    b = c("<script>").prop({
                        charset: a.scriptCharset,
                        src: a.url
                    }).on("load error", d = function(a) {
                        b.remove();
                        d = null;
                        a && f("error" === a.type ? 404 : 200, a.type)
                    });
                    q.head.appendChild(b[0])
                },
                abort: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    d && d()
                }
            }
        }
    });
    var Rb = [],
        $a = /(=)\?(?=&|$)|\?\?/;
    c.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            var a = Rb.pop() || c.expando + "_" + Nb++;
            return this[a] = !0, a
        }
    });
    c.ajaxPrefilter("json jsonp", function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var e, f, g, h = !1 !== a.jsonp && ($a.test(a.url) ? "url" : "string" == typeof a.data && 0 === (a.contentType || "").indexOf("application/x-www-form-urlencoded") && $a.test(a.data) && "data");
        if (h || "jsonp" === a.dataTypes[0]) return e = a.jsonpCallback = c.isFunction(a.jsonpCallback) ? a.jsonpCallback() : a.jsonpCallback, h ? a[h] = a[h].replace($a, "$1" + e) : !1 !== a.jsonp && (a.url += (Ya.test(a.url) ? "&" : "?") + a.jsonp +
            "=" + e), a.converters["script json"] = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return g || c.error(e + " was not called"), g[0]
        }, a.dataTypes[0] = "json", f = n[e], n[e] = function() {
            g = arguments
        }, d.always(function() {
            void 0 === f ? c(n).removeProp(e) : n[e] = f;
            a[e] && (a.jsonpCallback = b.jsonpCallback, Rb.push(e));
            g && c.isFunction(f) && f(g[0]);
            g = f = void 0
        }), "script"
    });
    r.createHTMLDocument = function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var a = q.implementation.createHTMLDocument("").body;
        return a.innerHTML = "<form></form><form></form>", 2 === a.childNodes.length
    }();
    c.parseHTML = function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        if ("string" !=
            typeof a) return [];
        "boolean" == typeof b && (d = b, b = !1);
        var e, f, g;
        return b || (r.createHTMLDocument ? (b = q.implementation.createHTMLDocument(""), e = b.createElement("base"), e.href = q.location.href, b.head.appendChild(e)) : b = q), f = Fb.exec(a), g = !d && [], f ? [b.createElement(f[1])] : (f = fb([a], b, g), g && g.length && c(g).remove(), c.merge([], f.childNodes))
    };
    c.fn.load = function(a, b, d) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        var e, f, g, h = this,
            k = a.indexOf(" ");
        return -1 < k && (e = da(a.slice(k)), a = a.slice(0, k)), c.isFunction(b) ? (d = b, b = void 0) : b && "object" == typeof b && (f = "POST"), 0 <
            h.length && c.ajax({
                url: a,
                type: f || "GET",
                dataType: "html",
                data: b
            }).done(function(a) {
                g = arguments;
                h.html(e ? c("<div>").append(c.parseHTML(a)).find(e) : a)
            }).always(d && function(a, b) {
                h.each(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    d.apply(this, g || [a.responseText, b, a])
                })
            }), this
    };
    c.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.fn[b] = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.on(b, a)
        }
    });
    c.expr.pseudos.animated = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return c.grep(c.timers, function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return a === b.elem
        }).length
    };
    c.offset = {
        setOffset: function(a,
            b, d) {
            var e, f, g, h = c.css(a, "position"),
                k = c(a),
                l = {};
            "static" === h && (a.style.position = "relative");
            var p = k.offset();
            var m = c.css(a, "top");
            var n = c.css(a, "left");
            ("absolute" === h || "fixed" === h) && -1 < (m + n).indexOf("auto") ? (e = k.position(), g = e.top, f = e.left) : (g = parseFloat(m) || 0, f = parseFloat(n) || 0);
            c.isFunction(b) && (b = b.call(a, d, c.extend({}, p)));
            null != b.top && (l.top = b.top - p.top + g);
            null != b.left && (l.left = b.left - p.left + f);
            "using" in b ? b.using.call(a, l) : k.css(l)
        }
    };
    c.fn.extend({
        offset: function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (arguments.length) return void 0 ===
                a ? this : this.each(function(b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    c.offset.setOffset(this, a, b)
                });
            var b, d, e, f, g = this[0];
            if (g) return g.getClientRects().length ? (e = g.getBoundingClientRect(), b = g.ownerDocument, d = b.documentElement, f = b.defaultView, {
                top: e.top + f.pageYOffset - d.clientTop,
                left: e.left + f.pageXOffset - d.clientLeft
            }) : {
                top: 0,
                left: 0
            }
        },
        position: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (this[0]) {
                var a, b, d = this[0],
                    e = {
                        top: 0,
                        left: 0
                    };
                return "fixed" === c.css(d, "position") ? b = d.getBoundingClientRect() : (a = this.offsetParent(), b = this.offset(), w(a[0], "html") || (e = a.offset()), e = {
                    top: e.top +
                        c.css(a[0], "borderTopWidth", !0),
                    left: e.left + c.css(a[0], "borderLeftWidth", !0)
                }), {
                    top: b.top - e.top - c.css(d, "marginTop", !0),
                    left: b.left - e.left - c.css(d, "marginLeft", !0)
                }
            }
        },
        offsetParent: function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.map(function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                for (var a = this.offsetParent; a && "static" === c.css(a, "position");) a = a.offsetParent;
                return a || Oa
            })
        }
    });
    c.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(a, b) {
        var d = "pageYOffset" === b;
        c.fn[a] = function(e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return ca(this, function(a, e, h) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var f;
                return c.isWindow(a) ? f = a : 9 === a.nodeType &&
                    (f = a.defaultView), void 0 === h ? f ? f[b] : a[e] : void(f ? f.scrollTo(d ? f.pageXOffset : h, d ? h : f.pageYOffset) : a[e] = h)
            }, a, e, arguments.length)
        }
    });
    c.each(["top", "left"], function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        c.cssHooks[b] = ob(r.pixelPosition, function(a, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            if (e) return e = ra(a, b), Ra.test(e) ? c(a).position()[b] + "px" : e
        })
    });
    c.each({
        Height: "height",
        Width: "width"
    }, function(a, b) {
        c.each({
            padding: "inner" + a,
            content: b,
            "": "outer" + a
        }, function(d, e) {
            c.fn[e] = function(f, g) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                var h = arguments.length && (d || "boolean" != typeof f),
                    k = d || (!0 === f || !0 === g ? "margin" : "border");
                return ca(this, function(b, d, f) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
                    var g;
                    return c.isWindow(b) ? 0 === e.indexOf("outer") ? b["inner" + a] : b.document.documentElement["client" + a] : 9 === b.nodeType ? (g = b.documentElement, Math.max(b.body["scroll" + a], g["scroll" + a], b.body["offset" + a], g["offset" + a], g["client" + a])) : void 0 === f ? c.css(b, d, k) : c.style(b, d, f, k)
                }, b, h ? f : void 0, h)
            }
        })
    });
    c.fn.extend({
        bind: function(a, b, c) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.on(a, null, b, c)
        },
        unbind: function(a, b) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.off(a, null, b)
        },
        delegate: function(a, b, c, e) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
            return this.on(b, a, c, e)
        },
        undelegate: function(a,
            b, c) {
            return 1 === arguments.length ? this.off(a, "**") : this.off(b, a || "**", c)
        }
    });
    c.holdReady = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        a ? c.readyWait++ : c.ready(!0)
    };
    c.isArray = Array.isArray;
    c.parseJSON = JSON.parse;
    c.nodeName = w;
    "function" == typeof define && define.amd && define("jquery", [], function() {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return c
    });
    var Kc = n.jQuery,
        Lc = n.$;
    return c.noConflict = function(a) {
 if(arguments.callee.caller && arguments.callee.caller.name){console.debug("caller",arguments.callee.caller.name);}
 if(arguments.callee && arguments.callee.name ) {console.debug("callee",arguments.callee.name);}
        return n.$ === c && (n.$ = Lc), a && n.jQuery === c && (n.jQuery = Kc), c
    }, B || (n.jQuery = n.$ = c), c
});
