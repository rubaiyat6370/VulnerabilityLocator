chrome = {
    alarms: {
        clear: function(a) {},
        clearAll: function() {},
        create: function(a, b) {},
        get: function(a, b) {},
        getAll: function(a) {},
        onAlarm: {
            addListener: function(a) {}
        }
    },
    bookmarks: {
        create: function(a, b) {},
        get: function(a, b) {},
        getChildren: function(a, b) {},
        getRecent: function(a, b) {},
        getSubTree: function(a, b) {},
        getTree: function(a) {},
        move: function(a, b, c) {},
        onChanged: {
            addListener: function(a) {}
        },
        onChildrenReordered: {
            addListener: function(a) {}
        },
        onCreated: {
            addListener: function(a) {}
        },
        onImportBegan: {
            addListener: function(a) {}
        },
        onImportEnded: {
            addListener: function(a) {}
        },
        onMoved: {
            addListener: function(a) {}
        },
        onRemoved: {
            addListener: function(a) {}
        },
        remove: function(a, b) {},
        removeTree: function(a, b) {},
        search: function(a, b) {},
        update: function(a, b, c) {}
    },
    browserAction: {
        disable: function(a) {},
        enable: function(a) {},
        getBadgeBackgroundColor: function(a, b) {},
        getBadgeText: function(a, b) {},
        getPopup: function(a, b) {},
        getTitle: function(a, b) {},
        onClicked: {
            addListener: function(a) {}
        },
        setBadgeBackgroundColor: function(a) {},
        setBadgeText: function(a) {},
        setIcon: function(a,
            b) {},
        setPopup: function(a) {},
        setTitle: function(a) {}
    },
    browsingData: {
        remove: function(a, b, c) {},
        removeAppcache: function(a, b) {},
        removeCache: function(a, b) {},
        removeCookies: function(a, b) {},
        removeDownloads: function(a, b) {},
        removeFileSystems: function(a, b) {},
        removeFormData: function(a, b) {},
        removeHistory: function(a, b) {},
        removeIndexedDB: function(a, b) {},
        removeLocalStorage: function(a, b) {},
        removePasswords: function(a, b) {},
        removePluginData: function(a, b) {},
        removeWebSQL: function(a, b) {},
        settings: function(a) {}
    },
    commands: {
        getAll: function(a) {},
        onCommand: {
            addListener: function(a) {}
        }
    },
    contentSettings: {
        clear: function(a, b) {},
        get: function(a, b) {},
        set: function(a, b) {},
        getResourceIdentifiers: function(a) {},
        cookies: {},
        images: {},
        javascript: {},
        plugins: {},
        popups: {},
        notifications: {}
    },
    contextMenus: {
        create: function(a, b) {},
        onClicked: {
            addListener: function(a) {}
        },
        remove: function(a, b) {},
        removeAll: function(a) {},
        update: function(a, b, c) {}
    },
    cookies: {
        get: function(a, b) {},
        getAll: function(a, b) {},
        getAllCookieStores: function(a) {},
        onChanged: {
            addListener: function(a) {}
        },
        remove: function(a,
            b) {},
        set: function(a, b) {}
    },
    debugger: {
        attach: function(a, b, c) {},
        detach: function(a, b) {},
        getTargets: function(a) {},
        onDetach: {
            addListener: function(a) {}
        },
        onEvent: {
            addListener: function(a) {}
        },
        sendCommand: function(a, b, c, d) {}
    },
    devtools: {
        inspectedWindow: {
            eval: function(a, b) {},
            getResources: function(a) {},
            onResourceAdded: {
                addListener: function(a) {}
            },
            onResourceContentCommitted: {
                addListener: function(a) {}
            },
            reload: function(a) {}
        },
        network: {
            getHAR: function(a) {},
            onNavigated: {
                addListener: function(a) {}
            },
            onRequestFinished: {
                addListener: function(a) {}
            }
        },
        panels: {
            create: function(a, b, c, d) {},
            setOpenResourceHandler: function(a) {}
        }
    },
    downloads: {
        acceptDanger: function(a, b) {},
        cancel: function(a, b) {},
        download: function(a, b) {},
        drag: function(a) {},
        erase: function(a, b) {},
        getFileIcon: function(a, b, c) {},
        onChanged: {
            addListener: function(a) {}
        },
        onCreated: {
            addListener: function(a) {}
        },
        onDeterminingFilename: {
            addListener: function(a) {}
        },
        onErased: {
            addListener: function(a) {}
        },
        open: function(a) {},
        pause: function(a, b) {},
        removeFile: function(a, b) {},
        resume: function(a, b) {},
        search: function(a,
            b) {},
        setShelfEnabled: function(a) {},
        show: function(a) {},
        showDefaultFolder: function() {}
    },
    events: {
        addListener: function(a) {},
        removeListener: function(a) {},
        hasListener: function(a) {},
        hasListeners: function() {},
        addRules: function(a, b) {},
        getRules: function(a, b) {},
        removeRules: function(a, b) {}
    },
    extension: {
        getBackgroundPage: function() {},
        getExtensionTabs: function(a) {},
        getURL: function(a) {},
        getViews: function(a) {},
        isAllowedFileSchemeAccess: function(a) {},
        isAllowedIncognitoAccess: function(a) {},
        onRequest: {
            addListener: function(a) {}
        },
        onRequestExternal: {
            addListener: function(a) {}
        },
        sendRequest: function(a, b, c) {},
        setUpdateUrlData: function(a) {}
    },
    fileBrowserHandler: {
        onExecute: {
            addListener: function(a) {}
        },
        selectFile: function(a, b) {}
    },
    fontSettings: {
        clearDefaultFixedFontSize: function(a, b) {},
        clearDefaultFontSize: function(a, b) {},
        clearFont: function(a, b) {},
        clearMinimumFontSize: function(a, b) {},
        getDefaultFixedFontSize: function(a, b) {},
        getDefaultFontSize: function(a, b) {},
        getFont: function(a, b) {},
        getFontList: function(a) {},
        getMinimumFontSize: function(a,
            b) {},
        onDefaultFixedFontSizeChanged: {
            addListener: function(a) {}
        },
        onDefaultFontSizeChanged: {
            addListener: function(a) {}
        },
        onFontChanged: {
            addListener: function(a) {}
        },
        onMinimumFontSizeChanged: {
            addListener: function(a) {}
        },
        setDefaultFixedFontSize: function(a, b) {},
        setDefaultFontSize: function(a, b) {},
        setFont: function(a, b) {},
        setMinimumFontSize: function(a, b) {}
    },
    history: {
        addUrl: function(a, b) {},
        deleteAll: function(a) {},
        deleteRange: function(a, b) {},
        deleteUrl: function(a, b) {},
        getVisits: function(a, b) {},
        onVisitRemoved: {
            addListener: function(a) {}
        },
        onVisited: {
            addListener: function(a) {}
        },
        search: function(a, b) {}
    },
    i18n: {
        getAcceptLanguages: function(a) {},
        getMessage: function(a, b) {}
    },
    identity: {
        getAuthToken: function(a, b) {},
        getRedirectURL: function(a) {},
        launchWebAuthFlow: function(a, b) {},
        onSignInChanged: {
            addListener: function(a) {}
        },
        removeCachedAuthToken: function(a, b) {}
    },
    idle: {
        onStateChanged: {
            addListener: function(a) {}
        },
        queryState: function(a, b) {},
        setDetectionInterval: function(a) {}
    },
    input: {
        ime: {
            clearComposition: function(a, b) {},
            commitText: function(a, b) {},
            deleteSurroundingText: function(a,
                b) {},
            keyEventHandled: function(a, b) {},
            onActivate: {
                addListener: function(a) {}
            },
            onBlur: {
                addListener: function(a) {}
            },
            onCandidateClicked: {
                addListener: function(a) {}
            },
            onDeactivated: {
                addListener: function(a) {}
            },
            onFocus: {
                addListener: function(a) {}
            },
            onInputContextUpdate: {
                addListener: function(a) {}
            },
            onKeyEvent: {
                addListener: function(a) {}
            },
            onMenuItemActivated: {
                addListener: function(a) {}
            },
            onReset: {
                addListener: function(a) {}
            },
            onSurroundingTextChanged: {
                addListener: function(a) {}
            },
            setCandidateWindowProperties: function(a,
                b) {},
            setCandidates: function(a, b) {},
            setComposition: function(a, b) {},
            setCursorPosition: function(a, b) {},
            setMenuItems: function(a, b) {},
            updateMenuItems: function(a, b) {}
        }
    },
    management: {
        get: function(a, b) {},
        getAll: function(a) {},
        getPermissionWarningsById: function(a, b) {},
        getPermissionWarningsByManifest: function(a, b) {},
        launchApp: function(a, b) {},
        onDisabled: {
            addListener: function(a) {}
        },
        onEnabled: {
            addListener: function(a) {}
        },
        onInstalled: {
            addListener: function(a) {}
        },
        onUninstalled: {
            addListener: function(a) {}
        },
        setEnabled: function(a,
            b, c) {},
        uninstall: function(a, b, c) {},
        uninstallSelf: function(a, b) {}
    },
    notifications: {
        clear: function(a, b) {},
        create: function(a, b, c) {},
        getAll: function(a) {},
        getPermissionLevel: function(a) {},
        onButtonClicked: {
            addListener: function(a) {}
        },
        onClicked: {
            addListener: function(a) {}
        },
        onClosed: {
            addListener: function(a) {}
        },
        onPermissionLevelChanged: {
            addListener: function(a) {}
        },
        onShowSettings: {
            addListener: function(a) {}
        },
        update: function(a, b, c) {}
    },
    omnibox: {
        onInputCancelled: {
            addListener: function(a) {}
        },
        onInputChanged: {
            addListener: function(a) {}
        },
        onInputEntered: {
            addListener: function(a) {}
        },
        onInputStarted: {
            addListener: function(a) {}
        },
        setDefaultSuggestion: function(a) {}
    },
    pageAction: {
        getPopup: function(a, b) {},
        getTitle: function(a, b) {},
        hide: function(a) {},
        onClicked: {
            addListener: function(a) {}
        },
        setIcon: function(a, b) {},
        setPopup: function(a) {},
        setTitle: function(a) {},
        show: function(a) {}
    },
    pageCapture: {
        saveAsMHTML: function(a, b) {}
    },
    permissions: {
        contains: function(a, b) {},
        getAll: function(a) {},
        onAdded: {
            addListener: function(a) {}
        },
        onRemoved: {
            addListener: function(a) {}
        },
        remove: function(a, b) {},
        request: function(a, b) {}
    },
    power: {
        releaseKeepAwake: function() {},
        requestKeepAwake: function(a) {}
    },
    privacy: {
        network: {},
        services: {},
        websites: {}
    },
    proxy: {
        settings: {},
        onProxyError: {
            addListener: function(a) {}
        }
    },
    pushMessaging: {
        getChannelId: function(a, b) {},
        onMessage: {
            addListener: function(a) {}
        }
    },
    runtime: {
        connect: function(a, b) {},
        connectNative: function(a) {},
        getBackgroundPage: function(a) {},
        getManifest: function() {},
        getPackageDirectoryEntry: function(a) {},
        getPlatformInfo: function(a) {},
        getURL: function(a) {},
        onBrowserUpdateAvailable: {
            addListener: function(a) {}
        },
        onConnect: {
            addListener: function(a) {}
        },
        onConnectExternal: {
            addListener: function(a) {}
        },
        onInstalled: {
            addListener: function(a) {}
        },
        onMessage: {
            addListener: function(a) {}
        },
        onMessageExternal: {
            addListener: function(a) {}
        },
        onRestartRequired: {
            addListener: function(a) {}
        },
        onStartup: {
            addListener: function(a) {}
        },
        onSuspend: {
            addListener: function(a) {}
        },
        onSuspendCanceled: {
            addListener: function(a) {}
        },
        onUpdateAvailable: {
            addListener: function(a) {}
        },
        reload: function() {},
        requestUpdateCheck: function(a) {},
        restart: function() {},
        sendMessage: function(a, b, c, d) {},
        sendNativeMessage: function(a, b, c) {},
        setUninstallUrl: function(a) {}
    },
    storage: {
        onChanged: {
            addListener: function(a) {}
        }
    },
    system: {
        storage: {
            ejectDevice: function(a, b) {},
            getAvailableCapacity: function(a, b) {},
            getInfo: function(a) {},
            onAttached: {
                addListener: function(a) {}
            },
            onDetached: {
                addListener: function(a) {}
            }
        }
    },
    tabCapture: {
        capture: function(a, b) {},
        getCapturedTabs: function(a) {},
        onStatusChanged: {
            addListener: function(a) {}
        }
    },
    tabs: {
        captureVisibleTab: function(a, b, c) {},
        connect: function(a, b) {},
        create: function(a, b) {},
        detectLanguage: function(a, b) {},
        duplicate: function(a, b) {},
        executeScript: function(a, b, c) {},
        get: function(a, b) {},
        getAllInWindow: function(a, b) {},
        getCurrent: function(a) {},
        getSelected: function(a, b) {},
        highlight: function(a, b) {},
        insertCSS: function(a, b, c) {},
        move: function(a, b, c) {},
        onActivated: {
            addListener: function(a) {}
        },
        onActiveChanged: {
            addListener: function(a) {}
        },
        onAttached: {
            addListener: function(a) {}
        },
        onCreated: {
            addListener: function(a) {}
        },
        onDetached: {
            addListener: function(a) {}
        },
        onHighlightChanged: {
            addListener: function(a) {}
        },
        onHighlighted: {
            addListener: function(a) {}
        },
        onMoved: {
            addListener: function(a) {}
        },
        onRemoved: {
            addListener: function(a) {}
        },
        onReplaced: {
            addListener: function(a) {}
        },
        onSelectionChanged: {
            addListener: function(a) {}
        },
        onUpdated: {
            addListener: function(a) {}
        },
        query: function(a, b) {},
        reload: function(a, b, c) {},
        remove: function(a, b) {},
        sendMessage: function(a, b, c) {},
        sendRequest: function(a, b, c) {},
        update: function(a, b, c) {}
    },
    topSites: {
        get: function(a) {}
    },
    tts: {
        getVoices: function(a) {},
        isSpeaking: function(a) {},
        pause: function() {},
        resume: function() {},
        speak: function(a, b, c) {},
        stop: function() {}
    },
    ttsEngine: {
        onPause: {
            addListener: function(a) {}
        },
        onResume: {
            addListener: function(a) {}
        },
        onSpeak: {
            addListener: function(a) {}
        },
        onStop: {
            addListener: function(a) {}
        }
    },
    types: {
        ChromeSetting: {
            clear: function(a, b) {},
            get: function(a, b) {},
            set: function(a, b) {},
            onChange: {
                addListener: function(a) {}
            }
        }
    },
    webNavigation: {
        getAllFrames: function(a, b) {},
        getFrame: function(a, b) {},
        onBeforeNavigate: {
            addListener: function(a) {}
        },
        onCommitted: {
            addListener: function(a) {}
        },
        onCompleted: {
            addListener: function(a) {}
        },
        onCreatedNavigationTarget: {
            addListener: function(a) {}
        },
        onDOMContentLoaded: {
            addListener: function(a) {}
        },
        onErrorOccurred: {
            addListener: function(a) {}
        },
        onHistoryStateUpdated: {
            addListener: function(a) {}
        },
        onReferenceFragmentUpdated: {
            addListener: function(a) {}
        },
        onTabReplaced: {
            addListener: function(a) {}
        }
    },
    webRequest: {
        handlerBehaviorChanged: function(a) {},
        onAuthRequired: {
            addListener: function(a) {}
        },
        onBeforeRedirect: {
            addListener: function(a) {}
        },
        onBeforeRequest: {
            addListener: function(a) {}
        },
        onBeforeSendHeaders: {
            addListener: function(a) {}
        },
        onCompleted: {
            addListener: function(a) {}
        },
        onErrorOccurred: {
            addListener: function(a) {}
        },
        onHeadersReceived: {
            addListener: function(a) {}
        },
        onResponseStarted: {
            addListener: function(a) {}
        },
        onSendHeaders: {
            addListener: function(a) {}
        }
    },
    webstore: {
        install: function(a, b, c) {}
    },
    windows: {
        create: function(a, b) {},
        get: function(a, b, c) {},
        getAll: function(a, b) {},
        getCurrent: function(a, b) {},
        getLastFocused: function(a, b) {},
        onCreated: {
            addListener: function(a) {}
        },
        onFocusChanged: {
            addListener: function(a) {}
        },
        onRemoved: {
            addListener: function(a) {}
        },
        remove: function(a, b) {},
        update: function(a, b, c) {}
    }
};
